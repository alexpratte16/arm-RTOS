
kernel.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	e59ff018 	ldr	pc, [pc, #24]	; 8020 <reset_handler>
    8004:	e59ff018 	ldr	pc, [pc, #24]	; 8024 <undefined_handler>
    8008:	e59ff018 	ldr	pc, [pc, #24]	; 8028 <swi_handler>
    800c:	e59ff018 	ldr	pc, [pc, #24]	; 802c <prefetch_handler>
    8010:	e59ff018 	ldr	pc, [pc, #24]	; 8030 <data_handler>
    8014:	e59ff018 	ldr	pc, [pc, #24]	; 8034 <unused_handler>
    8018:	e59ff018 	ldr	pc, [pc, #24]	; 8038 <irq_handler>
    801c:	e59ff018 	ldr	pc, [pc, #24]	; 803c <fiq_handler>

00008020 <reset_handler>:
    8020:	00008040 	andeq	r8, r0, r0, asr #32

00008024 <undefined_handler>:
    8024:	00015144 	andeq	r5, r1, r4, asr #2

00008028 <swi_handler>:
    8028:	000103dc 	ldrdeq	r0, [r1], -ip

0000802c <prefetch_handler>:
    802c:	00015148 	andeq	r5, r1, r8, asr #2

00008030 <data_handler>:
    8030:	0001514c 	andeq	r5, r1, ip, asr #2

00008034 <unused_handler>:
    8034:	00015150 	andeq	r5, r1, r0, asr r1

00008038 <irq_handler>:
    8038:	00010490 	muleq	r1, r0, r4

0000803c <fiq_handler>:
    803c:	00015154 	andeq	r5, r1, r4, asr r1

00008040 <reset>:
    8040:	e3a00902 	mov	r0, #32768	; 0x8000
    8044:	e3a01000 	mov	r1, #0
    8048:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    804c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8050:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8054:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    8058:	e3a000d2 	mov	r0, #210	; 0xd2
    805c:	e121f000 	msr	CPSR_c, r0
    8060:	e3a0d902 	mov	sp, #32768	; 0x8000
    8064:	e3a000d1 	mov	r0, #209	; 0xd1
    8068:	e121f000 	msr	CPSR_c, r0
    806c:	e3a0d901 	mov	sp, #16384	; 0x4000
    8070:	e3a000d3 	mov	r0, #211	; 0xd3
    8074:	e121f000 	msr	CPSR_c, r0
    8078:	e3a0d302 	mov	sp, #134217728	; 0x8000000
    807c:	e59f0018 	ldr	r0, [pc, #24]	; 809c <zero_loop+0x14>
    8080:	e59f1018 	ldr	r1, [pc, #24]	; 80a0 <zero_loop+0x18>
    8084:	e3a02000 	mov	r2, #0

00008088 <zero_loop>:
    8088:	e1500001 	cmp	r0, r1
    808c:	b4802004 	strlt	r2, [r0], #4
    8090:	bafffffc 	blt	8088 <zero_loop>
    8094:	eb002d65 	bl	13630 <irqBlock>
    8098:	ea003485 	b	152b4 <main>
    809c:	0002bd60 	andeq	fp, r2, r0, ror #26
    80a0:	0002d190 	muleq	r2, r0, r1

Disassembly of section .text:

00010000 <pxPortInitialiseStack>:
 * portSAVE_CONTEXT had been called.
 *
 * See header file for description. 
 */
portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
{
   10000:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10004:	e28db000 	add	fp, sp, #0
   10008:	e24dd01c 	sub	sp, sp, #28
   1000c:	e50b0010 	str	r0, [fp, #-16]
   10010:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   10014:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
portSTACK_TYPE *pxOriginalTOS;

	pxOriginalTOS = pxTopOfStack;
   10018:	e51b3010 	ldr	r3, [fp, #-16]
   1001c:	e50b3008 	str	r3, [fp, #-8]

	/* To ensure asserts in tasks.c don't fail, although in this case the assert
	is not really required. */
	pxTopOfStack--;
   10020:	e51b3010 	ldr	r3, [fp, #-16]
   10024:	e2433004 	sub	r3, r3, #4
   10028:	e50b3010 	str	r3, [fp, #-16]
	expected by the portRESTORE_CONTEXT() macro. */

	/* First on the stack is the return address - which in this case is the
	start of the task.  The offset is added to make the return address appear
	as it would within an IRQ ISR. */
	*pxTopOfStack = ( portSTACK_TYPE ) pxCode + portINSTRUCTION_SIZE;		
   1002c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10030:	e2832004 	add	r2, r3, #4
   10034:	e51b3010 	ldr	r3, [fp, #-16]
   10038:	e5832000 	str	r2, [r3]
	pxTopOfStack--;
   1003c:	e51b3010 	ldr	r3, [fp, #-16]
   10040:	e2433004 	sub	r3, r3, #4
   10044:	e50b3010 	str	r3, [fp, #-16]

	*pxTopOfStack = ( portSTACK_TYPE ) 0xaaaaaaaa;	/* R14 */
   10048:	e51b3010 	ldr	r3, [fp, #-16]
   1004c:	e59f21b8 	ldr	r2, [pc, #440]	; 1020c <pxPortInitialiseStack+0x20c>
   10050:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   10054:	e51b3010 	ldr	r3, [fp, #-16]
   10058:	e2433004 	sub	r3, r3, #4
   1005c:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) pxOriginalTOS; /* Stack used when task starts goes in R13. */
   10060:	e51b2008 	ldr	r2, [fp, #-8]
   10064:	e51b3010 	ldr	r3, [fp, #-16]
   10068:	e5832000 	str	r2, [r3]
	pxTopOfStack--;
   1006c:	e51b3010 	ldr	r3, [fp, #-16]
   10070:	e2433004 	sub	r3, r3, #4
   10074:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x12121212;	/* R12 */
   10078:	e51b3010 	ldr	r3, [fp, #-16]
   1007c:	e59f218c 	ldr	r2, [pc, #396]	; 10210 <pxPortInitialiseStack+0x210>
   10080:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   10084:	e51b3010 	ldr	r3, [fp, #-16]
   10088:	e2433004 	sub	r3, r3, #4
   1008c:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x11111111;	/* R11 */
   10090:	e51b3010 	ldr	r3, [fp, #-16]
   10094:	e59f2178 	ldr	r2, [pc, #376]	; 10214 <pxPortInitialiseStack+0x214>
   10098:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   1009c:	e51b3010 	ldr	r3, [fp, #-16]
   100a0:	e2433004 	sub	r3, r3, #4
   100a4:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x10101010;	/* R10 */
   100a8:	e51b3010 	ldr	r3, [fp, #-16]
   100ac:	e59f2164 	ldr	r2, [pc, #356]	; 10218 <pxPortInitialiseStack+0x218>
   100b0:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   100b4:	e51b3010 	ldr	r3, [fp, #-16]
   100b8:	e2433004 	sub	r3, r3, #4
   100bc:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x09090909;	/* R9 */
   100c0:	e51b3010 	ldr	r3, [fp, #-16]
   100c4:	e59f2150 	ldr	r2, [pc, #336]	; 1021c <pxPortInitialiseStack+0x21c>
   100c8:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   100cc:	e51b3010 	ldr	r3, [fp, #-16]
   100d0:	e2433004 	sub	r3, r3, #4
   100d4:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x08080808;	/* R8 */
   100d8:	e51b3010 	ldr	r3, [fp, #-16]
   100dc:	e59f213c 	ldr	r2, [pc, #316]	; 10220 <pxPortInitialiseStack+0x220>
   100e0:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   100e4:	e51b3010 	ldr	r3, [fp, #-16]
   100e8:	e2433004 	sub	r3, r3, #4
   100ec:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x07070707;	/* R7 */
   100f0:	e51b3010 	ldr	r3, [fp, #-16]
   100f4:	e59f2128 	ldr	r2, [pc, #296]	; 10224 <pxPortInitialiseStack+0x224>
   100f8:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   100fc:	e51b3010 	ldr	r3, [fp, #-16]
   10100:	e2433004 	sub	r3, r3, #4
   10104:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x06060606;	/* R6 */
   10108:	e51b3010 	ldr	r3, [fp, #-16]
   1010c:	e59f2114 	ldr	r2, [pc, #276]	; 10228 <pxPortInitialiseStack+0x228>
   10110:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   10114:	e51b3010 	ldr	r3, [fp, #-16]
   10118:	e2433004 	sub	r3, r3, #4
   1011c:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x05050505;	/* R5 */
   10120:	e51b3010 	ldr	r3, [fp, #-16]
   10124:	e59f2100 	ldr	r2, [pc, #256]	; 1022c <pxPortInitialiseStack+0x22c>
   10128:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   1012c:	e51b3010 	ldr	r3, [fp, #-16]
   10130:	e2433004 	sub	r3, r3, #4
   10134:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x04040404;	/* R4 */
   10138:	e51b3010 	ldr	r3, [fp, #-16]
   1013c:	e59f20ec 	ldr	r2, [pc, #236]	; 10230 <pxPortInitialiseStack+0x230>
   10140:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   10144:	e51b3010 	ldr	r3, [fp, #-16]
   10148:	e2433004 	sub	r3, r3, #4
   1014c:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x03030303;	/* R3 */
   10150:	e51b3010 	ldr	r3, [fp, #-16]
   10154:	e59f20d8 	ldr	r2, [pc, #216]	; 10234 <pxPortInitialiseStack+0x234>
   10158:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   1015c:	e51b3010 	ldr	r3, [fp, #-16]
   10160:	e2433004 	sub	r3, r3, #4
   10164:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x02020202;	/* R2 */
   10168:	e51b3010 	ldr	r3, [fp, #-16]
   1016c:	e59f20c4 	ldr	r2, [pc, #196]	; 10238 <pxPortInitialiseStack+0x238>
   10170:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   10174:	e51b3010 	ldr	r3, [fp, #-16]
   10178:	e2433004 	sub	r3, r3, #4
   1017c:	e50b3010 	str	r3, [fp, #-16]
	*pxTopOfStack = ( portSTACK_TYPE ) 0x01010101;	/* R1 */
   10180:	e51b3010 	ldr	r3, [fp, #-16]
   10184:	e59f20b0 	ldr	r2, [pc, #176]	; 1023c <pxPortInitialiseStack+0x23c>
   10188:	e5832000 	str	r2, [r3]
	pxTopOfStack--;	
   1018c:	e51b3010 	ldr	r3, [fp, #-16]
   10190:	e2433004 	sub	r3, r3, #4
   10194:	e50b3010 	str	r3, [fp, #-16]

	/* When the task starts it will expect to find the function parameter in
	R0. */
	*pxTopOfStack = ( portSTACK_TYPE ) pvParameters; /* R0 */
   10198:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1019c:	e51b3010 	ldr	r3, [fp, #-16]
   101a0:	e5832000 	str	r2, [r3]
	pxTopOfStack--;
   101a4:	e51b3010 	ldr	r3, [fp, #-16]
   101a8:	e2433004 	sub	r3, r3, #4
   101ac:	e50b3010 	str	r3, [fp, #-16]

	/* The last thing onto the stack is the status register, which is set for
	system mode, with interrupts enabled. */
	*pxTopOfStack = ( portSTACK_TYPE ) portINITIAL_SPSR;
   101b0:	e51b3010 	ldr	r3, [fp, #-16]
   101b4:	e3a0201f 	mov	r2, #31
   101b8:	e5832000 	str	r2, [r3]

	if( ( ( unsigned long ) pxCode & 0x01UL ) != 0x00 )
   101bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   101c0:	e2033001 	and	r3, r3, #1
   101c4:	e3530000 	cmp	r3, #0
   101c8:	0a000004 	beq	101e0 <pxPortInitialiseStack+0x1e0>
	{
		/* We want the task to start in thumb mode. */
		*pxTopOfStack |= portTHUMB_MODE_BIT;
   101cc:	e51b3010 	ldr	r3, [fp, #-16]
   101d0:	e5933000 	ldr	r3, [r3]
   101d4:	e3832020 	orr	r2, r3, #32
   101d8:	e51b3010 	ldr	r3, [fp, #-16]
   101dc:	e5832000 	str	r2, [r3]
	}

	pxTopOfStack--;
   101e0:	e51b3010 	ldr	r3, [fp, #-16]
   101e4:	e2433004 	sub	r3, r3, #4
   101e8:	e50b3010 	str	r3, [fp, #-16]

	/* Some optimisation levels use the stack differently to others.  This 
	means the interrupt flags cannot always be stored on the stack and will
	instead be stored in a variable, which is then saved as part of the
	tasks context. */
	*pxTopOfStack = portNO_CRITICAL_SECTION_NESTING;
   101ec:	e51b3010 	ldr	r3, [fp, #-16]
   101f0:	e3a02000 	mov	r2, #0
   101f4:	e5832000 	str	r2, [r3]

	return pxTopOfStack;
   101f8:	e51b3010 	ldr	r3, [fp, #-16]
}
   101fc:	e1a00003 	mov	r0, r3
   10200:	e28bd000 	add	sp, fp, #0
   10204:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10208:	e12fff1e 	bx	lr
   1020c:	aaaaaaaa 	bge	feabacbc <_estack+0xf6aaacbc>
   10210:	12121212 	andsne	r1, r2, #536870913	; 0x20000001
   10214:	11111111 	tstne	r1, r1, lsl r1
   10218:	10101010 	andsne	r1, r0, r0, lsl r0
   1021c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
   10220:	08080808 	stmdaeq	r8, {r3, fp}
   10224:	07070707 	streq	r0, [r7, -r7, lsl #14]
   10228:	06060606 	streq	r0, [r6], -r6, lsl #12
   1022c:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
   10230:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
   10234:	03030303 	movweq	r0, #13059	; 0x3303
   10238:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
   1023c:	01010101 	tsteq	r1, r1, lsl #2

00010240 <xPortStartScheduler>:
/*-----------------------------------------------------------*/

portBASE_TYPE xPortStartScheduler( void )
{
   10240:	e92d4800 	push	{fp, lr}
   10244:	e28db004 	add	fp, sp, #4
	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	prvSetupTimerInterrupt();
   10248:	eb000017 	bl	102ac <prvSetupTimerInterrupt>

	/* Start the first task. */
	vPortISRStartFirstTask();	
   1024c:	eb00003c 	bl	10344 <vPortISRStartFirstTask>

	/* Should not get here! */
	return 0;
   10250:	e3a03000 	mov	r3, #0
}
   10254:	e1a00003 	mov	r0, r3
   10258:	e8bd8800 	pop	{fp, pc}

0001025c <vPortEndScheduler>:
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
   1025c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10260:	e28db000 	add	fp, sp, #0
	/* It is unlikely that the ARM port will require this function as there
	is nothing to return to.  */
}
   10264:	e320f000 	nop	{0}
   10268:	e28bd000 	add	sp, fp, #0
   1026c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10270:	e12fff1e 	bx	lr

00010274 <vTickISR>:
 *	as thats done in the bottom-half of the ISR.
 *
 *	See bt_interrupts.c in the RaspberryPi Drivers folder.
 */
void vTickISR (unsigned int nIRQ, void *pParam)
{
   10274:	e92d4800 	push	{fp, lr}
   10278:	e28db004 	add	fp, sp, #4
   1027c:	e24dd008 	sub	sp, sp, #8
   10280:	e50b0008 	str	r0, [fp, #-8]
   10284:	e50b100c 	str	r1, [fp, #-12]
	vTaskIncrementTick();
   10288:	eb0009af 	bl	1294c <vTaskIncrementTick>

	#if configUSE_PREEMPTION == 1
	vTaskSwitchContext();
   1028c:	eb000a82 	bl	12c9c <vTaskSwitchContext>
	#endif

	pRegs->CLI = 0;			// Acknowledge the timer interrupt.
   10290:	e59f3010 	ldr	r3, [pc, #16]	; 102a8 <vTickISR+0x34>
   10294:	e3a02000 	mov	r2, #0
   10298:	e583200c 	str	r2, [r3, #12]
}
   1029c:	e320f000 	nop	{0}
   102a0:	e24bd004 	sub	sp, fp, #4
   102a4:	e8bd8800 	pop	{fp, pc}
   102a8:	2000b400 	andcs	fp, r0, r0, lsl #8

000102ac <prvSetupTimerInterrupt>:

/*
 * Setup the timer 0 to generate the tick interrupts at the required frequency.
 */
static void prvSetupTimerInterrupt( void )
{
   102ac:	e92d4800 	push	{fp, lr}
   102b0:	e28db004 	add	fp, sp, #4
   102b4:	e24dd008 	sub	sp, sp, #8
	unsigned long ulCompareMatch;
	

	/* Calculate the match value required for our wanted tick rate. */
	ulCompareMatch = 1000000 / configTICK_RATE_HZ;
   102b8:	e3a03ffa 	mov	r3, #1000	; 0x3e8
   102bc:	e50b3008 	str	r3, [fp, #-8]
	{
		ulCompareMatch /= ( portPRESCALE_VALUE + 1 );
	}
	#endif

	irqBlock();
   102c0:	eb000cda 	bl	13630 <irqBlock>

	pRegs->CTL = 0x003E0000;
   102c4:	e59f3068 	ldr	r3, [pc, #104]	; 10334 <prvSetupTimerInterrupt+0x88>
   102c8:	e3a0283e 	mov	r2, #4063232	; 0x3e0000
   102cc:	e5832008 	str	r2, [r3, #8]
	pRegs->LOD = 1000 - 1;
   102d0:	e59f305c 	ldr	r3, [pc, #92]	; 10334 <prvSetupTimerInterrupt+0x88>
   102d4:	e59f205c 	ldr	r2, [pc, #92]	; 10338 <prvSetupTimerInterrupt+0x8c>
   102d8:	e5832000 	str	r2, [r3]
	pRegs->RLD = 1000 - 1;
   102dc:	e59f3050 	ldr	r3, [pc, #80]	; 10334 <prvSetupTimerInterrupt+0x88>
   102e0:	e59f2050 	ldr	r2, [pc, #80]	; 10338 <prvSetupTimerInterrupt+0x8c>
   102e4:	e5832018 	str	r2, [r3, #24]
	pRegs->DIV = portTIMER_PRESCALE;
   102e8:	e59f3044 	ldr	r3, [pc, #68]	; 10334 <prvSetupTimerInterrupt+0x88>
   102ec:	e3a020f9 	mov	r2, #249	; 0xf9
   102f0:	e583201c 	str	r2, [r3, #28]
	pRegs->CLI = 0;
   102f4:	e59f3038 	ldr	r3, [pc, #56]	; 10334 <prvSetupTimerInterrupt+0x88>
   102f8:	e3a02000 	mov	r2, #0
   102fc:	e583200c 	str	r2, [r3, #12]
	pRegs->CTL = 0x003E00A2;
   10300:	e59f302c 	ldr	r3, [pc, #44]	; 10334 <prvSetupTimerInterrupt+0x88>
   10304:	e59f2030 	ldr	r2, [pc, #48]	; 1033c <prvSetupTimerInterrupt+0x90>
   10308:	e5832008 	str	r2, [r3, #8]

	irqRegister(64, vTickISR, NULL);
   1030c:	e3a02000 	mov	r2, #0
   10310:	e59f1028 	ldr	r1, [pc, #40]	; 10340 <prvSetupTimerInterrupt+0x94>
   10314:	e3a00040 	mov	r0, #64	; 0x40
   10318:	eb000ccb 	bl	1364c <irqRegister>

	irqEnable(64);
   1031c:	e3a00040 	mov	r0, #64	; 0x40
   10320:	eb000ce2 	bl	136b0 <irqEnable>

	irqUnblock();
   10324:	eb000cba 	bl	13614 <irqUnblock>
}
   10328:	e320f000 	nop	{0}
   1032c:	e24bd004 	sub	sp, fp, #4
   10330:	e8bd8800 	pop	{fp, pc}
   10334:	2000b400 	andcs	fp, r0, r0, lsl #8
   10338:	000003e7 	andeq	r0, r0, r7, ror #7
   1033c:	003e00a2 	eorseq	r0, lr, r2, lsr #1
   10340:	00010274 	andeq	r0, r1, r4, ror r2

00010344 <vPortISRStartFirstTask>:
/*-----------------------------------------------------------*/

int g_bStarted = 0;

void vPortISRStartFirstTask( void )
{
   10344:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10348:	e28db000 	add	fp, sp, #0
	 *	Change from System to IRQ mode.
	 *
	 *
	 */

	g_bStarted++;
   1034c:	e59f307c 	ldr	r3, [pc, #124]	; 103d0 <vPortISRStartFirstTask+0x8c>
   10350:	e5933000 	ldr	r3, [r3]
   10354:	e2833001 	add	r3, r3, #1
   10358:	e59f2070 	ldr	r2, [pc, #112]	; 103d0 <vPortISRStartFirstTask+0x8c>
   1035c:	e5823000 	str	r3, [r2]

	__asm volatile("mrs 	r0,cpsr");		// Read in the cpsr register.
   10360:	e10f0000 	mrs	r0, CPSR
	__asm volatile("bic		r0,r0,#0x80");	// Clear bit 8, (0x80) -- Causes IRQs to be enabled
   10364:	e3c00080 	bic	r0, r0, #128	; 0x80
	__asm volatile("msr		cpsr_c, r0");	// Write it back to the CPSR register
   10368:	e121f000 	msr	CPSR_c, r0
//	__asm volatile("swi		0");			// Force a task switch with SWI!
//	__asm volatile("nop");

	/* Simply start the scheduler.  This is included here as it can only be
	called from ARM mode. */
	portRESTORE_CONTEXT();
   1036c:	e59f0274 	ldr	r0, [pc, #628]	; 105e8 <vPortExitCritical+0x64>
   10370:	e5900000 	ldr	r0, [r0]
   10374:	e590e000 	ldr	lr, [r0]
   10378:	e59f026c 	ldr	r0, [pc, #620]	; 105ec <vPortExitCritical+0x68>
   1037c:	e8be0002 	ldm	lr!, {r1}
   10380:	e5801000 	str	r1, [r0]
   10384:	e8be0001 	ldm	lr!, {r0}
   10388:	e16ff000 	msr	SPSR_fsxc, r0
   1038c:	e8de7fff 	ldm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   10390:	e320f000 	nop	{0}
   10394:	e59ee03c 	ldr	lr, [lr, #60]	; 0x3c
   10398:	e25ef004 	subs	pc, lr, #4
   1039c:	e320f000 	nop	{0}
   103a0:	e320f000 	nop	{0}
   103a4:	e59f3028 	ldr	r3, [pc, #40]	; 103d4 <vPortISRStartFirstTask+0x90>
   103a8:	e5933000 	ldr	r3, [r3]
   103ac:	e59f3024 	ldr	r3, [pc, #36]	; 103d8 <vPortISRStartFirstTask+0x94>
   103b0:	e5933000 	ldr	r3, [r3]
	__asm volatile (
   103b4:	e8bd4000 	ldmfd	sp!, {lr}
   103b8:	e24ee004 	sub	lr, lr, #4
   103bc:	e12fff1e 	bx	lr
		"LDMFD	SP!, {LR}	\n"
		"SUB	LR,	LR, #4	\n"
		
		"BX		LR			\n"
	);
}
   103c0:	e320f000 	nop	{0}
   103c4:	e28bd000 	add	sp, fp, #0
   103c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   103cc:	e12fff1e 	bx	lr
   103d0:	0002bd60 	andeq	fp, r2, r0, ror #26
   103d4:	0002bcc0 	andeq	fp, r2, r0, asr #25
   103d8:	0002bde4 	andeq	fp, r2, r4, ror #27

000103dc <vPortYieldProcessor>:
void vPortYieldProcessor( void )
{
	/* Within an IRQ ISR the link register has an offset from the true return 
	address, but an SWI ISR does not.  Add the offset manually so the same 
	ISR return code can be used in both cases. */
	__asm volatile ( "ADD		LR, LR, #4" );
   103dc:	e28ee004 	add	lr, lr, #4

	/* Perform the context switch.  First save the context of the current task. */
	portSAVE_CONTEXT();
   103e0:	e92d0001 	stmfd	sp!, {r0}
   103e4:	e94d2000 	stmdb	sp, {sp}^
   103e8:	e24dd004 	sub	sp, sp, #4
   103ec:	e8bd0001 	ldmfd	sp!, {r0}
   103f0:	e9204000 	stmdb	r0!, {lr}
   103f4:	e1a0e000 	mov	lr, r0
   103f8:	e8bd0001 	ldmfd	sp!, {r0}
   103fc:	e94e7fff 	stmdb	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   10400:	e320f000 	nop	{0}
   10404:	e24ee03c 	sub	lr, lr, #60	; 0x3c
   10408:	e14f0000 	mrs	r0, SPSR
   1040c:	e92e0001 	stmdb	lr!, {r0}
   10410:	e59f01d4 	ldr	r0, [pc, #468]	; 105ec <vPortExitCritical+0x68>
   10414:	e5900000 	ldr	r0, [r0]
   10418:	e92e0001 	stmdb	lr!, {r0}
   1041c:	e59f01c4 	ldr	r0, [pc, #452]	; 105e8 <vPortExitCritical+0x64>
   10420:	e5900000 	ldr	r0, [r0]
   10424:	e580e000 	str	lr, [r0]
   10428:	e59f3058 	ldr	r3, [pc, #88]	; 10488 <vPortYieldProcessor+0xac>
   1042c:	e5933000 	ldr	r3, [r3]
   10430:	e59f3054 	ldr	r3, [pc, #84]	; 1048c <vPortYieldProcessor+0xb0>
   10434:	e5933000 	ldr	r3, [r3]

	/* Find the highest priority task that is ready to run. */
	__asm volatile ( "bl vTaskSwitchContext" );
   10438:	eb000a17 	bl	12c9c <vTaskSwitchContext>

	/* Restore the context of the new task. */
	portRESTORE_CONTEXT();	
   1043c:	e59f01a4 	ldr	r0, [pc, #420]	; 105e8 <vPortExitCritical+0x64>
   10440:	e5900000 	ldr	r0, [r0]
   10444:	e590e000 	ldr	lr, [r0]
   10448:	e59f019c 	ldr	r0, [pc, #412]	; 105ec <vPortExitCritical+0x68>
   1044c:	e8be0002 	ldm	lr!, {r1}
   10450:	e5801000 	str	r1, [r0]
   10454:	e8be0001 	ldm	lr!, {r0}
   10458:	e16ff000 	msr	SPSR_fsxc, r0
   1045c:	e8de7fff 	ldm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   10460:	e320f000 	nop	{0}
   10464:	e59ee03c 	ldr	lr, [lr, #60]	; 0x3c
   10468:	e25ef004 	subs	pc, lr, #4
   1046c:	e320f000 	nop	{0}
   10470:	e320f000 	nop	{0}
   10474:	e59f300c 	ldr	r3, [pc, #12]	; 10488 <vPortYieldProcessor+0xac>
   10478:	e5933000 	ldr	r3, [r3]
   1047c:	e59f3008 	ldr	r3, [pc, #8]	; 1048c <vPortYieldProcessor+0xb0>
   10480:	e5933000 	ldr	r3, [r3]
}
   10484:	e320f000 	nop	{0}
   10488:	0002bcc0 	andeq	fp, r2, r0, asr #25
   1048c:	0002bde4 	andeq	fp, r2, r4, ror #27

00010490 <vFreeRTOS_ISR>:

extern void irqHandler(void);

void vFreeRTOS_ISR( void ) __attribute__((naked));
void vFreeRTOS_ISR( void ) {
	portSAVE_CONTEXT();
   10490:	e92d0001 	stmfd	sp!, {r0}
   10494:	e94d2000 	stmdb	sp, {sp}^
   10498:	e24dd004 	sub	sp, sp, #4
   1049c:	e8bd0001 	ldmfd	sp!, {r0}
   104a0:	e9204000 	stmdb	r0!, {lr}
   104a4:	e1a0e000 	mov	lr, r0
   104a8:	e8bd0001 	ldmfd	sp!, {r0}
   104ac:	e94e7fff 	stmdb	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   104b0:	e320f000 	nop	{0}
   104b4:	e24ee03c 	sub	lr, lr, #60	; 0x3c
   104b8:	e14f0000 	mrs	r0, SPSR
   104bc:	e92e0001 	stmdb	lr!, {r0}
   104c0:	e59f0124 	ldr	r0, [pc, #292]	; 105ec <vPortExitCritical+0x68>
   104c4:	e5900000 	ldr	r0, [r0]
   104c8:	e92e0001 	stmdb	lr!, {r0}
   104cc:	e59f0114 	ldr	r0, [pc, #276]	; 105e8 <vPortExitCritical+0x64>
   104d0:	e5900000 	ldr	r0, [r0]
   104d4:	e580e000 	str	lr, [r0]
   104d8:	e59f3058 	ldr	r3, [pc, #88]	; 10538 <vFreeRTOS_ISR+0xa8>
   104dc:	e5933000 	ldr	r3, [r3]
   104e0:	e59f3054 	ldr	r3, [pc, #84]	; 1053c <vFreeRTOS_ISR+0xac>
   104e4:	e5933000 	ldr	r3, [r3]
	irqHandler();
   104e8:	eb000c21 	bl	13574 <irqHandler>
	portRESTORE_CONTEXT();	
   104ec:	e59f00f4 	ldr	r0, [pc, #244]	; 105e8 <vPortExitCritical+0x64>
   104f0:	e5900000 	ldr	r0, [r0]
   104f4:	e590e000 	ldr	lr, [r0]
   104f8:	e59f00ec 	ldr	r0, [pc, #236]	; 105ec <vPortExitCritical+0x68>
   104fc:	e8be0002 	ldm	lr!, {r1}
   10500:	e5801000 	str	r1, [r0]
   10504:	e8be0001 	ldm	lr!, {r0}
   10508:	e16ff000 	msr	SPSR_fsxc, r0
   1050c:	e8de7fff 	ldm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   10510:	e320f000 	nop	{0}
   10514:	e59ee03c 	ldr	lr, [lr, #60]	; 0x3c
   10518:	e25ef004 	subs	pc, lr, #4
   1051c:	e320f000 	nop	{0}
   10520:	e320f000 	nop	{0}
   10524:	e59f300c 	ldr	r3, [pc, #12]	; 10538 <vFreeRTOS_ISR+0xa8>
   10528:	e5933000 	ldr	r3, [r3]
   1052c:	e59f3008 	ldr	r3, [pc, #8]	; 1053c <vFreeRTOS_ISR+0xac>
   10530:	e5933000 	ldr	r3, [r3]
}
   10534:	e320f000 	nop	{0}
   10538:	0002bcc0 	andeq	fp, r2, r0, asr #25
   1053c:	0002bde4 	andeq	fp, r2, r4, ror #27

00010540 <vPortEnterCritical>:
/* The code generated by the GCC compiler uses the stack in different ways at
different optimisation levels.  The interrupt flags can therefore not always
be saved to the stack.  Instead the critical section nesting level is stored
in a variable, which is then saved as part of the stack context. */
void vPortEnterCritical( void )
{
   10540:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10544:	e28db000 	add	fp, sp, #0
	/* Disable interrupts as per portDISABLE_INTERRUPTS(); 							*/
	__asm volatile ( 
   10548:	e92d0001 	stmfd	sp!, {r0}
   1054c:	e10f0000 	mrs	r0, CPSR
   10550:	e38000c0 	orr	r0, r0, #192	; 0xc0
   10554:	e129f000 	msr	CPSR_fc, r0
   10558:	e8bd0001 	ldmfd	sp!, {r0}
		"LDMIA	SP!, {R0}" );				/* Pop R0.								*/

	/* Now interrupts are disabled ulCriticalNesting can be accessed 
	directly.  Increment ulCriticalNesting to keep a count of how many times
	portENTER_CRITICAL() has been called. */
	ulCriticalNesting++;
   1055c:	e59f301c 	ldr	r3, [pc, #28]	; 10580 <vPortEnterCritical+0x40>
   10560:	e5933000 	ldr	r3, [r3]
   10564:	e2833001 	add	r3, r3, #1
   10568:	e59f2010 	ldr	r2, [pc, #16]	; 10580 <vPortEnterCritical+0x40>
   1056c:	e5823000 	str	r3, [r2]
}
   10570:	e320f000 	nop	{0}
   10574:	e28bd000 	add	sp, fp, #0
   10578:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1057c:	e12fff1e 	bx	lr
   10580:	0002bcc0 	andeq	fp, r2, r0, asr #25

00010584 <vPortExitCritical>:

void vPortExitCritical( void )
{
   10584:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10588:	e28db000 	add	fp, sp, #0
	if( ulCriticalNesting > portNO_CRITICAL_NESTING )
   1058c:	e59f3050 	ldr	r3, [pc, #80]	; 105e4 <vPortExitCritical+0x60>
   10590:	e5933000 	ldr	r3, [r3]
   10594:	e3530000 	cmp	r3, #0
   10598:	0a00000d 	beq	105d4 <vPortExitCritical+0x50>
	{
		/* Decrement the nesting count as we are leaving a critical section. */
		ulCriticalNesting--;
   1059c:	e59f3040 	ldr	r3, [pc, #64]	; 105e4 <vPortExitCritical+0x60>
   105a0:	e5933000 	ldr	r3, [r3]
   105a4:	e2433001 	sub	r3, r3, #1
   105a8:	e59f2034 	ldr	r2, [pc, #52]	; 105e4 <vPortExitCritical+0x60>
   105ac:	e5823000 	str	r3, [r2]

		/* If the nesting level has reached zero then interrupts should be
		re-enabled. */
		if( ulCriticalNesting == portNO_CRITICAL_NESTING )
   105b0:	e59f302c 	ldr	r3, [pc, #44]	; 105e4 <vPortExitCritical+0x60>
   105b4:	e5933000 	ldr	r3, [r3]
   105b8:	e3530000 	cmp	r3, #0
   105bc:	1a000004 	bne	105d4 <vPortExitCritical+0x50>
		{
			/* Enable interrupts as per portEXIT_CRITICAL().					*/
			__asm volatile ( 
   105c0:	e92d0001 	stmfd	sp!, {r0}
   105c4:	e10f0000 	mrs	r0, CPSR
   105c8:	e3c000c0 	bic	r0, r0, #192	; 0xc0
   105cc:	e129f000 	msr	CPSR_fc, r0
   105d0:	e8bd0001 	ldmfd	sp!, {r0}
				"BIC	R0, R0, #0xC0	\n\t"	/* Enable IRQ, FIQ.				*/	
				"MSR	CPSR, R0		\n\t"	/* Write back modified value.	*/	
				"LDMIA	SP!, {R0}" );			/* Pop R0.						*/
		}
	}
}
   105d4:	e320f000 	nop	{0}
   105d8:	e28bd000 	add	sp, fp, #0
   105dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   105e0:	e12fff1e 	bx	lr
   105e4:	0002bcc0 	andeq	fp, r2, r0, asr #25
   105e8:	0002bde4 	andeq	fp, r2, r4, ror #27
   105ec:	0002bcc0 	andeq	fp, r2, r0, asr #25

000105f0 <xCoRoutineCreate>:
static void prvCheckDelayedList( void );

/*-----------------------------------------------------------*/

signed portBASE_TYPE xCoRoutineCreate( crCOROUTINE_CODE pxCoRoutineCode, unsigned portBASE_TYPE uxPriority, unsigned portBASE_TYPE uxIndex )
{
   105f0:	e92d4800 	push	{fp, lr}
   105f4:	e28db004 	add	fp, sp, #4
   105f8:	e24dd018 	sub	sp, sp, #24
   105fc:	e50b0010 	str	r0, [fp, #-16]
   10600:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   10604:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
signed portBASE_TYPE xReturn;
corCRCB *pxCoRoutine;

	/* Allocate the memory that will store the co-routine control block. */
	pxCoRoutine = ( corCRCB * ) pvPortMalloc( sizeof( corCRCB ) );
   10608:	e3a00038 	mov	r0, #56	; 0x38
   1060c:	eb0011a1 	bl	14c98 <pvPortMalloc>
   10610:	e50b000c 	str	r0, [fp, #-12]
	if( pxCoRoutine )
   10614:	e51b300c 	ldr	r3, [fp, #-12]
   10618:	e3530000 	cmp	r3, #0
   1061c:	0a000044 	beq	10734 <xCoRoutineCreate+0x144>
	{
		/* If pxCurrentCoRoutine is NULL then this is the first co-routine to
		be created and the co-routine data structures need initialising. */
		if( pxCurrentCoRoutine == NULL )
   10620:	e59f3124 	ldr	r3, [pc, #292]	; 1074c <xCoRoutineCreate+0x15c>
   10624:	e5933000 	ldr	r3, [r3]
   10628:	e3530000 	cmp	r3, #0
   1062c:	1a000003 	bne	10640 <xCoRoutineCreate+0x50>
		{
			pxCurrentCoRoutine = pxCoRoutine;
   10630:	e59f2114 	ldr	r2, [pc, #276]	; 1074c <xCoRoutineCreate+0x15c>
   10634:	e51b300c 	ldr	r3, [fp, #-12]
   10638:	e5823000 	str	r3, [r2]
			prvInitialiseCoRoutineLists();
   1063c:	eb000177 	bl	10c20 <prvInitialiseCoRoutineLists>
		}

		/* Check the priority is within limits. */
		if( uxPriority >= configMAX_CO_ROUTINE_PRIORITIES )
   10640:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10644:	e3530001 	cmp	r3, #1
   10648:	9a000001 	bls	10654 <xCoRoutineCreate+0x64>
		{
			uxPriority = configMAX_CO_ROUTINE_PRIORITIES - 1;
   1064c:	e3a03001 	mov	r3, #1
   10650:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
		}

		/* Fill out the co-routine control block from the function parameters. */
		pxCoRoutine->uxState = corINITIAL_STATE;
   10654:	e51b300c 	ldr	r3, [fp, #-12]
   10658:	e3a02000 	mov	r2, #0
   1065c:	e1c323b4 	strh	r2, [r3, #52]	; 0x34
		pxCoRoutine->uxPriority = uxPriority;
   10660:	e51b300c 	ldr	r3, [fp, #-12]
   10664:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10668:	e583202c 	str	r2, [r3, #44]	; 0x2c
		pxCoRoutine->uxIndex = uxIndex;
   1066c:	e51b300c 	ldr	r3, [fp, #-12]
   10670:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   10674:	e5832030 	str	r2, [r3, #48]	; 0x30
		pxCoRoutine->pxCoRoutineFunction = pxCoRoutineCode;
   10678:	e51b300c 	ldr	r3, [fp, #-12]
   1067c:	e51b2010 	ldr	r2, [fp, #-16]
   10680:	e5832000 	str	r2, [r3]

		/* Initialise all the other co-routine control block parameters. */
		vListInitialiseItem( &( pxCoRoutine->xGenericListItem ) );
   10684:	e51b300c 	ldr	r3, [fp, #-12]
   10688:	e2833004 	add	r3, r3, #4
   1068c:	e1a00003 	mov	r0, r3
   10690:	eb0001c9 	bl	10dbc <vListInitialiseItem>
		vListInitialiseItem( &( pxCoRoutine->xEventListItem ) );
   10694:	e51b300c 	ldr	r3, [fp, #-12]
   10698:	e2833018 	add	r3, r3, #24
   1069c:	e1a00003 	mov	r0, r3
   106a0:	eb0001c5 	bl	10dbc <vListInitialiseItem>

		/* Set the co-routine control block as a link back from the xListItem.
		This is so we can get back to the containing CRCB from a generic item
		in a list. */
		listSET_LIST_ITEM_OWNER( &( pxCoRoutine->xGenericListItem ), pxCoRoutine );
   106a4:	e51b300c 	ldr	r3, [fp, #-12]
   106a8:	e51b200c 	ldr	r2, [fp, #-12]
   106ac:	e5832010 	str	r2, [r3, #16]
		listSET_LIST_ITEM_OWNER( &( pxCoRoutine->xEventListItem ), pxCoRoutine );
   106b0:	e51b300c 	ldr	r3, [fp, #-12]
   106b4:	e51b200c 	ldr	r2, [fp, #-12]
   106b8:	e5832024 	str	r2, [r3, #36]	; 0x24
	
		/* Event lists are always in priority order. */
		listSET_LIST_ITEM_VALUE( &( pxCoRoutine->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
   106bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   106c0:	e2632005 	rsb	r2, r3, #5
   106c4:	e51b300c 	ldr	r3, [fp, #-12]
   106c8:	e5832018 	str	r2, [r3, #24]
		
		/* Now the co-routine has been initialised it can be added to the ready
		list at the correct priority. */
		prvAddCoRoutineToReadyQueue( pxCoRoutine );
   106cc:	e51b300c 	ldr	r3, [fp, #-12]
   106d0:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   106d4:	e59f3074 	ldr	r3, [pc, #116]	; 10750 <xCoRoutineCreate+0x160>
   106d8:	e5933000 	ldr	r3, [r3]
   106dc:	e1520003 	cmp	r2, r3
   106e0:	9a000003 	bls	106f4 <xCoRoutineCreate+0x104>
   106e4:	e51b300c 	ldr	r3, [fp, #-12]
   106e8:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   106ec:	e59f205c 	ldr	r2, [pc, #92]	; 10750 <xCoRoutineCreate+0x160>
   106f0:	e5823000 	str	r3, [r2]
   106f4:	e51b300c 	ldr	r3, [fp, #-12]
   106f8:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   106fc:	e1a03002 	mov	r3, r2
   10700:	e1a03103 	lsl	r3, r3, #2
   10704:	e0833002 	add	r3, r3, r2
   10708:	e1a03103 	lsl	r3, r3, #2
   1070c:	e59f2040 	ldr	r2, [pc, #64]	; 10754 <xCoRoutineCreate+0x164>
   10710:	e0832002 	add	r2, r3, r2
   10714:	e51b300c 	ldr	r3, [fp, #-12]
   10718:	e2833004 	add	r3, r3, #4
   1071c:	e1a01003 	mov	r1, r3
   10720:	e1a00002 	mov	r0, r2
   10724:	eb0001af 	bl	10de8 <vListInsertEnd>

		xReturn = pdPASS;
   10728:	e3a03001 	mov	r3, #1
   1072c:	e50b3008 	str	r3, [fp, #-8]
   10730:	ea000001 	b	1073c <xCoRoutineCreate+0x14c>
	}
	else
	{		
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   10734:	e3e03000 	mvn	r3, #0
   10738:	e50b3008 	str	r3, [fp, #-8]
	}
	
	return xReturn;	
   1073c:	e51b3008 	ldr	r3, [fp, #-8]
}
   10740:	e1a00003 	mov	r0, r3
   10744:	e24bd004 	sub	sp, fp, #4
   10748:	e8bd8800 	pop	{fp, pc}
   1074c:	0002bdd0 	ldrdeq	fp, [r2], -r0
   10750:	0002bdd4 	ldrdeq	fp, [r2], -r4
   10754:	0002bd64 	andeq	fp, r2, r4, ror #26

00010758 <vCoRoutineAddToDelayedList>:
/*-----------------------------------------------------------*/

void vCoRoutineAddToDelayedList( portTickType xTicksToDelay, xList *pxEventList )
{
   10758:	e92d4800 	push	{fp, lr}
   1075c:	e28db004 	add	fp, sp, #4
   10760:	e24dd010 	sub	sp, sp, #16
   10764:	e50b0010 	str	r0, [fp, #-16]
   10768:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
portTickType xTimeToWake;

	/* Calculate the time to wake - this may overflow but this is
	not a problem. */
	xTimeToWake = xCoRoutineTickCount + xTicksToDelay;
   1076c:	e59f30b8 	ldr	r3, [pc, #184]	; 1082c <vCoRoutineAddToDelayedList+0xd4>
   10770:	e5933000 	ldr	r3, [r3]
   10774:	e51b2010 	ldr	r2, [fp, #-16]
   10778:	e0823003 	add	r3, r2, r3
   1077c:	e50b3008 	str	r3, [fp, #-8]

	/* We must remove ourselves from the ready list before adding
	ourselves to the blocked list as the same list item is used for
	both lists. */
	vListRemove( ( xListItem * ) &( pxCurrentCoRoutine->xGenericListItem ) );
   10780:	e59f30a8 	ldr	r3, [pc, #168]	; 10830 <vCoRoutineAddToDelayedList+0xd8>
   10784:	e5933000 	ldr	r3, [r3]
   10788:	e2833004 	add	r3, r3, #4
   1078c:	e1a00003 	mov	r0, r3
   10790:	eb0001f0 	bl	10f58 <vListRemove>

	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentCoRoutine->xGenericListItem ), xTimeToWake );
   10794:	e59f3094 	ldr	r3, [pc, #148]	; 10830 <vCoRoutineAddToDelayedList+0xd8>
   10798:	e5933000 	ldr	r3, [r3]
   1079c:	e51b2008 	ldr	r2, [fp, #-8]
   107a0:	e5832004 	str	r2, [r3, #4]

	if( xTimeToWake < xCoRoutineTickCount )
   107a4:	e59f3080 	ldr	r3, [pc, #128]	; 1082c <vCoRoutineAddToDelayedList+0xd4>
   107a8:	e5933000 	ldr	r3, [r3]
   107ac:	e51b2008 	ldr	r2, [fp, #-8]
   107b0:	e1520003 	cmp	r2, r3
   107b4:	2a000008 	bcs	107dc <vCoRoutineAddToDelayedList+0x84>
	{
		/* Wake time has overflowed.  Place this item in the
		overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedCoRoutineList, ( xListItem * ) &( pxCurrentCoRoutine->xGenericListItem ) );
   107b8:	e59f3074 	ldr	r3, [pc, #116]	; 10834 <vCoRoutineAddToDelayedList+0xdc>
   107bc:	e5932000 	ldr	r2, [r3]
   107c0:	e59f3068 	ldr	r3, [pc, #104]	; 10830 <vCoRoutineAddToDelayedList+0xd8>
   107c4:	e5933000 	ldr	r3, [r3]
   107c8:	e2833004 	add	r3, r3, #4
   107cc:	e1a01003 	mov	r1, r3
   107d0:	e1a00002 	mov	r0, r2
   107d4:	eb0001a9 	bl	10e80 <vListInsert>
   107d8:	ea000007 	b	107fc <vCoRoutineAddToDelayedList+0xa4>
	}
	else
	{
		/* The wake time has not overflowed, so we can use the
		current block list. */
		vListInsert( ( xList * ) pxDelayedCoRoutineList, ( xListItem * ) &( pxCurrentCoRoutine->xGenericListItem ) );
   107dc:	e59f3054 	ldr	r3, [pc, #84]	; 10838 <vCoRoutineAddToDelayedList+0xe0>
   107e0:	e5932000 	ldr	r2, [r3]
   107e4:	e59f3044 	ldr	r3, [pc, #68]	; 10830 <vCoRoutineAddToDelayedList+0xd8>
   107e8:	e5933000 	ldr	r3, [r3]
   107ec:	e2833004 	add	r3, r3, #4
   107f0:	e1a01003 	mov	r1, r3
   107f4:	e1a00002 	mov	r0, r2
   107f8:	eb0001a0 	bl	10e80 <vListInsert>
	}

	if( pxEventList )
   107fc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10800:	e3530000 	cmp	r3, #0
   10804:	0a000005 	beq	10820 <vCoRoutineAddToDelayedList+0xc8>
	{
		/* Also add the co-routine to an event list.  If this is done then the
		function must be called with interrupts disabled. */
		vListInsert( pxEventList, &( pxCurrentCoRoutine->xEventListItem ) );
   10808:	e59f3020 	ldr	r3, [pc, #32]	; 10830 <vCoRoutineAddToDelayedList+0xd8>
   1080c:	e5933000 	ldr	r3, [r3]
   10810:	e2833018 	add	r3, r3, #24
   10814:	e1a01003 	mov	r1, r3
   10818:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   1081c:	eb000197 	bl	10e80 <vListInsert>
	}
}
   10820:	e320f000 	nop	{0}
   10824:	e24bd004 	sub	sp, fp, #4
   10828:	e8bd8800 	pop	{fp, pc}
   1082c:	0002bdd8 	ldrdeq	fp, [r2], -r8
   10830:	0002bdd0 	ldrdeq	fp, [r2], -r0
   10834:	0002bdb8 			; <UNDEFINED> instruction: 0x0002bdb8
   10838:	0002bdb4 			; <UNDEFINED> instruction: 0x0002bdb4

0001083c <prvCheckPendingReadyList>:
/*-----------------------------------------------------------*/

static void prvCheckPendingReadyList( void )
{
   1083c:	e92d4800 	push	{fp, lr}
   10840:	e28db004 	add	fp, sp, #4
   10844:	e24dd008 	sub	sp, sp, #8
	/* Are there any co-routines waiting to get moved to the ready list?  These
	are co-routines that have been readied by an ISR.  The ISR cannot access
	the	ready lists itself. */
	while( listLIST_IS_EMPTY( &xPendingReadyCoRoutineList ) == pdFALSE )
   10848:	ea00002c 	b	10900 <prvCheckPendingReadyList+0xc4>
	{
		corCRCB *pxUnblockedCRCB;

		/* The pending ready list can be accessed by an ISR. */
		portDISABLE_INTERRUPTS();
   1084c:	e92d0001 	stmfd	sp!, {r0}
   10850:	e10f0000 	mrs	r0, CPSR
   10854:	e38000c0 	orr	r0, r0, #192	; 0xc0
   10858:	e129f000 	msr	CPSR_fc, r0
   1085c:	e8bd0001 	ldmfd	sp!, {r0}
		{	
			pxUnblockedCRCB = ( corCRCB * ) listGET_OWNER_OF_HEAD_ENTRY( (&xPendingReadyCoRoutineList) );			
   10860:	e59f30b4 	ldr	r3, [pc, #180]	; 1091c <prvCheckPendingReadyList+0xe0>
   10864:	e593300c 	ldr	r3, [r3, #12]
   10868:	e593300c 	ldr	r3, [r3, #12]
   1086c:	e50b3008 	str	r3, [fp, #-8]
			vListRemove( &( pxUnblockedCRCB->xEventListItem ) );
   10870:	e51b3008 	ldr	r3, [fp, #-8]
   10874:	e2833018 	add	r3, r3, #24
   10878:	e1a00003 	mov	r0, r3
   1087c:	eb0001b5 	bl	10f58 <vListRemove>
		}
		portENABLE_INTERRUPTS();
   10880:	e92d0001 	stmfd	sp!, {r0}
   10884:	e10f0000 	mrs	r0, CPSR
   10888:	e3c000c0 	bic	r0, r0, #192	; 0xc0
   1088c:	e129f000 	msr	CPSR_fc, r0
   10890:	e8bd0001 	ldmfd	sp!, {r0}

		vListRemove( &( pxUnblockedCRCB->xGenericListItem ) );
   10894:	e51b3008 	ldr	r3, [fp, #-8]
   10898:	e2833004 	add	r3, r3, #4
   1089c:	e1a00003 	mov	r0, r3
   108a0:	eb0001ac 	bl	10f58 <vListRemove>
		prvAddCoRoutineToReadyQueue( pxUnblockedCRCB );	
   108a4:	e51b3008 	ldr	r3, [fp, #-8]
   108a8:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   108ac:	e59f306c 	ldr	r3, [pc, #108]	; 10920 <prvCheckPendingReadyList+0xe4>
   108b0:	e5933000 	ldr	r3, [r3]
   108b4:	e1520003 	cmp	r2, r3
   108b8:	9a000003 	bls	108cc <prvCheckPendingReadyList+0x90>
   108bc:	e51b3008 	ldr	r3, [fp, #-8]
   108c0:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   108c4:	e59f2054 	ldr	r2, [pc, #84]	; 10920 <prvCheckPendingReadyList+0xe4>
   108c8:	e5823000 	str	r3, [r2]
   108cc:	e51b3008 	ldr	r3, [fp, #-8]
   108d0:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   108d4:	e1a03002 	mov	r3, r2
   108d8:	e1a03103 	lsl	r3, r3, #2
   108dc:	e0833002 	add	r3, r3, r2
   108e0:	e1a03103 	lsl	r3, r3, #2
   108e4:	e59f2038 	ldr	r2, [pc, #56]	; 10924 <prvCheckPendingReadyList+0xe8>
   108e8:	e0832002 	add	r2, r3, r2
   108ec:	e51b3008 	ldr	r3, [fp, #-8]
   108f0:	e2833004 	add	r3, r3, #4
   108f4:	e1a01003 	mov	r1, r3
   108f8:	e1a00002 	mov	r0, r2
   108fc:	eb000139 	bl	10de8 <vListInsertEnd>
	while( listLIST_IS_EMPTY( &xPendingReadyCoRoutineList ) == pdFALSE )
   10900:	e59f3014 	ldr	r3, [pc, #20]	; 1091c <prvCheckPendingReadyList+0xe0>
   10904:	e5933000 	ldr	r3, [r3]
   10908:	e3530000 	cmp	r3, #0
   1090c:	1affffce 	bne	1084c <prvCheckPendingReadyList+0x10>
	}
}
   10910:	e320f000 	nop	{0}
   10914:	e24bd004 	sub	sp, fp, #4
   10918:	e8bd8800 	pop	{fp, pc}
   1091c:	0002bdbc 			; <UNDEFINED> instruction: 0x0002bdbc
   10920:	0002bdd4 	ldrdeq	fp, [r2], -r4
   10924:	0002bd64 	andeq	fp, r2, r4, ror #26

00010928 <prvCheckDelayedList>:
/*-----------------------------------------------------------*/

static void prvCheckDelayedList( void )
{
   10928:	e92d4800 	push	{fp, lr}
   1092c:	e28db004 	add	fp, sp, #4
   10930:	e24dd008 	sub	sp, sp, #8
corCRCB *pxCRCB;

	xPassedTicks = xTaskGetTickCount() - xLastTickCount;
   10934:	eb0007e0 	bl	128bc <xTaskGetTickCount>
   10938:	e1a02000 	mov	r2, r0
   1093c:	e59f3198 	ldr	r3, [pc, #408]	; 10adc <prvCheckDelayedList+0x1b4>
   10940:	e5933000 	ldr	r3, [r3]
   10944:	e0423003 	sub	r3, r2, r3
   10948:	e59f2190 	ldr	r2, [pc, #400]	; 10ae0 <prvCheckDelayedList+0x1b8>
   1094c:	e5823000 	str	r3, [r2]
	while( xPassedTicks )
   10950:	ea000056 	b	10ab0 <prvCheckDelayedList+0x188>
	{
		xCoRoutineTickCount++;
   10954:	e59f3188 	ldr	r3, [pc, #392]	; 10ae4 <prvCheckDelayedList+0x1bc>
   10958:	e5933000 	ldr	r3, [r3]
   1095c:	e2833001 	add	r3, r3, #1
   10960:	e59f217c 	ldr	r2, [pc, #380]	; 10ae4 <prvCheckDelayedList+0x1bc>
   10964:	e5823000 	str	r3, [r2]
		xPassedTicks--;
   10968:	e59f3170 	ldr	r3, [pc, #368]	; 10ae0 <prvCheckDelayedList+0x1b8>
   1096c:	e5933000 	ldr	r3, [r3]
   10970:	e2433001 	sub	r3, r3, #1
   10974:	e59f2164 	ldr	r2, [pc, #356]	; 10ae0 <prvCheckDelayedList+0x1b8>
   10978:	e5823000 	str	r3, [r2]

		/* If the tick count has overflowed we need to swap the ready lists. */
		if( xCoRoutineTickCount == 0 )
   1097c:	e59f3160 	ldr	r3, [pc, #352]	; 10ae4 <prvCheckDelayedList+0x1bc>
   10980:	e5933000 	ldr	r3, [r3]
   10984:	e3530000 	cmp	r3, #0
   10988:	1a000043 	bne	10a9c <prvCheckDelayedList+0x174>
		{
			xList * pxTemp;

			/* Tick count has overflowed so we need to swap the delay lists.  If there are
			any items in pxDelayedCoRoutineList here then there is an error! */
			pxTemp = pxDelayedCoRoutineList;
   1098c:	e59f3154 	ldr	r3, [pc, #340]	; 10ae8 <prvCheckDelayedList+0x1c0>
   10990:	e5933000 	ldr	r3, [r3]
   10994:	e50b3008 	str	r3, [fp, #-8]
			pxDelayedCoRoutineList = pxOverflowDelayedCoRoutineList;
   10998:	e59f314c 	ldr	r3, [pc, #332]	; 10aec <prvCheckDelayedList+0x1c4>
   1099c:	e5933000 	ldr	r3, [r3]
   109a0:	e59f2140 	ldr	r2, [pc, #320]	; 10ae8 <prvCheckDelayedList+0x1c0>
   109a4:	e5823000 	str	r3, [r2]
			pxOverflowDelayedCoRoutineList = pxTemp;
   109a8:	e59f213c 	ldr	r2, [pc, #316]	; 10aec <prvCheckDelayedList+0x1c4>
   109ac:	e51b3008 	ldr	r3, [fp, #-8]
   109b0:	e5823000 	str	r3, [r2]
		}

		/* See if this tick has made a timeout expire. */
		while( listLIST_IS_EMPTY( pxDelayedCoRoutineList ) == pdFALSE )
   109b4:	ea000038 	b	10a9c <prvCheckDelayedList+0x174>
		{
			pxCRCB = ( corCRCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedCoRoutineList );
   109b8:	e59f3128 	ldr	r3, [pc, #296]	; 10ae8 <prvCheckDelayedList+0x1c0>
   109bc:	e5933000 	ldr	r3, [r3]
   109c0:	e593300c 	ldr	r3, [r3, #12]
   109c4:	e593300c 	ldr	r3, [r3, #12]
   109c8:	e50b300c 	str	r3, [fp, #-12]

			if( xCoRoutineTickCount < listGET_LIST_ITEM_VALUE( &( pxCRCB->xGenericListItem ) ) )				
   109cc:	e51b300c 	ldr	r3, [fp, #-12]
   109d0:	e5932004 	ldr	r2, [r3, #4]
   109d4:	e59f3108 	ldr	r3, [pc, #264]	; 10ae4 <prvCheckDelayedList+0x1bc>
   109d8:	e5933000 	ldr	r3, [r3]
   109dc:	e1520003 	cmp	r2, r3
   109e0:	9a000000 	bls	109e8 <prvCheckDelayedList+0xc0>
			{			
				/* Timeout not yet expired. */																			
				break;																				
   109e4:	ea000031 	b	10ab0 <prvCheckDelayedList+0x188>
			}																						

			portDISABLE_INTERRUPTS();
   109e8:	e92d0001 	stmfd	sp!, {r0}
   109ec:	e10f0000 	mrs	r0, CPSR
   109f0:	e38000c0 	orr	r0, r0, #192	; 0xc0
   109f4:	e129f000 	msr	CPSR_fc, r0
   109f8:	e8bd0001 	ldmfd	sp!, {r0}
				/* The event could have occurred just before this critical
				section.  If this is the case then the generic list item will
				have been moved to the pending ready list and the following
				line is still valid.  Also the pvContainer parameter will have
				been set to NULL so the following lines are also valid. */
				vListRemove( &( pxCRCB->xGenericListItem ) );											
   109fc:	e51b300c 	ldr	r3, [fp, #-12]
   10a00:	e2833004 	add	r3, r3, #4
   10a04:	e1a00003 	mov	r0, r3
   10a08:	eb000152 	bl	10f58 <vListRemove>

				/* Is the co-routine waiting on an event also? */												
				if( pxCRCB->xEventListItem.pvContainer )													
   10a0c:	e51b300c 	ldr	r3, [fp, #-12]
   10a10:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   10a14:	e3530000 	cmp	r3, #0
   10a18:	0a000003 	beq	10a2c <prvCheckDelayedList+0x104>
				{															
					vListRemove( &( pxCRCB->xEventListItem ) );											
   10a1c:	e51b300c 	ldr	r3, [fp, #-12]
   10a20:	e2833018 	add	r3, r3, #24
   10a24:	e1a00003 	mov	r0, r3
   10a28:	eb00014a 	bl	10f58 <vListRemove>
				}
			}
			portENABLE_INTERRUPTS();
   10a2c:	e92d0001 	stmfd	sp!, {r0}
   10a30:	e10f0000 	mrs	r0, CPSR
   10a34:	e3c000c0 	bic	r0, r0, #192	; 0xc0
   10a38:	e129f000 	msr	CPSR_fc, r0
   10a3c:	e8bd0001 	ldmfd	sp!, {r0}

			prvAddCoRoutineToReadyQueue( pxCRCB );													
   10a40:	e51b300c 	ldr	r3, [fp, #-12]
   10a44:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   10a48:	e59f30a0 	ldr	r3, [pc, #160]	; 10af0 <prvCheckDelayedList+0x1c8>
   10a4c:	e5933000 	ldr	r3, [r3]
   10a50:	e1520003 	cmp	r2, r3
   10a54:	9a000003 	bls	10a68 <prvCheckDelayedList+0x140>
   10a58:	e51b300c 	ldr	r3, [fp, #-12]
   10a5c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   10a60:	e59f2088 	ldr	r2, [pc, #136]	; 10af0 <prvCheckDelayedList+0x1c8>
   10a64:	e5823000 	str	r3, [r2]
   10a68:	e51b300c 	ldr	r3, [fp, #-12]
   10a6c:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   10a70:	e1a03002 	mov	r3, r2
   10a74:	e1a03103 	lsl	r3, r3, #2
   10a78:	e0833002 	add	r3, r3, r2
   10a7c:	e1a03103 	lsl	r3, r3, #2
   10a80:	e59f206c 	ldr	r2, [pc, #108]	; 10af4 <prvCheckDelayedList+0x1cc>
   10a84:	e0832002 	add	r2, r3, r2
   10a88:	e51b300c 	ldr	r3, [fp, #-12]
   10a8c:	e2833004 	add	r3, r3, #4
   10a90:	e1a01003 	mov	r1, r3
   10a94:	e1a00002 	mov	r0, r2
   10a98:	eb0000d2 	bl	10de8 <vListInsertEnd>
		while( listLIST_IS_EMPTY( pxDelayedCoRoutineList ) == pdFALSE )
   10a9c:	e59f3044 	ldr	r3, [pc, #68]	; 10ae8 <prvCheckDelayedList+0x1c0>
   10aa0:	e5933000 	ldr	r3, [r3]
   10aa4:	e5933000 	ldr	r3, [r3]
   10aa8:	e3530000 	cmp	r3, #0
   10aac:	1affffc1 	bne	109b8 <prvCheckDelayedList+0x90>
	while( xPassedTicks )
   10ab0:	e59f3028 	ldr	r3, [pc, #40]	; 10ae0 <prvCheckDelayedList+0x1b8>
   10ab4:	e5933000 	ldr	r3, [r3]
   10ab8:	e3530000 	cmp	r3, #0
   10abc:	1affffa4 	bne	10954 <prvCheckDelayedList+0x2c>
		}																									
	}

	xLastTickCount = xCoRoutineTickCount;
   10ac0:	e59f301c 	ldr	r3, [pc, #28]	; 10ae4 <prvCheckDelayedList+0x1bc>
   10ac4:	e5933000 	ldr	r3, [r3]
   10ac8:	e59f200c 	ldr	r2, [pc, #12]	; 10adc <prvCheckDelayedList+0x1b4>
   10acc:	e5823000 	str	r3, [r2]
}
   10ad0:	e320f000 	nop	{0}
   10ad4:	e24bd004 	sub	sp, fp, #4
   10ad8:	e8bd8800 	pop	{fp, pc}
   10adc:	0002bddc 	ldrdeq	fp, [r2], -ip
   10ae0:	0002bde0 	andeq	fp, r2, r0, ror #27
   10ae4:	0002bdd8 	ldrdeq	fp, [r2], -r8
   10ae8:	0002bdb4 			; <UNDEFINED> instruction: 0x0002bdb4
   10aec:	0002bdb8 			; <UNDEFINED> instruction: 0x0002bdb8
   10af0:	0002bdd4 	ldrdeq	fp, [r2], -r4
   10af4:	0002bd64 	andeq	fp, r2, r4, ror #26

00010af8 <vCoRoutineSchedule>:
/*-----------------------------------------------------------*/

void vCoRoutineSchedule( void )
{
   10af8:	e92d4800 	push	{fp, lr}
   10afc:	e28db004 	add	fp, sp, #4
   10b00:	e24dd008 	sub	sp, sp, #8
	/* See if any co-routines readied by events need moving to the ready lists. */
	prvCheckPendingReadyList();
   10b04:	ebffff4c 	bl	1083c <prvCheckPendingReadyList>

	/* See if any delayed co-routines have timed out. */
	prvCheckDelayedList();
   10b08:	ebffff86 	bl	10928 <prvCheckDelayedList>

	/* Find the highest priority queue that contains ready co-routines. */
	while( listLIST_IS_EMPTY( &( pxReadyCoRoutineLists[ uxTopCoRoutineReadyPriority ] ) ) )
   10b0c:	ea000008 	b	10b34 <vCoRoutineSchedule+0x3c>
	{
		if( uxTopCoRoutineReadyPriority == 0 )
   10b10:	e59f30fc 	ldr	r3, [pc, #252]	; 10c14 <vCoRoutineSchedule+0x11c>
   10b14:	e5933000 	ldr	r3, [r3]
   10b18:	e3530000 	cmp	r3, #0
   10b1c:	0a000039 	beq	10c08 <vCoRoutineSchedule+0x110>
		{
			/* No more co-routines to check. */
			return;
		}
		--uxTopCoRoutineReadyPriority;
   10b20:	e59f30ec 	ldr	r3, [pc, #236]	; 10c14 <vCoRoutineSchedule+0x11c>
   10b24:	e5933000 	ldr	r3, [r3]
   10b28:	e2433001 	sub	r3, r3, #1
   10b2c:	e59f20e0 	ldr	r2, [pc, #224]	; 10c14 <vCoRoutineSchedule+0x11c>
   10b30:	e5823000 	str	r3, [r2]
	while( listLIST_IS_EMPTY( &( pxReadyCoRoutineLists[ uxTopCoRoutineReadyPriority ] ) ) )
   10b34:	e59f30d8 	ldr	r3, [pc, #216]	; 10c14 <vCoRoutineSchedule+0x11c>
   10b38:	e5932000 	ldr	r2, [r3]
   10b3c:	e59f10d4 	ldr	r1, [pc, #212]	; 10c18 <vCoRoutineSchedule+0x120>
   10b40:	e1a03002 	mov	r3, r2
   10b44:	e1a03103 	lsl	r3, r3, #2
   10b48:	e0833002 	add	r3, r3, r2
   10b4c:	e1a03103 	lsl	r3, r3, #2
   10b50:	e0813003 	add	r3, r1, r3
   10b54:	e5933000 	ldr	r3, [r3]
   10b58:	e3530000 	cmp	r3, #0
   10b5c:	0affffeb 	beq	10b10 <vCoRoutineSchedule+0x18>
	}

	/* listGET_OWNER_OF_NEXT_ENTRY walks through the list, so the co-routines
	 of the	same priority get an equal share of the processor time. */
	listGET_OWNER_OF_NEXT_ENTRY( pxCurrentCoRoutine, &( pxReadyCoRoutineLists[ uxTopCoRoutineReadyPriority ] ) );
   10b60:	e59f30ac 	ldr	r3, [pc, #172]	; 10c14 <vCoRoutineSchedule+0x11c>
   10b64:	e5932000 	ldr	r2, [r3]
   10b68:	e1a03002 	mov	r3, r2
   10b6c:	e1a03103 	lsl	r3, r3, #2
   10b70:	e0833002 	add	r3, r3, r2
   10b74:	e1a03103 	lsl	r3, r3, #2
   10b78:	e59f2098 	ldr	r2, [pc, #152]	; 10c18 <vCoRoutineSchedule+0x120>
   10b7c:	e0833002 	add	r3, r3, r2
   10b80:	e50b3008 	str	r3, [fp, #-8]
   10b84:	e51b3008 	ldr	r3, [fp, #-8]
   10b88:	e5933004 	ldr	r3, [r3, #4]
   10b8c:	e5932004 	ldr	r2, [r3, #4]
   10b90:	e51b3008 	ldr	r3, [fp, #-8]
   10b94:	e5832004 	str	r2, [r3, #4]
   10b98:	e51b3008 	ldr	r3, [fp, #-8]
   10b9c:	e5932004 	ldr	r2, [r3, #4]
   10ba0:	e51b3008 	ldr	r3, [fp, #-8]
   10ba4:	e2833008 	add	r3, r3, #8
   10ba8:	e1520003 	cmp	r2, r3
   10bac:	1a000004 	bne	10bc4 <vCoRoutineSchedule+0xcc>
   10bb0:	e51b3008 	ldr	r3, [fp, #-8]
   10bb4:	e5933004 	ldr	r3, [r3, #4]
   10bb8:	e5932004 	ldr	r2, [r3, #4]
   10bbc:	e51b3008 	ldr	r3, [fp, #-8]
   10bc0:	e5832004 	str	r2, [r3, #4]
   10bc4:	e51b3008 	ldr	r3, [fp, #-8]
   10bc8:	e5933004 	ldr	r3, [r3, #4]
   10bcc:	e593300c 	ldr	r3, [r3, #12]
   10bd0:	e59f2044 	ldr	r2, [pc, #68]	; 10c1c <vCoRoutineSchedule+0x124>
   10bd4:	e5823000 	str	r3, [r2]

	/* Call the co-routine. */
	( pxCurrentCoRoutine->pxCoRoutineFunction )( pxCurrentCoRoutine, pxCurrentCoRoutine->uxIndex );
   10bd8:	e59f303c 	ldr	r3, [pc, #60]	; 10c1c <vCoRoutineSchedule+0x124>
   10bdc:	e5933000 	ldr	r3, [r3]
   10be0:	e5933000 	ldr	r3, [r3]
   10be4:	e59f2030 	ldr	r2, [pc, #48]	; 10c1c <vCoRoutineSchedule+0x124>
   10be8:	e5920000 	ldr	r0, [r2]
   10bec:	e59f2028 	ldr	r2, [pc, #40]	; 10c1c <vCoRoutineSchedule+0x124>
   10bf0:	e5922000 	ldr	r2, [r2]
   10bf4:	e5922030 	ldr	r2, [r2, #48]	; 0x30
   10bf8:	e1a01002 	mov	r1, r2
   10bfc:	e12fff33 	blx	r3

	return;
   10c00:	e320f000 	nop	{0}
   10c04:	ea000000 	b	10c0c <vCoRoutineSchedule+0x114>
			return;
   10c08:	e320f000 	nop	{0}
}
   10c0c:	e24bd004 	sub	sp, fp, #4
   10c10:	e8bd8800 	pop	{fp, pc}
   10c14:	0002bdd4 	ldrdeq	fp, [r2], -r4
   10c18:	0002bd64 	andeq	fp, r2, r4, ror #26
   10c1c:	0002bdd0 	ldrdeq	fp, [r2], -r0

00010c20 <prvInitialiseCoRoutineLists>:
/*-----------------------------------------------------------*/

static void prvInitialiseCoRoutineLists( void )
{
   10c20:	e92d4800 	push	{fp, lr}
   10c24:	e28db004 	add	fp, sp, #4
   10c28:	e24dd008 	sub	sp, sp, #8
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = 0; uxPriority < configMAX_CO_ROUTINE_PRIORITIES; uxPriority++ )
   10c2c:	e3a03000 	mov	r3, #0
   10c30:	e50b3008 	str	r3, [fp, #-8]
   10c34:	ea00000b 	b	10c68 <prvInitialiseCoRoutineLists+0x48>
	{
		vListInitialise( ( xList * ) &( pxReadyCoRoutineLists[ uxPriority ] ) );
   10c38:	e51b2008 	ldr	r2, [fp, #-8]
   10c3c:	e1a03002 	mov	r3, r2
   10c40:	e1a03103 	lsl	r3, r3, #2
   10c44:	e0833002 	add	r3, r3, r2
   10c48:	e1a03103 	lsl	r3, r3, #2
   10c4c:	e59f205c 	ldr	r2, [pc, #92]	; 10cb0 <prvInitialiseCoRoutineLists+0x90>
   10c50:	e0833002 	add	r3, r3, r2
   10c54:	e1a00003 	mov	r0, r3
   10c58:	eb00003d 	bl	10d54 <vListInitialise>
	for( uxPriority = 0; uxPriority < configMAX_CO_ROUTINE_PRIORITIES; uxPriority++ )
   10c5c:	e51b3008 	ldr	r3, [fp, #-8]
   10c60:	e2833001 	add	r3, r3, #1
   10c64:	e50b3008 	str	r3, [fp, #-8]
   10c68:	e51b3008 	ldr	r3, [fp, #-8]
   10c6c:	e3530001 	cmp	r3, #1
   10c70:	9afffff0 	bls	10c38 <prvInitialiseCoRoutineLists+0x18>
	}

	vListInitialise( ( xList * ) &xDelayedCoRoutineList1 );
   10c74:	e59f0038 	ldr	r0, [pc, #56]	; 10cb4 <prvInitialiseCoRoutineLists+0x94>
   10c78:	eb000035 	bl	10d54 <vListInitialise>
	vListInitialise( ( xList * ) &xDelayedCoRoutineList2 );
   10c7c:	e59f0034 	ldr	r0, [pc, #52]	; 10cb8 <prvInitialiseCoRoutineLists+0x98>
   10c80:	eb000033 	bl	10d54 <vListInitialise>
	vListInitialise( ( xList * ) &xPendingReadyCoRoutineList );
   10c84:	e59f0030 	ldr	r0, [pc, #48]	; 10cbc <prvInitialiseCoRoutineLists+0x9c>
   10c88:	eb000031 	bl	10d54 <vListInitialise>

	/* Start with pxDelayedCoRoutineList using list1 and the
	pxOverflowDelayedCoRoutineList using list2. */
	pxDelayedCoRoutineList = &xDelayedCoRoutineList1;
   10c8c:	e59f302c 	ldr	r3, [pc, #44]	; 10cc0 <prvInitialiseCoRoutineLists+0xa0>
   10c90:	e59f201c 	ldr	r2, [pc, #28]	; 10cb4 <prvInitialiseCoRoutineLists+0x94>
   10c94:	e5832000 	str	r2, [r3]
	pxOverflowDelayedCoRoutineList = &xDelayedCoRoutineList2;
   10c98:	e59f3024 	ldr	r3, [pc, #36]	; 10cc4 <prvInitialiseCoRoutineLists+0xa4>
   10c9c:	e59f2014 	ldr	r2, [pc, #20]	; 10cb8 <prvInitialiseCoRoutineLists+0x98>
   10ca0:	e5832000 	str	r2, [r3]
}
   10ca4:	e320f000 	nop	{0}
   10ca8:	e24bd004 	sub	sp, fp, #4
   10cac:	e8bd8800 	pop	{fp, pc}
   10cb0:	0002bd64 	andeq	fp, r2, r4, ror #26
   10cb4:	0002bd8c 	andeq	fp, r2, ip, lsl #27
   10cb8:	0002bda0 	andeq	fp, r2, r0, lsr #27
   10cbc:	0002bdbc 			; <UNDEFINED> instruction: 0x0002bdbc
   10cc0:	0002bdb4 			; <UNDEFINED> instruction: 0x0002bdb4
   10cc4:	0002bdb8 			; <UNDEFINED> instruction: 0x0002bdb8

00010cc8 <xCoRoutineRemoveFromEventList>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xCoRoutineRemoveFromEventList( const xList *pxEventList )
{
   10cc8:	e92d4800 	push	{fp, lr}
   10ccc:	e28db004 	add	fp, sp, #4
   10cd0:	e24dd010 	sub	sp, sp, #16
   10cd4:	e50b0010 	str	r0, [fp, #-16]
signed portBASE_TYPE xReturn;

	/* This function is called from within an interrupt.  It can only access
	event lists and the pending ready list.  This function assumes that a
	check has already been made to ensure pxEventList is not empty. */
	pxUnblockedCRCB = ( corCRCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   10cd8:	e51b3010 	ldr	r3, [fp, #-16]
   10cdc:	e593300c 	ldr	r3, [r3, #12]
   10ce0:	e593300c 	ldr	r3, [r3, #12]
   10ce4:	e50b300c 	str	r3, [fp, #-12]
	vListRemove( &( pxUnblockedCRCB->xEventListItem ) );
   10ce8:	e51b300c 	ldr	r3, [fp, #-12]
   10cec:	e2833018 	add	r3, r3, #24
   10cf0:	e1a00003 	mov	r0, r3
   10cf4:	eb000097 	bl	10f58 <vListRemove>
	vListInsertEnd( ( xList * ) &( xPendingReadyCoRoutineList ), &( pxUnblockedCRCB->xEventListItem ) );
   10cf8:	e51b300c 	ldr	r3, [fp, #-12]
   10cfc:	e2833018 	add	r3, r3, #24
   10d00:	e1a01003 	mov	r1, r3
   10d04:	e59f0040 	ldr	r0, [pc, #64]	; 10d4c <xCoRoutineRemoveFromEventList+0x84>
   10d08:	eb000036 	bl	10de8 <vListInsertEnd>

	if( pxUnblockedCRCB->uxPriority >= pxCurrentCoRoutine->uxPriority )
   10d0c:	e51b300c 	ldr	r3, [fp, #-12]
   10d10:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   10d14:	e59f3034 	ldr	r3, [pc, #52]	; 10d50 <xCoRoutineRemoveFromEventList+0x88>
   10d18:	e5933000 	ldr	r3, [r3]
   10d1c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   10d20:	e1520003 	cmp	r2, r3
   10d24:	3a000002 	bcc	10d34 <xCoRoutineRemoveFromEventList+0x6c>
	{
		xReturn = pdTRUE;
   10d28:	e3a03001 	mov	r3, #1
   10d2c:	e50b3008 	str	r3, [fp, #-8]
   10d30:	ea000001 	b	10d3c <xCoRoutineRemoveFromEventList+0x74>
	}
	else
	{
		xReturn = pdFALSE;
   10d34:	e3a03000 	mov	r3, #0
   10d38:	e50b3008 	str	r3, [fp, #-8]
	}

	return xReturn;
   10d3c:	e51b3008 	ldr	r3, [fp, #-8]
}
   10d40:	e1a00003 	mov	r0, r3
   10d44:	e24bd004 	sub	sp, fp, #4
   10d48:	e8bd8800 	pop	{fp, pc}
   10d4c:	0002bdbc 			; <UNDEFINED> instruction: 0x0002bdbc
   10d50:	0002bdd0 	ldrdeq	fp, [r2], -r0

00010d54 <vListInitialise>:
/*-----------------------------------------------------------
 * PUBLIC LIST API documented in list.h
 *----------------------------------------------------------*/

void vListInitialise( xList *pxList )
{
   10d54:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10d58:	e28db000 	add	fp, sp, #0
   10d5c:	e24dd00c 	sub	sp, sp, #12
   10d60:	e50b0008 	str	r0, [fp, #-8]
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
   10d64:	e51b3008 	ldr	r3, [fp, #-8]
   10d68:	e2832008 	add	r2, r3, #8
   10d6c:	e51b3008 	ldr	r3, [fp, #-8]
   10d70:	e5832004 	str	r2, [r3, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   10d74:	e51b3008 	ldr	r3, [fp, #-8]
   10d78:	e3e02000 	mvn	r2, #0
   10d7c:	e5832008 	str	r2, [r3, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
   10d80:	e51b3008 	ldr	r3, [fp, #-8]
   10d84:	e2832008 	add	r2, r3, #8
   10d88:	e51b3008 	ldr	r3, [fp, #-8]
   10d8c:	e583200c 	str	r2, [r3, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
   10d90:	e51b3008 	ldr	r3, [fp, #-8]
   10d94:	e2832008 	add	r2, r3, #8
   10d98:	e51b3008 	ldr	r3, [fp, #-8]
   10d9c:	e5832010 	str	r2, [r3, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
   10da0:	e51b3008 	ldr	r3, [fp, #-8]
   10da4:	e3a02000 	mov	r2, #0
   10da8:	e5832000 	str	r2, [r3]
}
   10dac:	e320f000 	nop	{0}
   10db0:	e28bd000 	add	sp, fp, #0
   10db4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10db8:	e12fff1e 	bx	lr

00010dbc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
   10dbc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10dc0:	e28db000 	add	fp, sp, #0
   10dc4:	e24dd00c 	sub	sp, sp, #12
   10dc8:	e50b0008 	str	r0, [fp, #-8]
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   10dcc:	e51b3008 	ldr	r3, [fp, #-8]
   10dd0:	e3a02000 	mov	r2, #0
   10dd4:	e5832010 	str	r2, [r3, #16]
}
   10dd8:	e320f000 	nop	{0}
   10ddc:	e28bd000 	add	sp, fp, #0
   10de0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10de4:	e12fff1e 	bx	lr

00010de8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( xList *pxList, xListItem *pxNewListItem )
{
   10de8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10dec:	e28db000 	add	fp, sp, #0
   10df0:	e24dd014 	sub	sp, sp, #20
   10df4:	e50b0010 	str	r0, [fp, #-16]
   10df8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
   10dfc:	e51b3010 	ldr	r3, [fp, #-16]
   10e00:	e5933004 	ldr	r3, [r3, #4]
   10e04:	e50b3008 	str	r3, [fp, #-8]

	pxNewListItem->pxNext = pxIndex->pxNext;
   10e08:	e51b3008 	ldr	r3, [fp, #-8]
   10e0c:	e5932004 	ldr	r2, [r3, #4]
   10e10:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10e14:	e5832004 	str	r2, [r3, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
   10e18:	e51b3010 	ldr	r3, [fp, #-16]
   10e1c:	e5932004 	ldr	r2, [r3, #4]
   10e20:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10e24:	e5832008 	str	r2, [r3, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
   10e28:	e51b3008 	ldr	r3, [fp, #-8]
   10e2c:	e5933004 	ldr	r3, [r3, #4]
   10e30:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10e34:	e5832008 	str	r2, [r3, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
   10e38:	e51b3008 	ldr	r3, [fp, #-8]
   10e3c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10e40:	e5832004 	str	r2, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
   10e44:	e51b3010 	ldr	r3, [fp, #-16]
   10e48:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10e4c:	e5832004 	str	r2, [r3, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
   10e50:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10e54:	e51b2010 	ldr	r2, [fp, #-16]
   10e58:	e5832010 	str	r2, [r3, #16]

	( pxList->uxNumberOfItems )++;
   10e5c:	e51b3010 	ldr	r3, [fp, #-16]
   10e60:	e5933000 	ldr	r3, [r3]
   10e64:	e2832001 	add	r2, r3, #1
   10e68:	e51b3010 	ldr	r3, [fp, #-16]
   10e6c:	e5832000 	str	r2, [r3]
}
   10e70:	e320f000 	nop	{0}
   10e74:	e28bd000 	add	sp, fp, #0
   10e78:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10e7c:	e12fff1e 	bx	lr

00010e80 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
   10e80:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10e84:	e28db000 	add	fp, sp, #0
   10e88:	e24dd014 	sub	sp, sp, #20
   10e8c:	e50b0010 	str	r0, [fp, #-16]
   10e90:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
   10e94:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10e98:	e5933000 	ldr	r3, [r3]
   10e9c:	e50b300c 	str	r3, [fp, #-12]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   10ea0:	e51b300c 	ldr	r3, [fp, #-12]
   10ea4:	e3730001 	cmn	r3, #1
   10ea8:	1a000003 	bne	10ebc <vListInsert+0x3c>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   10eac:	e51b3010 	ldr	r3, [fp, #-16]
   10eb0:	e5933010 	ldr	r3, [r3, #16]
   10eb4:	e50b3008 	str	r3, [fp, #-8]
   10eb8:	ea00000c 	b	10ef0 <vListInsert+0x70>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/
		
		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
   10ebc:	e51b3010 	ldr	r3, [fp, #-16]
   10ec0:	e2833008 	add	r3, r3, #8
   10ec4:	e50b3008 	str	r3, [fp, #-8]
   10ec8:	ea000002 	b	10ed8 <vListInsert+0x58>
   10ecc:	e51b3008 	ldr	r3, [fp, #-8]
   10ed0:	e5933004 	ldr	r3, [r3, #4]
   10ed4:	e50b3008 	str	r3, [fp, #-8]
   10ed8:	e51b3008 	ldr	r3, [fp, #-8]
   10edc:	e5933004 	ldr	r3, [r3, #4]
   10ee0:	e5933000 	ldr	r3, [r3]
   10ee4:	e51b200c 	ldr	r2, [fp, #-12]
   10ee8:	e1520003 	cmp	r2, r3
   10eec:	2afffff6 	bcs	10ecc <vListInsert+0x4c>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   10ef0:	e51b3008 	ldr	r3, [fp, #-8]
   10ef4:	e5932004 	ldr	r2, [r3, #4]
   10ef8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10efc:	e5832004 	str	r2, [r3, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
   10f00:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10f04:	e5933004 	ldr	r3, [r3, #4]
   10f08:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10f0c:	e5832008 	str	r2, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
   10f10:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10f14:	e51b2008 	ldr	r2, [fp, #-8]
   10f18:	e5832008 	str	r2, [r3, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
   10f1c:	e51b3008 	ldr	r3, [fp, #-8]
   10f20:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10f24:	e5832004 	str	r2, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
   10f28:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10f2c:	e51b2010 	ldr	r2, [fp, #-16]
   10f30:	e5832010 	str	r2, [r3, #16]

	( pxList->uxNumberOfItems )++;
   10f34:	e51b3010 	ldr	r3, [fp, #-16]
   10f38:	e5933000 	ldr	r3, [r3]
   10f3c:	e2832001 	add	r2, r3, #1
   10f40:	e51b3010 	ldr	r3, [fp, #-16]
   10f44:	e5832000 	str	r2, [r3]
}
   10f48:	e320f000 	nop	{0}
   10f4c:	e28bd000 	add	sp, fp, #0
   10f50:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10f54:	e12fff1e 	bx	lr

00010f58 <vListRemove>:
/*-----------------------------------------------------------*/

void vListRemove( xListItem *pxItemToRemove )
{
   10f58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10f5c:	e28db000 	add	fp, sp, #0
   10f60:	e24dd014 	sub	sp, sp, #20
   10f64:	e50b0010 	str	r0, [fp, #-16]
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   10f68:	e51b3010 	ldr	r3, [fp, #-16]
   10f6c:	e5933004 	ldr	r3, [r3, #4]
   10f70:	e51b2010 	ldr	r2, [fp, #-16]
   10f74:	e5922008 	ldr	r2, [r2, #8]
   10f78:	e5832008 	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   10f7c:	e51b3010 	ldr	r3, [fp, #-16]
   10f80:	e5933008 	ldr	r3, [r3, #8]
   10f84:	e51b2010 	ldr	r2, [fp, #-16]
   10f88:	e5922004 	ldr	r2, [r2, #4]
   10f8c:	e5832004 	str	r2, [r3, #4]
	
	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
   10f90:	e51b3010 	ldr	r3, [fp, #-16]
   10f94:	e5933010 	ldr	r3, [r3, #16]
   10f98:	e50b3008 	str	r3, [fp, #-8]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   10f9c:	e51b3008 	ldr	r3, [fp, #-8]
   10fa0:	e5933004 	ldr	r3, [r3, #4]
   10fa4:	e51b2010 	ldr	r2, [fp, #-16]
   10fa8:	e1520003 	cmp	r2, r3
   10fac:	1a000003 	bne	10fc0 <vListRemove+0x68>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   10fb0:	e51b3010 	ldr	r3, [fp, #-16]
   10fb4:	e5932008 	ldr	r2, [r3, #8]
   10fb8:	e51b3008 	ldr	r3, [fp, #-8]
   10fbc:	e5832004 	str	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
   10fc0:	e51b3010 	ldr	r3, [fp, #-16]
   10fc4:	e3a02000 	mov	r2, #0
   10fc8:	e5832010 	str	r2, [r3, #16]
	( pxList->uxNumberOfItems )--;
   10fcc:	e51b3008 	ldr	r3, [fp, #-8]
   10fd0:	e5933000 	ldr	r3, [r3]
   10fd4:	e2432001 	sub	r2, r3, #1
   10fd8:	e51b3008 	ldr	r3, [fp, #-8]
   10fdc:	e5832000 	str	r2, [r3]
}
   10fe0:	e320f000 	nop	{0}
   10fe4:	e28bd000 	add	sp, fp, #0
   10fe8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10fec:	e12fff1e 	bx	lr

00010ff0 <xQueueGenericReset>:
/*-----------------------------------------------------------
 * PUBLIC QUEUE MANAGEMENT API documented in queue.h
 *----------------------------------------------------------*/

portBASE_TYPE xQueueGenericReset( xQueueHandle pxQueue, portBASE_TYPE xNewQueue )
{
   10ff0:	e92d4800 	push	{fp, lr}
   10ff4:	e28db004 	add	fp, sp, #4
   10ff8:	e24dd008 	sub	sp, sp, #8
   10ffc:	e50b0008 	str	r0, [fp, #-8]
   11000:	e50b100c 	str	r1, [fp, #-12]
	configASSERT( pxQueue );

	taskENTER_CRITICAL();
   11004:	ebfffd4d 	bl	10540 <vPortEnterCritical>
	{
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   11008:	e51b3008 	ldr	r3, [fp, #-8]
   1100c:	e5932000 	ldr	r2, [r3]
   11010:	e51b3008 	ldr	r3, [fp, #-8]
   11014:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   11018:	e51b1008 	ldr	r1, [fp, #-8]
   1101c:	e5911040 	ldr	r1, [r1, #64]	; 0x40
   11020:	e0030391 	mul	r3, r1, r3
   11024:	e0822003 	add	r2, r2, r3
   11028:	e51b3008 	ldr	r3, [fp, #-8]
   1102c:	e5832004 	str	r2, [r3, #4]
		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
   11030:	e51b3008 	ldr	r3, [fp, #-8]
   11034:	e3a02000 	mov	r2, #0
   11038:	e5832038 	str	r2, [r3, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
   1103c:	e51b3008 	ldr	r3, [fp, #-8]
   11040:	e5932000 	ldr	r2, [r3]
   11044:	e51b3008 	ldr	r3, [fp, #-8]
   11048:	e5832008 	str	r2, [r3, #8]
		pxQueue->pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U ) * pxQueue->uxItemSize );
   1104c:	e51b3008 	ldr	r3, [fp, #-8]
   11050:	e5932000 	ldr	r2, [r3]
   11054:	e51b3008 	ldr	r3, [fp, #-8]
   11058:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   1105c:	e2433001 	sub	r3, r3, #1
   11060:	e51b1008 	ldr	r1, [fp, #-8]
   11064:	e5911040 	ldr	r1, [r1, #64]	; 0x40
   11068:	e0030391 	mul	r3, r1, r3
   1106c:	e0822003 	add	r2, r2, r3
   11070:	e51b3008 	ldr	r3, [fp, #-8]
   11074:	e583200c 	str	r2, [r3, #12]
		pxQueue->xRxLock = queueUNLOCKED;
   11078:	e51b3008 	ldr	r3, [fp, #-8]
   1107c:	e3e02000 	mvn	r2, #0
   11080:	e5832044 	str	r2, [r3, #68]	; 0x44
		pxQueue->xTxLock = queueUNLOCKED;
   11084:	e51b3008 	ldr	r3, [fp, #-8]
   11088:	e3e02000 	mvn	r2, #0
   1108c:	e5832048 	str	r2, [r3, #72]	; 0x48

		if( xNewQueue == pdFALSE )
   11090:	e51b300c 	ldr	r3, [fp, #-12]
   11094:	e3530000 	cmp	r3, #0
   11098:	1a00000c 	bne	110d0 <xQueueGenericReset+0xe0>
			/* If there are tasks blocked waiting to read from the queue, then 
			the tasks will remain blocked as after this function exits the queue 
			will still be empty.  If there are tasks blocked waiting to	write to 
			the queue, then one should be unblocked as after this function exits 
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   1109c:	e51b3008 	ldr	r3, [fp, #-8]
   110a0:	e5933010 	ldr	r3, [r3, #16]
   110a4:	e3530000 	cmp	r3, #0
   110a8:	0a000010 	beq	110f0 <xQueueGenericReset+0x100>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
   110ac:	e51b3008 	ldr	r3, [fp, #-8]
   110b0:	e2833010 	add	r3, r3, #16
   110b4:	e1a00003 	mov	r0, r3
   110b8:	eb000760 	bl	12e40 <xTaskRemoveFromEventList>
   110bc:	e1a03000 	mov	r3, r0
   110c0:	e3530001 	cmp	r3, #1
   110c4:	1a000009 	bne	110f0 <xQueueGenericReset+0x100>
				{
					portYIELD_WITHIN_API();
   110c8:	ef000000 	svc	0x00000000
   110cc:	ea000007 	b	110f0 <xQueueGenericReset+0x100>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   110d0:	e51b3008 	ldr	r3, [fp, #-8]
   110d4:	e2833010 	add	r3, r3, #16
   110d8:	e1a00003 	mov	r0, r3
   110dc:	ebffff1c 	bl	10d54 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );		
   110e0:	e51b3008 	ldr	r3, [fp, #-8]
   110e4:	e2833024 	add	r3, r3, #36	; 0x24
   110e8:	e1a00003 	mov	r0, r3
   110ec:	ebffff18 	bl	10d54 <vListInitialise>
		}
	}
	taskEXIT_CRITICAL();
   110f0:	ebfffd23 	bl	10584 <vPortExitCritical>

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
   110f4:	e3a03001 	mov	r3, #1
}
   110f8:	e1a00003 	mov	r0, r3
   110fc:	e24bd004 	sub	sp, fp, #4
   11100:	e8bd8800 	pop	{fp, pc}

00011104 <xQueueGenericCreate>:
/*-----------------------------------------------------------*/

xQueueHandle xQueueGenericCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize, unsigned char ucQueueType )
{
   11104:	e92d4800 	push	{fp, lr}
   11108:	e28db004 	add	fp, sp, #4
   1110c:	e24dd020 	sub	sp, sp, #32
   11110:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   11114:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   11118:	e1a03002 	mov	r3, r2
   1111c:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
xQUEUE *pxNewQueue;
size_t xQueueSizeInBytes;
xQueueHandle xReturn = NULL;
   11120:	e3a03000 	mov	r3, #0
   11124:	e50b3008 	str	r3, [fp, #-8]
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	/* Allocate the new queue structure. */
	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
   11128:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1112c:	e3530000 	cmp	r3, #0
   11130:	0a000021 	beq	111bc <xQueueGenericCreate+0xb8>
	{
		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
   11134:	e3a0004c 	mov	r0, #76	; 0x4c
   11138:	eb000ed6 	bl	14c98 <pvPortMalloc>
   1113c:	e50b000c 	str	r0, [fp, #-12]
		if( pxNewQueue != NULL )
   11140:	e51b300c 	ldr	r3, [fp, #-12]
   11144:	e3530000 	cmp	r3, #0
   11148:	0a00001b 	beq	111bc <xQueueGenericCreate+0xb8>
		{
			/* Create the list of pointers to queue items.  The queue is one byte
			longer than asked for to make wrap checking easier/faster. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
   1114c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11150:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   11154:	e0030392 	mul	r3, r2, r3
   11158:	e2833001 	add	r3, r3, #1
   1115c:	e50b3010 	str	r3, [fp, #-16]

			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
   11160:	e51b0010 	ldr	r0, [fp, #-16]
   11164:	eb000ecb 	bl	14c98 <pvPortMalloc>
   11168:	e1a02000 	mov	r2, r0
   1116c:	e51b300c 	ldr	r3, [fp, #-12]
   11170:	e5832000 	str	r2, [r3]
			if( pxNewQueue->pcHead != NULL )
   11174:	e51b300c 	ldr	r3, [fp, #-12]
   11178:	e5933000 	ldr	r3, [r3]
   1117c:	e3530000 	cmp	r3, #0
   11180:	0a00000b 	beq	111b4 <xQueueGenericCreate+0xb0>
			{
				/* Initialise the queue members as described above where the
				queue type is defined. */
				pxNewQueue->uxLength = uxQueueLength;
   11184:	e51b300c 	ldr	r3, [fp, #-12]
   11188:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1118c:	e583203c 	str	r2, [r3, #60]	; 0x3c
				pxNewQueue->uxItemSize = uxItemSize;
   11190:	e51b300c 	ldr	r3, [fp, #-12]
   11194:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   11198:	e5832040 	str	r2, [r3, #64]	; 0x40
				xQueueGenericReset( pxNewQueue, pdTRUE );
   1119c:	e3a01001 	mov	r1, #1
   111a0:	e51b000c 	ldr	r0, [fp, #-12]
   111a4:	ebffff91 	bl	10ff0 <xQueueGenericReset>
					pxNewQueue->ucQueueType = ucQueueType;
				}
				#endif /* configUSE_TRACE_FACILITY */

				traceQUEUE_CREATE( pxNewQueue );
				xReturn = pxNewQueue;
   111a8:	e51b300c 	ldr	r3, [fp, #-12]
   111ac:	e50b3008 	str	r3, [fp, #-8]
   111b0:	ea000001 	b	111bc <xQueueGenericCreate+0xb8>
			}
			else
			{
				traceQUEUE_CREATE_FAILED( ucQueueType );
				vPortFree( pxNewQueue );
   111b4:	e51b000c 	ldr	r0, [fp, #-12]
   111b8:	eb000f28 	bl	14e60 <vPortFree>
		}
	}

	configASSERT( xReturn );

	return xReturn;
   111bc:	e51b3008 	ldr	r3, [fp, #-8]
}
   111c0:	e1a00003 	mov	r0, r3
   111c4:	e24bd004 	sub	sp, fp, #4
   111c8:	e8bd8800 	pop	{fp, pc}

000111cc <xQueueGenericSend>:

#endif /* configUSE_COUNTING_SEMAPHORES */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSend( xQueueHandle pxQueue, const void * const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition )
{
   111cc:	e92d4800 	push	{fp, lr}
   111d0:	e28db004 	add	fp, sp, #4
   111d4:	e24dd020 	sub	sp, sp, #32
   111d8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   111dc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   111e0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   111e4:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
signed portBASE_TYPE xEntryTimeSet = pdFALSE;
   111e8:	e3a03000 	mov	r3, #0
   111ec:	e50b3008 	str	r3, [fp, #-8]
	/* This function relaxes the coding standard somewhat to allow return
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
   111f0:	ebfffcd2 	bl	10540 <vPortEnterCritical>
		{
			/* Is there room on the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
   111f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   111f8:	e5932038 	ldr	r2, [r3, #56]	; 0x38
   111fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11200:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   11204:	e1520003 	cmp	r2, r3
   11208:	2a000012 	bcs	11258 <xQueueGenericSend+0x8c>
			{
				traceQUEUE_SEND( pxQueue );
				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   1120c:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   11210:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   11214:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11218:	eb00016a 	bl	117c8 <prvCopyDataToQueue>

				/* If there was a task waiting for data to arrive on the
				queue then unblock it now. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1121c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11220:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   11224:	e3530000 	cmp	r3, #0
   11228:	0a000007 	beq	1124c <xQueueGenericSend+0x80>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
   1122c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11230:	e2833024 	add	r3, r3, #36	; 0x24
   11234:	e1a00003 	mov	r0, r3
   11238:	eb000700 	bl	12e40 <xTaskRemoveFromEventList>
   1123c:	e1a03000 	mov	r3, r0
   11240:	e3530001 	cmp	r3, #1
   11244:	1a000000 	bne	1124c <xQueueGenericSend+0x80>
					{
						/* The unblocked task has a priority higher than
						our own so yield immediately.  Yes it is ok to do
						this from within the critical section - the kernel
						takes care of that. */
						portYIELD_WITHIN_API();
   11248:	ef000000 	svc	0x00000000
					}
				}

				taskEXIT_CRITICAL();
   1124c:	ebfffccc 	bl	10584 <vPortExitCritical>

				/* Return to the original privilege level before exiting the
				function. */
				return pdPASS;
   11250:	e3a03001 	mov	r3, #1
   11254:	ea000042 	b	11364 <xQueueGenericSend+0x198>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
   11258:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1125c:	e3530000 	cmp	r3, #0
   11260:	1a000002 	bne	11270 <xQueueGenericSend+0xa4>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
   11264:	ebfffcc6 	bl	10584 <vPortExitCritical>

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
   11268:	e3a03000 	mov	r3, #0
   1126c:	ea00003c 	b	11364 <xQueueGenericSend+0x198>
				}
				else if( xEntryTimeSet == pdFALSE )
   11270:	e51b3008 	ldr	r3, [fp, #-8]
   11274:	e3530000 	cmp	r3, #0
   11278:	1a000004 	bne	11290 <xQueueGenericSend+0xc4>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
   1127c:	e24b3010 	sub	r3, fp, #16
   11280:	e1a00003 	mov	r0, r3
   11284:	eb000733 	bl	12f58 <vTaskSetTimeOutState>
					xEntryTimeSet = pdTRUE;
   11288:	e3a03001 	mov	r3, #1
   1128c:	e50b3008 	str	r3, [fp, #-8]
				}
			}
		}
		taskEXIT_CRITICAL();
   11290:	ebfffcbb 	bl	10584 <vPortExitCritical>

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
   11294:	eb000513 	bl	126e8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
   11298:	ebfffca8 	bl	10540 <vPortEnterCritical>
   1129c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   112a0:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   112a4:	e3730001 	cmn	r3, #1
   112a8:	1a000002 	bne	112b8 <xQueueGenericSend+0xec>
   112ac:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   112b0:	e3a02000 	mov	r2, #0
   112b4:	e5832044 	str	r2, [r3, #68]	; 0x44
   112b8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   112bc:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   112c0:	e3730001 	cmn	r3, #1
   112c4:	1a000002 	bne	112d4 <xQueueGenericSend+0x108>
   112c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   112cc:	e3a02000 	mov	r2, #0
   112d0:	e5832048 	str	r2, [r3, #72]	; 0x48
   112d4:	ebfffcaa 	bl	10584 <vPortExitCritical>

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   112d8:	e24b2020 	sub	r2, fp, #32
   112dc:	e24b3010 	sub	r3, fp, #16
   112e0:	e1a01002 	mov	r1, r2
   112e4:	e1a00003 	mov	r0, r3
   112e8:	eb00072c 	bl	12fa0 <xTaskCheckForTimeOut>
   112ec:	e1a03000 	mov	r3, r0
   112f0:	e3530000 	cmp	r3, #0
   112f4:	1a000016 	bne	11354 <xQueueGenericSend+0x188>
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   112f8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   112fc:	eb000202 	bl	11b0c <prvIsQueueFull>
   11300:	e1a03000 	mov	r3, r0
   11304:	e3530000 	cmp	r3, #0
   11308:	0a00000d 	beq	11344 <xQueueGenericSend+0x178>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   1130c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11310:	e2833010 	add	r3, r3, #16
   11314:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11318:	e1a01002 	mov	r1, r2
   1131c:	e1a00003 	mov	r0, r3
   11320:	eb00069f 	bl	12da4 <vTaskPlaceOnEventList>
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible	that interrupts occurring now
				remove this task from the event	list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
   11324:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11328:	eb000195 	bl	11984 <prvUnlockQueue>
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
   1132c:	eb0004f9 	bl	12718 <xTaskResumeAll>
   11330:	e1a03000 	mov	r3, r0
   11334:	e3530000 	cmp	r3, #0
   11338:	1affffac 	bne	111f0 <xQueueGenericSend+0x24>
				{
					portYIELD_WITHIN_API();
   1133c:	ef000000 	svc	0x00000000
   11340:	eaffffaa 	b	111f0 <xQueueGenericSend+0x24>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
   11344:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11348:	eb00018d 	bl	11984 <prvUnlockQueue>
				( void ) xTaskResumeAll();
   1134c:	eb0004f1 	bl	12718 <xTaskResumeAll>
   11350:	eaffffa6 	b	111f0 <xQueueGenericSend+0x24>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
   11354:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11358:	eb000189 	bl	11984 <prvUnlockQueue>
			( void ) xTaskResumeAll();
   1135c:	eb0004ed 	bl	12718 <xTaskResumeAll>

			/* Return to the original privilege level before exiting the
			function. */
			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
   11360:	e3a03000 	mov	r3, #0
		}
	}
}
   11364:	e1a00003 	mov	r0, r3
   11368:	e24bd004 	sub	sp, fp, #4
   1136c:	e8bd8800 	pop	{fp, pc}

00011370 <xQueueGenericSendFromISR>:

#endif /* configUSE_ALTERNATIVE_API */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle pxQueue, const void * const pvItemToQueue, signed portBASE_TYPE *pxHigherPriorityTaskWoken, portBASE_TYPE xCopyPosition )
{
   11370:	e92d4800 	push	{fp, lr}
   11374:	e28db004 	add	fp, sp, #4
   11378:	e24dd018 	sub	sp, sp, #24
   1137c:	e50b0010 	str	r0, [fp, #-16]
   11380:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   11384:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   11388:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	/* Similar to xQueueGenericSend, except we don't block if there is no room
	in the queue.  Also we don't directly wake a task that was blocked on a
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
   1138c:	e3a03000 	mov	r3, #0
   11390:	e50b300c 	str	r3, [fp, #-12]
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
   11394:	e51b3010 	ldr	r3, [fp, #-16]
   11398:	e5932038 	ldr	r2, [r3, #56]	; 0x38
   1139c:	e51b3010 	ldr	r3, [fp, #-16]
   113a0:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   113a4:	e1520003 	cmp	r2, r3
   113a8:	2a000021 	bcs	11434 <xQueueGenericSendFromISR+0xc4>
		{
			traceQUEUE_SEND_FROM_ISR( pxQueue );

			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   113ac:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   113b0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   113b4:	e51b0010 	ldr	r0, [fp, #-16]
   113b8:	eb000102 	bl	117c8 <prvCopyDataToQueue>

			/* If the queue is locked we do not alter the event list.  This will
			be done when the queue is unlocked later. */
			if( pxQueue->xTxLock == queueUNLOCKED )
   113bc:	e51b3010 	ldr	r3, [fp, #-16]
   113c0:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   113c4:	e3730001 	cmn	r3, #1
   113c8:	1a000011 	bne	11414 <xQueueGenericSendFromISR+0xa4>
			{
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   113cc:	e51b3010 	ldr	r3, [fp, #-16]
   113d0:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   113d4:	e3530000 	cmp	r3, #0
   113d8:	0a000012 	beq	11428 <xQueueGenericSendFromISR+0xb8>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   113dc:	e51b3010 	ldr	r3, [fp, #-16]
   113e0:	e2833024 	add	r3, r3, #36	; 0x24
   113e4:	e1a00003 	mov	r0, r3
   113e8:	eb000694 	bl	12e40 <xTaskRemoveFromEventList>
   113ec:	e1a03000 	mov	r3, r0
   113f0:	e3530000 	cmp	r3, #0
   113f4:	0a00000b 	beq	11428 <xQueueGenericSendFromISR+0xb8>
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						if( pxHigherPriorityTaskWoken != NULL )
   113f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   113fc:	e3530000 	cmp	r3, #0
   11400:	0a000008 	beq	11428 <xQueueGenericSendFromISR+0xb8>
						{
							*pxHigherPriorityTaskWoken = pdTRUE;
   11404:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11408:	e3a02001 	mov	r2, #1
   1140c:	e5832000 	str	r2, [r3]
   11410:	ea000004 	b	11428 <xQueueGenericSendFromISR+0xb8>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
   11414:	e51b3010 	ldr	r3, [fp, #-16]
   11418:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   1141c:	e2832001 	add	r2, r3, #1
   11420:	e51b3010 	ldr	r3, [fp, #-16]
   11424:	e5832048 	str	r2, [r3, #72]	; 0x48
			}

			xReturn = pdPASS;
   11428:	e3a03001 	mov	r3, #1
   1142c:	e50b3008 	str	r3, [fp, #-8]
   11430:	ea000001 	b	1143c <xQueueGenericSendFromISR+0xcc>
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
   11434:	e3a03000 	mov	r3, #0
   11438:	e50b3008 	str	r3, [fp, #-8]
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
   1143c:	e51b3008 	ldr	r3, [fp, #-8]
}
   11440:	e1a00003 	mov	r0, r3
   11444:	e24bd004 	sub	sp, fp, #4
   11448:	e8bd8800 	pop	{fp, pc}

0001144c <xQueueGenericReceive>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericReceive( xQueueHandle pxQueue, void * const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeeking )
{
   1144c:	e92d4800 	push	{fp, lr}
   11450:	e28db004 	add	fp, sp, #4
   11454:	e24dd020 	sub	sp, sp, #32
   11458:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1145c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   11460:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   11464:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
signed portBASE_TYPE xEntryTimeSet = pdFALSE;
   11468:	e3a03000 	mov	r3, #0
   1146c:	e50b3008 	str	r3, [fp, #-8]
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */

	for( ;; )
	{
		taskENTER_CRITICAL();
   11470:	ebfffc32 	bl	10540 <vPortEnterCritical>
		{
			/* Is there data in the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
   11474:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11478:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   1147c:	e3530000 	cmp	r3, #0
   11480:	0a00002c 	beq	11538 <xQueueGenericReceive+0xec>
			{
				/* Remember our read position in case we are just peeking. */
				pcOriginalReadPosition = pxQueue->pcReadFrom;
   11484:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11488:	e593300c 	ldr	r3, [r3, #12]
   1148c:	e50b300c 	str	r3, [fp, #-12]

				prvCopyDataFromQueue( pxQueue, pvBuffer );
   11490:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   11494:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11498:	eb000115 	bl	118f4 <prvCopyDataFromQueue>

				if( xJustPeeking == pdFALSE )
   1149c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   114a0:	e3530000 	cmp	r3, #0
   114a4:	1a000011 	bne	114f0 <xQueueGenericReceive+0xa4>
				{
					traceQUEUE_RECEIVE( pxQueue );

					/* We are actually removing data. */
					--( pxQueue->uxMessagesWaiting );
   114a8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   114ac:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   114b0:	e2432001 	sub	r2, r3, #1
   114b4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b8:	e5832038 	str	r2, [r3, #56]	; 0x38
							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
						}
					}
					#endif

					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   114bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   114c0:	e5933010 	ldr	r3, [r3, #16]
   114c4:	e3530000 	cmp	r3, #0
   114c8:	0a000017 	beq	1152c <xQueueGenericReceive+0xe0>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
   114cc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   114d0:	e2833010 	add	r3, r3, #16
   114d4:	e1a00003 	mov	r0, r3
   114d8:	eb000658 	bl	12e40 <xTaskRemoveFromEventList>
   114dc:	e1a03000 	mov	r3, r0
   114e0:	e3530001 	cmp	r3, #1
   114e4:	1a000010 	bne	1152c <xQueueGenericReceive+0xe0>
						{
							portYIELD_WITHIN_API();
   114e8:	ef000000 	svc	0x00000000
   114ec:	ea00000e 	b	1152c <xQueueGenericReceive+0xe0>
				{
					traceQUEUE_PEEK( pxQueue );

					/* We are not removing the data, so reset our read
					pointer. */
					pxQueue->pcReadFrom = pcOriginalReadPosition;
   114f0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   114f4:	e51b200c 	ldr	r2, [fp, #-12]
   114f8:	e583200c 	str	r2, [r3, #12]

					/* The data is being left in the queue, so see if there are
					any other tasks waiting for the data. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   114fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11500:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   11504:	e3530000 	cmp	r3, #0
   11508:	0a000007 	beq	1152c <xQueueGenericReceive+0xe0>
					{
						/* Tasks that are removed from the event list will get added to
						the pending ready list as the scheduler is still suspended. */
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1150c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11510:	e2833024 	add	r3, r3, #36	; 0x24
   11514:	e1a00003 	mov	r0, r3
   11518:	eb000648 	bl	12e40 <xTaskRemoveFromEventList>
   1151c:	e1a03000 	mov	r3, r0
   11520:	e3530000 	cmp	r3, #0
   11524:	0a000000 	beq	1152c <xQueueGenericReceive+0xe0>
						{
							/* The task waiting has a higher priority than this task. */
							portYIELD_WITHIN_API();
   11528:	ef000000 	svc	0x00000000
						}
					}
				}

				taskEXIT_CRITICAL();
   1152c:	ebfffc14 	bl	10584 <vPortExitCritical>
				return pdPASS;
   11530:	e3a03001 	mov	r3, #1
   11534:	ea000042 	b	11644 <xQueueGenericReceive+0x1f8>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
   11538:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1153c:	e3530000 	cmp	r3, #0
   11540:	1a000002 	bne	11550 <xQueueGenericReceive+0x104>
				{
					/* The queue was empty and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
   11544:	ebfffc0e 	bl	10584 <vPortExitCritical>
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
   11548:	e3a03000 	mov	r3, #0
   1154c:	ea00003c 	b	11644 <xQueueGenericReceive+0x1f8>
				}
				else if( xEntryTimeSet == pdFALSE )
   11550:	e51b3008 	ldr	r3, [fp, #-8]
   11554:	e3530000 	cmp	r3, #0
   11558:	1a000004 	bne	11570 <xQueueGenericReceive+0x124>
				{
					/* The queue was empty and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
   1155c:	e24b3014 	sub	r3, fp, #20
   11560:	e1a00003 	mov	r0, r3
   11564:	eb00067b 	bl	12f58 <vTaskSetTimeOutState>
					xEntryTimeSet = pdTRUE;
   11568:	e3a03001 	mov	r3, #1
   1156c:	e50b3008 	str	r3, [fp, #-8]
				}
			}
		}
		taskEXIT_CRITICAL();
   11570:	ebfffc03 	bl	10584 <vPortExitCritical>

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
   11574:	eb00045b 	bl	126e8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
   11578:	ebfffbf0 	bl	10540 <vPortEnterCritical>
   1157c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11580:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   11584:	e3730001 	cmn	r3, #1
   11588:	1a000002 	bne	11598 <xQueueGenericReceive+0x14c>
   1158c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11590:	e3a02000 	mov	r2, #0
   11594:	e5832044 	str	r2, [r3, #68]	; 0x44
   11598:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1159c:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   115a0:	e3730001 	cmn	r3, #1
   115a4:	1a000002 	bne	115b4 <xQueueGenericReceive+0x168>
   115a8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   115ac:	e3a02000 	mov	r2, #0
   115b0:	e5832048 	str	r2, [r3, #72]	; 0x48
   115b4:	ebfffbf2 	bl	10584 <vPortExitCritical>

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   115b8:	e24b2020 	sub	r2, fp, #32
   115bc:	e24b3014 	sub	r3, fp, #20
   115c0:	e1a01002 	mov	r1, r2
   115c4:	e1a00003 	mov	r0, r3
   115c8:	eb000674 	bl	12fa0 <xTaskCheckForTimeOut>
   115cc:	e1a03000 	mov	r3, r0
   115d0:	e3530000 	cmp	r3, #0
   115d4:	1a000016 	bne	11634 <xQueueGenericReceive+0x1e8>
		{
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   115d8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   115dc:	eb000129 	bl	11a88 <prvIsQueueEmpty>
   115e0:	e1a03000 	mov	r3, r0
   115e4:	e3530000 	cmp	r3, #0
   115e8:	0a00000d 	beq	11624 <xQueueGenericReceive+0x1d8>
						portEXIT_CRITICAL();
					}
				}
				#endif

				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   115ec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   115f0:	e2833024 	add	r3, r3, #36	; 0x24
   115f4:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   115f8:	e1a01002 	mov	r1, r2
   115fc:	e1a00003 	mov	r0, r3
   11600:	eb0005e7 	bl	12da4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
   11604:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11608:	eb0000dd 	bl	11984 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
   1160c:	eb000441 	bl	12718 <xTaskResumeAll>
   11610:	e1a03000 	mov	r3, r0
   11614:	e3530000 	cmp	r3, #0
   11618:	1affff94 	bne	11470 <xQueueGenericReceive+0x24>
				{
					portYIELD_WITHIN_API();
   1161c:	ef000000 	svc	0x00000000
   11620:	eaffff92 	b	11470 <xQueueGenericReceive+0x24>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
   11624:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11628:	eb0000d5 	bl	11984 <prvUnlockQueue>
				( void ) xTaskResumeAll();
   1162c:	eb000439 	bl	12718 <xTaskResumeAll>
   11630:	eaffff8e 	b	11470 <xQueueGenericReceive+0x24>
			}
		}
		else
		{
			prvUnlockQueue( pxQueue );
   11634:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11638:	eb0000d1 	bl	11984 <prvUnlockQueue>
			( void ) xTaskResumeAll();
   1163c:	eb000435 	bl	12718 <xTaskResumeAll>
			traceQUEUE_RECEIVE_FAILED( pxQueue );
			return errQUEUE_EMPTY;
   11640:	e3a03000 	mov	r3, #0
		}
	}
}
   11644:	e1a00003 	mov	r0, r3
   11648:	e24bd004 	sub	sp, fp, #4
   1164c:	e8bd8800 	pop	{fp, pc}

00011650 <xQueueReceiveFromISR>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueReceiveFromISR( xQueueHandle pxQueue, void * const pvBuffer, signed portBASE_TYPE *pxHigherPriorityTaskWoken )
{
   11650:	e92d4800 	push	{fp, lr}
   11654:	e28db004 	add	fp, sp, #4
   11658:	e24dd018 	sub	sp, sp, #24
   1165c:	e50b0010 	str	r0, [fp, #-16]
   11660:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   11664:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
unsigned portBASE_TYPE uxSavedInterruptStatus;

	configASSERT( pxQueue );
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );

	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
   11668:	e3a03000 	mov	r3, #0
   1166c:	e50b300c 	str	r3, [fp, #-12]
	{
		/* We cannot block from an ISR, so check there is data available. */
		if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
   11670:	e51b3010 	ldr	r3, [fp, #-16]
   11674:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   11678:	e3530000 	cmp	r3, #0
   1167c:	0a000025 	beq	11718 <xQueueReceiveFromISR+0xc8>
		{
			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );

			prvCopyDataFromQueue( pxQueue, pvBuffer );
   11680:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   11684:	e51b0010 	ldr	r0, [fp, #-16]
   11688:	eb000099 	bl	118f4 <prvCopyDataFromQueue>
			--( pxQueue->uxMessagesWaiting );
   1168c:	e51b3010 	ldr	r3, [fp, #-16]
   11690:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   11694:	e2432001 	sub	r2, r3, #1
   11698:	e51b3010 	ldr	r3, [fp, #-16]
   1169c:	e5832038 	str	r2, [r3, #56]	; 0x38

			/* If the queue is locked we will not modify the event list.  Instead
			we update the lock count so the task that unlocks the queue will know
			that an ISR has removed data while the queue was locked. */
			if( pxQueue->xRxLock == queueUNLOCKED )
   116a0:	e51b3010 	ldr	r3, [fp, #-16]
   116a4:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   116a8:	e3730001 	cmn	r3, #1
   116ac:	1a000011 	bne	116f8 <xQueueReceiveFromISR+0xa8>
			{
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   116b0:	e51b3010 	ldr	r3, [fp, #-16]
   116b4:	e5933010 	ldr	r3, [r3, #16]
   116b8:	e3530000 	cmp	r3, #0
   116bc:	0a000012 	beq	1170c <xQueueReceiveFromISR+0xbc>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   116c0:	e51b3010 	ldr	r3, [fp, #-16]
   116c4:	e2833010 	add	r3, r3, #16
   116c8:	e1a00003 	mov	r0, r3
   116cc:	eb0005db 	bl	12e40 <xTaskRemoveFromEventList>
   116d0:	e1a03000 	mov	r3, r0
   116d4:	e3530000 	cmp	r3, #0
   116d8:	0a00000b 	beq	1170c <xQueueReceiveFromISR+0xbc>
					{
						/* The task waiting has a higher priority than us so
						force a context switch. */
						if( pxHigherPriorityTaskWoken != NULL )
   116dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   116e0:	e3530000 	cmp	r3, #0
   116e4:	0a000008 	beq	1170c <xQueueReceiveFromISR+0xbc>
						{
							*pxHigherPriorityTaskWoken = pdTRUE;
   116e8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   116ec:	e3a02001 	mov	r2, #1
   116f0:	e5832000 	str	r2, [r3]
   116f4:	ea000004 	b	1170c <xQueueReceiveFromISR+0xbc>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was removed while it was locked. */
				++( pxQueue->xRxLock );
   116f8:	e51b3010 	ldr	r3, [fp, #-16]
   116fc:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   11700:	e2832001 	add	r2, r3, #1
   11704:	e51b3010 	ldr	r3, [fp, #-16]
   11708:	e5832044 	str	r2, [r3, #68]	; 0x44
			}

			xReturn = pdPASS;
   1170c:	e3a03001 	mov	r3, #1
   11710:	e50b3008 	str	r3, [fp, #-8]
   11714:	ea000001 	b	11720 <xQueueReceiveFromISR+0xd0>
		}
		else
		{
			xReturn = pdFAIL;
   11718:	e3a03000 	mov	r3, #0
   1171c:	e50b3008 	str	r3, [fp, #-8]
			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
   11720:	e51b3008 	ldr	r3, [fp, #-8]
}
   11724:	e1a00003 	mov	r0, r3
   11728:	e24bd004 	sub	sp, fp, #4
   1172c:	e8bd8800 	pop	{fp, pc}

00011730 <uxQueueMessagesWaiting>:
/*-----------------------------------------------------------*/

unsigned portBASE_TYPE uxQueueMessagesWaiting( const xQueueHandle pxQueue )
{
   11730:	e92d4800 	push	{fp, lr}
   11734:	e28db004 	add	fp, sp, #4
   11738:	e24dd010 	sub	sp, sp, #16
   1173c:	e50b0010 	str	r0, [fp, #-16]
unsigned portBASE_TYPE uxReturn;

	configASSERT( pxQueue );

	taskENTER_CRITICAL();
   11740:	ebfffb7e 	bl	10540 <vPortEnterCritical>
		uxReturn = pxQueue->uxMessagesWaiting;
   11744:	e51b3010 	ldr	r3, [fp, #-16]
   11748:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   1174c:	e50b3008 	str	r3, [fp, #-8]
	taskEXIT_CRITICAL();
   11750:	ebfffb8b 	bl	10584 <vPortExitCritical>

	return uxReturn;
   11754:	e51b3008 	ldr	r3, [fp, #-8]
}
   11758:	e1a00003 	mov	r0, r3
   1175c:	e24bd004 	sub	sp, fp, #4
   11760:	e8bd8800 	pop	{fp, pc}

00011764 <uxQueueMessagesWaitingFromISR>:
/*-----------------------------------------------------------*/

unsigned portBASE_TYPE uxQueueMessagesWaitingFromISR( const xQueueHandle pxQueue )
{
   11764:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   11768:	e28db000 	add	fp, sp, #0
   1176c:	e24dd014 	sub	sp, sp, #20
   11770:	e50b0010 	str	r0, [fp, #-16]
unsigned portBASE_TYPE uxReturn;

	configASSERT( pxQueue );

	uxReturn = pxQueue->uxMessagesWaiting;
   11774:	e51b3010 	ldr	r3, [fp, #-16]
   11778:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   1177c:	e50b3008 	str	r3, [fp, #-8]

	return uxReturn;
   11780:	e51b3008 	ldr	r3, [fp, #-8]
}
   11784:	e1a00003 	mov	r0, r3
   11788:	e28bd000 	add	sp, fp, #0
   1178c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   11790:	e12fff1e 	bx	lr

00011794 <vQueueDelete>:
/*-----------------------------------------------------------*/

void vQueueDelete( xQueueHandle pxQueue )
{
   11794:	e92d4800 	push	{fp, lr}
   11798:	e28db004 	add	fp, sp, #4
   1179c:	e24dd008 	sub	sp, sp, #8
   117a0:	e50b0008 	str	r0, [fp, #-8]
	configASSERT( pxQueue );

	traceQUEUE_DELETE( pxQueue );
	vQueueUnregisterQueue( pxQueue );
	vPortFree( pxQueue->pcHead );
   117a4:	e51b3008 	ldr	r3, [fp, #-8]
   117a8:	e5933000 	ldr	r3, [r3]
   117ac:	e1a00003 	mov	r0, r3
   117b0:	eb000daa 	bl	14e60 <vPortFree>
	vPortFree( pxQueue );
   117b4:	e51b0008 	ldr	r0, [fp, #-8]
   117b8:	eb000da8 	bl	14e60 <vPortFree>
}
   117bc:	e320f000 	nop	{0}
   117c0:	e24bd004 	sub	sp, fp, #4
   117c4:	e8bd8800 	pop	{fp, pc}

000117c8 <prvCopyDataToQueue>:

#endif
/*-----------------------------------------------------------*/

static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition )
{
   117c8:	e92d4800 	push	{fp, lr}
   117cc:	e28db004 	add	fp, sp, #4
   117d0:	e24dd010 	sub	sp, sp, #16
   117d4:	e50b0008 	str	r0, [fp, #-8]
   117d8:	e50b100c 	str	r1, [fp, #-12]
   117dc:	e50b2010 	str	r2, [fp, #-16]
	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
   117e0:	e51b3008 	ldr	r3, [fp, #-8]
   117e4:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   117e8:	e3530000 	cmp	r3, #0
   117ec:	0a000038 	beq	118d4 <prvCopyDataToQueue+0x10c>
				pxQueue->pxMutexHolder = NULL;
			}
		}
		#endif
	}
	else if( xPosition == queueSEND_TO_BACK )
   117f0:	e51b3010 	ldr	r3, [fp, #-16]
   117f4:	e3530000 	cmp	r3, #0
   117f8:	1a000018 	bne	11860 <prvCopyDataToQueue+0x98>
	{
		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
   117fc:	e51b3008 	ldr	r3, [fp, #-8]
   11800:	e5930008 	ldr	r0, [r3, #8]
   11804:	e51b3008 	ldr	r3, [fp, #-8]
   11808:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   1180c:	e1a02003 	mov	r2, r3
   11810:	e51b100c 	ldr	r1, [fp, #-12]
   11814:	eb0068e2 	bl	2bba4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   11818:	e51b3008 	ldr	r3, [fp, #-8]
   1181c:	e5932008 	ldr	r2, [r3, #8]
   11820:	e51b3008 	ldr	r3, [fp, #-8]
   11824:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   11828:	e0822003 	add	r2, r2, r3
   1182c:	e51b3008 	ldr	r3, [fp, #-8]
   11830:	e5832008 	str	r2, [r3, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
   11834:	e51b3008 	ldr	r3, [fp, #-8]
   11838:	e5932008 	ldr	r2, [r3, #8]
   1183c:	e51b3008 	ldr	r3, [fp, #-8]
   11840:	e5933004 	ldr	r3, [r3, #4]
   11844:	e1520003 	cmp	r2, r3
   11848:	3a000021 	bcc	118d4 <prvCopyDataToQueue+0x10c>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
   1184c:	e51b3008 	ldr	r3, [fp, #-8]
   11850:	e5932000 	ldr	r2, [r3]
   11854:	e51b3008 	ldr	r3, [fp, #-8]
   11858:	e5832008 	str	r2, [r3, #8]
   1185c:	ea00001c 	b	118d4 <prvCopyDataToQueue+0x10c>
		}
	}
	else
	{
		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( unsigned ) pxQueue->uxItemSize );
   11860:	e51b3008 	ldr	r3, [fp, #-8]
   11864:	e593000c 	ldr	r0, [r3, #12]
   11868:	e51b3008 	ldr	r3, [fp, #-8]
   1186c:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   11870:	e1a02003 	mov	r2, r3
   11874:	e51b100c 	ldr	r1, [fp, #-12]
   11878:	eb0068c9 	bl	2bba4 <memcpy>
		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
   1187c:	e51b3008 	ldr	r3, [fp, #-8]
   11880:	e593200c 	ldr	r2, [r3, #12]
   11884:	e51b3008 	ldr	r3, [fp, #-8]
   11888:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   1188c:	e2633000 	rsb	r3, r3, #0
   11890:	e0822003 	add	r2, r2, r3
   11894:	e51b3008 	ldr	r3, [fp, #-8]
   11898:	e583200c 	str	r2, [r3, #12]
		if( pxQueue->pcReadFrom < pxQueue->pcHead )
   1189c:	e51b3008 	ldr	r3, [fp, #-8]
   118a0:	e593200c 	ldr	r2, [r3, #12]
   118a4:	e51b3008 	ldr	r3, [fp, #-8]
   118a8:	e5933000 	ldr	r3, [r3]
   118ac:	e1520003 	cmp	r2, r3
   118b0:	2a000007 	bcs	118d4 <prvCopyDataToQueue+0x10c>
		{
			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   118b4:	e51b3008 	ldr	r3, [fp, #-8]
   118b8:	e5932004 	ldr	r2, [r3, #4]
   118bc:	e51b3008 	ldr	r3, [fp, #-8]
   118c0:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   118c4:	e2633000 	rsb	r3, r3, #0
   118c8:	e0822003 	add	r2, r2, r3
   118cc:	e51b3008 	ldr	r3, [fp, #-8]
   118d0:	e583200c 	str	r2, [r3, #12]
		}
	}

	++( pxQueue->uxMessagesWaiting );
   118d4:	e51b3008 	ldr	r3, [fp, #-8]
   118d8:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   118dc:	e2832001 	add	r2, r3, #1
   118e0:	e51b3008 	ldr	r3, [fp, #-8]
   118e4:	e5832038 	str	r2, [r3, #56]	; 0x38
}
   118e8:	e320f000 	nop	{0}
   118ec:	e24bd004 	sub	sp, fp, #4
   118f0:	e8bd8800 	pop	{fp, pc}

000118f4 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer )
{
   118f4:	e92d4800 	push	{fp, lr}
   118f8:	e28db004 	add	fp, sp, #4
   118fc:	e24dd008 	sub	sp, sp, #8
   11900:	e50b0008 	str	r0, [fp, #-8]
   11904:	e50b100c 	str	r1, [fp, #-12]
	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
   11908:	e51b3008 	ldr	r3, [fp, #-8]
   1190c:	e5933000 	ldr	r3, [r3]
   11910:	e3530000 	cmp	r3, #0
   11914:	0a000017 	beq	11978 <prvCopyDataFromQueue+0x84>
	{
		pxQueue->pcReadFrom += pxQueue->uxItemSize;
   11918:	e51b3008 	ldr	r3, [fp, #-8]
   1191c:	e593200c 	ldr	r2, [r3, #12]
   11920:	e51b3008 	ldr	r3, [fp, #-8]
   11924:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   11928:	e0822003 	add	r2, r2, r3
   1192c:	e51b3008 	ldr	r3, [fp, #-8]
   11930:	e583200c 	str	r2, [r3, #12]
		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
   11934:	e51b3008 	ldr	r3, [fp, #-8]
   11938:	e593200c 	ldr	r2, [r3, #12]
   1193c:	e51b3008 	ldr	r3, [fp, #-8]
   11940:	e5933004 	ldr	r3, [r3, #4]
   11944:	e1520003 	cmp	r2, r3
   11948:	3a000003 	bcc	1195c <prvCopyDataFromQueue+0x68>
		{
			pxQueue->pcReadFrom = pxQueue->pcHead;
   1194c:	e51b3008 	ldr	r3, [fp, #-8]
   11950:	e5932000 	ldr	r2, [r3]
   11954:	e51b3008 	ldr	r3, [fp, #-8]
   11958:	e583200c 	str	r2, [r3, #12]
		}
		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( unsigned ) pxQueue->uxItemSize );
   1195c:	e51b3008 	ldr	r3, [fp, #-8]
   11960:	e593100c 	ldr	r1, [r3, #12]
   11964:	e51b3008 	ldr	r3, [fp, #-8]
   11968:	e5933040 	ldr	r3, [r3, #64]	; 0x40
   1196c:	e1a02003 	mov	r2, r3
   11970:	e51b000c 	ldr	r0, [fp, #-12]
   11974:	eb00688a 	bl	2bba4 <memcpy>
	}
}
   11978:	e320f000 	nop	{0}
   1197c:	e24bd004 	sub	sp, fp, #4
   11980:	e8bd8800 	pop	{fp, pc}

00011984 <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( xQueueHandle pxQueue )
{
   11984:	e92d4800 	push	{fp, lr}
   11988:	e28db004 	add	fp, sp, #4
   1198c:	e24dd008 	sub	sp, sp, #8
   11990:	e50b0008 	str	r0, [fp, #-8]

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
   11994:	ebfffae9 	bl	10540 <vPortEnterCritical>
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
   11998:	ea000010 	b	119e0 <prvUnlockQueue+0x5c>
		{
			/* Data was posted while the queue was locked.  Are any tasks
			blocked waiting for data to become available? */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   1199c:	e51b3008 	ldr	r3, [fp, #-8]
   119a0:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   119a4:	e3530000 	cmp	r3, #0
   119a8:	0a000011 	beq	119f4 <prvUnlockQueue+0x70>
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   119ac:	e51b3008 	ldr	r3, [fp, #-8]
   119b0:	e2833024 	add	r3, r3, #36	; 0x24
   119b4:	e1a00003 	mov	r0, r3
   119b8:	eb000520 	bl	12e40 <xTaskRemoveFromEventList>
   119bc:	e1a03000 	mov	r3, r0
   119c0:	e3530000 	cmp	r3, #0
   119c4:	0a000000 	beq	119cc <prvUnlockQueue+0x48>
				{
					/* The task waiting has a higher priority so record that a
					context	switch is required. */
					vTaskMissedYield();
   119c8:	eb0005b1 	bl	13094 <vTaskMissedYield>
				}

				--( pxQueue->xTxLock );
   119cc:	e51b3008 	ldr	r3, [fp, #-8]
   119d0:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   119d4:	e2432001 	sub	r2, r3, #1
   119d8:	e51b3008 	ldr	r3, [fp, #-8]
   119dc:	e5832048 	str	r2, [r3, #72]	; 0x48
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
   119e0:	e51b3008 	ldr	r3, [fp, #-8]
   119e4:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   119e8:	e3530000 	cmp	r3, #0
   119ec:	caffffea 	bgt	1199c <prvUnlockQueue+0x18>
   119f0:	ea000000 	b	119f8 <prvUnlockQueue+0x74>
			}
			else
			{
				break;
   119f4:	e320f000 	nop	{0}
			}
		}

		pxQueue->xTxLock = queueUNLOCKED;
   119f8:	e51b3008 	ldr	r3, [fp, #-8]
   119fc:	e3e02000 	mvn	r2, #0
   11a00:	e5832048 	str	r2, [r3, #72]	; 0x48
	}
	taskEXIT_CRITICAL();
   11a04:	ebfffade 	bl	10584 <vPortExitCritical>

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
   11a08:	ebfffacc 	bl	10540 <vPortEnterCritical>
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
   11a0c:	ea000010 	b	11a54 <prvUnlockQueue+0xd0>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   11a10:	e51b3008 	ldr	r3, [fp, #-8]
   11a14:	e5933010 	ldr	r3, [r3, #16]
   11a18:	e3530000 	cmp	r3, #0
   11a1c:	0a000011 	beq	11a68 <prvUnlockQueue+0xe4>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   11a20:	e51b3008 	ldr	r3, [fp, #-8]
   11a24:	e2833010 	add	r3, r3, #16
   11a28:	e1a00003 	mov	r0, r3
   11a2c:	eb000503 	bl	12e40 <xTaskRemoveFromEventList>
   11a30:	e1a03000 	mov	r3, r0
   11a34:	e3530000 	cmp	r3, #0
   11a38:	0a000000 	beq	11a40 <prvUnlockQueue+0xbc>
				{
					vTaskMissedYield();
   11a3c:	eb000594 	bl	13094 <vTaskMissedYield>
				}

				--( pxQueue->xRxLock );
   11a40:	e51b3008 	ldr	r3, [fp, #-8]
   11a44:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   11a48:	e2432001 	sub	r2, r3, #1
   11a4c:	e51b3008 	ldr	r3, [fp, #-8]
   11a50:	e5832044 	str	r2, [r3, #68]	; 0x44
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
   11a54:	e51b3008 	ldr	r3, [fp, #-8]
   11a58:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   11a5c:	e3530000 	cmp	r3, #0
   11a60:	caffffea 	bgt	11a10 <prvUnlockQueue+0x8c>
   11a64:	ea000000 	b	11a6c <prvUnlockQueue+0xe8>
			}
			else
			{
				break;
   11a68:	e320f000 	nop	{0}
			}
		}

		pxQueue->xRxLock = queueUNLOCKED;
   11a6c:	e51b3008 	ldr	r3, [fp, #-8]
   11a70:	e3e02000 	mvn	r2, #0
   11a74:	e5832044 	str	r2, [r3, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
   11a78:	ebfffac1 	bl	10584 <vPortExitCritical>
}
   11a7c:	e320f000 	nop	{0}
   11a80:	e24bd004 	sub	sp, fp, #4
   11a84:	e8bd8800 	pop	{fp, pc}

00011a88 <prvIsQueueEmpty>:
/*-----------------------------------------------------------*/

static signed portBASE_TYPE prvIsQueueEmpty( const xQueueHandle pxQueue )
{
   11a88:	e92d4800 	push	{fp, lr}
   11a8c:	e28db004 	add	fp, sp, #4
   11a90:	e24dd010 	sub	sp, sp, #16
   11a94:	e50b0010 	str	r0, [fp, #-16]
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
   11a98:	ebfffaa8 	bl	10540 <vPortEnterCritical>
		xReturn = ( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 );
   11a9c:	e51b3010 	ldr	r3, [fp, #-16]
   11aa0:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   11aa4:	e3530000 	cmp	r3, #0
   11aa8:	03a03001 	moveq	r3, #1
   11aac:	13a03000 	movne	r3, #0
   11ab0:	e6ef3073 	uxtb	r3, r3
   11ab4:	e50b3008 	str	r3, [fp, #-8]
	taskEXIT_CRITICAL();
   11ab8:	ebfffab1 	bl	10584 <vPortExitCritical>

	return xReturn;
   11abc:	e51b3008 	ldr	r3, [fp, #-8]
}
   11ac0:	e1a00003 	mov	r0, r3
   11ac4:	e24bd004 	sub	sp, fp, #4
   11ac8:	e8bd8800 	pop	{fp, pc}

00011acc <xQueueIsQueueEmptyFromISR>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueIsQueueEmptyFromISR( const xQueueHandle pxQueue )
{
   11acc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   11ad0:	e28db000 	add	fp, sp, #0
   11ad4:	e24dd014 	sub	sp, sp, #20
   11ad8:	e50b0010 	str	r0, [fp, #-16]
signed portBASE_TYPE xReturn;

	configASSERT( pxQueue );
	xReturn = ( pxQueue->uxMessagesWaiting == ( unsigned portBASE_TYPE ) 0 );
   11adc:	e51b3010 	ldr	r3, [fp, #-16]
   11ae0:	e5933038 	ldr	r3, [r3, #56]	; 0x38
   11ae4:	e3530000 	cmp	r3, #0
   11ae8:	03a03001 	moveq	r3, #1
   11aec:	13a03000 	movne	r3, #0
   11af0:	e6ef3073 	uxtb	r3, r3
   11af4:	e50b3008 	str	r3, [fp, #-8]

	return xReturn;
   11af8:	e51b3008 	ldr	r3, [fp, #-8]
}
   11afc:	e1a00003 	mov	r0, r3
   11b00:	e28bd000 	add	sp, fp, #0
   11b04:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   11b08:	e12fff1e 	bx	lr

00011b0c <prvIsQueueFull>:
/*-----------------------------------------------------------*/

static signed portBASE_TYPE prvIsQueueFull( const xQueueHandle pxQueue )
{
   11b0c:	e92d4800 	push	{fp, lr}
   11b10:	e28db004 	add	fp, sp, #4
   11b14:	e24dd010 	sub	sp, sp, #16
   11b18:	e50b0010 	str	r0, [fp, #-16]
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
   11b1c:	ebfffa87 	bl	10540 <vPortEnterCritical>
		xReturn = ( pxQueue->uxMessagesWaiting == pxQueue->uxLength );
   11b20:	e51b3010 	ldr	r3, [fp, #-16]
   11b24:	e5932038 	ldr	r2, [r3, #56]	; 0x38
   11b28:	e51b3010 	ldr	r3, [fp, #-16]
   11b2c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   11b30:	e1520003 	cmp	r2, r3
   11b34:	03a03001 	moveq	r3, #1
   11b38:	13a03000 	movne	r3, #0
   11b3c:	e6ef3073 	uxtb	r3, r3
   11b40:	e50b3008 	str	r3, [fp, #-8]
	taskEXIT_CRITICAL();
   11b44:	ebfffa8e 	bl	10584 <vPortExitCritical>

	return xReturn;
   11b48:	e51b3008 	ldr	r3, [fp, #-8]
}
   11b4c:	e1a00003 	mov	r0, r3
   11b50:	e24bd004 	sub	sp, fp, #4
   11b54:	e8bd8800 	pop	{fp, pc}

00011b58 <xQueueIsQueueFullFromISR>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueIsQueueFullFromISR( const xQueueHandle pxQueue )
{
   11b58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   11b5c:	e28db000 	add	fp, sp, #0
   11b60:	e24dd014 	sub	sp, sp, #20
   11b64:	e50b0010 	str	r0, [fp, #-16]
signed portBASE_TYPE xReturn;

	configASSERT( pxQueue );
	xReturn = ( pxQueue->uxMessagesWaiting == pxQueue->uxLength );
   11b68:	e51b3010 	ldr	r3, [fp, #-16]
   11b6c:	e5932038 	ldr	r2, [r3, #56]	; 0x38
   11b70:	e51b3010 	ldr	r3, [fp, #-16]
   11b74:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
   11b78:	e1520003 	cmp	r2, r3
   11b7c:	03a03001 	moveq	r3, #1
   11b80:	13a03000 	movne	r3, #0
   11b84:	e6ef3073 	uxtb	r3, r3
   11b88:	e50b3008 	str	r3, [fp, #-8]

	return xReturn;
   11b8c:	e51b3008 	ldr	r3, [fp, #-8]
}
   11b90:	e1a00003 	mov	r0, r3
   11b94:	e28bd000 	add	sp, fp, #0
   11b98:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   11b9c:	e12fff1e 	bx	lr

00011ba0 <xTaskGenericCreate>:
/*-----------------------------------------------------------
 * TASK CREATION API documented in task.h
 *----------------------------------------------------------*/

signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, unsigned short usStackDepth, void *pvParameters, unsigned portBASE_TYPE uxPriority, xTaskHandle *pxCreatedTask, portSTACK_TYPE *puxStackBuffer, const xMemoryRegion * const xRegions )
{
   11ba0:	e92d4800 	push	{fp, lr}
   11ba4:	e28db004 	add	fp, sp, #4
   11ba8:	e24dd028 	sub	sp, sp, #40	; 0x28
   11bac:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   11bb0:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   11bb4:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
   11bb8:	e1a03002 	mov	r3, r2
   11bbc:	e14b31be 	strh	r3, [fp, #-30]	; 0xffffffe2
	configASSERT( pxTaskCode );
	configASSERT( ( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES ) );

	/* Allocate the memory required by the TCB and stack for the new task,
	checking that the allocation was successful. */
	pxNewTCB = prvAllocateTCBAndStack( usStackDepth, puxStackBuffer );
   11bc0:	e15b31be 	ldrh	r3, [fp, #-30]	; 0xffffffe2
   11bc4:	e59b100c 	ldr	r1, [fp, #12]
   11bc8:	e1a00003 	mov	r0, r3
   11bcc:	eb000603 	bl	133e0 <prvAllocateTCBAndStack>
   11bd0:	e50b000c 	str	r0, [fp, #-12]

	if( pxNewTCB != NULL )
   11bd4:	e51b300c 	ldr	r3, [fp, #-12]
   11bd8:	e3530000 	cmp	r3, #0
   11bdc:	0a000067 	beq	11d80 <xTaskGenericCreate+0x1e0>
		stack grows from high memory to low (as per the 80x86) or visa versa.
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
   11be0:	e51b300c 	ldr	r3, [fp, #-12]
   11be4:	e5932030 	ldr	r2, [r3, #48]	; 0x30
   11be8:	e15b31be 	ldrh	r3, [fp, #-30]	; 0xffffffe2
   11bec:	e2433107 	sub	r3, r3, #-1073741823	; 0xc0000001
   11bf0:	e1a03103 	lsl	r3, r3, #2
   11bf4:	e0823003 	add	r3, r2, r3
   11bf8:	e50b3010 	str	r3, [fp, #-16]
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK  ) );
   11bfc:	e51b3010 	ldr	r3, [fp, #-16]
   11c00:	e3c33007 	bic	r3, r3, #7
   11c04:	e50b3010 	str	r3, [fp, #-16]
			pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
		}
		#endif

		/* Setup the newly allocated TCB with the initial state of the task. */
		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority, xRegions, usStackDepth );
   11c08:	e15b31be 	ldrh	r3, [fp, #-30]	; 0xffffffe2
   11c0c:	e58d3000 	str	r3, [sp]
   11c10:	e59b3010 	ldr	r3, [fp, #16]
   11c14:	e59b2004 	ldr	r2, [fp, #4]
   11c18:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c1c:	e51b000c 	ldr	r0, [fp, #-12]
   11c20:	eb000531 	bl	130ec <prvInitialiseTCBVariables>
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   11c24:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c28:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   11c2c:	e51b0010 	ldr	r0, [fp, #-16]
   11c30:	ebfff8f2 	bl	10000 <pxPortInitialiseStack>
   11c34:	e1a02000 	mov	r2, r0
   11c38:	e51b300c 	ldr	r3, [fp, #-12]
   11c3c:	e5832000 	str	r2, [r3]
		#endif

		/* Check the alignment of the initialised stack. */
		portALIGNMENT_ASSERT_pxCurrentTCB( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );

		if( ( void * ) pxCreatedTask != NULL )
   11c40:	e59b3008 	ldr	r3, [fp, #8]
   11c44:	e3530000 	cmp	r3, #0
   11c48:	0a000002 	beq	11c58 <xTaskGenericCreate+0xb8>
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
   11c4c:	e59b3008 	ldr	r3, [fp, #8]
   11c50:	e51b200c 	ldr	r2, [fp, #-12]
   11c54:	e5832000 	str	r2, [r3]
		}

		/* We are going to manipulate the task queues to add this task to a
		ready list, so must make sure no interrupts occur. */
		taskENTER_CRITICAL();
   11c58:	ebfffa38 	bl	10540 <vPortEnterCritical>
		{
			uxCurrentNumberOfTasks++;
   11c5c:	e59f316c 	ldr	r3, [pc, #364]	; 11dd0 <xTaskGenericCreate+0x230>
   11c60:	e5933000 	ldr	r3, [r3]
   11c64:	e2833001 	add	r3, r3, #1
   11c68:	e59f2160 	ldr	r2, [pc, #352]	; 11dd0 <xTaskGenericCreate+0x230>
   11c6c:	e5823000 	str	r3, [r2]
			if( pxCurrentTCB == NULL )
   11c70:	e59f315c 	ldr	r3, [pc, #348]	; 11dd4 <xTaskGenericCreate+0x234>
   11c74:	e5933000 	ldr	r3, [r3]
   11c78:	e3530000 	cmp	r3, #0
   11c7c:	1a000008 	bne	11ca4 <xTaskGenericCreate+0x104>
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
   11c80:	e59f214c 	ldr	r2, [pc, #332]	; 11dd4 <xTaskGenericCreate+0x234>
   11c84:	e51b300c 	ldr	r3, [fp, #-12]
   11c88:	e5823000 	str	r3, [r2]

				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
   11c8c:	e59f313c 	ldr	r3, [pc, #316]	; 11dd0 <xTaskGenericCreate+0x230>
   11c90:	e5933000 	ldr	r3, [r3]
   11c94:	e3530001 	cmp	r3, #1
   11c98:	1a00000e 	bne	11cd8 <xTaskGenericCreate+0x138>
				{
					/* This is the first task to be created so do the preliminary
					initialisation required.  We will not recover if this call
					fails, but we will report the failure. */
					prvInitialiseTaskLists();
   11c9c:	eb000542 	bl	131ac <prvInitialiseTaskLists>
   11ca0:	ea00000c 	b	11cd8 <xTaskGenericCreate+0x138>
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
   11ca4:	e59f312c 	ldr	r3, [pc, #300]	; 11dd8 <xTaskGenericCreate+0x238>
   11ca8:	e5933000 	ldr	r3, [r3]
   11cac:	e3530000 	cmp	r3, #0
   11cb0:	1a000008 	bne	11cd8 <xTaskGenericCreate+0x138>
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
   11cb4:	e59f3118 	ldr	r3, [pc, #280]	; 11dd4 <xTaskGenericCreate+0x234>
   11cb8:	e5933000 	ldr	r3, [r3]
   11cbc:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   11cc0:	e59b2004 	ldr	r2, [fp, #4]
   11cc4:	e1520003 	cmp	r2, r3
   11cc8:	3a000002 	bcc	11cd8 <xTaskGenericCreate+0x138>
					{
						pxCurrentTCB = pxNewTCB;
   11ccc:	e59f2100 	ldr	r2, [pc, #256]	; 11dd4 <xTaskGenericCreate+0x234>
   11cd0:	e51b300c 	ldr	r3, [fp, #-12]
   11cd4:	e5823000 	str	r3, [r2]
				}
			}

			/* Remember the top priority to make context switching faster.  Use
			the priority in pxNewTCB as this has been capped to a valid value. */
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
   11cd8:	e51b300c 	ldr	r3, [fp, #-12]
   11cdc:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   11ce0:	e59f30f4 	ldr	r3, [pc, #244]	; 11ddc <xTaskGenericCreate+0x23c>
   11ce4:	e5933000 	ldr	r3, [r3]
   11ce8:	e1520003 	cmp	r2, r3
   11cec:	9a000003 	bls	11d00 <xTaskGenericCreate+0x160>
			{
				uxTopUsedPriority = pxNewTCB->uxPriority;
   11cf0:	e51b300c 	ldr	r3, [fp, #-12]
   11cf4:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   11cf8:	e59f20dc 	ldr	r2, [pc, #220]	; 11ddc <xTaskGenericCreate+0x23c>
   11cfc:	e5823000 	str	r3, [r2]
			{
				/* Add a counter into the TCB for tracing only. */
				pxNewTCB->uxTCBNumber = uxTaskNumber;
			}
			#endif
			uxTaskNumber++;
   11d00:	e59f30d8 	ldr	r3, [pc, #216]	; 11de0 <xTaskGenericCreate+0x240>
   11d04:	e5933000 	ldr	r3, [r3]
   11d08:	e2833001 	add	r3, r3, #1
   11d0c:	e59f20cc 	ldr	r2, [pc, #204]	; 11de0 <xTaskGenericCreate+0x240>
   11d10:	e5823000 	str	r3, [r2]

			prvAddTaskToReadyQueue( pxNewTCB );
   11d14:	e51b300c 	ldr	r3, [fp, #-12]
   11d18:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   11d1c:	e59f30c0 	ldr	r3, [pc, #192]	; 11de4 <xTaskGenericCreate+0x244>
   11d20:	e5933000 	ldr	r3, [r3]
   11d24:	e1520003 	cmp	r2, r3
   11d28:	9a000003 	bls	11d3c <xTaskGenericCreate+0x19c>
   11d2c:	e51b300c 	ldr	r3, [fp, #-12]
   11d30:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   11d34:	e59f20a8 	ldr	r2, [pc, #168]	; 11de4 <xTaskGenericCreate+0x244>
   11d38:	e5823000 	str	r3, [r2]
   11d3c:	e51b300c 	ldr	r3, [fp, #-12]
   11d40:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   11d44:	e1a03002 	mov	r3, r2
   11d48:	e1a03103 	lsl	r3, r3, #2
   11d4c:	e0833002 	add	r3, r3, r2
   11d50:	e1a03103 	lsl	r3, r3, #2
   11d54:	e59f208c 	ldr	r2, [pc, #140]	; 11de8 <xTaskGenericCreate+0x248>
   11d58:	e0832002 	add	r2, r3, r2
   11d5c:	e51b300c 	ldr	r3, [fp, #-12]
   11d60:	e2833004 	add	r3, r3, #4
   11d64:	e1a01003 	mov	r1, r3
   11d68:	e1a00002 	mov	r0, r2
   11d6c:	ebfffc1d 	bl	10de8 <vListInsertEnd>

			xReturn = pdPASS;
   11d70:	e3a03001 	mov	r3, #1
   11d74:	e50b3008 	str	r3, [fp, #-8]
			portSETUP_TCB( pxNewTCB );
			traceTASK_CREATE( pxNewTCB );
		}
		taskEXIT_CRITICAL();
   11d78:	ebfffa01 	bl	10584 <vPortExitCritical>
   11d7c:	ea000001 	b	11d88 <xTaskGenericCreate+0x1e8>
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   11d80:	e3e03000 	mvn	r3, #0
   11d84:	e50b3008 	str	r3, [fp, #-8]
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
   11d88:	e51b3008 	ldr	r3, [fp, #-8]
   11d8c:	e3530001 	cmp	r3, #1
   11d90:	1a00000a 	bne	11dc0 <xTaskGenericCreate+0x220>
	{
		if( xSchedulerRunning != pdFALSE )
   11d94:	e59f303c 	ldr	r3, [pc, #60]	; 11dd8 <xTaskGenericCreate+0x238>
   11d98:	e5933000 	ldr	r3, [r3]
   11d9c:	e3530000 	cmp	r3, #0
   11da0:	0a000006 	beq	11dc0 <xTaskGenericCreate+0x220>
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
   11da4:	e59f3028 	ldr	r3, [pc, #40]	; 11dd4 <xTaskGenericCreate+0x234>
   11da8:	e5933000 	ldr	r3, [r3]
   11dac:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   11db0:	e59b2004 	ldr	r2, [fp, #4]
   11db4:	e1520003 	cmp	r2, r3
   11db8:	9a000000 	bls	11dc0 <xTaskGenericCreate+0x220>
			{
				portYIELD_WITHIN_API();
   11dbc:	ef000000 	svc	0x00000000
			}
		}
	}

	return xReturn;
   11dc0:	e51b3008 	ldr	r3, [fp, #-8]
}
   11dc4:	e1a00003 	mov	r0, r3
   11dc8:	e24bd004 	sub	sp, fp, #4
   11dcc:	e8bd8800 	pop	{fp, pc}
   11dd0:	0002bebc 			; <UNDEFINED> instruction: 0x0002bebc
   11dd4:	0002bde4 	andeq	fp, r2, r4, ror #27
   11dd8:	0002becc 	andeq	fp, r2, ip, asr #29
   11ddc:	0002bec4 	andeq	fp, r2, r4, asr #29
   11de0:	0002bee0 	andeq	fp, r2, r0, ror #29
   11de4:	0002bec8 	andeq	fp, r2, r8, asr #29
   11de8:	0002bde8 	andeq	fp, r2, r8, ror #27

00011dec <vTaskDelete>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	void vTaskDelete( xTaskHandle pxTaskToDelete )
	{
   11dec:	e92d4800 	push	{fp, lr}
   11df0:	e28db004 	add	fp, sp, #4
   11df4:	e24dd010 	sub	sp, sp, #16
   11df8:	e50b0010 	str	r0, [fp, #-16]
	tskTCB *pxTCB;

		taskENTER_CRITICAL();
   11dfc:	ebfff9cf 	bl	10540 <vPortEnterCritical>
		{
			/* Ensure a yield is performed if the current task is being
			deleted. */
			if( pxTaskToDelete == pxCurrentTCB )
   11e00:	e59f30d0 	ldr	r3, [pc, #208]	; 11ed8 <vTaskDelete+0xec>
   11e04:	e5933000 	ldr	r3, [r3]
   11e08:	e51b2010 	ldr	r2, [fp, #-16]
   11e0c:	e1520003 	cmp	r2, r3
   11e10:	1a000001 	bne	11e1c <vTaskDelete+0x30>
			{
				pxTaskToDelete = NULL;
   11e14:	e3a03000 	mov	r3, #0
   11e18:	e50b3010 	str	r3, [fp, #-16]
			}

			/* If null is passed in here then we are deleting ourselves. */
			pxTCB = prvGetTCBFromHandle( pxTaskToDelete );
   11e1c:	e51b3010 	ldr	r3, [fp, #-16]
   11e20:	e3530000 	cmp	r3, #0
   11e24:	1a000002 	bne	11e34 <vTaskDelete+0x48>
   11e28:	e59f30a8 	ldr	r3, [pc, #168]	; 11ed8 <vTaskDelete+0xec>
   11e2c:	e5933000 	ldr	r3, [r3]
   11e30:	ea000000 	b	11e38 <vTaskDelete+0x4c>
   11e34:	e51b3010 	ldr	r3, [fp, #-16]
   11e38:	e50b3008 	str	r3, [fp, #-8]

			/* Remove task from the ready list and place in the	termination list.
			This will stop the task from be scheduled.  The idle task will check
			the termination list and free up any memory allocated by the
			scheduler for the TCB and stack. */
			vListRemove( &( pxTCB->xGenericListItem ) );
   11e3c:	e51b3008 	ldr	r3, [fp, #-8]
   11e40:	e2833004 	add	r3, r3, #4
   11e44:	e1a00003 	mov	r0, r3
   11e48:	ebfffc42 	bl	10f58 <vListRemove>

			/* Is the task waiting on an event also? */
			if( pxTCB->xEventListItem.pvContainer != NULL )
   11e4c:	e51b3008 	ldr	r3, [fp, #-8]
   11e50:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   11e54:	e3530000 	cmp	r3, #0
   11e58:	0a000003 	beq	11e6c <vTaskDelete+0x80>
			{
				vListRemove( &( pxTCB->xEventListItem ) );
   11e5c:	e51b3008 	ldr	r3, [fp, #-8]
   11e60:	e2833018 	add	r3, r3, #24
   11e64:	e1a00003 	mov	r0, r3
   11e68:	ebfffc3a 	bl	10f58 <vListRemove>
			}

			vListInsertEnd( ( xList * ) &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
   11e6c:	e51b3008 	ldr	r3, [fp, #-8]
   11e70:	e2833004 	add	r3, r3, #4
   11e74:	e1a01003 	mov	r1, r3
   11e78:	e59f005c 	ldr	r0, [pc, #92]	; 11edc <vTaskDelete+0xf0>
   11e7c:	ebfffbd9 	bl	10de8 <vListInsertEnd>

			/* Increment the ucTasksDeleted variable so the idle task knows
			there is a task that has been deleted and that it should therefore
			check the xTasksWaitingTermination list. */
			++uxTasksDeleted;
   11e80:	e59f3058 	ldr	r3, [pc, #88]	; 11ee0 <vTaskDelete+0xf4>
   11e84:	e5933000 	ldr	r3, [r3]
   11e88:	e2833001 	add	r3, r3, #1
   11e8c:	e59f204c 	ldr	r2, [pc, #76]	; 11ee0 <vTaskDelete+0xf4>
   11e90:	e5823000 	str	r3, [r2]

			/* Increment the uxTaskNumberVariable also so kernel aware debuggers
			can detect that the task lists need re-generating. */
			uxTaskNumber++;
   11e94:	e59f3048 	ldr	r3, [pc, #72]	; 11ee4 <vTaskDelete+0xf8>
   11e98:	e5933000 	ldr	r3, [r3]
   11e9c:	e2833001 	add	r3, r3, #1
   11ea0:	e59f203c 	ldr	r2, [pc, #60]	; 11ee4 <vTaskDelete+0xf8>
   11ea4:	e5823000 	str	r3, [r2]

			traceTASK_DELETE( pxTCB );
		}
		taskEXIT_CRITICAL();
   11ea8:	ebfff9b5 	bl	10584 <vPortExitCritical>

		/* Force a reschedule if we have just deleted the current task. */
		if( xSchedulerRunning != pdFALSE )
   11eac:	e59f3034 	ldr	r3, [pc, #52]	; 11ee8 <vTaskDelete+0xfc>
   11eb0:	e5933000 	ldr	r3, [r3]
   11eb4:	e3530000 	cmp	r3, #0
   11eb8:	0a000003 	beq	11ecc <vTaskDelete+0xe0>
		{
			if( ( void * ) pxTaskToDelete == NULL )
   11ebc:	e51b3010 	ldr	r3, [fp, #-16]
   11ec0:	e3530000 	cmp	r3, #0
   11ec4:	1a000000 	bne	11ecc <vTaskDelete+0xe0>
			{
				portYIELD_WITHIN_API();
   11ec8:	ef000000 	svc	0x00000000
			}
		}
	}
   11ecc:	e320f000 	nop	{0}
   11ed0:	e24bd004 	sub	sp, fp, #4
   11ed4:	e8bd8800 	pop	{fp, pc}
   11ed8:	0002bde4 	andeq	fp, r2, r4, ror #27
   11edc:	0002be90 	muleq	r2, r0, lr
   11ee0:	0002bea4 	andeq	fp, r2, r4, lsr #29
   11ee4:	0002bee0 	andeq	fp, r2, r0, ror #29
   11ee8:	0002becc 	andeq	fp, r2, ip, asr #29

00011eec <vTaskDelayUntil>:
 *----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelayUntil == 1 )

	void vTaskDelayUntil( portTickType * const pxPreviousWakeTime, portTickType xTimeIncrement )
	{
   11eec:	e92d4800 	push	{fp, lr}
   11ef0:	e28db004 	add	fp, sp, #4
   11ef4:	e24dd018 	sub	sp, sp, #24
   11ef8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   11efc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
	portTickType xTimeToWake;
	portBASE_TYPE xAlreadyYielded, xShouldDelay = pdFALSE;
   11f00:	e3a03000 	mov	r3, #0
   11f04:	e50b3008 	str	r3, [fp, #-8]

		configASSERT( pxPreviousWakeTime );
		configASSERT( ( xTimeIncrement > 0U ) );

		vTaskSuspendAll();
   11f08:	eb0001f6 	bl	126e8 <vTaskSuspendAll>
		{
			/* Generate the tick time at which the task wants to wake. */
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   11f0c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f10:	e5933000 	ldr	r3, [r3]
   11f14:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   11f18:	e0823003 	add	r3, r2, r3
   11f1c:	e50b300c 	str	r3, [fp, #-12]

			if( xTickCount < *pxPreviousWakeTime )
   11f20:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f24:	e5932000 	ldr	r2, [r3]
   11f28:	e59f30c4 	ldr	r3, [pc, #196]	; 11ff4 <vTaskDelayUntil+0x108>
   11f2c:	e5933000 	ldr	r3, [r3]
   11f30:	e1520003 	cmp	r2, r3
   11f34:	9a00000c 	bls	11f6c <vTaskDelayUntil+0x80>
				/* The tick count has overflowed since this function was
				lasted called.  In this case the only time we should ever
				actually delay is if the wake time has also	overflowed,
				and the wake time is greater than the tick time.  When this
				is the case it is as if neither time had overflowed. */
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xTickCount ) )
   11f38:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f3c:	e5933000 	ldr	r3, [r3]
   11f40:	e51b200c 	ldr	r2, [fp, #-12]
   11f44:	e1520003 	cmp	r2, r3
   11f48:	2a000013 	bcs	11f9c <vTaskDelayUntil+0xb0>
   11f4c:	e59f30a0 	ldr	r3, [pc, #160]	; 11ff4 <vTaskDelayUntil+0x108>
   11f50:	e5933000 	ldr	r3, [r3]
   11f54:	e51b200c 	ldr	r2, [fp, #-12]
   11f58:	e1520003 	cmp	r2, r3
   11f5c:	9a00000e 	bls	11f9c <vTaskDelayUntil+0xb0>
				{
					xShouldDelay = pdTRUE;
   11f60:	e3a03001 	mov	r3, #1
   11f64:	e50b3008 	str	r3, [fp, #-8]
   11f68:	ea00000b 	b	11f9c <vTaskDelayUntil+0xb0>
			else
			{
				/* The tick time has not overflowed.  In this case we will
				delay if either the wake time has overflowed, and/or the
				tick time is less than the wake time. */
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xTickCount ) )
   11f6c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f70:	e5933000 	ldr	r3, [r3]
   11f74:	e51b200c 	ldr	r2, [fp, #-12]
   11f78:	e1520003 	cmp	r2, r3
   11f7c:	3a000004 	bcc	11f94 <vTaskDelayUntil+0xa8>
   11f80:	e59f306c 	ldr	r3, [pc, #108]	; 11ff4 <vTaskDelayUntil+0x108>
   11f84:	e5933000 	ldr	r3, [r3]
   11f88:	e51b200c 	ldr	r2, [fp, #-12]
   11f8c:	e1520003 	cmp	r2, r3
   11f90:	9a000001 	bls	11f9c <vTaskDelayUntil+0xb0>
				{
					xShouldDelay = pdTRUE;
   11f94:	e3a03001 	mov	r3, #1
   11f98:	e50b3008 	str	r3, [fp, #-8]
				}
			}

			/* Update the wake time ready for the next call. */
			*pxPreviousWakeTime = xTimeToWake;
   11f9c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fa0:	e51b200c 	ldr	r2, [fp, #-12]
   11fa4:	e5832000 	str	r2, [r3]

			if( xShouldDelay != pdFALSE )
   11fa8:	e51b3008 	ldr	r3, [fp, #-8]
   11fac:	e3530000 	cmp	r3, #0
   11fb0:	0a000006 	beq	11fd0 <vTaskDelayUntil+0xe4>
				traceTASK_DELAY_UNTIL();

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
   11fb4:	e59f303c 	ldr	r3, [pc, #60]	; 11ff8 <vTaskDelayUntil+0x10c>
   11fb8:	e5933000 	ldr	r3, [r3]
   11fbc:	e2833004 	add	r3, r3, #4
   11fc0:	e1a00003 	mov	r0, r3
   11fc4:	ebfffbe3 	bl	10f58 <vListRemove>
				prvAddCurrentTaskToDelayedList( xTimeToWake );
   11fc8:	e51b000c 	ldr	r0, [fp, #-12]
   11fcc:	eb0004d5 	bl	13328 <prvAddCurrentTaskToDelayedList>
			}
		}
		xAlreadyYielded = xTaskResumeAll();
   11fd0:	eb0001d0 	bl	12718 <xTaskResumeAll>
   11fd4:	e50b0010 	str	r0, [fp, #-16]

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
   11fd8:	e51b3010 	ldr	r3, [fp, #-16]
   11fdc:	e3530000 	cmp	r3, #0
   11fe0:	1a000000 	bne	11fe8 <vTaskDelayUntil+0xfc>
		{
			portYIELD_WITHIN_API();
   11fe4:	ef000000 	svc	0x00000000
		}
	}
   11fe8:	e320f000 	nop	{0}
   11fec:	e24bd004 	sub	sp, fp, #4
   11ff0:	e8bd8800 	pop	{fp, pc}
   11ff4:	0002bec0 	andeq	fp, r2, r0, asr #29
   11ff8:	0002bde4 	andeq	fp, r2, r4, ror #27

00011ffc <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
   11ffc:	e92d4800 	push	{fp, lr}
   12000:	e28db004 	add	fp, sp, #4
   12004:	e24dd010 	sub	sp, sp, #16
   12008:	e50b0010 	str	r0, [fp, #-16]
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;
   1200c:	e3a03000 	mov	r3, #0
   12010:	e50b3008 	str	r3, [fp, #-8]

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
   12014:	e51b3010 	ldr	r3, [fp, #-16]
   12018:	e3530000 	cmp	r3, #0
   1201c:	0a00000e 	beq	1205c <vTaskDelay+0x60>
		{
			vTaskSuspendAll();
   12020:	eb0001b0 	bl	126e8 <vTaskSuspendAll>
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
   12024:	e59f304c 	ldr	r3, [pc, #76]	; 12078 <vTaskDelay+0x7c>
   12028:	e5933000 	ldr	r3, [r3]
   1202c:	e51b2010 	ldr	r2, [fp, #-16]
   12030:	e0823003 	add	r3, r2, r3
   12034:	e50b300c 	str	r3, [fp, #-12]

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
   12038:	e59f303c 	ldr	r3, [pc, #60]	; 1207c <vTaskDelay+0x80>
   1203c:	e5933000 	ldr	r3, [r3]
   12040:	e2833004 	add	r3, r3, #4
   12044:	e1a00003 	mov	r0, r3
   12048:	ebfffbc2 	bl	10f58 <vListRemove>
				prvAddCurrentTaskToDelayedList( xTimeToWake );
   1204c:	e51b000c 	ldr	r0, [fp, #-12]
   12050:	eb0004b4 	bl	13328 <prvAddCurrentTaskToDelayedList>
			}
			xAlreadyYielded = xTaskResumeAll();
   12054:	eb0001af 	bl	12718 <xTaskResumeAll>
   12058:	e50b0008 	str	r0, [fp, #-8]
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
   1205c:	e51b3008 	ldr	r3, [fp, #-8]
   12060:	e3530000 	cmp	r3, #0
   12064:	1a000000 	bne	1206c <vTaskDelay+0x70>
		{
			portYIELD_WITHIN_API();
   12068:	ef000000 	svc	0x00000000
		}
	}
   1206c:	e320f000 	nop	{0}
   12070:	e24bd004 	sub	sp, fp, #4
   12074:	e8bd8800 	pop	{fp, pc}
   12078:	0002bec0 	andeq	fp, r2, r0, asr #29
   1207c:	0002bde4 	andeq	fp, r2, r4, ror #27

00012080 <uxTaskPriorityGet>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_uxTaskPriorityGet == 1 )

	unsigned portBASE_TYPE uxTaskPriorityGet( xTaskHandle pxTask )
	{
   12080:	e92d4800 	push	{fp, lr}
   12084:	e28db004 	add	fp, sp, #4
   12088:	e24dd010 	sub	sp, sp, #16
   1208c:	e50b0010 	str	r0, [fp, #-16]
	tskTCB *pxTCB;
	unsigned portBASE_TYPE uxReturn;

		taskENTER_CRITICAL();
   12090:	ebfff92a 	bl	10540 <vPortEnterCritical>
		{
			/* If null is passed in here then we are changing the
			priority of the calling function. */
			pxTCB = prvGetTCBFromHandle( pxTask );
   12094:	e51b3010 	ldr	r3, [fp, #-16]
   12098:	e3530000 	cmp	r3, #0
   1209c:	1a000002 	bne	120ac <uxTaskPriorityGet+0x2c>
   120a0:	e59f302c 	ldr	r3, [pc, #44]	; 120d4 <uxTaskPriorityGet+0x54>
   120a4:	e5933000 	ldr	r3, [r3]
   120a8:	ea000000 	b	120b0 <uxTaskPriorityGet+0x30>
   120ac:	e51b3010 	ldr	r3, [fp, #-16]
   120b0:	e50b3008 	str	r3, [fp, #-8]
			uxReturn = pxTCB->uxPriority;
   120b4:	e51b3008 	ldr	r3, [fp, #-8]
   120b8:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   120bc:	e50b300c 	str	r3, [fp, #-12]
		}
		taskEXIT_CRITICAL();
   120c0:	ebfff92f 	bl	10584 <vPortExitCritical>

		return uxReturn;
   120c4:	e51b300c 	ldr	r3, [fp, #-12]
	}
   120c8:	e1a00003 	mov	r0, r3
   120cc:	e24bd004 	sub	sp, fp, #4
   120d0:	e8bd8800 	pop	{fp, pc}
   120d4:	0002bde4 	andeq	fp, r2, r4, ror #27

000120d8 <vTaskPrioritySet>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskPrioritySet == 1 )

	void vTaskPrioritySet( xTaskHandle pxTask, unsigned portBASE_TYPE uxNewPriority )
	{
   120d8:	e92d4800 	push	{fp, lr}
   120dc:	e28db004 	add	fp, sp, #4
   120e0:	e24dd018 	sub	sp, sp, #24
   120e4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   120e8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
	tskTCB *pxTCB;
	unsigned portBASE_TYPE uxCurrentPriority;
	portBASE_TYPE xYieldRequired = pdFALSE;
   120ec:	e3a03000 	mov	r3, #0
   120f0:	e50b3008 	str	r3, [fp, #-8]

		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );

		/* Ensure the new priority is valid. */
		if( uxNewPriority >= configMAX_PRIORITIES )
   120f4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   120f8:	e3530004 	cmp	r3, #4
   120fc:	9a000001 	bls	12108 <vTaskPrioritySet+0x30>
		{
			uxNewPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
   12100:	e3a03004 	mov	r3, #4
   12104:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		}

		taskENTER_CRITICAL();
   12108:	ebfff90c 	bl	10540 <vPortEnterCritical>
		{
			if( pxTask == pxCurrentTCB )
   1210c:	e59f3160 	ldr	r3, [pc, #352]	; 12274 <vTaskPrioritySet+0x19c>
   12110:	e5933000 	ldr	r3, [r3]
   12114:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   12118:	e1520003 	cmp	r2, r3
   1211c:	1a000001 	bne	12128 <vTaskPrioritySet+0x50>
			{
				pxTask = NULL;
   12120:	e3a03000 	mov	r3, #0
   12124:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			}

			/* If null is passed in here then we are changing the
			priority of the calling function. */
			pxTCB = prvGetTCBFromHandle( pxTask );
   12128:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1212c:	e3530000 	cmp	r3, #0
   12130:	1a000002 	bne	12140 <vTaskPrioritySet+0x68>
   12134:	e59f3138 	ldr	r3, [pc, #312]	; 12274 <vTaskPrioritySet+0x19c>
   12138:	e5933000 	ldr	r3, [r3]
   1213c:	ea000000 	b	12144 <vTaskPrioritySet+0x6c>
   12140:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12144:	e50b300c 	str	r3, [fp, #-12]
			{
				uxCurrentPriority = pxTCB->uxBasePriority;
			}
			#else
			{
				uxCurrentPriority = pxTCB->uxPriority;
   12148:	e51b300c 	ldr	r3, [fp, #-12]
   1214c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12150:	e50b3010 	str	r3, [fp, #-16]
			}
			#endif

			if( uxCurrentPriority != uxNewPriority )
   12154:	e51b2010 	ldr	r2, [fp, #-16]
   12158:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1215c:	e1520003 	cmp	r2, r3
   12160:	0a00003f 	beq	12264 <vTaskPrioritySet+0x18c>
			{
				/* The priority change may have readied a task of higher
				priority than the calling task. */
				if( uxNewPriority > uxCurrentPriority )
   12164:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   12168:	e51b3010 	ldr	r3, [fp, #-16]
   1216c:	e1520003 	cmp	r2, r3
   12170:	9a000005 	bls	1218c <vTaskPrioritySet+0xb4>
				{
					if( pxTask != NULL )
   12174:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12178:	e3530000 	cmp	r3, #0
   1217c:	0a000007 	beq	121a0 <vTaskPrioritySet+0xc8>
					{
						/* The priority of another task is being raised.  If we
						were raising the priority of the currently running task
						there would be no need to switch as it must have already
						been the highest priority task. */
						xYieldRequired = pdTRUE;
   12180:	e3a03001 	mov	r3, #1
   12184:	e50b3008 	str	r3, [fp, #-8]
   12188:	ea000004 	b	121a0 <vTaskPrioritySet+0xc8>
					}
				}
				else if( pxTask == NULL )
   1218c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12190:	e3530000 	cmp	r3, #0
   12194:	1a000001 	bne	121a0 <vTaskPrioritySet+0xc8>
				{
					/* Setting our own priority down means there may now be another
					task of higher priority that is ready to execute. */
					xYieldRequired = pdTRUE;
   12198:	e3a03001 	mov	r3, #1
   1219c:	e50b3008 	str	r3, [fp, #-8]
					/* The base priority gets set whatever. */
					pxTCB->uxBasePriority = uxNewPriority;
				}
				#else
				{
					pxTCB->uxPriority = uxNewPriority;
   121a0:	e51b300c 	ldr	r3, [fp, #-12]
   121a4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   121a8:	e583202c 	str	r2, [r3, #44]	; 0x2c
				}
				#endif

				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( configMAX_PRIORITIES - ( portTickType ) uxNewPriority ) );
   121ac:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   121b0:	e2632005 	rsb	r2, r3, #5
   121b4:	e51b300c 	ldr	r3, [fp, #-12]
   121b8:	e5832018 	str	r2, [r3, #24]

				/* If the task is in the blocked or suspended list we need do
				nothing more than change it's priority variable. However, if
				the task is in a ready list it needs to be removed and placed
				in the queue appropriate to its new priority. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxCurrentPriority ] ), &( pxTCB->xGenericListItem ) ) )
   121bc:	e51b300c 	ldr	r3, [fp, #-12]
   121c0:	e5931014 	ldr	r1, [r3, #20]
   121c4:	e51b2010 	ldr	r2, [fp, #-16]
   121c8:	e1a03002 	mov	r3, r2
   121cc:	e1a03103 	lsl	r3, r3, #2
   121d0:	e0833002 	add	r3, r3, r2
   121d4:	e1a03103 	lsl	r3, r3, #2
   121d8:	e59f2098 	ldr	r2, [pc, #152]	; 12278 <vTaskPrioritySet+0x1a0>
   121dc:	e0833002 	add	r3, r3, r2
   121e0:	e1510003 	cmp	r1, r3
   121e4:	1a00001a 	bne	12254 <vTaskPrioritySet+0x17c>
				{
					/* The task is currently in its ready list - remove before adding
					it to it's new ready list.  As we are in a critical section we
					can do this even if the scheduler is suspended. */
					vListRemove( &( pxTCB->xGenericListItem ) );
   121e8:	e51b300c 	ldr	r3, [fp, #-12]
   121ec:	e2833004 	add	r3, r3, #4
   121f0:	e1a00003 	mov	r0, r3
   121f4:	ebfffb57 	bl	10f58 <vListRemove>
					prvAddTaskToReadyQueue( pxTCB );
   121f8:	e51b300c 	ldr	r3, [fp, #-12]
   121fc:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12200:	e59f3074 	ldr	r3, [pc, #116]	; 1227c <vTaskPrioritySet+0x1a4>
   12204:	e5933000 	ldr	r3, [r3]
   12208:	e1520003 	cmp	r2, r3
   1220c:	9a000003 	bls	12220 <vTaskPrioritySet+0x148>
   12210:	e51b300c 	ldr	r3, [fp, #-12]
   12214:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12218:	e59f205c 	ldr	r2, [pc, #92]	; 1227c <vTaskPrioritySet+0x1a4>
   1221c:	e5823000 	str	r3, [r2]
   12220:	e51b300c 	ldr	r3, [fp, #-12]
   12224:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12228:	e1a03002 	mov	r3, r2
   1222c:	e1a03103 	lsl	r3, r3, #2
   12230:	e0833002 	add	r3, r3, r2
   12234:	e1a03103 	lsl	r3, r3, #2
   12238:	e59f2038 	ldr	r2, [pc, #56]	; 12278 <vTaskPrioritySet+0x1a0>
   1223c:	e0832002 	add	r2, r3, r2
   12240:	e51b300c 	ldr	r3, [fp, #-12]
   12244:	e2833004 	add	r3, r3, #4
   12248:	e1a01003 	mov	r1, r3
   1224c:	e1a00002 	mov	r0, r2
   12250:	ebfffae4 	bl	10de8 <vListInsertEnd>
				}

				if( xYieldRequired == pdTRUE )
   12254:	e51b3008 	ldr	r3, [fp, #-8]
   12258:	e3530001 	cmp	r3, #1
   1225c:	1a000000 	bne	12264 <vTaskPrioritySet+0x18c>
				{
					portYIELD_WITHIN_API();
   12260:	ef000000 	svc	0x00000000
				}
			}
		}
		taskEXIT_CRITICAL();
   12264:	ebfff8c6 	bl	10584 <vPortExitCritical>
	}
   12268:	e320f000 	nop	{0}
   1226c:	e24bd004 	sub	sp, fp, #4
   12270:	e8bd8800 	pop	{fp, pc}
   12274:	0002bde4 	andeq	fp, r2, r4, ror #27
   12278:	0002bde8 	andeq	fp, r2, r8, ror #27
   1227c:	0002bec8 	andeq	fp, r2, r8, asr #29

00012280 <vTaskSuspend>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskSuspend == 1 )

	void vTaskSuspend( xTaskHandle pxTaskToSuspend )
	{
   12280:	e92d4800 	push	{fp, lr}
   12284:	e28db004 	add	fp, sp, #4
   12288:	e24dd010 	sub	sp, sp, #16
   1228c:	e50b0010 	str	r0, [fp, #-16]
	tskTCB *pxTCB;

		taskENTER_CRITICAL();
   12290:	ebfff8aa 	bl	10540 <vPortEnterCritical>
		{
			/* Ensure a yield is performed if the current task is being
			suspended. */
			if( pxTaskToSuspend == pxCurrentTCB )
   12294:	e59f30d8 	ldr	r3, [pc, #216]	; 12374 <vTaskSuspend+0xf4>
   12298:	e5933000 	ldr	r3, [r3]
   1229c:	e51b2010 	ldr	r2, [fp, #-16]
   122a0:	e1520003 	cmp	r2, r3
   122a4:	1a000001 	bne	122b0 <vTaskSuspend+0x30>
			{
				pxTaskToSuspend = NULL;
   122a8:	e3a03000 	mov	r3, #0
   122ac:	e50b3010 	str	r3, [fp, #-16]
			}

			/* If null is passed in here then we are suspending ourselves. */
			pxTCB = prvGetTCBFromHandle( pxTaskToSuspend );
   122b0:	e51b3010 	ldr	r3, [fp, #-16]
   122b4:	e3530000 	cmp	r3, #0
   122b8:	1a000002 	bne	122c8 <vTaskSuspend+0x48>
   122bc:	e59f30b0 	ldr	r3, [pc, #176]	; 12374 <vTaskSuspend+0xf4>
   122c0:	e5933000 	ldr	r3, [r3]
   122c4:	ea000000 	b	122cc <vTaskSuspend+0x4c>
   122c8:	e51b3010 	ldr	r3, [fp, #-16]
   122cc:	e50b3008 	str	r3, [fp, #-8]

			traceTASK_SUSPEND( pxTCB );

			/* Remove task from the ready/delayed list and place in the	suspended list. */
			vListRemove( &( pxTCB->xGenericListItem ) );
   122d0:	e51b3008 	ldr	r3, [fp, #-8]
   122d4:	e2833004 	add	r3, r3, #4
   122d8:	e1a00003 	mov	r0, r3
   122dc:	ebfffb1d 	bl	10f58 <vListRemove>

			/* Is the task waiting on an event also? */
			if( pxTCB->xEventListItem.pvContainer != NULL )
   122e0:	e51b3008 	ldr	r3, [fp, #-8]
   122e4:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   122e8:	e3530000 	cmp	r3, #0
   122ec:	0a000003 	beq	12300 <vTaskSuspend+0x80>
			{
				vListRemove( &( pxTCB->xEventListItem ) );
   122f0:	e51b3008 	ldr	r3, [fp, #-8]
   122f4:	e2833018 	add	r3, r3, #24
   122f8:	e1a00003 	mov	r0, r3
   122fc:	ebfffb15 	bl	10f58 <vListRemove>
			}

			vListInsertEnd( ( xList * ) &xSuspendedTaskList, &( pxTCB->xGenericListItem ) );
   12300:	e51b3008 	ldr	r3, [fp, #-8]
   12304:	e2833004 	add	r3, r3, #4
   12308:	e1a01003 	mov	r1, r3
   1230c:	e59f0064 	ldr	r0, [pc, #100]	; 12378 <vTaskSuspend+0xf8>
   12310:	ebfffab4 	bl	10de8 <vListInsertEnd>
		}
		taskEXIT_CRITICAL();
   12314:	ebfff89a 	bl	10584 <vPortExitCritical>

		if( ( void * ) pxTaskToSuspend == NULL )
   12318:	e51b3010 	ldr	r3, [fp, #-16]
   1231c:	e3530000 	cmp	r3, #0
   12320:	1a000010 	bne	12368 <vTaskSuspend+0xe8>
		{
			if( xSchedulerRunning != pdFALSE )
   12324:	e59f3050 	ldr	r3, [pc, #80]	; 1237c <vTaskSuspend+0xfc>
   12328:	e5933000 	ldr	r3, [r3]
   1232c:	e3530000 	cmp	r3, #0
   12330:	0a000001 	beq	1233c <vTaskSuspend+0xbc>
			{
				/* We have just suspended the current task. */
				portYIELD_WITHIN_API();
   12334:	ef000000 	svc	0x00000000
				{
					vTaskSwitchContext();
				}
			}
		}
	}
   12338:	ea00000a 	b	12368 <vTaskSuspend+0xe8>
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
   1233c:	e59f3034 	ldr	r3, [pc, #52]	; 12378 <vTaskSuspend+0xf8>
   12340:	e5932000 	ldr	r2, [r3]
   12344:	e59f3034 	ldr	r3, [pc, #52]	; 12380 <vTaskSuspend+0x100>
   12348:	e5933000 	ldr	r3, [r3]
   1234c:	e1520003 	cmp	r2, r3
   12350:	1a000003 	bne	12364 <vTaskSuspend+0xe4>
					pxCurrentTCB = NULL;
   12354:	e59f3018 	ldr	r3, [pc, #24]	; 12374 <vTaskSuspend+0xf4>
   12358:	e3a02000 	mov	r2, #0
   1235c:	e5832000 	str	r2, [r3]
	}
   12360:	ea000000 	b	12368 <vTaskSuspend+0xe8>
					vTaskSwitchContext();
   12364:	eb00024c 	bl	12c9c <vTaskSwitchContext>
	}
   12368:	e320f000 	nop	{0}
   1236c:	e24bd004 	sub	sp, fp, #4
   12370:	e8bd8800 	pop	{fp, pc}
   12374:	0002bde4 	andeq	fp, r2, r4, ror #27
   12378:	0002bea8 	andeq	fp, r2, r8, lsr #29
   1237c:	0002becc 	andeq	fp, r2, ip, asr #29
   12380:	0002bebc 			; <UNDEFINED> instruction: 0x0002bebc

00012384 <xTaskIsTaskSuspended>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskSuspend == 1 )

	signed portBASE_TYPE xTaskIsTaskSuspended( xTaskHandle xTask )
	{
   12384:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12388:	e28db000 	add	fp, sp, #0
   1238c:	e24dd014 	sub	sp, sp, #20
   12390:	e50b0010 	str	r0, [fp, #-16]
	portBASE_TYPE xReturn = pdFALSE;
   12394:	e3a03000 	mov	r3, #0
   12398:	e50b3008 	str	r3, [fp, #-8]
	const tskTCB * const pxTCB = ( tskTCB * ) xTask;
   1239c:	e51b3010 	ldr	r3, [fp, #-16]
   123a0:	e50b300c 	str	r3, [fp, #-12]
		/* It does not make sense to check if the calling task is suspended. */
		configASSERT( xTask );

		/* Is the task we are attempting to resume actually in the
		suspended list? */
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
   123a4:	e51b300c 	ldr	r3, [fp, #-12]
   123a8:	e5933014 	ldr	r3, [r3, #20]
   123ac:	e59f2044 	ldr	r2, [pc, #68]	; 123f8 <xTaskIsTaskSuspended+0x74>
   123b0:	e1530002 	cmp	r3, r2
   123b4:	1a00000a 	bne	123e4 <xTaskIsTaskSuspended+0x60>
		{
			/* Has the task already been resumed from within an ISR? */
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) != pdTRUE )
   123b8:	e51b300c 	ldr	r3, [fp, #-12]
   123bc:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   123c0:	e59f2034 	ldr	r2, [pc, #52]	; 123fc <xTaskIsTaskSuspended+0x78>
   123c4:	e1530002 	cmp	r3, r2
   123c8:	0a000005 	beq	123e4 <xTaskIsTaskSuspended+0x60>
			{
				/* Is it in the suspended list because it is in the
				Suspended state?  It is possible to be in the suspended
				list because it is blocked on a task with no timeout
				specified. */
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) == pdTRUE )
   123cc:	e51b300c 	ldr	r3, [fp, #-12]
   123d0:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   123d4:	e3530000 	cmp	r3, #0
   123d8:	1a000001 	bne	123e4 <xTaskIsTaskSuspended+0x60>
				{
					xReturn = pdTRUE;
   123dc:	e3a03001 	mov	r3, #1
   123e0:	e50b3008 	str	r3, [fp, #-8]
				}
			}
		}

		return xReturn;
   123e4:	e51b3008 	ldr	r3, [fp, #-8]
	}
   123e8:	e1a00003 	mov	r0, r3
   123ec:	e28bd000 	add	sp, fp, #0
   123f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   123f4:	e12fff1e 	bx	lr
   123f8:	0002bea8 	andeq	fp, r2, r8, lsr #29
   123fc:	0002be7c 	andeq	fp, r2, ip, ror lr

00012400 <vTaskResume>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskSuspend == 1 )

	void vTaskResume( xTaskHandle pxTaskToResume )
	{
   12400:	e92d4800 	push	{fp, lr}
   12404:	e28db004 	add	fp, sp, #4
   12408:	e24dd010 	sub	sp, sp, #16
   1240c:	e50b0010 	str	r0, [fp, #-16]
		/* It does not make sense to resume the calling task. */
		configASSERT( pxTaskToResume );

		/* Remove the task from whichever list it is currently in, and place
		it in the ready list. */
		pxTCB = ( tskTCB * ) pxTaskToResume;
   12410:	e51b3010 	ldr	r3, [fp, #-16]
   12414:	e50b3008 	str	r3, [fp, #-8]

		/* The parameter cannot be NULL as it is impossible to resume the
		currently executing task. */
		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
   12418:	e51b3008 	ldr	r3, [fp, #-8]
   1241c:	e3530000 	cmp	r3, #0
   12420:	0a00002e 	beq	124e0 <vTaskResume+0xe0>
   12424:	e59f30c0 	ldr	r3, [pc, #192]	; 124ec <vTaskResume+0xec>
   12428:	e5933000 	ldr	r3, [r3]
   1242c:	e51b2008 	ldr	r2, [fp, #-8]
   12430:	e1520003 	cmp	r2, r3
   12434:	0a000029 	beq	124e0 <vTaskResume+0xe0>
		{
			taskENTER_CRITICAL();
   12438:	ebfff840 	bl	10540 <vPortEnterCritical>
			{
				if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
   1243c:	e51b0008 	ldr	r0, [fp, #-8]
   12440:	ebffffcf 	bl	12384 <xTaskIsTaskSuspended>
   12444:	e1a03000 	mov	r3, r0
   12448:	e3530001 	cmp	r3, #1
   1244c:	1a000022 	bne	124dc <vTaskResume+0xdc>
				{
					traceTASK_RESUME( pxTCB );

					/* As we are in a critical section we can access the ready
					lists even if the scheduler is suspended. */
					vListRemove(  &( pxTCB->xGenericListItem ) );
   12450:	e51b3008 	ldr	r3, [fp, #-8]
   12454:	e2833004 	add	r3, r3, #4
   12458:	e1a00003 	mov	r0, r3
   1245c:	ebfffabd 	bl	10f58 <vListRemove>
					prvAddTaskToReadyQueue( pxTCB );
   12460:	e51b3008 	ldr	r3, [fp, #-8]
   12464:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12468:	e59f3080 	ldr	r3, [pc, #128]	; 124f0 <vTaskResume+0xf0>
   1246c:	e5933000 	ldr	r3, [r3]
   12470:	e1520003 	cmp	r2, r3
   12474:	9a000003 	bls	12488 <vTaskResume+0x88>
   12478:	e51b3008 	ldr	r3, [fp, #-8]
   1247c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12480:	e59f2068 	ldr	r2, [pc, #104]	; 124f0 <vTaskResume+0xf0>
   12484:	e5823000 	str	r3, [r2]
   12488:	e51b3008 	ldr	r3, [fp, #-8]
   1248c:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12490:	e1a03002 	mov	r3, r2
   12494:	e1a03103 	lsl	r3, r3, #2
   12498:	e0833002 	add	r3, r3, r2
   1249c:	e1a03103 	lsl	r3, r3, #2
   124a0:	e59f204c 	ldr	r2, [pc, #76]	; 124f4 <vTaskResume+0xf4>
   124a4:	e0832002 	add	r2, r3, r2
   124a8:	e51b3008 	ldr	r3, [fp, #-8]
   124ac:	e2833004 	add	r3, r3, #4
   124b0:	e1a01003 	mov	r1, r3
   124b4:	e1a00002 	mov	r0, r2
   124b8:	ebfffa4a 	bl	10de8 <vListInsertEnd>

					/* We may have just resumed a higher priority task. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   124bc:	e51b3008 	ldr	r3, [fp, #-8]
   124c0:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   124c4:	e59f3020 	ldr	r3, [pc, #32]	; 124ec <vTaskResume+0xec>
   124c8:	e5933000 	ldr	r3, [r3]
   124cc:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   124d0:	e1520003 	cmp	r2, r3
   124d4:	3a000000 	bcc	124dc <vTaskResume+0xdc>
					{
						/* This yield may not cause the task just resumed to run, but
						will leave the lists in the correct state for the next yield. */
						portYIELD_WITHIN_API();
   124d8:	ef000000 	svc	0x00000000
					}
				}
			}
			taskEXIT_CRITICAL();
   124dc:	ebfff828 	bl	10584 <vPortExitCritical>
		}
	}
   124e0:	e320f000 	nop	{0}
   124e4:	e24bd004 	sub	sp, fp, #4
   124e8:	e8bd8800 	pop	{fp, pc}
   124ec:	0002bde4 	andeq	fp, r2, r4, ror #27
   124f0:	0002bec8 	andeq	fp, r2, r8, asr #29
   124f4:	0002bde8 	andeq	fp, r2, r8, ror #27

000124f8 <xTaskResumeFromISR>:
/*-----------------------------------------------------------*/

#if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )

	portBASE_TYPE xTaskResumeFromISR( xTaskHandle pxTaskToResume )
	{
   124f8:	e92d4800 	push	{fp, lr}
   124fc:	e28db004 	add	fp, sp, #4
   12500:	e24dd018 	sub	sp, sp, #24
   12504:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
	portBASE_TYPE xYieldRequired = pdFALSE;
   12508:	e3a03000 	mov	r3, #0
   1250c:	e50b3008 	str	r3, [fp, #-8]
	tskTCB *pxTCB;
	unsigned portBASE_TYPE uxSavedInterruptStatus;

		configASSERT( pxTaskToResume );

		pxTCB = ( tskTCB * ) pxTaskToResume;
   12510:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12514:	e50b300c 	str	r3, [fp, #-12]

		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
   12518:	e3a03000 	mov	r3, #0
   1251c:	e50b3010 	str	r3, [fp, #-16]
		{
			if( xTaskIsTaskSuspended( pxTCB ) == pdTRUE )
   12520:	e51b000c 	ldr	r0, [fp, #-12]
   12524:	ebffff96 	bl	12384 <xTaskIsTaskSuspended>
   12528:	e1a03000 	mov	r3, r0
   1252c:	e3530001 	cmp	r3, #1
   12530:	1a00002e 	bne	125f0 <xTaskResumeFromISR+0xf8>
			{
				traceTASK_RESUME_FROM_ISR( pxTCB );

				if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
   12534:	e59f30c4 	ldr	r3, [pc, #196]	; 12600 <xTaskResumeFromISR+0x108>
   12538:	e5933000 	ldr	r3, [r3]
   1253c:	e3530000 	cmp	r3, #0
   12540:	1a000025 	bne	125dc <xTaskResumeFromISR+0xe4>
				{
					xYieldRequired = ( pxTCB->uxPriority >= pxCurrentTCB->uxPriority );
   12544:	e51b300c 	ldr	r3, [fp, #-12]
   12548:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   1254c:	e59f30b0 	ldr	r3, [pc, #176]	; 12604 <xTaskResumeFromISR+0x10c>
   12550:	e5933000 	ldr	r3, [r3]
   12554:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12558:	e1520003 	cmp	r2, r3
   1255c:	23a03001 	movcs	r3, #1
   12560:	33a03000 	movcc	r3, #0
   12564:	e6ef3073 	uxtb	r3, r3
   12568:	e50b3008 	str	r3, [fp, #-8]
					vListRemove(  &( pxTCB->xGenericListItem ) );
   1256c:	e51b300c 	ldr	r3, [fp, #-12]
   12570:	e2833004 	add	r3, r3, #4
   12574:	e1a00003 	mov	r0, r3
   12578:	ebfffa76 	bl	10f58 <vListRemove>
					prvAddTaskToReadyQueue( pxTCB );
   1257c:	e51b300c 	ldr	r3, [fp, #-12]
   12580:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12584:	e59f307c 	ldr	r3, [pc, #124]	; 12608 <xTaskResumeFromISR+0x110>
   12588:	e5933000 	ldr	r3, [r3]
   1258c:	e1520003 	cmp	r2, r3
   12590:	9a000003 	bls	125a4 <xTaskResumeFromISR+0xac>
   12594:	e51b300c 	ldr	r3, [fp, #-12]
   12598:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   1259c:	e59f2064 	ldr	r2, [pc, #100]	; 12608 <xTaskResumeFromISR+0x110>
   125a0:	e5823000 	str	r3, [r2]
   125a4:	e51b300c 	ldr	r3, [fp, #-12]
   125a8:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   125ac:	e1a03002 	mov	r3, r2
   125b0:	e1a03103 	lsl	r3, r3, #2
   125b4:	e0833002 	add	r3, r3, r2
   125b8:	e1a03103 	lsl	r3, r3, #2
   125bc:	e59f2048 	ldr	r2, [pc, #72]	; 1260c <xTaskResumeFromISR+0x114>
   125c0:	e0832002 	add	r2, r3, r2
   125c4:	e51b300c 	ldr	r3, [fp, #-12]
   125c8:	e2833004 	add	r3, r3, #4
   125cc:	e1a01003 	mov	r1, r3
   125d0:	e1a00002 	mov	r0, r2
   125d4:	ebfffa03 	bl	10de8 <vListInsertEnd>
   125d8:	ea000004 	b	125f0 <xTaskResumeFromISR+0xf8>
				else
				{
					/* We cannot access the delayed or ready lists, so will hold this
					task pending until the scheduler is resumed, at which point a
					yield will be performed if necessary. */
					vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
   125dc:	e51b300c 	ldr	r3, [fp, #-12]
   125e0:	e2833018 	add	r3, r3, #24
   125e4:	e1a01003 	mov	r1, r3
   125e8:	e59f0020 	ldr	r0, [pc, #32]	; 12610 <xTaskResumeFromISR+0x118>
   125ec:	ebfff9fd 	bl	10de8 <vListInsertEnd>
				}
			}
		}
		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

		return xYieldRequired;
   125f0:	e51b3008 	ldr	r3, [fp, #-8]
	}
   125f4:	e1a00003 	mov	r0, r3
   125f8:	e24bd004 	sub	sp, fp, #4
   125fc:	e8bd8800 	pop	{fp, pc}
   12600:	0002bed0 	ldrdeq	fp, [r2], -r0
   12604:	0002bde4 	andeq	fp, r2, r4, ror #27
   12608:	0002bec8 	andeq	fp, r2, r8, asr #29
   1260c:	0002bde8 	andeq	fp, r2, r8, ror #27
   12610:	0002be7c 	andeq	fp, r2, ip, ror lr

00012614 <vTaskStartScheduler>:
 * PUBLIC SCHEDULER CONTROL documented in task.h
 *----------------------------------------------------------*/


void vTaskStartScheduler( void )
{
   12614:	e92d4800 	push	{fp, lr}
   12618:	e28db004 	add	fp, sp, #4
   1261c:	e24dd018 	sub	sp, sp, #24
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), &xIdleTaskHandle );
	}
	#else
	{
		/* Create the idle task without storing its handle. */
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );
   12620:	e3a03000 	mov	r3, #0
   12624:	e58d300c 	str	r3, [sp, #12]
   12628:	e3a03000 	mov	r3, #0
   1262c:	e58d3008 	str	r3, [sp, #8]
   12630:	e3a03000 	mov	r3, #0
   12634:	e58d3004 	str	r3, [sp, #4]
   12638:	e3a03000 	mov	r3, #0
   1263c:	e58d3000 	str	r3, [sp]
   12640:	e3a03000 	mov	r3, #0
   12644:	e3a02080 	mov	r2, #128	; 0x80
   12648:	e59f1050 	ldr	r1, [pc, #80]	; 126a0 <vTaskStartScheduler+0x8c>
   1264c:	e59f0050 	ldr	r0, [pc, #80]	; 126a4 <vTaskStartScheduler+0x90>
   12650:	ebfffd52 	bl	11ba0 <xTaskGenericCreate>
   12654:	e50b0008 	str	r0, [fp, #-8]
			xReturn = xTimerCreateTimerTask();
		}
	}
	#endif

	if( xReturn == pdPASS )
   12658:	e51b3008 	ldr	r3, [fp, #-8]
   1265c:	e3530001 	cmp	r3, #1
   12660:	1a00000b 	bne	12694 <vTaskStartScheduler+0x80>
		so interrupts will automatically get re-enabled when the first task
		starts to run.

		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
		portDISABLE_INTERRUPTS();
   12664:	e92d0001 	stmfd	sp!, {r0}
   12668:	e10f0000 	mrs	r0, CPSR
   1266c:	e38000c0 	orr	r0, r0, #192	; 0xc0
   12670:	e129f000 	msr	CPSR_fc, r0
   12674:	e8bd0001 	ldmfd	sp!, {r0}

		xSchedulerRunning = pdTRUE;
   12678:	e59f3028 	ldr	r3, [pc, #40]	; 126a8 <vTaskStartScheduler+0x94>
   1267c:	e3a02001 	mov	r2, #1
   12680:	e5832000 	str	r2, [r3]
		xTickCount = ( portTickType ) 0U;
   12684:	e59f3020 	ldr	r3, [pc, #32]	; 126ac <vTaskStartScheduler+0x98>
   12688:	e3a02000 	mov	r2, #0
   1268c:	e5832000 	str	r2, [r3]
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();		

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
   12690:	ebfff6ea 	bl	10240 <xPortStartScheduler>
		}
	}

	/* This line will only be reached if the kernel could not be started. */
	configASSERT( xReturn );
}
   12694:	e320f000 	nop	{0}
   12698:	e24bd004 	sub	sp, fp, #4
   1269c:	e8bd8800 	pop	{fp, pc}
   126a0:	00028270 	andeq	r8, r2, r0, ror r2
   126a4:	000130bc 	strheq	r3, [r1], -ip
   126a8:	0002becc 	andeq	fp, r2, ip, asr #29
   126ac:	0002bec0 	andeq	fp, r2, r0, asr #29

000126b0 <vTaskEndScheduler>:
/*-----------------------------------------------------------*/

void vTaskEndScheduler( void )
{
   126b0:	e92d4800 	push	{fp, lr}
   126b4:	e28db004 	add	fp, sp, #4
	/* Stop the scheduler interrupts and call the portable scheduler end
	routine so the original ISRs can be restored if necessary.  The port
	layer must ensure interrupts enable	bit is left in the correct state. */
	portDISABLE_INTERRUPTS();
   126b8:	e92d0001 	stmfd	sp!, {r0}
   126bc:	e10f0000 	mrs	r0, CPSR
   126c0:	e38000c0 	orr	r0, r0, #192	; 0xc0
   126c4:	e129f000 	msr	CPSR_fc, r0
   126c8:	e8bd0001 	ldmfd	sp!, {r0}
	xSchedulerRunning = pdFALSE;
   126cc:	e59f3010 	ldr	r3, [pc, #16]	; 126e4 <vTaskEndScheduler+0x34>
   126d0:	e3a02000 	mov	r2, #0
   126d4:	e5832000 	str	r2, [r3]
	vPortEndScheduler();
   126d8:	ebfff6df 	bl	1025c <vPortEndScheduler>
}
   126dc:	e320f000 	nop	{0}
   126e0:	e8bd8800 	pop	{fp, pc}
   126e4:	0002becc 	andeq	fp, r2, ip, asr #29

000126e8 <vTaskSuspendAll>:
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
   126e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   126ec:	e28db000 	add	fp, sp, #0
	/* A critical section is not required as the variable is of type
	portBASE_TYPE. */
	++uxSchedulerSuspended;
   126f0:	e59f301c 	ldr	r3, [pc, #28]	; 12714 <vTaskSuspendAll+0x2c>
   126f4:	e5933000 	ldr	r3, [r3]
   126f8:	e2833001 	add	r3, r3, #1
   126fc:	e59f2010 	ldr	r2, [pc, #16]	; 12714 <vTaskSuspendAll+0x2c>
   12700:	e5823000 	str	r3, [r2]
}
   12704:	e320f000 	nop	{0}
   12708:	e28bd000 	add	sp, fp, #0
   1270c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12710:	e12fff1e 	bx	lr
   12714:	0002bed0 	ldrdeq	fp, [r2], -r0

00012718 <xTaskResumeAll>:
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
   12718:	e92d4810 	push	{r4, fp, lr}
   1271c:	e28db008 	add	fp, sp, #8
   12720:	e24dd00c 	sub	sp, sp, #12
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
   12724:	e3a03000 	mov	r3, #0
   12728:	e50b3010 	str	r3, [fp, #-16]
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
   1272c:	ebfff783 	bl	10540 <vPortEnterCritical>
	{
		--uxSchedulerSuspended;
   12730:	e59f3164 	ldr	r3, [pc, #356]	; 1289c <xTaskResumeAll+0x184>
   12734:	e5933000 	ldr	r3, [r3]
   12738:	e2433001 	sub	r3, r3, #1
   1273c:	e59f2158 	ldr	r2, [pc, #344]	; 1289c <xTaskResumeAll+0x184>
   12740:	e5823000 	str	r3, [r2]

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
   12744:	e59f3150 	ldr	r3, [pc, #336]	; 1289c <xTaskResumeAll+0x184>
   12748:	e5933000 	ldr	r3, [r3]
   1274c:	e3530000 	cmp	r3, #0
   12750:	1a00004c 	bne	12888 <xTaskResumeAll+0x170>
		{
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0U )
   12754:	e59f3144 	ldr	r3, [pc, #324]	; 128a0 <xTaskResumeAll+0x188>
   12758:	e5933000 	ldr	r3, [r3]
   1275c:	e3530000 	cmp	r3, #0
   12760:	0a000048 	beq	12888 <xTaskResumeAll+0x170>
			{
				portBASE_TYPE xYieldRequired = pdFALSE;
   12764:	e3a03000 	mov	r3, #0
   12768:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
   1276c:	ea000023 	b	12800 <xTaskResumeAll+0xe8>
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
   12770:	e59f312c 	ldr	r3, [pc, #300]	; 128a4 <xTaskResumeAll+0x18c>
   12774:	e593300c 	ldr	r3, [r3, #12]
   12778:	e593400c 	ldr	r4, [r3, #12]
					vListRemove( &( pxTCB->xEventListItem ) );
   1277c:	e2843018 	add	r3, r4, #24
   12780:	e1a00003 	mov	r0, r3
   12784:	ebfff9f3 	bl	10f58 <vListRemove>
					vListRemove( &( pxTCB->xGenericListItem ) );
   12788:	e2843004 	add	r3, r4, #4
   1278c:	e1a00003 	mov	r0, r3
   12790:	ebfff9f0 	bl	10f58 <vListRemove>
					prvAddTaskToReadyQueue( pxTCB );
   12794:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
   12798:	e59f3108 	ldr	r3, [pc, #264]	; 128a8 <xTaskResumeAll+0x190>
   1279c:	e5933000 	ldr	r3, [r3]
   127a0:	e1520003 	cmp	r2, r3
   127a4:	9a000002 	bls	127b4 <xTaskResumeAll+0x9c>
   127a8:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   127ac:	e59f20f4 	ldr	r2, [pc, #244]	; 128a8 <xTaskResumeAll+0x190>
   127b0:	e5823000 	str	r3, [r2]
   127b4:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
   127b8:	e1a03002 	mov	r3, r2
   127bc:	e1a03103 	lsl	r3, r3, #2
   127c0:	e0833002 	add	r3, r3, r2
   127c4:	e1a03103 	lsl	r3, r3, #2
   127c8:	e59f20dc 	ldr	r2, [pc, #220]	; 128ac <xTaskResumeAll+0x194>
   127cc:	e0833002 	add	r3, r3, r2
   127d0:	e2842004 	add	r2, r4, #4
   127d4:	e1a01002 	mov	r1, r2
   127d8:	e1a00003 	mov	r0, r3
   127dc:	ebfff981 	bl	10de8 <vListInsertEnd>

					/* If we have moved a task that has a priority higher than
					the current task then we should yield. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   127e0:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
   127e4:	e59f30c4 	ldr	r3, [pc, #196]	; 128b0 <xTaskResumeAll+0x198>
   127e8:	e5933000 	ldr	r3, [r3]
   127ec:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   127f0:	e1520003 	cmp	r2, r3
   127f4:	3a000001 	bcc	12800 <xTaskResumeAll+0xe8>
					{
						xYieldRequired = pdTRUE;
   127f8:	e3a03001 	mov	r3, #1
   127fc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
   12800:	e59f309c 	ldr	r3, [pc, #156]	; 128a4 <xTaskResumeAll+0x18c>
   12804:	e5933000 	ldr	r3, [r3]
   12808:	e3530000 	cmp	r3, #0
   1280c:	1affffd7 	bne	12770 <xTaskResumeAll+0x58>
				}

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
   12810:	e59f309c 	ldr	r3, [pc, #156]	; 128b4 <xTaskResumeAll+0x19c>
   12814:	e5933000 	ldr	r3, [r3]
   12818:	e3530000 	cmp	r3, #0
   1281c:	0a00000c 	beq	12854 <xTaskResumeAll+0x13c>
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
   12820:	ea000005 	b	1283c <xTaskResumeAll+0x124>
					{
						vTaskIncrementTick();
   12824:	eb000048 	bl	1294c <vTaskIncrementTick>
						--uxMissedTicks;
   12828:	e59f3084 	ldr	r3, [pc, #132]	; 128b4 <xTaskResumeAll+0x19c>
   1282c:	e5933000 	ldr	r3, [r3]
   12830:	e2433001 	sub	r3, r3, #1
   12834:	e59f2078 	ldr	r2, [pc, #120]	; 128b4 <xTaskResumeAll+0x19c>
   12838:	e5823000 	str	r3, [r2]
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
   1283c:	e59f3070 	ldr	r3, [pc, #112]	; 128b4 <xTaskResumeAll+0x19c>
   12840:	e5933000 	ldr	r3, [r3]
   12844:	e3530000 	cmp	r3, #0
   12848:	1afffff5 	bne	12824 <xTaskResumeAll+0x10c>
					/* As we have processed some ticks it is appropriate to yield
					to ensure the highest priority task that is ready to run is
					the task actually running. */
					#if configUSE_PREEMPTION == 1
					{
						xYieldRequired = pdTRUE;
   1284c:	e3a03001 	mov	r3, #1
   12850:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
   12854:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   12858:	e3530001 	cmp	r3, #1
   1285c:	0a000003 	beq	12870 <xTaskResumeAll+0x158>
   12860:	e59f3050 	ldr	r3, [pc, #80]	; 128b8 <xTaskResumeAll+0x1a0>
   12864:	e5933000 	ldr	r3, [r3]
   12868:	e3530001 	cmp	r3, #1
   1286c:	1a000005 	bne	12888 <xTaskResumeAll+0x170>
				{
					xAlreadyYielded = pdTRUE;
   12870:	e3a03001 	mov	r3, #1
   12874:	e50b3010 	str	r3, [fp, #-16]
					xMissedYield = pdFALSE;
   12878:	e59f3038 	ldr	r3, [pc, #56]	; 128b8 <xTaskResumeAll+0x1a0>
   1287c:	e3a02000 	mov	r2, #0
   12880:	e5832000 	str	r2, [r3]
					portYIELD_WITHIN_API();
   12884:	ef000000 	svc	0x00000000
				}
			}
		}
	}
	taskEXIT_CRITICAL();
   12888:	ebfff73d 	bl	10584 <vPortExitCritical>

	return xAlreadyYielded;
   1288c:	e51b3010 	ldr	r3, [fp, #-16]
}
   12890:	e1a00003 	mov	r0, r3
   12894:	e24bd008 	sub	sp, fp, #8
   12898:	e8bd8810 	pop	{r4, fp, pc}
   1289c:	0002bed0 	ldrdeq	fp, [r2], -r0
   128a0:	0002bebc 			; <UNDEFINED> instruction: 0x0002bebc
   128a4:	0002be7c 	andeq	fp, r2, ip, ror lr
   128a8:	0002bec8 	andeq	fp, r2, r8, asr #29
   128ac:	0002bde8 	andeq	fp, r2, r8, ror #27
   128b0:	0002bde4 	andeq	fp, r2, r4, ror #27
   128b4:	0002bed4 	ldrdeq	fp, [r2], -r4
   128b8:	0002bed8 	ldrdeq	fp, [r2], -r8

000128bc <xTaskGetTickCount>:
 *----------------------------------------------------------*/



portTickType xTaskGetTickCount( void )
{
   128bc:	e92d4800 	push	{fp, lr}
   128c0:	e28db004 	add	fp, sp, #4
   128c4:	e24dd008 	sub	sp, sp, #8
portTickType xTicks;

	/* Critical section required if running on a 16 bit processor. */
	taskENTER_CRITICAL();
   128c8:	ebfff71c 	bl	10540 <vPortEnterCritical>
	{
		xTicks = xTickCount;
   128cc:	e59f3018 	ldr	r3, [pc, #24]	; 128ec <xTaskGetTickCount+0x30>
   128d0:	e5933000 	ldr	r3, [r3]
   128d4:	e50b3008 	str	r3, [fp, #-8]
	}
	taskEXIT_CRITICAL();
   128d8:	ebfff729 	bl	10584 <vPortExitCritical>

	return xTicks;
   128dc:	e51b3008 	ldr	r3, [fp, #-8]
}
   128e0:	e1a00003 	mov	r0, r3
   128e4:	e24bd004 	sub	sp, fp, #4
   128e8:	e8bd8800 	pop	{fp, pc}
   128ec:	0002bec0 	andeq	fp, r2, r0, asr #29

000128f0 <xTaskGetTickCountFromISR>:
/*-----------------------------------------------------------*/

portTickType xTaskGetTickCountFromISR( void )
{
   128f0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   128f4:	e28db000 	add	fp, sp, #0
   128f8:	e24dd00c 	sub	sp, sp, #12
portTickType xReturn;
unsigned portBASE_TYPE uxSavedInterruptStatus;

	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
   128fc:	e3a03000 	mov	r3, #0
   12900:	e50b3008 	str	r3, [fp, #-8]
	xReturn = xTickCount;
   12904:	e59f3018 	ldr	r3, [pc, #24]	; 12924 <xTaskGetTickCountFromISR+0x34>
   12908:	e5933000 	ldr	r3, [r3]
   1290c:	e50b300c 	str	r3, [fp, #-12]
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

	return xReturn;
   12910:	e51b300c 	ldr	r3, [fp, #-12]
}
   12914:	e1a00003 	mov	r0, r3
   12918:	e28bd000 	add	sp, fp, #0
   1291c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12920:	e12fff1e 	bx	lr
   12924:	0002bec0 	andeq	fp, r2, r0, asr #29

00012928 <uxTaskGetNumberOfTasks>:
/*-----------------------------------------------------------*/

unsigned portBASE_TYPE uxTaskGetNumberOfTasks( void )
{
   12928:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1292c:	e28db000 	add	fp, sp, #0
	/* A critical section is not required because the variables are of type
	portBASE_TYPE. */
	return uxCurrentNumberOfTasks;
   12930:	e59f3010 	ldr	r3, [pc, #16]	; 12948 <uxTaskGetNumberOfTasks+0x20>
   12934:	e5933000 	ldr	r3, [r3]
}
   12938:	e1a00003 	mov	r0, r3
   1293c:	e28bd000 	add	sp, fp, #0
   12940:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12944:	e12fff1e 	bx	lr
   12948:	0002bebc 			; <UNDEFINED> instruction: 0x0002bebc

0001294c <vTaskIncrementTick>:
 * SCHEDULER INTERNALS AVAILABLE FOR PORTING PURPOSES
 * documented in task.h
 *----------------------------------------------------------*/

void vTaskIncrementTick( void )
{
   1294c:	e92d4800 	push	{fp, lr}
   12950:	e28db004 	add	fp, sp, #4
   12954:	e24dd010 	sub	sp, sp, #16
tskTCB * pxTCB;

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
   12958:	e59f31e4 	ldr	r3, [pc, #484]	; 12b44 <vTaskIncrementTick+0x1f8>
   1295c:	e5933000 	ldr	r3, [r3]
   12960:	e3530000 	cmp	r3, #0
   12964:	1a00006d 	bne	12b20 <vTaskIncrementTick+0x1d4>
	{
		++xTickCount;
   12968:	e59f31d8 	ldr	r3, [pc, #472]	; 12b48 <vTaskIncrementTick+0x1fc>
   1296c:	e5933000 	ldr	r3, [r3]
   12970:	e2833001 	add	r3, r3, #1
   12974:	e59f21cc 	ldr	r2, [pc, #460]	; 12b48 <vTaskIncrementTick+0x1fc>
   12978:	e5823000 	str	r3, [r2]
		if( xTickCount == ( portTickType ) 0U )
   1297c:	e59f31c4 	ldr	r3, [pc, #452]	; 12b48 <vTaskIncrementTick+0x1fc>
   12980:	e5933000 	ldr	r3, [r3]
   12984:	e3530000 	cmp	r3, #0
   12988:	1a000020 	bne	12a10 <vTaskIncrementTick+0xc4>
			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );

			pxTemp = pxDelayedTaskList;
   1298c:	e59f31b8 	ldr	r3, [pc, #440]	; 12b4c <vTaskIncrementTick+0x200>
   12990:	e5933000 	ldr	r3, [r3]
   12994:	e50b3008 	str	r3, [fp, #-8]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
   12998:	e59f31b0 	ldr	r3, [pc, #432]	; 12b50 <vTaskIncrementTick+0x204>
   1299c:	e5933000 	ldr	r3, [r3]
   129a0:	e59f21a4 	ldr	r2, [pc, #420]	; 12b4c <vTaskIncrementTick+0x200>
   129a4:	e5823000 	str	r3, [r2]
			pxOverflowDelayedTaskList = pxTemp;
   129a8:	e59f21a0 	ldr	r2, [pc, #416]	; 12b50 <vTaskIncrementTick+0x204>
   129ac:	e51b3008 	ldr	r3, [fp, #-8]
   129b0:	e5823000 	str	r3, [r2]
			xNumOfOverflows++;
   129b4:	e59f3198 	ldr	r3, [pc, #408]	; 12b54 <vTaskIncrementTick+0x208>
   129b8:	e5933000 	ldr	r3, [r3]
   129bc:	e2833001 	add	r3, r3, #1
   129c0:	e59f218c 	ldr	r2, [pc, #396]	; 12b54 <vTaskIncrementTick+0x208>
   129c4:	e5823000 	str	r3, [r2]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   129c8:	e59f317c 	ldr	r3, [pc, #380]	; 12b4c <vTaskIncrementTick+0x200>
   129cc:	e5933000 	ldr	r3, [r3]
   129d0:	e5933000 	ldr	r3, [r3]
   129d4:	e3530000 	cmp	r3, #0
   129d8:	1a000003 	bne	129ec <vTaskIncrementTick+0xa0>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
   129dc:	e59f3174 	ldr	r3, [pc, #372]	; 12b58 <vTaskIncrementTick+0x20c>
   129e0:	e3e02000 	mvn	r2, #0
   129e4:	e5832000 	str	r2, [r3]
   129e8:	ea000008 	b	12a10 <vTaskIncrementTick+0xc4>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   129ec:	e59f3158 	ldr	r3, [pc, #344]	; 12b4c <vTaskIncrementTick+0x200>
   129f0:	e5933000 	ldr	r3, [r3]
   129f4:	e593300c 	ldr	r3, [r3, #12]
   129f8:	e593300c 	ldr	r3, [r3, #12]
   129fc:	e50b300c 	str	r3, [fp, #-12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
   12a00:	e51b300c 	ldr	r3, [fp, #-12]
   12a04:	e5933004 	ldr	r3, [r3, #4]
   12a08:	e59f2148 	ldr	r2, [pc, #328]	; 12b58 <vTaskIncrementTick+0x20c>
   12a0c:	e5823000 	str	r3, [r2]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
   12a10:	e59f3130 	ldr	r3, [pc, #304]	; 12b48 <vTaskIncrementTick+0x1fc>
   12a14:	e5932000 	ldr	r2, [r3]
   12a18:	e59f3138 	ldr	r3, [pc, #312]	; 12b58 <vTaskIncrementTick+0x20c>
   12a1c:	e5933000 	ldr	r3, [r3]
   12a20:	e1520003 	cmp	r2, r3
   12a24:	3a000043 	bcc	12b38 <vTaskIncrementTick+0x1ec>
   12a28:	e59f311c 	ldr	r3, [pc, #284]	; 12b4c <vTaskIncrementTick+0x200>
   12a2c:	e5933000 	ldr	r3, [r3]
   12a30:	e5933000 	ldr	r3, [r3]
   12a34:	e3530000 	cmp	r3, #0
   12a38:	1a000003 	bne	12a4c <vTaskIncrementTick+0x100>
   12a3c:	e59f3114 	ldr	r3, [pc, #276]	; 12b58 <vTaskIncrementTick+0x20c>
   12a40:	e3e02000 	mvn	r2, #0
   12a44:	e5832000 	str	r2, [r3]
   12a48:	ea00003a 	b	12b38 <vTaskIncrementTick+0x1ec>
   12a4c:	e59f30f8 	ldr	r3, [pc, #248]	; 12b4c <vTaskIncrementTick+0x200>
   12a50:	e5933000 	ldr	r3, [r3]
   12a54:	e593300c 	ldr	r3, [r3, #12]
   12a58:	e593300c 	ldr	r3, [r3, #12]
   12a5c:	e50b300c 	str	r3, [fp, #-12]
   12a60:	e51b300c 	ldr	r3, [fp, #-12]
   12a64:	e5933004 	ldr	r3, [r3, #4]
   12a68:	e50b3010 	str	r3, [fp, #-16]
   12a6c:	e59f30d4 	ldr	r3, [pc, #212]	; 12b48 <vTaskIncrementTick+0x1fc>
   12a70:	e5933000 	ldr	r3, [r3]
   12a74:	e51b2010 	ldr	r2, [fp, #-16]
   12a78:	e1520003 	cmp	r2, r3
   12a7c:	9a000003 	bls	12a90 <vTaskIncrementTick+0x144>
   12a80:	e59f20d0 	ldr	r2, [pc, #208]	; 12b58 <vTaskIncrementTick+0x20c>
   12a84:	e51b3010 	ldr	r3, [fp, #-16]
   12a88:	e5823000 	str	r3, [r2]
   12a8c:	ea000029 	b	12b38 <vTaskIncrementTick+0x1ec>
   12a90:	e51b300c 	ldr	r3, [fp, #-12]
   12a94:	e2833004 	add	r3, r3, #4
   12a98:	e1a00003 	mov	r0, r3
   12a9c:	ebfff92d 	bl	10f58 <vListRemove>
   12aa0:	e51b300c 	ldr	r3, [fp, #-12]
   12aa4:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   12aa8:	e3530000 	cmp	r3, #0
   12aac:	0a000003 	beq	12ac0 <vTaskIncrementTick+0x174>
   12ab0:	e51b300c 	ldr	r3, [fp, #-12]
   12ab4:	e2833018 	add	r3, r3, #24
   12ab8:	e1a00003 	mov	r0, r3
   12abc:	ebfff925 	bl	10f58 <vListRemove>
   12ac0:	e51b300c 	ldr	r3, [fp, #-12]
   12ac4:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12ac8:	e59f308c 	ldr	r3, [pc, #140]	; 12b5c <vTaskIncrementTick+0x210>
   12acc:	e5933000 	ldr	r3, [r3]
   12ad0:	e1520003 	cmp	r2, r3
   12ad4:	9a000003 	bls	12ae8 <vTaskIncrementTick+0x19c>
   12ad8:	e51b300c 	ldr	r3, [fp, #-12]
   12adc:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12ae0:	e59f2074 	ldr	r2, [pc, #116]	; 12b5c <vTaskIncrementTick+0x210>
   12ae4:	e5823000 	str	r3, [r2]
   12ae8:	e51b300c 	ldr	r3, [fp, #-12]
   12aec:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12af0:	e1a03002 	mov	r3, r2
   12af4:	e1a03103 	lsl	r3, r3, #2
   12af8:	e0833002 	add	r3, r3, r2
   12afc:	e1a03103 	lsl	r3, r3, #2
   12b00:	e59f2058 	ldr	r2, [pc, #88]	; 12b60 <vTaskIncrementTick+0x214>
   12b04:	e0832002 	add	r2, r3, r2
   12b08:	e51b300c 	ldr	r3, [fp, #-12]
   12b0c:	e2833004 	add	r3, r3, #4
   12b10:	e1a01003 	mov	r1, r3
   12b14:	e1a00002 	mov	r0, r2
   12b18:	ebfff8b2 	bl	10de8 <vListInsertEnd>
   12b1c:	eaffffc1 	b	12a28 <vTaskIncrementTick+0xdc>
	}
	else
	{
		++uxMissedTicks;
   12b20:	e59f303c 	ldr	r3, [pc, #60]	; 12b64 <vTaskIncrementTick+0x218>
   12b24:	e5933000 	ldr	r3, [r3]
   12b28:	e2833001 	add	r3, r3, #1
   12b2c:	e59f2030 	ldr	r2, [pc, #48]	; 12b64 <vTaskIncrementTick+0x218>
   12b30:	e5823000 	str	r3, [r2]
		}
	}
	#endif

	traceTASK_INCREMENT_TICK( xTickCount );
}
   12b34:	eaffffff 	b	12b38 <vTaskIncrementTick+0x1ec>
   12b38:	e320f000 	nop	{0}
   12b3c:	e24bd004 	sub	sp, fp, #4
   12b40:	e8bd8800 	pop	{fp, pc}
   12b44:	0002bed0 	ldrdeq	fp, [r2], -r0
   12b48:	0002bec0 	andeq	fp, r2, r0, asr #29
   12b4c:	0002be74 	andeq	fp, r2, r4, ror lr
   12b50:	0002be78 	andeq	fp, r2, r8, ror lr
   12b54:	0002bedc 	ldrdeq	fp, [r2], -ip
   12b58:	0002bcc4 	andeq	fp, r2, r4, asr #25
   12b5c:	0002bec8 	andeq	fp, r2, r8, asr #29
   12b60:	0002bde8 	andeq	fp, r2, r8, ror #27
   12b64:	0002bed4 	ldrdeq	fp, [r2], -r4

00012b68 <vTaskSetApplicationTaskTag>:
/*-----------------------------------------------------------*/

#if ( configUSE_APPLICATION_TASK_TAG == 1 )

	void vTaskSetApplicationTaskTag( xTaskHandle xTask, pdTASK_HOOK_CODE pxHookFunction )
	{
   12b68:	e92d4800 	push	{fp, lr}
   12b6c:	e28db004 	add	fp, sp, #4
   12b70:	e24dd010 	sub	sp, sp, #16
   12b74:	e50b0010 	str	r0, [fp, #-16]
   12b78:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	tskTCB *xTCB;

		/* If xTask is NULL then we are setting our own task hook. */
		if( xTask == NULL )
   12b7c:	e51b3010 	ldr	r3, [fp, #-16]
   12b80:	e3530000 	cmp	r3, #0
   12b84:	1a000003 	bne	12b98 <vTaskSetApplicationTaskTag+0x30>
		{
			xTCB = ( tskTCB * ) pxCurrentTCB;
   12b88:	e59f3030 	ldr	r3, [pc, #48]	; 12bc0 <vTaskSetApplicationTaskTag+0x58>
   12b8c:	e5933000 	ldr	r3, [r3]
   12b90:	e50b3008 	str	r3, [fp, #-8]
   12b94:	ea000001 	b	12ba0 <vTaskSetApplicationTaskTag+0x38>
		}
		else
		{
			xTCB = ( tskTCB * ) xTask;
   12b98:	e51b3010 	ldr	r3, [fp, #-16]
   12b9c:	e50b3008 	str	r3, [fp, #-8]
		}

		/* Save the hook function in the TCB.  A critical section is required as
		the value can be accessed from an interrupt. */
		taskENTER_CRITICAL();
   12ba0:	ebfff666 	bl	10540 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
   12ba4:	e51b3008 	ldr	r3, [fp, #-8]
   12ba8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   12bac:	e5832044 	str	r2, [r3, #68]	; 0x44
		taskEXIT_CRITICAL();
   12bb0:	ebfff673 	bl	10584 <vPortExitCritical>
	}
   12bb4:	e320f000 	nop	{0}
   12bb8:	e24bd004 	sub	sp, fp, #4
   12bbc:	e8bd8800 	pop	{fp, pc}
   12bc0:	0002bde4 	andeq	fp, r2, r4, ror #27

00012bc4 <xTaskGetApplicationTaskTag>:
/*-----------------------------------------------------------*/

#if ( configUSE_APPLICATION_TASK_TAG == 1 )

	pdTASK_HOOK_CODE xTaskGetApplicationTaskTag( xTaskHandle xTask )
	{
   12bc4:	e92d4800 	push	{fp, lr}
   12bc8:	e28db004 	add	fp, sp, #4
   12bcc:	e24dd010 	sub	sp, sp, #16
   12bd0:	e50b0010 	str	r0, [fp, #-16]
	tskTCB *xTCB;
	pdTASK_HOOK_CODE xReturn;

		/* If xTask is NULL then we are setting our own task hook. */
		if( xTask == NULL )
   12bd4:	e51b3010 	ldr	r3, [fp, #-16]
   12bd8:	e3530000 	cmp	r3, #0
   12bdc:	1a000003 	bne	12bf0 <xTaskGetApplicationTaskTag+0x2c>
		{
			xTCB = ( tskTCB * ) pxCurrentTCB;
   12be0:	e59f3034 	ldr	r3, [pc, #52]	; 12c1c <xTaskGetApplicationTaskTag+0x58>
   12be4:	e5933000 	ldr	r3, [r3]
   12be8:	e50b3008 	str	r3, [fp, #-8]
   12bec:	ea000001 	b	12bf8 <xTaskGetApplicationTaskTag+0x34>
		}
		else
		{
			xTCB = ( tskTCB * ) xTask;
   12bf0:	e51b3010 	ldr	r3, [fp, #-16]
   12bf4:	e50b3008 	str	r3, [fp, #-8]
		}

		/* Save the hook function in the TCB.  A critical section is required as
		the value can be accessed from an interrupt. */
		taskENTER_CRITICAL();
   12bf8:	ebfff650 	bl	10540 <vPortEnterCritical>
			xReturn = xTCB->pxTaskTag;
   12bfc:	e51b3008 	ldr	r3, [fp, #-8]
   12c00:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   12c04:	e50b300c 	str	r3, [fp, #-12]
		taskEXIT_CRITICAL();
   12c08:	ebfff65d 	bl	10584 <vPortExitCritical>

		return xReturn;
   12c0c:	e51b300c 	ldr	r3, [fp, #-12]
	}
   12c10:	e1a00003 	mov	r0, r3
   12c14:	e24bd004 	sub	sp, fp, #4
   12c18:	e8bd8800 	pop	{fp, pc}
   12c1c:	0002bde4 	andeq	fp, r2, r4, ror #27

00012c20 <xTaskCallApplicationTaskHook>:
/*-----------------------------------------------------------*/

#if ( configUSE_APPLICATION_TASK_TAG == 1 )

	portBASE_TYPE xTaskCallApplicationTaskHook( xTaskHandle xTask, void *pvParameter )
	{
   12c20:	e92d4800 	push	{fp, lr}
   12c24:	e28db004 	add	fp, sp, #4
   12c28:	e24dd010 	sub	sp, sp, #16
   12c2c:	e50b0010 	str	r0, [fp, #-16]
   12c30:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	tskTCB *xTCB;
	portBASE_TYPE xReturn;

		/* If xTask is NULL then we are calling our own task hook. */
		if( xTask == NULL )
   12c34:	e51b3010 	ldr	r3, [fp, #-16]
   12c38:	e3530000 	cmp	r3, #0
   12c3c:	1a000003 	bne	12c50 <xTaskCallApplicationTaskHook+0x30>
		{
			xTCB = ( tskTCB * ) pxCurrentTCB;
   12c40:	e59f3050 	ldr	r3, [pc, #80]	; 12c98 <xTaskCallApplicationTaskHook+0x78>
   12c44:	e5933000 	ldr	r3, [r3]
   12c48:	e50b3008 	str	r3, [fp, #-8]
   12c4c:	ea000001 	b	12c58 <xTaskCallApplicationTaskHook+0x38>
		}
		else
		{
			xTCB = ( tskTCB * ) xTask;
   12c50:	e51b3010 	ldr	r3, [fp, #-16]
   12c54:	e50b3008 	str	r3, [fp, #-8]
		}

		if( xTCB->pxTaskTag != NULL )
   12c58:	e51b3008 	ldr	r3, [fp, #-8]
   12c5c:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   12c60:	e3530000 	cmp	r3, #0
   12c64:	0a000005 	beq	12c80 <xTaskCallApplicationTaskHook+0x60>
		{
			xReturn = xTCB->pxTaskTag( pvParameter );
   12c68:	e51b3008 	ldr	r3, [fp, #-8]
   12c6c:	e5933044 	ldr	r3, [r3, #68]	; 0x44
   12c70:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   12c74:	e12fff33 	blx	r3
   12c78:	e50b000c 	str	r0, [fp, #-12]
   12c7c:	ea000001 	b	12c88 <xTaskCallApplicationTaskHook+0x68>
		}
		else
		{
			xReturn = pdFAIL;
   12c80:	e3a03000 	mov	r3, #0
   12c84:	e50b300c 	str	r3, [fp, #-12]
		}

		return xReturn;
   12c88:	e51b300c 	ldr	r3, [fp, #-12]
	}
   12c8c:	e1a00003 	mov	r0, r3
   12c90:	e24bd004 	sub	sp, fp, #4
   12c94:	e8bd8800 	pop	{fp, pc}
   12c98:	0002bde4 	andeq	fp, r2, r4, ror #27

00012c9c <vTaskSwitchContext>:

#endif
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
   12c9c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12ca0:	e28db000 	add	fp, sp, #0
   12ca4:	e24dd00c 	sub	sp, sp, #12
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
   12ca8:	e59f30e0 	ldr	r3, [pc, #224]	; 12d90 <vTaskSwitchContext+0xf4>
   12cac:	e5933000 	ldr	r3, [r3]
   12cb0:	e3530000 	cmp	r3, #0
   12cb4:	0a000008 	beq	12cdc <vTaskSwitchContext+0x40>
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
   12cb8:	e59f30d4 	ldr	r3, [pc, #212]	; 12d94 <vTaskSwitchContext+0xf8>
   12cbc:	e3a02001 	mov	r2, #1
   12cc0:	e5832000 	str	r2, [r3]
		pTraceEvent = pxCurrentTCB->pTraceEvent;	// Restore Trace event pointer state to TCB.
#endif

		traceTASK_SWITCHED_IN();
	}
}
   12cc4:	ea00002d 	b	12d80 <vTaskSwitchContext+0xe4>
			--uxTopReadyPriority;
   12cc8:	e59f30c8 	ldr	r3, [pc, #200]	; 12d98 <vTaskSwitchContext+0xfc>
   12ccc:	e5933000 	ldr	r3, [r3]
   12cd0:	e2433001 	sub	r3, r3, #1
   12cd4:	e59f20bc 	ldr	r2, [pc, #188]	; 12d98 <vTaskSwitchContext+0xfc>
   12cd8:	e5823000 	str	r3, [r2]
		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )
   12cdc:	e59f30b4 	ldr	r3, [pc, #180]	; 12d98 <vTaskSwitchContext+0xfc>
   12ce0:	e5932000 	ldr	r2, [r3]
   12ce4:	e59f10b0 	ldr	r1, [pc, #176]	; 12d9c <vTaskSwitchContext+0x100>
   12ce8:	e1a03002 	mov	r3, r2
   12cec:	e1a03103 	lsl	r3, r3, #2
   12cf0:	e0833002 	add	r3, r3, r2
   12cf4:	e1a03103 	lsl	r3, r3, #2
   12cf8:	e0813003 	add	r3, r1, r3
   12cfc:	e5933000 	ldr	r3, [r3]
   12d00:	e3530000 	cmp	r3, #0
   12d04:	0affffef 	beq	12cc8 <vTaskSwitchContext+0x2c>
		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );
   12d08:	e59f3088 	ldr	r3, [pc, #136]	; 12d98 <vTaskSwitchContext+0xfc>
   12d0c:	e5932000 	ldr	r2, [r3]
   12d10:	e1a03002 	mov	r3, r2
   12d14:	e1a03103 	lsl	r3, r3, #2
   12d18:	e0833002 	add	r3, r3, r2
   12d1c:	e1a03103 	lsl	r3, r3, #2
   12d20:	e59f2074 	ldr	r2, [pc, #116]	; 12d9c <vTaskSwitchContext+0x100>
   12d24:	e0833002 	add	r3, r3, r2
   12d28:	e50b3008 	str	r3, [fp, #-8]
   12d2c:	e51b3008 	ldr	r3, [fp, #-8]
   12d30:	e5933004 	ldr	r3, [r3, #4]
   12d34:	e5932004 	ldr	r2, [r3, #4]
   12d38:	e51b3008 	ldr	r3, [fp, #-8]
   12d3c:	e5832004 	str	r2, [r3, #4]
   12d40:	e51b3008 	ldr	r3, [fp, #-8]
   12d44:	e5932004 	ldr	r2, [r3, #4]
   12d48:	e51b3008 	ldr	r3, [fp, #-8]
   12d4c:	e2833008 	add	r3, r3, #8
   12d50:	e1520003 	cmp	r2, r3
   12d54:	1a000004 	bne	12d6c <vTaskSwitchContext+0xd0>
   12d58:	e51b3008 	ldr	r3, [fp, #-8]
   12d5c:	e5933004 	ldr	r3, [r3, #4]
   12d60:	e5932004 	ldr	r2, [r3, #4]
   12d64:	e51b3008 	ldr	r3, [fp, #-8]
   12d68:	e5832004 	str	r2, [r3, #4]
   12d6c:	e51b3008 	ldr	r3, [fp, #-8]
   12d70:	e5933004 	ldr	r3, [r3, #4]
   12d74:	e593300c 	ldr	r3, [r3, #12]
   12d78:	e59f2020 	ldr	r2, [pc, #32]	; 12da0 <vTaskSwitchContext+0x104>
   12d7c:	e5823000 	str	r3, [r2]
}
   12d80:	e320f000 	nop	{0}
   12d84:	e28bd000 	add	sp, fp, #0
   12d88:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12d8c:	e12fff1e 	bx	lr
   12d90:	0002bed0 	ldrdeq	fp, [r2], -r0
   12d94:	0002bed8 	ldrdeq	fp, [r2], -r8
   12d98:	0002bec8 	andeq	fp, r2, r8, asr #29
   12d9c:	0002bde8 	andeq	fp, r2, r8, ror #27
   12da0:	0002bde4 	andeq	fp, r2, r4, ror #27

00012da4 <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
{
   12da4:	e92d4800 	push	{fp, lr}
   12da8:	e28db004 	add	fp, sp, #4
   12dac:	e24dd010 	sub	sp, sp, #16
   12db0:	e50b0010 	str	r0, [fp, #-16]
   12db4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	SCHEDULER SUSPENDED. */

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event. */
	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
   12db8:	e59f3074 	ldr	r3, [pc, #116]	; 12e34 <vTaskPlaceOnEventList+0x90>
   12dbc:	e5933000 	ldr	r3, [r3]
   12dc0:	e2833018 	add	r3, r3, #24
   12dc4:	e1a01003 	mov	r1, r3
   12dc8:	e51b0010 	ldr	r0, [fp, #-16]
   12dcc:	ebfff82b 	bl	10e80 <vListInsert>

	/* We must remove ourselves from the ready list before adding ourselves
	to the blocked list as the same list item is used for both lists.  We have
	exclusive access to the ready lists as the scheduler is locked. */
	vListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
   12dd0:	e59f305c 	ldr	r3, [pc, #92]	; 12e34 <vTaskPlaceOnEventList+0x90>
   12dd4:	e5933000 	ldr	r3, [r3]
   12dd8:	e2833004 	add	r3, r3, #4
   12ddc:	e1a00003 	mov	r0, r3
   12de0:	ebfff85c 	bl	10f58 <vListRemove>


	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( xTicksToWait == portMAX_DELAY )
   12de4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   12de8:	e3730001 	cmn	r3, #1
   12dec:	1a000006 	bne	12e0c <vTaskPlaceOnEventList+0x68>
		{
			/* Add ourselves to the suspended task list instead of a delayed task
			list to ensure we are not woken by a timing event.  We will block
			indefinitely. */
			vListInsertEnd( ( xList * ) &xSuspendedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
   12df0:	e59f303c 	ldr	r3, [pc, #60]	; 12e34 <vTaskPlaceOnEventList+0x90>
   12df4:	e5933000 	ldr	r3, [r3]
   12df8:	e2833004 	add	r3, r3, #4
   12dfc:	e1a01003 	mov	r1, r3
   12e00:	e59f0030 	ldr	r0, [pc, #48]	; 12e38 <vTaskPlaceOnEventList+0x94>
   12e04:	ebfff7f7 	bl	10de8 <vListInsertEnd>
			not occur.  This may overflow but this doesn't matter. */
			xTimeToWake = xTickCount + xTicksToWait;
			prvAddCurrentTaskToDelayedList( xTimeToWake );
	}
	#endif
}
   12e08:	ea000006 	b	12e28 <vTaskPlaceOnEventList+0x84>
			xTimeToWake = xTickCount + xTicksToWait;
   12e0c:	e59f3028 	ldr	r3, [pc, #40]	; 12e3c <vTaskPlaceOnEventList+0x98>
   12e10:	e5933000 	ldr	r3, [r3]
   12e14:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   12e18:	e0823003 	add	r3, r2, r3
   12e1c:	e50b3008 	str	r3, [fp, #-8]
			prvAddCurrentTaskToDelayedList( xTimeToWake );
   12e20:	e51b0008 	ldr	r0, [fp, #-8]
   12e24:	eb00013f 	bl	13328 <prvAddCurrentTaskToDelayedList>
}
   12e28:	e320f000 	nop	{0}
   12e2c:	e24bd004 	sub	sp, fp, #4
   12e30:	e8bd8800 	pop	{fp, pc}
   12e34:	0002bde4 	andeq	fp, r2, r4, ror #27
   12e38:	0002bea8 	andeq	fp, r2, r8, lsr #29
   12e3c:	0002bec0 	andeq	fp, r2, r0, asr #29

00012e40 <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
{
   12e40:	e92d4800 	push	{fp, lr}
   12e44:	e28db004 	add	fp, sp, #4
   12e48:	e24dd010 	sub	sp, sp, #16
   12e4c:	e50b0010 	str	r0, [fp, #-16]
	get called - the lock count on the queue will get modified instead.  This
	means we can always expect exclusive access to the event list here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   12e50:	e51b3010 	ldr	r3, [fp, #-16]
   12e54:	e593300c 	ldr	r3, [r3, #12]
   12e58:	e593300c 	ldr	r3, [r3, #12]
   12e5c:	e50b300c 	str	r3, [fp, #-12]
	configASSERT( pxUnblockedTCB );
	vListRemove( &( pxUnblockedTCB->xEventListItem ) );
   12e60:	e51b300c 	ldr	r3, [fp, #-12]
   12e64:	e2833018 	add	r3, r3, #24
   12e68:	e1a00003 	mov	r0, r3
   12e6c:	ebfff839 	bl	10f58 <vListRemove>

	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
   12e70:	e59f30cc 	ldr	r3, [pc, #204]	; 12f44 <xTaskRemoveFromEventList+0x104>
   12e74:	e5933000 	ldr	r3, [r3]
   12e78:	e3530000 	cmp	r3, #0
   12e7c:	1a00001b 	bne	12ef0 <xTaskRemoveFromEventList+0xb0>
	{
		vListRemove( &( pxUnblockedTCB->xGenericListItem ) );
   12e80:	e51b300c 	ldr	r3, [fp, #-12]
   12e84:	e2833004 	add	r3, r3, #4
   12e88:	e1a00003 	mov	r0, r3
   12e8c:	ebfff831 	bl	10f58 <vListRemove>
		prvAddTaskToReadyQueue( pxUnblockedTCB );
   12e90:	e51b300c 	ldr	r3, [fp, #-12]
   12e94:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12e98:	e59f30a8 	ldr	r3, [pc, #168]	; 12f48 <xTaskRemoveFromEventList+0x108>
   12e9c:	e5933000 	ldr	r3, [r3]
   12ea0:	e1520003 	cmp	r2, r3
   12ea4:	9a000003 	bls	12eb8 <xTaskRemoveFromEventList+0x78>
   12ea8:	e51b300c 	ldr	r3, [fp, #-12]
   12eac:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12eb0:	e59f2090 	ldr	r2, [pc, #144]	; 12f48 <xTaskRemoveFromEventList+0x108>
   12eb4:	e5823000 	str	r3, [r2]
   12eb8:	e51b300c 	ldr	r3, [fp, #-12]
   12ebc:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12ec0:	e1a03002 	mov	r3, r2
   12ec4:	e1a03103 	lsl	r3, r3, #2
   12ec8:	e0833002 	add	r3, r3, r2
   12ecc:	e1a03103 	lsl	r3, r3, #2
   12ed0:	e59f2074 	ldr	r2, [pc, #116]	; 12f4c <xTaskRemoveFromEventList+0x10c>
   12ed4:	e0832002 	add	r2, r3, r2
   12ed8:	e51b300c 	ldr	r3, [fp, #-12]
   12edc:	e2833004 	add	r3, r3, #4
   12ee0:	e1a01003 	mov	r1, r3
   12ee4:	e1a00002 	mov	r0, r2
   12ee8:	ebfff7be 	bl	10de8 <vListInsertEnd>
   12eec:	ea000004 	b	12f04 <xTaskRemoveFromEventList+0xc4>
	}
	else
	{
		/* We cannot access the delayed or ready lists, so will hold this
		task pending until the scheduler is resumed. */
		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   12ef0:	e51b300c 	ldr	r3, [fp, #-12]
   12ef4:	e2833018 	add	r3, r3, #24
   12ef8:	e1a01003 	mov	r1, r3
   12efc:	e59f004c 	ldr	r0, [pc, #76]	; 12f50 <xTaskRemoveFromEventList+0x110>
   12f00:	ebfff7b8 	bl	10de8 <vListInsertEnd>
	}

	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
   12f04:	e51b300c 	ldr	r3, [fp, #-12]
   12f08:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   12f0c:	e59f3040 	ldr	r3, [pc, #64]	; 12f54 <xTaskRemoveFromEventList+0x114>
   12f10:	e5933000 	ldr	r3, [r3]
   12f14:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   12f18:	e1520003 	cmp	r2, r3
   12f1c:	3a000002 	bcc	12f2c <xTaskRemoveFromEventList+0xec>
	{
		/* Return true if the task removed from the event list has
		a higher priority than the calling task.  This allows
		the calling task to know if it should force a context
		switch now. */
		xReturn = pdTRUE;
   12f20:	e3a03001 	mov	r3, #1
   12f24:	e50b3008 	str	r3, [fp, #-8]
   12f28:	ea000001 	b	12f34 <xTaskRemoveFromEventList+0xf4>
	}
	else
	{
		xReturn = pdFALSE;
   12f2c:	e3a03000 	mov	r3, #0
   12f30:	e50b3008 	str	r3, [fp, #-8]
	}

	return xReturn;
   12f34:	e51b3008 	ldr	r3, [fp, #-8]
}
   12f38:	e1a00003 	mov	r0, r3
   12f3c:	e24bd004 	sub	sp, fp, #4
   12f40:	e8bd8800 	pop	{fp, pc}
   12f44:	0002bed0 	ldrdeq	fp, [r2], -r0
   12f48:	0002bec8 	andeq	fp, r2, r8, asr #29
   12f4c:	0002bde8 	andeq	fp, r2, r8, ror #27
   12f50:	0002be7c 	andeq	fp, r2, ip, ror lr
   12f54:	0002bde4 	andeq	fp, r2, r4, ror #27

00012f58 <vTaskSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
{
   12f58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12f5c:	e28db000 	add	fp, sp, #0
   12f60:	e24dd00c 	sub	sp, sp, #12
   12f64:	e50b0008 	str	r0, [fp, #-8]
	configASSERT( pxTimeOut );
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   12f68:	e59f3028 	ldr	r3, [pc, #40]	; 12f98 <vTaskSetTimeOutState+0x40>
   12f6c:	e5932000 	ldr	r2, [r3]
   12f70:	e51b3008 	ldr	r3, [fp, #-8]
   12f74:	e5832000 	str	r2, [r3]
	pxTimeOut->xTimeOnEntering = xTickCount;
   12f78:	e59f301c 	ldr	r3, [pc, #28]	; 12f9c <vTaskSetTimeOutState+0x44>
   12f7c:	e5932000 	ldr	r2, [r3]
   12f80:	e51b3008 	ldr	r3, [fp, #-8]
   12f84:	e5832004 	str	r2, [r3, #4]
}
   12f88:	e320f000 	nop	{0}
   12f8c:	e28bd000 	add	sp, fp, #0
   12f90:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12f94:	e12fff1e 	bx	lr
   12f98:	0002bedc 	ldrdeq	fp, [r2], -ip
   12f9c:	0002bec0 	andeq	fp, r2, r0, asr #29

00012fa0 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToWait )
{
   12fa0:	e92d4800 	push	{fp, lr}
   12fa4:	e28db004 	add	fp, sp, #4
   12fa8:	e24dd010 	sub	sp, sp, #16
   12fac:	e50b0010 	str	r0, [fp, #-16]
   12fb0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
portBASE_TYPE xReturn;

	configASSERT( pxTimeOut );
	configASSERT( pxTicksToWait );

	taskENTER_CRITICAL();
   12fb4:	ebfff561 	bl	10540 <vPortEnterCritical>
	{
		#if ( INCLUDE_vTaskSuspend == 1 )
			/* If INCLUDE_vTaskSuspend is set to 1 and the block time specified is
			the maximum block time then the task should block indefinitely, and
			therefore never time out. */
			if( *pxTicksToWait == portMAX_DELAY )
   12fb8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   12fbc:	e5933000 	ldr	r3, [r3]
   12fc0:	e3730001 	cmn	r3, #1
   12fc4:	1a000002 	bne	12fd4 <xTaskCheckForTimeOut+0x34>
			{
				xReturn = pdFALSE;
   12fc8:	e3a03000 	mov	r3, #0
   12fcc:	e50b3008 	str	r3, [fp, #-8]
   12fd0:	ea000028 	b	13078 <xTaskCheckForTimeOut+0xd8>
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
   12fd4:	e51b3010 	ldr	r3, [fp, #-16]
   12fd8:	e5932000 	ldr	r2, [r3]
   12fdc:	e59f30a8 	ldr	r3, [pc, #168]	; 1308c <xTaskCheckForTimeOut+0xec>
   12fe0:	e5933000 	ldr	r3, [r3]
   12fe4:	e1520003 	cmp	r2, r3
   12fe8:	0a000008 	beq	13010 <xTaskCheckForTimeOut+0x70>
   12fec:	e51b3010 	ldr	r3, [fp, #-16]
   12ff0:	e5932004 	ldr	r2, [r3, #4]
   12ff4:	e59f3094 	ldr	r3, [pc, #148]	; 13090 <xTaskCheckForTimeOut+0xf0>
   12ff8:	e5933000 	ldr	r3, [r3]
   12ffc:	e1520003 	cmp	r2, r3
   13000:	8a000002 	bhi	13010 <xTaskCheckForTimeOut+0x70>
		{
			/* The tick count is greater than the time at which vTaskSetTimeout()
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
   13004:	e3a03001 	mov	r3, #1
   13008:	e50b3008 	str	r3, [fp, #-8]
   1300c:	ea000019 	b	13078 <xTaskCheckForTimeOut+0xd8>
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
   13010:	e59f3078 	ldr	r3, [pc, #120]	; 13090 <xTaskCheckForTimeOut+0xf0>
   13014:	e5932000 	ldr	r2, [r3]
   13018:	e51b3010 	ldr	r3, [fp, #-16]
   1301c:	e5933004 	ldr	r3, [r3, #4]
   13020:	e0422003 	sub	r2, r2, r3
   13024:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13028:	e5933000 	ldr	r3, [r3]
   1302c:	e1520003 	cmp	r2, r3
   13030:	2a00000e 	bcs	13070 <xTaskCheckForTimeOut+0xd0>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
   13034:	e59f3054 	ldr	r3, [pc, #84]	; 13090 <xTaskCheckForTimeOut+0xf0>
   13038:	e5932000 	ldr	r2, [r3]
   1303c:	e51b3010 	ldr	r3, [fp, #-16]
   13040:	e5933004 	ldr	r3, [r3, #4]
   13044:	e0423003 	sub	r3, r2, r3
   13048:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1304c:	e5922000 	ldr	r2, [r2]
   13050:	e0422003 	sub	r2, r2, r3
   13054:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13058:	e5832000 	str	r2, [r3]
			vTaskSetTimeOutState( pxTimeOut );
   1305c:	e51b0010 	ldr	r0, [fp, #-16]
   13060:	ebffffbc 	bl	12f58 <vTaskSetTimeOutState>
			xReturn = pdFALSE;
   13064:	e3a03000 	mov	r3, #0
   13068:	e50b3008 	str	r3, [fp, #-8]
   1306c:	ea000001 	b	13078 <xTaskCheckForTimeOut+0xd8>
		}
		else
		{
			xReturn = pdTRUE;
   13070:	e3a03001 	mov	r3, #1
   13074:	e50b3008 	str	r3, [fp, #-8]
		}
	}
	taskEXIT_CRITICAL();
   13078:	ebfff541 	bl	10584 <vPortExitCritical>

	return xReturn;
   1307c:	e51b3008 	ldr	r3, [fp, #-8]
}
   13080:	e1a00003 	mov	r0, r3
   13084:	e24bd004 	sub	sp, fp, #4
   13088:	e8bd8800 	pop	{fp, pc}
   1308c:	0002bedc 	ldrdeq	fp, [r2], -ip
   13090:	0002bec0 	andeq	fp, r2, r0, asr #29

00013094 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
   13094:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13098:	e28db000 	add	fp, sp, #0
	xMissedYield = pdTRUE;
   1309c:	e59f3014 	ldr	r3, [pc, #20]	; 130b8 <vTaskMissedYield+0x24>
   130a0:	e3a02001 	mov	r2, #1
   130a4:	e5832000 	str	r2, [r3]
}
   130a8:	e320f000 	nop	{0}
   130ac:	e28bd000 	add	sp, fp, #0
   130b0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   130b4:	e12fff1e 	bx	lr
   130b8:	0002bed8 	ldrdeq	fp, [r2], -r8

000130bc <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
   130bc:	e92d4800 	push	{fp, lr}
   130c0:	e28db004 	add	fp, sp, #4
   130c4:	e24dd008 	sub	sp, sp, #8
   130c8:	e50b0008 	str	r0, [fp, #-8]
	( void ) pvParameters;

	for( ;; )
	{
		/* See if any tasks have been deleted. */
		prvCheckTasksWaitingTermination();
   130cc:	eb000066 	bl	1326c <prvCheckTasksWaitingTermination>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( unsigned portBASE_TYPE ) 1 )
   130d0:	e59f3010 	ldr	r3, [pc, #16]	; 130e8 <prvIdleTask+0x2c>
   130d4:	e5933000 	ldr	r3, [r3]
   130d8:	e3530001 	cmp	r3, #1
   130dc:	9afffffa 	bls	130cc <prvIdleTask+0x10>
			{
				taskYIELD();
   130e0:	ef000000 	svc	0x00000000
		prvCheckTasksWaitingTermination();
   130e4:	eafffff8 	b	130cc <prvIdleTask+0x10>
   130e8:	0002bde8 	andeq	fp, r2, r8, ror #27

000130ec <prvInitialiseTCBVariables>:
 *----------------------------------------------------------*/



static void prvInitialiseTCBVariables( tskTCB *pxTCB, const signed char * const pcName, unsigned portBASE_TYPE uxPriority, const xMemoryRegion * const xRegions, unsigned short usStackDepth )
{
   130ec:	e92d4800 	push	{fp, lr}
   130f0:	e28db004 	add	fp, sp, #4
   130f4:	e24dd010 	sub	sp, sp, #16
   130f8:	e50b0008 	str	r0, [fp, #-8]
   130fc:	e50b100c 	str	r1, [fp, #-12]
   13100:	e50b2010 	str	r2, [fp, #-16]
   13104:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	/* Store the function name in the TCB. */
	#if configMAX_TASK_NAME_LEN > 1
	{
		/* Don't bring strncpy into the build unnecessarily. */
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
   13108:	e51b3008 	ldr	r3, [fp, #-8]
   1310c:	e2833034 	add	r3, r3, #52	; 0x34
   13110:	e3a02010 	mov	r2, #16
   13114:	e51b100c 	ldr	r1, [fp, #-12]
   13118:	e1a00003 	mov	r0, r3
   1311c:	eb00068a 	bl	14b4c <strncpy>
	}
	#endif
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
   13120:	e51b3008 	ldr	r3, [fp, #-8]
   13124:	e3a02000 	mov	r2, #0
   13128:	e5c32043 	strb	r2, [r3, #67]	; 0x43

	/* This is used as an array index so must ensure it's not too large.  First
	remove the privilege bit if one is present. */
	if( uxPriority >= configMAX_PRIORITIES )
   1312c:	e51b3010 	ldr	r3, [fp, #-16]
   13130:	e3530004 	cmp	r3, #4
   13134:	9a000001 	bls	13140 <prvInitialiseTCBVariables+0x54>
	{
		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
   13138:	e3a03004 	mov	r3, #4
   1313c:	e50b3010 	str	r3, [fp, #-16]
	}

	pxTCB->uxPriority = uxPriority;
   13140:	e51b3008 	ldr	r3, [fp, #-8]
   13144:	e51b2010 	ldr	r2, [fp, #-16]
   13148:	e583202c 	str	r2, [r3, #44]	; 0x2c
	{
		pxTCB->uxBasePriority = uxPriority;
	}
	#endif

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
   1314c:	e51b3008 	ldr	r3, [fp, #-8]
   13150:	e2833004 	add	r3, r3, #4
   13154:	e1a00003 	mov	r0, r3
   13158:	ebfff717 	bl	10dbc <vListInitialiseItem>
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
   1315c:	e51b3008 	ldr	r3, [fp, #-8]
   13160:	e2833018 	add	r3, r3, #24
   13164:	e1a00003 	mov	r0, r3
   13168:	ebfff713 	bl	10dbc <vListInitialiseItem>

	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
   1316c:	e51b3008 	ldr	r3, [fp, #-8]
   13170:	e51b2008 	ldr	r2, [fp, #-8]
   13174:	e5832010 	str	r2, [r3, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
   13178:	e51b3010 	ldr	r3, [fp, #-16]
   1317c:	e2632005 	rsb	r2, r3, #5
   13180:	e51b3008 	ldr	r3, [fp, #-8]
   13184:	e5832018 	str	r2, [r3, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
   13188:	e51b3008 	ldr	r3, [fp, #-8]
   1318c:	e51b2008 	ldr	r2, [fp, #-8]
   13190:	e5832024 	str	r2, [r3, #36]	; 0x24
	}
	#endif

	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
	{
		pxTCB->pxTaskTag = NULL;
   13194:	e51b3008 	ldr	r3, [fp, #-8]
   13198:	e3a02000 	mov	r2, #0
   1319c:	e5832044 	str	r2, [r3, #68]	; 0x44
	{
		( void ) xRegions;
		( void ) usStackDepth;
	}
	#endif
}
   131a0:	e320f000 	nop	{0}
   131a4:	e24bd004 	sub	sp, fp, #4
   131a8:	e8bd8800 	pop	{fp, pc}

000131ac <prvInitialiseTaskLists>:
	}
	/*-----------------------------------------------------------*/
#endif

static void prvInitialiseTaskLists( void )
{
   131ac:	e92d4800 	push	{fp, lr}
   131b0:	e28db004 	add	fp, sp, #4
   131b4:	e24dd008 	sub	sp, sp, #8
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
   131b8:	e3a03000 	mov	r3, #0
   131bc:	e50b3008 	str	r3, [fp, #-8]
   131c0:	ea00000b 	b	131f4 <prvInitialiseTaskLists+0x48>
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
   131c4:	e51b2008 	ldr	r2, [fp, #-8]
   131c8:	e1a03002 	mov	r3, r2
   131cc:	e1a03103 	lsl	r3, r3, #2
   131d0:	e0833002 	add	r3, r3, r2
   131d4:	e1a03103 	lsl	r3, r3, #2
   131d8:	e59f206c 	ldr	r2, [pc, #108]	; 1324c <prvInitialiseTaskLists+0xa0>
   131dc:	e0833002 	add	r3, r3, r2
   131e0:	e1a00003 	mov	r0, r3
   131e4:	ebfff6da 	bl	10d54 <vListInitialise>
	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
   131e8:	e51b3008 	ldr	r3, [fp, #-8]
   131ec:	e2833001 	add	r3, r3, #1
   131f0:	e50b3008 	str	r3, [fp, #-8]
   131f4:	e51b3008 	ldr	r3, [fp, #-8]
   131f8:	e3530004 	cmp	r3, #4
   131fc:	9afffff0 	bls	131c4 <prvInitialiseTaskLists+0x18>
	}

	vListInitialise( ( xList * ) &xDelayedTaskList1 );
   13200:	e59f0048 	ldr	r0, [pc, #72]	; 13250 <prvInitialiseTaskLists+0xa4>
   13204:	ebfff6d2 	bl	10d54 <vListInitialise>
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
   13208:	e59f0044 	ldr	r0, [pc, #68]	; 13254 <prvInitialiseTaskLists+0xa8>
   1320c:	ebfff6d0 	bl	10d54 <vListInitialise>
	vListInitialise( ( xList * ) &xPendingReadyList );
   13210:	e59f0040 	ldr	r0, [pc, #64]	; 13258 <prvInitialiseTaskLists+0xac>
   13214:	ebfff6ce 	bl	10d54 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( ( xList * ) &xTasksWaitingTermination );
   13218:	e59f003c 	ldr	r0, [pc, #60]	; 1325c <prvInitialiseTaskLists+0xb0>
   1321c:	ebfff6cc 	bl	10d54 <vListInitialise>
	}
	#endif

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( ( xList * ) &xSuspendedTaskList );
   13220:	e59f0038 	ldr	r0, [pc, #56]	; 13260 <prvInitialiseTaskLists+0xb4>
   13224:	ebfff6ca 	bl	10d54 <vListInitialise>
	}
	#endif

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
   13228:	e59f3034 	ldr	r3, [pc, #52]	; 13264 <prvInitialiseTaskLists+0xb8>
   1322c:	e59f201c 	ldr	r2, [pc, #28]	; 13250 <prvInitialiseTaskLists+0xa4>
   13230:	e5832000 	str	r2, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   13234:	e59f302c 	ldr	r3, [pc, #44]	; 13268 <prvInitialiseTaskLists+0xbc>
   13238:	e59f2014 	ldr	r2, [pc, #20]	; 13254 <prvInitialiseTaskLists+0xa8>
   1323c:	e5832000 	str	r2, [r3]
}
   13240:	e320f000 	nop	{0}
   13244:	e24bd004 	sub	sp, fp, #4
   13248:	e8bd8800 	pop	{fp, pc}
   1324c:	0002bde8 	andeq	fp, r2, r8, ror #27
   13250:	0002be4c 	andeq	fp, r2, ip, asr #28
   13254:	0002be60 	andeq	fp, r2, r0, ror #28
   13258:	0002be7c 	andeq	fp, r2, ip, ror lr
   1325c:	0002be90 	muleq	r2, r0, lr
   13260:	0002bea8 	andeq	fp, r2, r8, lsr #29
   13264:	0002be74 	andeq	fp, r2, r4, ror lr
   13268:	0002be78 	andeq	fp, r2, r8, ror lr

0001326c <prvCheckTasksWaitingTermination>:
/*-----------------------------------------------------------*/

static void prvCheckTasksWaitingTermination( void )
{
   1326c:	e92d4800 	push	{fp, lr}
   13270:	e28db004 	add	fp, sp, #4
   13274:	e24dd008 	sub	sp, sp, #8
	{
		portBASE_TYPE xListIsEmpty;

		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		if( uxTasksDeleted > ( unsigned portBASE_TYPE ) 0U )
   13278:	e59f309c 	ldr	r3, [pc, #156]	; 1331c <prvCheckTasksWaitingTermination+0xb0>
   1327c:	e5933000 	ldr	r3, [r3]
   13280:	e3530000 	cmp	r3, #0
   13284:	0a000021 	beq	13310 <prvCheckTasksWaitingTermination+0xa4>
		{
			vTaskSuspendAll();
   13288:	ebfffd16 	bl	126e8 <vTaskSuspendAll>
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
   1328c:	e59f308c 	ldr	r3, [pc, #140]	; 13320 <prvCheckTasksWaitingTermination+0xb4>
   13290:	e5933000 	ldr	r3, [r3]
   13294:	e3530000 	cmp	r3, #0
   13298:	03a03001 	moveq	r3, #1
   1329c:	13a03000 	movne	r3, #0
   132a0:	e6ef3073 	uxtb	r3, r3
   132a4:	e50b3008 	str	r3, [fp, #-8]
			xTaskResumeAll();
   132a8:	ebfffd1a 	bl	12718 <xTaskResumeAll>

			if( xListIsEmpty == pdFALSE )
   132ac:	e51b3008 	ldr	r3, [fp, #-8]
   132b0:	e3530000 	cmp	r3, #0
   132b4:	1a000015 	bne	13310 <prvCheckTasksWaitingTermination+0xa4>
			{
				tskTCB *pxTCB;

				taskENTER_CRITICAL();
   132b8:	ebfff4a0 	bl	10540 <vPortEnterCritical>
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( ( ( xList * ) &xTasksWaitingTermination ) );
   132bc:	e59f305c 	ldr	r3, [pc, #92]	; 13320 <prvCheckTasksWaitingTermination+0xb4>
   132c0:	e593300c 	ldr	r3, [r3, #12]
   132c4:	e593300c 	ldr	r3, [r3, #12]
   132c8:	e50b300c 	str	r3, [fp, #-12]
					vListRemove( &( pxTCB->xGenericListItem ) );
   132cc:	e51b300c 	ldr	r3, [fp, #-12]
   132d0:	e2833004 	add	r3, r3, #4
   132d4:	e1a00003 	mov	r0, r3
   132d8:	ebfff71e 	bl	10f58 <vListRemove>
					--uxCurrentNumberOfTasks;
   132dc:	e59f3040 	ldr	r3, [pc, #64]	; 13324 <prvCheckTasksWaitingTermination+0xb8>
   132e0:	e5933000 	ldr	r3, [r3]
   132e4:	e2433001 	sub	r3, r3, #1
   132e8:	e59f2034 	ldr	r2, [pc, #52]	; 13324 <prvCheckTasksWaitingTermination+0xb8>
   132ec:	e5823000 	str	r3, [r2]
					--uxTasksDeleted;
   132f0:	e59f3024 	ldr	r3, [pc, #36]	; 1331c <prvCheckTasksWaitingTermination+0xb0>
   132f4:	e5933000 	ldr	r3, [r3]
   132f8:	e2433001 	sub	r3, r3, #1
   132fc:	e59f2018 	ldr	r2, [pc, #24]	; 1331c <prvCheckTasksWaitingTermination+0xb0>
   13300:	e5823000 	str	r3, [r2]
				}
				taskEXIT_CRITICAL();
   13304:	ebfff49e 	bl	10584 <vPortExitCritical>

				prvDeleteTCB( pxTCB );
   13308:	e51b000c 	ldr	r0, [fp, #-12]
   1330c:	eb00005f 	bl	13490 <prvDeleteTCB>
			}
		}
	}
	#endif
}
   13310:	e320f000 	nop	{0}
   13314:	e24bd004 	sub	sp, fp, #4
   13318:	e8bd8800 	pop	{fp, pc}
   1331c:	0002bea4 	andeq	fp, r2, r4, lsr #29
   13320:	0002be90 	muleq	r2, r0, lr
   13324:	0002bebc 			; <UNDEFINED> instruction: 0x0002bebc

00013328 <prvAddCurrentTaskToDelayedList>:
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
   13328:	e92d4800 	push	{fp, lr}
   1332c:	e28db004 	add	fp, sp, #4
   13330:	e24dd008 	sub	sp, sp, #8
   13334:	e50b0008 	str	r0, [fp, #-8]
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
   13338:	e59f308c 	ldr	r3, [pc, #140]	; 133cc <prvAddCurrentTaskToDelayedList+0xa4>
   1333c:	e5933000 	ldr	r3, [r3]
   13340:	e51b2008 	ldr	r2, [fp, #-8]
   13344:	e5832004 	str	r2, [r3, #4]

	if( xTimeToWake < xTickCount )
   13348:	e59f3080 	ldr	r3, [pc, #128]	; 133d0 <prvAddCurrentTaskToDelayedList+0xa8>
   1334c:	e5933000 	ldr	r3, [r3]
   13350:	e51b2008 	ldr	r2, [fp, #-8]
   13354:	e1520003 	cmp	r2, r3
   13358:	2a000008 	bcs	13380 <prvAddCurrentTaskToDelayedList+0x58>
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
   1335c:	e59f3070 	ldr	r3, [pc, #112]	; 133d4 <prvAddCurrentTaskToDelayedList+0xac>
   13360:	e5932000 	ldr	r2, [r3]
   13364:	e59f3060 	ldr	r3, [pc, #96]	; 133cc <prvAddCurrentTaskToDelayedList+0xa4>
   13368:	e5933000 	ldr	r3, [r3]
   1336c:	e2833004 	add	r3, r3, #4
   13370:	e1a01003 	mov	r1, r3
   13374:	e1a00002 	mov	r0, r2
   13378:	ebfff6c0 	bl	10e80 <vListInsert>
		if( xTimeToWake < xNextTaskUnblockTime )
		{
			xNextTaskUnblockTime = xTimeToWake;
		}
	}
}
   1337c:	ea00000f 	b	133c0 <prvAddCurrentTaskToDelayedList+0x98>
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
   13380:	e59f3050 	ldr	r3, [pc, #80]	; 133d8 <prvAddCurrentTaskToDelayedList+0xb0>
   13384:	e5932000 	ldr	r2, [r3]
   13388:	e59f303c 	ldr	r3, [pc, #60]	; 133cc <prvAddCurrentTaskToDelayedList+0xa4>
   1338c:	e5933000 	ldr	r3, [r3]
   13390:	e2833004 	add	r3, r3, #4
   13394:	e1a01003 	mov	r1, r3
   13398:	e1a00002 	mov	r0, r2
   1339c:	ebfff6b7 	bl	10e80 <vListInsert>
		if( xTimeToWake < xNextTaskUnblockTime )
   133a0:	e59f3034 	ldr	r3, [pc, #52]	; 133dc <prvAddCurrentTaskToDelayedList+0xb4>
   133a4:	e5933000 	ldr	r3, [r3]
   133a8:	e51b2008 	ldr	r2, [fp, #-8]
   133ac:	e1520003 	cmp	r2, r3
   133b0:	2a000002 	bcs	133c0 <prvAddCurrentTaskToDelayedList+0x98>
			xNextTaskUnblockTime = xTimeToWake;
   133b4:	e59f2020 	ldr	r2, [pc, #32]	; 133dc <prvAddCurrentTaskToDelayedList+0xb4>
   133b8:	e51b3008 	ldr	r3, [fp, #-8]
   133bc:	e5823000 	str	r3, [r2]
}
   133c0:	e320f000 	nop	{0}
   133c4:	e24bd004 	sub	sp, fp, #4
   133c8:	e8bd8800 	pop	{fp, pc}
   133cc:	0002bde4 	andeq	fp, r2, r4, ror #27
   133d0:	0002bec0 	andeq	fp, r2, r0, asr #29
   133d4:	0002be78 	andeq	fp, r2, r8, ror lr
   133d8:	0002be74 	andeq	fp, r2, r4, ror lr
   133dc:	0002bcc4 	andeq	fp, r2, r4, asr #25

000133e0 <prvAllocateTCBAndStack>:
/*-----------------------------------------------------------*/

static tskTCB *prvAllocateTCBAndStack( unsigned short usStackDepth, portSTACK_TYPE *puxStackBuffer )
{
   133e0:	e92d4800 	push	{fp, lr}
   133e4:	e28db004 	add	fp, sp, #4
   133e8:	e24dd010 	sub	sp, sp, #16
   133ec:	e1a03000 	mov	r3, r0
   133f0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   133f4:	e14b30be 	strh	r3, [fp, #-14]
tskTCB *pxNewTCB;

	/* Allocate space for the TCB.  Where the memory comes from depends on
	the implementation of the port malloc function. */
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
   133f8:	e3a00048 	mov	r0, #72	; 0x48
   133fc:	eb000625 	bl	14c98 <pvPortMalloc>
   13400:	e50b0008 	str	r0, [fp, #-8]

	if( pxNewTCB != NULL )
   13404:	e51b3008 	ldr	r3, [fp, #-8]
   13408:	e3530000 	cmp	r3, #0
   1340c:	0a00001b 	beq	13480 <prvAllocateTCBAndStack+0xa0>
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
   13410:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13414:	e3530000 	cmp	r3, #0
   13418:	1a000005 	bne	13434 <prvAllocateTCBAndStack+0x54>
   1341c:	e15b30be 	ldrh	r3, [fp, #-14]
   13420:	e1a03103 	lsl	r3, r3, #2
   13424:	e1a00003 	mov	r0, r3
   13428:	eb00061a 	bl	14c98 <pvPortMalloc>
   1342c:	e1a03000 	mov	r3, r0
   13430:	ea000000 	b	13438 <prvAllocateTCBAndStack+0x58>
   13434:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13438:	e51b2008 	ldr	r2, [fp, #-8]
   1343c:	e5823030 	str	r3, [r2, #48]	; 0x30

		if( pxNewTCB->pxStack == NULL )
   13440:	e51b3008 	ldr	r3, [fp, #-8]
   13444:	e5933030 	ldr	r3, [r3, #48]	; 0x30
   13448:	e3530000 	cmp	r3, #0
   1344c:	1a000004 	bne	13464 <prvAllocateTCBAndStack+0x84>
		{
			/* Could not allocate the stack.  Delete the allocated TCB. */
			vPortFree( pxNewTCB );
   13450:	e51b0008 	ldr	r0, [fp, #-8]
   13454:	eb000681 	bl	14e60 <vPortFree>
			pxNewTCB = NULL;
   13458:	e3a03000 	mov	r3, #0
   1345c:	e50b3008 	str	r3, [fp, #-8]
   13460:	ea000006 	b	13480 <prvAllocateTCBAndStack+0xa0>
		}
		else
		{
			/* Just to help debugging. */
			memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( portSTACK_TYPE ) );
   13464:	e51b3008 	ldr	r3, [fp, #-8]
   13468:	e5930030 	ldr	r0, [r3, #48]	; 0x30
   1346c:	e15b30be 	ldrh	r3, [fp, #-14]
   13470:	e1a03103 	lsl	r3, r3, #2
   13474:	e1a02003 	mov	r2, r3
   13478:	e3a010a5 	mov	r1, #165	; 0xa5
   1347c:	eb00050c 	bl	148b4 <memset>
	pxNewTCB->pTraceEvent 		= NULL;
	pxNewTCB->pTraceEventMin 	= NULL;
	pxNewTCB->pTraceEventMax 	= NULL;
#endif

	return pxNewTCB;
   13480:	e51b3008 	ldr	r3, [fp, #-8]
}
   13484:	e1a00003 	mov	r0, r3
   13488:	e24bd004 	sub	sp, fp, #4
   1348c:	e8bd8800 	pop	{fp, pc}

00013490 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( tskTCB *pxTCB )
	{
   13490:	e92d4800 	push	{fp, lr}
   13494:	e28db004 	add	fp, sp, #4
   13498:	e24dd008 	sub	sp, sp, #8
   1349c:	e50b0008 	str	r0, [fp, #-8]
		want to allocate and clean RAM statically. */
		portCLEAN_UP_TCB( pxTCB );

		/* Free up the memory allocated by the scheduler for the task.  It is up to
		the task to free any memory allocated at the application level. */
		vPortFreeAligned( pxTCB->pxStack );
   134a0:	e51b3008 	ldr	r3, [fp, #-8]
   134a4:	e5933030 	ldr	r3, [r3, #48]	; 0x30
   134a8:	e1a00003 	mov	r0, r3
   134ac:	eb00066b 	bl	14e60 <vPortFree>
		vPortFree( pxTCB );
   134b0:	e51b0008 	ldr	r0, [fp, #-8]
   134b4:	eb000669 	bl	14e60 <vPortFree>
	}
   134b8:	e320f000 	nop	{0}
   134bc:	e24bd004 	sub	sp, fp, #4
   134c0:	e8bd8800 	pop	{fp, pc}

000134c4 <handleRange>:

// Remember which interrupts have been enabled:
static unsigned long enabled[3];

static void handleRange (unsigned long pending, const unsigned int base)
{
   134c4:	e92d4800 	push	{fp, lr}
   134c8:	e28db004 	add	fp, sp, #4
   134cc:	e24dd010 	sub	sp, sp, #16
   134d0:	e50b0010 	str	r0, [fp, #-16]
   134d4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	while (pending)
   134d8:	ea00001e 	b	13558 <handleRange+0x94>
	{
		// Get index of first set bit:
		unsigned int bit = 31 - __builtin_clz(pending);
   134dc:	e51b3010 	ldr	r3, [fp, #-16]
   134e0:	e16f3f13 	clz	r3, r3
   134e4:	e263301f 	rsb	r3, r3, #31
   134e8:	e50b3008 	str	r3, [fp, #-8]

		// Map to IRQ number:
		unsigned int irq = base + bit;
   134ec:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   134f0:	e51b3008 	ldr	r3, [fp, #-8]
   134f4:	e0823003 	add	r3, r2, r3
   134f8:	e50b300c 	str	r3, [fp, #-12]

		// Call interrupt handler, if enabled:
		if (g_VectorTable[irq].pfnHandler)
   134fc:	e59f206c 	ldr	r2, [pc, #108]	; 13570 <handleRange+0xac>
   13500:	e51b300c 	ldr	r3, [fp, #-12]
   13504:	e7923183 	ldr	r3, [r2, r3, lsl #3]
   13508:	e3530000 	cmp	r3, #0
   1350c:	0a00000a 	beq	1353c <handleRange+0x78>
			g_VectorTable[irq].pfnHandler(irq, g_VectorTable[irq].pParam);
   13510:	e59f2058 	ldr	r2, [pc, #88]	; 13570 <handleRange+0xac>
   13514:	e51b300c 	ldr	r3, [fp, #-12]
   13518:	e7922183 	ldr	r2, [r2, r3, lsl #3]
   1351c:	e59f104c 	ldr	r1, [pc, #76]	; 13570 <handleRange+0xac>
   13520:	e51b300c 	ldr	r3, [fp, #-12]
   13524:	e1a03183 	lsl	r3, r3, #3
   13528:	e0813003 	add	r3, r1, r3
   1352c:	e5933004 	ldr	r3, [r3, #4]
   13530:	e1a01003 	mov	r1, r3
   13534:	e51b000c 	ldr	r0, [fp, #-12]
   13538:	e12fff32 	blx	r2

		// Clear bit in bitfield:
		pending &= ~(1UL << bit);
   1353c:	e3a02001 	mov	r2, #1
   13540:	e51b3008 	ldr	r3, [fp, #-8]
   13544:	e1a03312 	lsl	r3, r2, r3
   13548:	e1e03003 	mvn	r3, r3
   1354c:	e51b2010 	ldr	r2, [fp, #-16]
   13550:	e0033002 	and	r3, r3, r2
   13554:	e50b3010 	str	r3, [fp, #-16]
	while (pending)
   13558:	e51b3010 	ldr	r3, [fp, #-16]
   1355c:	e3530000 	cmp	r3, #0
   13560:	1affffdd 	bne	134dc <handleRange+0x18>
	}
}
   13564:	e320f000 	nop	{0}
   13568:	e24bd004 	sub	sp, fp, #4
   1356c:	e8bd8800 	pop	{fp, pc}
   13570:	0002bee4 	andeq	fp, r2, r4, ror #29

00013574 <irqHandler>:
 *	This is the global IRQ handler on this platform!
 *	It is based on the assembler code found in the Broadcom datasheet.
 *
 **/
void irqHandler (void)
{
   13574:	e92d4830 	push	{r4, r5, fp, lr}
   13578:	e28db00c 	add	fp, sp, #12
	register unsigned long ulMaskedStatus = pRegs->IRQBasic;
   1357c:	e59f3088 	ldr	r3, [pc, #136]	; 1360c <irqHandler+0x98>
   13580:	e5934000 	ldr	r4, [r3]

	// Bit 8 in IRQBasic indicates interrupts in Pending1 (interrupts 31-0):
	if (ulMaskedStatus & (1UL << 8))
   13584:	e2043c01 	and	r3, r4, #256	; 0x100
   13588:	e3530000 	cmp	r3, #0
   1358c:	0a000007 	beq	135b0 <irqHandler+0x3c>
		handleRange(pRegs->Pending1 & enabled[0], 0);
   13590:	e59f3074 	ldr	r3, [pc, #116]	; 1360c <irqHandler+0x98>
   13594:	e5932004 	ldr	r2, [r3, #4]
   13598:	e59f3070 	ldr	r3, [pc, #112]	; 13610 <irqHandler+0x9c>
   1359c:	e5933000 	ldr	r3, [r3]
   135a0:	e0033002 	and	r3, r3, r2
   135a4:	e3a01000 	mov	r1, #0
   135a8:	e1a00003 	mov	r0, r3
   135ac:	ebffffc4 	bl	134c4 <handleRange>

	// Bit 9 in IRQBasic indicates interrupts in Pending2 (interrupts 63-32):
	if (ulMaskedStatus & (1UL << 9))
   135b0:	e2043c02 	and	r3, r4, #512	; 0x200
   135b4:	e3530000 	cmp	r3, #0
   135b8:	0a000007 	beq	135dc <irqHandler+0x68>
		handleRange(pRegs->Pending2 & enabled[1], 32);
   135bc:	e59f3048 	ldr	r3, [pc, #72]	; 1360c <irqHandler+0x98>
   135c0:	e5932008 	ldr	r2, [r3, #8]
   135c4:	e59f3044 	ldr	r3, [pc, #68]	; 13610 <irqHandler+0x9c>
   135c8:	e5933004 	ldr	r3, [r3, #4]
   135cc:	e0033002 	and	r3, r3, r2
   135d0:	e3a01020 	mov	r1, #32
   135d4:	e1a00003 	mov	r0, r3
   135d8:	ebffffb9 	bl	134c4 <handleRange>

	// Bits 7 through 0 in IRQBasic represent interrupts 64-71:
	if (ulMaskedStatus & 0xFF)
   135dc:	e6ef3074 	uxtb	r3, r4
   135e0:	e3530000 	cmp	r3, #0
   135e4:	0a000006 	beq	13604 <irqHandler+0x90>
		handleRange(ulMaskedStatus & 0xFF & enabled[2], 64);
   135e8:	e59f3020 	ldr	r3, [pc, #32]	; 13610 <irqHandler+0x9c>
   135ec:	e5933008 	ldr	r3, [r3, #8]
   135f0:	e0033004 	and	r3, r3, r4
   135f4:	e6ef3073 	uxtb	r3, r3
   135f8:	e3a01040 	mov	r1, #64	; 0x40
   135fc:	e1a00003 	mov	r0, r3
   13600:	ebffffaf 	bl	134c4 <handleRange>
}
   13604:	e320f000 	nop	{0}
   13608:	e8bd8830 	pop	{r4, r5, fp, pc}
   1360c:	2000b200 	andcs	fp, r0, r0, lsl #4
   13610:	0002c124 	andeq	ip, r2, r4, lsr #2

00013614 <irqUnblock>:

void irqUnblock (void)
{
   13614:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13618:	e28db000 	add	fp, sp, #0
	asm volatile ("cpsie i" ::: "memory");
   1361c:	f1080080 	cpsie	i
}
   13620:	e320f000 	nop	{0}
   13624:	e28bd000 	add	sp, fp, #0
   13628:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1362c:	e12fff1e 	bx	lr

00013630 <irqBlock>:

void irqBlock (void)
{
   13630:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13634:	e28db000 	add	fp, sp, #0
	asm volatile ("cpsid i" ::: "memory");
   13638:	f10c0080 	cpsid	i
}
   1363c:	e320f000 	nop	{0}
   13640:	e28bd000 	add	sp, fp, #0
   13644:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13648:	e12fff1e 	bx	lr

0001364c <irqRegister>:

void irqRegister (const unsigned int irq, FN_INTERRUPT_HANDLER pfnHandler, void *pParam)
{
   1364c:	e92d4800 	push	{fp, lr}
   13650:	e28db004 	add	fp, sp, #4
   13654:	e24dd010 	sub	sp, sp, #16
   13658:	e50b0008 	str	r0, [fp, #-8]
   1365c:	e50b100c 	str	r1, [fp, #-12]
   13660:	e50b2010 	str	r2, [fp, #-16]
	if (irq < BCM2835_INTC_TOTAL_IRQ) {
   13664:	e51b3008 	ldr	r3, [fp, #-8]
   13668:	e3530047 	cmp	r3, #71	; 0x47
   1366c:	8a00000b 	bhi	136a0 <irqRegister+0x54>
		irqBlock();
   13670:	ebffffee 	bl	13630 <irqBlock>
		g_VectorTable[irq].pfnHandler = pfnHandler;
   13674:	e59f1030 	ldr	r1, [pc, #48]	; 136ac <irqRegister+0x60>
   13678:	e51b3008 	ldr	r3, [fp, #-8]
   1367c:	e51b200c 	ldr	r2, [fp, #-12]
   13680:	e7812183 	str	r2, [r1, r3, lsl #3]
		g_VectorTable[irq].pParam     = pParam;
   13684:	e59f2020 	ldr	r2, [pc, #32]	; 136ac <irqRegister+0x60>
   13688:	e51b3008 	ldr	r3, [fp, #-8]
   1368c:	e1a03183 	lsl	r3, r3, #3
   13690:	e0823003 	add	r3, r2, r3
   13694:	e51b2010 	ldr	r2, [fp, #-16]
   13698:	e5832004 	str	r2, [r3, #4]
		irqUnblock();
   1369c:	ebffffdc 	bl	13614 <irqUnblock>
	}
}
   136a0:	e320f000 	nop	{0}
   136a4:	e24bd004 	sub	sp, fp, #4
   136a8:	e8bd8800 	pop	{fp, pc}
   136ac:	0002bee4 	andeq	fp, r2, r4, ror #29

000136b0 <irqEnable>:

void irqEnable (const unsigned int irq)
{
   136b0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   136b4:	e28db000 	add	fp, sp, #0
   136b8:	e24dd014 	sub	sp, sp, #20
   136bc:	e50b0010 	str	r0, [fp, #-16]
	unsigned long mask = 1UL << (irq % 32);
   136c0:	e51b3010 	ldr	r3, [fp, #-16]
   136c4:	e203301f 	and	r3, r3, #31
   136c8:	e3a02001 	mov	r2, #1
   136cc:	e1a03312 	lsl	r3, r2, r3
   136d0:	e50b3008 	str	r3, [fp, #-8]

	if (irq <= 31) {
   136d4:	e51b3010 	ldr	r3, [fp, #-16]
   136d8:	e353001f 	cmp	r3, #31
   136dc:	8a000009 	bhi	13708 <irqEnable+0x58>
		pRegs->Enable1 = mask;
   136e0:	e59f2094 	ldr	r2, [pc, #148]	; 1377c <irqEnable+0xcc>
   136e4:	e51b3008 	ldr	r3, [fp, #-8]
   136e8:	e5823010 	str	r3, [r2, #16]
		enabled[0] |= mask;
   136ec:	e59f308c 	ldr	r3, [pc, #140]	; 13780 <irqEnable+0xd0>
   136f0:	e5932000 	ldr	r2, [r3]
   136f4:	e51b3008 	ldr	r3, [fp, #-8]
   136f8:	e1823003 	orr	r3, r2, r3
   136fc:	e59f207c 	ldr	r2, [pc, #124]	; 13780 <irqEnable+0xd0>
   13700:	e5823000 	str	r3, [r2]
	}
	else if (irq < BCM2835_INTC_TOTAL_IRQ) {
		pRegs->EnableBasic = mask;
		enabled[2] |= mask;
	}
}
   13704:	ea000018 	b	1376c <irqEnable+0xbc>
	else if (irq <= 63) {
   13708:	e51b3010 	ldr	r3, [fp, #-16]
   1370c:	e353003f 	cmp	r3, #63	; 0x3f
   13710:	8a000009 	bhi	1373c <irqEnable+0x8c>
		pRegs->Enable2 = mask;
   13714:	e59f2060 	ldr	r2, [pc, #96]	; 1377c <irqEnable+0xcc>
   13718:	e51b3008 	ldr	r3, [fp, #-8]
   1371c:	e5823014 	str	r3, [r2, #20]
		enabled[1] |= mask;
   13720:	e59f3058 	ldr	r3, [pc, #88]	; 13780 <irqEnable+0xd0>
   13724:	e5932004 	ldr	r2, [r3, #4]
   13728:	e51b3008 	ldr	r3, [fp, #-8]
   1372c:	e1823003 	orr	r3, r2, r3
   13730:	e59f2048 	ldr	r2, [pc, #72]	; 13780 <irqEnable+0xd0>
   13734:	e5823004 	str	r3, [r2, #4]
}
   13738:	ea00000b 	b	1376c <irqEnable+0xbc>
	else if (irq < BCM2835_INTC_TOTAL_IRQ) {
   1373c:	e51b3010 	ldr	r3, [fp, #-16]
   13740:	e3530047 	cmp	r3, #71	; 0x47
   13744:	8a000008 	bhi	1376c <irqEnable+0xbc>
		pRegs->EnableBasic = mask;
   13748:	e59f202c 	ldr	r2, [pc, #44]	; 1377c <irqEnable+0xcc>
   1374c:	e51b3008 	ldr	r3, [fp, #-8]
   13750:	e5823018 	str	r3, [r2, #24]
		enabled[2] |= mask;
   13754:	e59f3024 	ldr	r3, [pc, #36]	; 13780 <irqEnable+0xd0>
   13758:	e5932008 	ldr	r2, [r3, #8]
   1375c:	e51b3008 	ldr	r3, [fp, #-8]
   13760:	e1823003 	orr	r3, r2, r3
   13764:	e59f2014 	ldr	r2, [pc, #20]	; 13780 <irqEnable+0xd0>
   13768:	e5823008 	str	r3, [r2, #8]
}
   1376c:	e320f000 	nop	{0}
   13770:	e28bd000 	add	sp, fp, #0
   13774:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13778:	e12fff1e 	bx	lr
   1377c:	2000b200 	andcs	fp, r0, r0, lsl #4
   13780:	0002c124 	andeq	ip, r2, r4, lsr #2

00013784 <irqDisable>:

void irqDisable (const unsigned int irq)
{
   13784:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13788:	e28db000 	add	fp, sp, #0
   1378c:	e24dd014 	sub	sp, sp, #20
   13790:	e50b0010 	str	r0, [fp, #-16]
	unsigned long mask = 1UL << (irq % 32);
   13794:	e51b3010 	ldr	r3, [fp, #-16]
   13798:	e203301f 	and	r3, r3, #31
   1379c:	e3a02001 	mov	r2, #1
   137a0:	e1a03312 	lsl	r3, r2, r3
   137a4:	e50b3008 	str	r3, [fp, #-8]

	if (irq <= 31) {
   137a8:	e51b3010 	ldr	r3, [fp, #-16]
   137ac:	e353001f 	cmp	r3, #31
   137b0:	8a00000a 	bhi	137e0 <irqDisable+0x5c>
		pRegs->Disable1 = mask;
   137b4:	e59f20a0 	ldr	r2, [pc, #160]	; 1385c <irqDisable+0xd8>
   137b8:	e51b3008 	ldr	r3, [fp, #-8]
   137bc:	e582301c 	str	r3, [r2, #28]
		enabled[0] &= ~mask;
   137c0:	e59f3098 	ldr	r3, [pc, #152]	; 13860 <irqDisable+0xdc>
   137c4:	e5932000 	ldr	r2, [r3]
   137c8:	e51b3008 	ldr	r3, [fp, #-8]
   137cc:	e1e03003 	mvn	r3, r3
   137d0:	e0033002 	and	r3, r3, r2
   137d4:	e59f2084 	ldr	r2, [pc, #132]	; 13860 <irqDisable+0xdc>
   137d8:	e5823000 	str	r3, [r2]
	}
	else if (irq < BCM2835_INTC_TOTAL_IRQ) {
		pRegs->DisableBasic = mask;
		enabled[2] &= ~mask;
	}
}
   137dc:	ea00001a 	b	1384c <irqDisable+0xc8>
	else if (irq <= 63) {
   137e0:	e51b3010 	ldr	r3, [fp, #-16]
   137e4:	e353003f 	cmp	r3, #63	; 0x3f
   137e8:	8a00000a 	bhi	13818 <irqDisable+0x94>
		pRegs->Disable2 = mask;
   137ec:	e59f2068 	ldr	r2, [pc, #104]	; 1385c <irqDisable+0xd8>
   137f0:	e51b3008 	ldr	r3, [fp, #-8]
   137f4:	e5823020 	str	r3, [r2, #32]
		enabled[1] &= ~mask;
   137f8:	e59f3060 	ldr	r3, [pc, #96]	; 13860 <irqDisable+0xdc>
   137fc:	e5932004 	ldr	r2, [r3, #4]
   13800:	e51b3008 	ldr	r3, [fp, #-8]
   13804:	e1e03003 	mvn	r3, r3
   13808:	e0033002 	and	r3, r3, r2
   1380c:	e59f204c 	ldr	r2, [pc, #76]	; 13860 <irqDisable+0xdc>
   13810:	e5823004 	str	r3, [r2, #4]
}
   13814:	ea00000c 	b	1384c <irqDisable+0xc8>
	else if (irq < BCM2835_INTC_TOTAL_IRQ) {
   13818:	e51b3010 	ldr	r3, [fp, #-16]
   1381c:	e3530047 	cmp	r3, #71	; 0x47
   13820:	8a000009 	bhi	1384c <irqDisable+0xc8>
		pRegs->DisableBasic = mask;
   13824:	e59f2030 	ldr	r2, [pc, #48]	; 1385c <irqDisable+0xd8>
   13828:	e51b3008 	ldr	r3, [fp, #-8]
   1382c:	e5823024 	str	r3, [r2, #36]	; 0x24
		enabled[2] &= ~mask;
   13830:	e59f3028 	ldr	r3, [pc, #40]	; 13860 <irqDisable+0xdc>
   13834:	e5932008 	ldr	r2, [r3, #8]
   13838:	e51b3008 	ldr	r3, [fp, #-8]
   1383c:	e1e03003 	mvn	r3, r3
   13840:	e0033002 	and	r3, r3, r2
   13844:	e59f2014 	ldr	r2, [pc, #20]	; 13860 <irqDisable+0xdc>
   13848:	e5823008 	str	r3, [r2, #8]
}
   1384c:	e320f000 	nop	{0}
   13850:	e28bd000 	add	sp, fp, #0
   13854:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13858:	e12fff1e 	bx	lr
   1385c:	2000b200 	andcs	fp, r0, r0, lsl #4
   13860:	0002c124 	andeq	ip, r2, r4, lsr #2

00013864 <SetGpioFunction>:
} BCM2835_GPIO_REGS;

volatile BCM2835_GPIO_REGS * const pRegs = (BCM2835_GPIO_REGS *) (0x20200000);


void SetGpioFunction(unsigned int pinNum, unsigned int funcNum) {
   13864:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13868:	e28db000 	add	fp, sp, #0
   1386c:	e24dd01c 	sub	sp, sp, #28
   13870:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   13874:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4

	int offset = pinNum / 10;
   13878:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1387c:	e59f20b4 	ldr	r2, [pc, #180]	; 13938 <SetGpioFunction+0xd4>
   13880:	e0832392 	umull	r2, r3, r2, r3
   13884:	e1a031a3 	lsr	r3, r3, #3
   13888:	e50b3008 	str	r3, [fp, #-8]

	unsigned long val = pRegs->GPFSEL[offset];	// Read in the original register value.
   1388c:	e59f20a8 	ldr	r2, [pc, #168]	; 1393c <SetGpioFunction+0xd8>
   13890:	e51b3008 	ldr	r3, [fp, #-8]
   13894:	e7923103 	ldr	r3, [r2, r3, lsl #2]
   13898:	e50b300c 	str	r3, [fp, #-12]

	int item = pinNum % 10;
   1389c:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   138a0:	e59f3090 	ldr	r3, [pc, #144]	; 13938 <SetGpioFunction+0xd4>
   138a4:	e0832193 	umull	r2, r3, r3, r1
   138a8:	e1a021a3 	lsr	r2, r3, #3
   138ac:	e1a03002 	mov	r3, r2
   138b0:	e1a03103 	lsl	r3, r3, #2
   138b4:	e0833002 	add	r3, r3, r2
   138b8:	e1a03083 	lsl	r3, r3, #1
   138bc:	e0412003 	sub	r2, r1, r3
   138c0:	e50b2010 	str	r2, [fp, #-16]
	val &= ~(0x7 << (item * 3));
   138c4:	e51b2010 	ldr	r2, [fp, #-16]
   138c8:	e1a03002 	mov	r3, r2
   138cc:	e1a03083 	lsl	r3, r3, #1
   138d0:	e0833002 	add	r3, r3, r2
   138d4:	e3a02007 	mov	r2, #7
   138d8:	e1a03312 	lsl	r3, r2, r3
   138dc:	e1e03003 	mvn	r3, r3
   138e0:	e1a02003 	mov	r2, r3
   138e4:	e51b300c 	ldr	r3, [fp, #-12]
   138e8:	e0033002 	and	r3, r3, r2
   138ec:	e50b300c 	str	r3, [fp, #-12]
	val |= ((funcNum & 0x7) << (item * 3));
   138f0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   138f4:	e2031007 	and	r1, r3, #7
   138f8:	e51b2010 	ldr	r2, [fp, #-16]
   138fc:	e1a03002 	mov	r3, r2
   13900:	e1a03083 	lsl	r3, r3, #1
   13904:	e0833002 	add	r3, r3, r2
   13908:	e1a03311 	lsl	r3, r1, r3
   1390c:	e51b200c 	ldr	r2, [fp, #-12]
   13910:	e1823003 	orr	r3, r2, r3
   13914:	e50b300c 	str	r3, [fp, #-12]
	pRegs->GPFSEL[offset] = val;
   13918:	e59f101c 	ldr	r1, [pc, #28]	; 1393c <SetGpioFunction+0xd8>
   1391c:	e51b3008 	ldr	r3, [fp, #-8]
   13920:	e51b200c 	ldr	r2, [fp, #-12]
   13924:	e7812103 	str	r2, [r1, r3, lsl #2]
}
   13928:	e320f000 	nop	{0}
   1392c:	e28bd000 	add	sp, fp, #0
   13930:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13934:	e12fff1e 	bx	lr
   13938:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
   1393c:	20200000 	eorcs	r0, r0, r0

00013940 <SetGpioDirection>:

void SetGpioDirection(unsigned int pinNum, enum GPIO_DIR dir) {
   13940:	e92d4800 	push	{fp, lr}
   13944:	e28db004 	add	fp, sp, #4
   13948:	e24dd008 	sub	sp, sp, #8
   1394c:	e50b0008 	str	r0, [fp, #-8]
   13950:	e1a03001 	mov	r3, r1
   13954:	e54b3009 	strb	r3, [fp, #-9]
	SetGpioFunction(pinNum,dir);
   13958:	e55b3009 	ldrb	r3, [fp, #-9]
   1395c:	e1a01003 	mov	r1, r3
   13960:	e51b0008 	ldr	r0, [fp, #-8]
   13964:	ebffffbe 	bl	13864 <SetGpioFunction>
}
   13968:	e320f000 	nop	{0}
   1396c:	e24bd004 	sub	sp, fp, #4
   13970:	e8bd8800 	pop	{fp, pc}

00013974 <SetGpio>:

void SetGpio(unsigned int pinNum, unsigned int pinVal) {
   13974:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13978:	e28db000 	add	fp, sp, #0
   1397c:	e24dd014 	sub	sp, sp, #20
   13980:	e50b0010 	str	r0, [fp, #-16]
   13984:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	unsigned long offset=pinNum/32;
   13988:	e51b3010 	ldr	r3, [fp, #-16]
   1398c:	e1a032a3 	lsr	r3, r3, #5
   13990:	e50b3008 	str	r3, [fp, #-8]
	unsigned long mask=(1<<(pinNum%32));
   13994:	e51b3010 	ldr	r3, [fp, #-16]
   13998:	e203301f 	and	r3, r3, #31
   1399c:	e3a02001 	mov	r2, #1
   139a0:	e1a03312 	lsl	r3, r2, r3
   139a4:	e50b300c 	str	r3, [fp, #-12]

	if(pinVal) {
   139a8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   139ac:	e3530000 	cmp	r3, #0
   139b0:	0a00000e 	beq	139f0 <SetGpio+0x7c>
		pRegs->GPSET[offset]|=mask;
   139b4:	e59f206c 	ldr	r2, [pc, #108]	; 13a28 <SetGpio+0xb4>
   139b8:	e51b3008 	ldr	r3, [fp, #-8]
   139bc:	e2833006 	add	r3, r3, #6
   139c0:	e1a03103 	lsl	r3, r3, #2
   139c4:	e0823003 	add	r3, r2, r3
   139c8:	e5932004 	ldr	r2, [r3, #4]
   139cc:	e59f1054 	ldr	r1, [pc, #84]	; 13a28 <SetGpio+0xb4>
   139d0:	e51b300c 	ldr	r3, [fp, #-12]
   139d4:	e1822003 	orr	r2, r2, r3
   139d8:	e51b3008 	ldr	r3, [fp, #-8]
   139dc:	e2833006 	add	r3, r3, #6
   139e0:	e1a03103 	lsl	r3, r3, #2
   139e4:	e0813003 	add	r3, r1, r3
   139e8:	e5832004 	str	r2, [r3, #4]
	} else {
		pRegs->GPCLR[offset]|=mask;
	}
}
   139ec:	ea000009 	b	13a18 <SetGpio+0xa4>
		pRegs->GPCLR[offset]|=mask;
   139f0:	e59f2030 	ldr	r2, [pc, #48]	; 13a28 <SetGpio+0xb4>
   139f4:	e51b3008 	ldr	r3, [fp, #-8]
   139f8:	e283300a 	add	r3, r3, #10
   139fc:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13a00:	e59f1020 	ldr	r1, [pc, #32]	; 13a28 <SetGpio+0xb4>
   13a04:	e51b300c 	ldr	r3, [fp, #-12]
   13a08:	e1822003 	orr	r2, r2, r3
   13a0c:	e51b3008 	ldr	r3, [fp, #-8]
   13a10:	e283300a 	add	r3, r3, #10
   13a14:	e7812103 	str	r2, [r1, r3, lsl #2]
}
   13a18:	e320f000 	nop	{0}
   13a1c:	e28bd000 	add	sp, fp, #0
   13a20:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13a24:	e12fff1e 	bx	lr
   13a28:	20200000 	eorcs	r0, r0, r0

00013a2c <ReadGpio>:

int ReadGpio(unsigned int pinNum) {
   13a2c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13a30:	e28db000 	add	fp, sp, #0
   13a34:	e24dd00c 	sub	sp, sp, #12
   13a38:	e50b0008 	str	r0, [fp, #-8]
	return ((pRegs->GPLEV[pinNum/32])>>(pinNum%32))&1;
   13a3c:	e59f2034 	ldr	r2, [pc, #52]	; 13a78 <ReadGpio+0x4c>
   13a40:	e51b3008 	ldr	r3, [fp, #-8]
   13a44:	e1a032a3 	lsr	r3, r3, #5
   13a48:	e283300c 	add	r3, r3, #12
   13a4c:	e1a03103 	lsl	r3, r3, #2
   13a50:	e0823003 	add	r3, r2, r3
   13a54:	e5932004 	ldr	r2, [r3, #4]
   13a58:	e51b3008 	ldr	r3, [fp, #-8]
   13a5c:	e203301f 	and	r3, r3, #31
   13a60:	e1a03332 	lsr	r3, r2, r3
   13a64:	e2033001 	and	r3, r3, #1
}
   13a68:	e1a00003 	mov	r0, r3
   13a6c:	e28bd000 	add	sp, fp, #0
   13a70:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13a74:	e12fff1e 	bx	lr
   13a78:	20200000 	eorcs	r0, r0, r0

00013a7c <EnableGpioDetect>:

void EnableGpioDetect(unsigned int pinNum, enum DETECT_TYPE type)
{
   13a7c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13a80:	e28db000 	add	fp, sp, #0
   13a84:	e24dd014 	sub	sp, sp, #20
   13a88:	e50b0010 	str	r0, [fp, #-16]
   13a8c:	e1a03001 	mov	r3, r1
   13a90:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	unsigned long mask=(1<<pinNum);
   13a94:	e3a02001 	mov	r2, #1
   13a98:	e51b3010 	ldr	r3, [fp, #-16]
   13a9c:	e1a03312 	lsl	r3, r2, r3
   13aa0:	e50b3008 	str	r3, [fp, #-8]
	unsigned long offset=pinNum/32;
   13aa4:	e51b3010 	ldr	r3, [fp, #-16]
   13aa8:	e1a032a3 	lsr	r3, r3, #5
   13aac:	e50b300c 	str	r3, [fp, #-12]
	
	switch(type) {
   13ab0:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
   13ab4:	e3530006 	cmp	r3, #6
   13ab8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   13abc:	ea000055 	b	13c18 <EnableGpioDetect+0x19c>
   13ac0:	00013c14 	andeq	r3, r1, r4, lsl ip
   13ac4:	00013adc 	ldrdeq	r3, [r1], -ip
   13ac8:	00013b18 	andeq	r3, r1, r8, lsl fp
   13acc:	00013b44 	andeq	r3, r1, r4, asr #22
   13ad0:	00013b80 	andeq	r3, r1, r0, lsl #23
   13ad4:	00013bac 	andeq	r3, r1, ip, lsr #23
   13ad8:	00013be8 	andeq	r3, r1, r8, ror #23
	case DETECT_RISING:
		pRegs->GPREN[offset]|=mask;
   13adc:	e59f2144 	ldr	r2, [pc, #324]	; 13c28 <EnableGpioDetect+0x1ac>
   13ae0:	e51b300c 	ldr	r3, [fp, #-12]
   13ae4:	e2833012 	add	r3, r3, #18
   13ae8:	e1a03103 	lsl	r3, r3, #2
   13aec:	e0823003 	add	r3, r2, r3
   13af0:	e5932004 	ldr	r2, [r3, #4]
   13af4:	e59f112c 	ldr	r1, [pc, #300]	; 13c28 <EnableGpioDetect+0x1ac>
   13af8:	e51b3008 	ldr	r3, [fp, #-8]
   13afc:	e1822003 	orr	r2, r2, r3
   13b00:	e51b300c 	ldr	r3, [fp, #-12]
   13b04:	e2833012 	add	r3, r3, #18
   13b08:	e1a03103 	lsl	r3, r3, #2
   13b0c:	e0813003 	add	r3, r1, r3
   13b10:	e5832004 	str	r2, [r3, #4]
		break;
   13b14:	ea00003f 	b	13c18 <EnableGpioDetect+0x19c>
	case DETECT_FALLING:
		pRegs->GPFEN[offset]|=mask;
   13b18:	e59f2108 	ldr	r2, [pc, #264]	; 13c28 <EnableGpioDetect+0x1ac>
   13b1c:	e51b300c 	ldr	r3, [fp, #-12]
   13b20:	e2833016 	add	r3, r3, #22
   13b24:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13b28:	e59f10f8 	ldr	r1, [pc, #248]	; 13c28 <EnableGpioDetect+0x1ac>
   13b2c:	e51b3008 	ldr	r3, [fp, #-8]
   13b30:	e1822003 	orr	r2, r2, r3
   13b34:	e51b300c 	ldr	r3, [fp, #-12]
   13b38:	e2833016 	add	r3, r3, #22
   13b3c:	e7812103 	str	r2, [r1, r3, lsl #2]
		break;
   13b40:	ea000034 	b	13c18 <EnableGpioDetect+0x19c>
	case DETECT_HIGH:
		pRegs->GPHEN[offset]|=mask;
   13b44:	e59f20dc 	ldr	r2, [pc, #220]	; 13c28 <EnableGpioDetect+0x1ac>
   13b48:	e51b300c 	ldr	r3, [fp, #-12]
   13b4c:	e2833018 	add	r3, r3, #24
   13b50:	e1a03103 	lsl	r3, r3, #2
   13b54:	e0823003 	add	r3, r2, r3
   13b58:	e5932004 	ldr	r2, [r3, #4]
   13b5c:	e59f10c4 	ldr	r1, [pc, #196]	; 13c28 <EnableGpioDetect+0x1ac>
   13b60:	e51b3008 	ldr	r3, [fp, #-8]
   13b64:	e1822003 	orr	r2, r2, r3
   13b68:	e51b300c 	ldr	r3, [fp, #-12]
   13b6c:	e2833018 	add	r3, r3, #24
   13b70:	e1a03103 	lsl	r3, r3, #2
   13b74:	e0813003 	add	r3, r1, r3
   13b78:	e5832004 	str	r2, [r3, #4]
		break;
   13b7c:	ea000025 	b	13c18 <EnableGpioDetect+0x19c>
	case DETECT_LOW:
		pRegs->GPLEN[offset]|=mask;
   13b80:	e59f20a0 	ldr	r2, [pc, #160]	; 13c28 <EnableGpioDetect+0x1ac>
   13b84:	e51b300c 	ldr	r3, [fp, #-12]
   13b88:	e283301c 	add	r3, r3, #28
   13b8c:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13b90:	e59f1090 	ldr	r1, [pc, #144]	; 13c28 <EnableGpioDetect+0x1ac>
   13b94:	e51b3008 	ldr	r3, [fp, #-8]
   13b98:	e1822003 	orr	r2, r2, r3
   13b9c:	e51b300c 	ldr	r3, [fp, #-12]
   13ba0:	e283301c 	add	r3, r3, #28
   13ba4:	e7812103 	str	r2, [r1, r3, lsl #2]
		break;
   13ba8:	ea00001a 	b	13c18 <EnableGpioDetect+0x19c>
	case DETECT_RISING_ASYNC:
		pRegs->GPAREN[offset]|=mask;
   13bac:	e59f2074 	ldr	r2, [pc, #116]	; 13c28 <EnableGpioDetect+0x1ac>
   13bb0:	e51b300c 	ldr	r3, [fp, #-12]
   13bb4:	e283301e 	add	r3, r3, #30
   13bb8:	e1a03103 	lsl	r3, r3, #2
   13bbc:	e0823003 	add	r3, r2, r3
   13bc0:	e5932004 	ldr	r2, [r3, #4]
   13bc4:	e59f105c 	ldr	r1, [pc, #92]	; 13c28 <EnableGpioDetect+0x1ac>
   13bc8:	e51b3008 	ldr	r3, [fp, #-8]
   13bcc:	e1822003 	orr	r2, r2, r3
   13bd0:	e51b300c 	ldr	r3, [fp, #-12]
   13bd4:	e283301e 	add	r3, r3, #30
   13bd8:	e1a03103 	lsl	r3, r3, #2
   13bdc:	e0813003 	add	r3, r1, r3
   13be0:	e5832004 	str	r2, [r3, #4]
		break;
   13be4:	ea00000b 	b	13c18 <EnableGpioDetect+0x19c>
	case DETECT_FALLING_ASYNC:
		pRegs->GPAFEN[offset]|=mask;
   13be8:	e59f2038 	ldr	r2, [pc, #56]	; 13c28 <EnableGpioDetect+0x1ac>
   13bec:	e51b300c 	ldr	r3, [fp, #-12]
   13bf0:	e2833022 	add	r3, r3, #34	; 0x22
   13bf4:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13bf8:	e59f1028 	ldr	r1, [pc, #40]	; 13c28 <EnableGpioDetect+0x1ac>
   13bfc:	e51b3008 	ldr	r3, [fp, #-8]
   13c00:	e1822003 	orr	r2, r2, r3
   13c04:	e51b300c 	ldr	r3, [fp, #-12]
   13c08:	e2833022 	add	r3, r3, #34	; 0x22
   13c0c:	e7812103 	str	r2, [r1, r3, lsl #2]
		break;
   13c10:	ea000000 	b	13c18 <EnableGpioDetect+0x19c>
	case DETECT_NONE:
		break;
   13c14:	e320f000 	nop	{0}
	}
}
   13c18:	e320f000 	nop	{0}
   13c1c:	e28bd000 	add	sp, fp, #0
   13c20:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13c24:	e12fff1e 	bx	lr
   13c28:	20200000 	eorcs	r0, r0, r0

00013c2c <DisableGpioDetect>:

void DisableGpioDetect(unsigned int pinNum, enum DETECT_TYPE type)
{
   13c2c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13c30:	e28db000 	add	fp, sp, #0
   13c34:	e24dd014 	sub	sp, sp, #20
   13c38:	e50b0010 	str	r0, [fp, #-16]
   13c3c:	e1a03001 	mov	r3, r1
   13c40:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	unsigned long mask=~(1<<(pinNum%32));
   13c44:	e51b3010 	ldr	r3, [fp, #-16]
   13c48:	e203301f 	and	r3, r3, #31
   13c4c:	e3a02001 	mov	r2, #1
   13c50:	e1a03312 	lsl	r3, r2, r3
   13c54:	e1e03003 	mvn	r3, r3
   13c58:	e50b3008 	str	r3, [fp, #-8]
	unsigned long offset=pinNum/32;
   13c5c:	e51b3010 	ldr	r3, [fp, #-16]
   13c60:	e1a032a3 	lsr	r3, r3, #5
   13c64:	e50b300c 	str	r3, [fp, #-12]
	
	switch(type) {
   13c68:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
   13c6c:	e3530006 	cmp	r3, #6
   13c70:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   13c74:	ea000055 	b	13dd0 <DisableGpioDetect+0x1a4>
   13c78:	00013dcc 	andeq	r3, r1, ip, asr #27
   13c7c:	00013c94 	muleq	r1, r4, ip
   13c80:	00013cd0 	ldrdeq	r3, [r1], -r0
   13c84:	00013cfc 	strdeq	r3, [r1], -ip
   13c88:	00013d38 	andeq	r3, r1, r8, lsr sp
   13c8c:	00013d64 	andeq	r3, r1, r4, ror #26
   13c90:	00013da0 	andeq	r3, r1, r0, lsr #27
	case DETECT_RISING:
		pRegs->GPREN[offset]&=mask;
   13c94:	e59f2144 	ldr	r2, [pc, #324]	; 13de0 <DisableGpioDetect+0x1b4>
   13c98:	e51b300c 	ldr	r3, [fp, #-12]
   13c9c:	e2833012 	add	r3, r3, #18
   13ca0:	e1a03103 	lsl	r3, r3, #2
   13ca4:	e0823003 	add	r3, r2, r3
   13ca8:	e5932004 	ldr	r2, [r3, #4]
   13cac:	e59f112c 	ldr	r1, [pc, #300]	; 13de0 <DisableGpioDetect+0x1b4>
   13cb0:	e51b3008 	ldr	r3, [fp, #-8]
   13cb4:	e0022003 	and	r2, r2, r3
   13cb8:	e51b300c 	ldr	r3, [fp, #-12]
   13cbc:	e2833012 	add	r3, r3, #18
   13cc0:	e1a03103 	lsl	r3, r3, #2
   13cc4:	e0813003 	add	r3, r1, r3
   13cc8:	e5832004 	str	r2, [r3, #4]
		break;
   13ccc:	ea00003f 	b	13dd0 <DisableGpioDetect+0x1a4>
	case DETECT_FALLING:
		pRegs->GPFEN[offset]&=mask;
   13cd0:	e59f2108 	ldr	r2, [pc, #264]	; 13de0 <DisableGpioDetect+0x1b4>
   13cd4:	e51b300c 	ldr	r3, [fp, #-12]
   13cd8:	e2833016 	add	r3, r3, #22
   13cdc:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13ce0:	e59f10f8 	ldr	r1, [pc, #248]	; 13de0 <DisableGpioDetect+0x1b4>
   13ce4:	e51b3008 	ldr	r3, [fp, #-8]
   13ce8:	e0022003 	and	r2, r2, r3
   13cec:	e51b300c 	ldr	r3, [fp, #-12]
   13cf0:	e2833016 	add	r3, r3, #22
   13cf4:	e7812103 	str	r2, [r1, r3, lsl #2]
		break;
   13cf8:	ea000034 	b	13dd0 <DisableGpioDetect+0x1a4>
	case DETECT_HIGH:
		pRegs->GPHEN[offset]&=mask;
   13cfc:	e59f20dc 	ldr	r2, [pc, #220]	; 13de0 <DisableGpioDetect+0x1b4>
   13d00:	e51b300c 	ldr	r3, [fp, #-12]
   13d04:	e2833018 	add	r3, r3, #24
   13d08:	e1a03103 	lsl	r3, r3, #2
   13d0c:	e0823003 	add	r3, r2, r3
   13d10:	e5932004 	ldr	r2, [r3, #4]
   13d14:	e59f10c4 	ldr	r1, [pc, #196]	; 13de0 <DisableGpioDetect+0x1b4>
   13d18:	e51b3008 	ldr	r3, [fp, #-8]
   13d1c:	e0022003 	and	r2, r2, r3
   13d20:	e51b300c 	ldr	r3, [fp, #-12]
   13d24:	e2833018 	add	r3, r3, #24
   13d28:	e1a03103 	lsl	r3, r3, #2
   13d2c:	e0813003 	add	r3, r1, r3
   13d30:	e5832004 	str	r2, [r3, #4]
		break;
   13d34:	ea000025 	b	13dd0 <DisableGpioDetect+0x1a4>
	case DETECT_LOW:
		pRegs->GPLEN[offset]&=mask;
   13d38:	e59f20a0 	ldr	r2, [pc, #160]	; 13de0 <DisableGpioDetect+0x1b4>
   13d3c:	e51b300c 	ldr	r3, [fp, #-12]
   13d40:	e283301c 	add	r3, r3, #28
   13d44:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13d48:	e59f1090 	ldr	r1, [pc, #144]	; 13de0 <DisableGpioDetect+0x1b4>
   13d4c:	e51b3008 	ldr	r3, [fp, #-8]
   13d50:	e0022003 	and	r2, r2, r3
   13d54:	e51b300c 	ldr	r3, [fp, #-12]
   13d58:	e283301c 	add	r3, r3, #28
   13d5c:	e7812103 	str	r2, [r1, r3, lsl #2]
		break;
   13d60:	ea00001a 	b	13dd0 <DisableGpioDetect+0x1a4>
	case DETECT_RISING_ASYNC:
		pRegs->GPAREN[offset]&=mask;
   13d64:	e59f2074 	ldr	r2, [pc, #116]	; 13de0 <DisableGpioDetect+0x1b4>
   13d68:	e51b300c 	ldr	r3, [fp, #-12]
   13d6c:	e283301e 	add	r3, r3, #30
   13d70:	e1a03103 	lsl	r3, r3, #2
   13d74:	e0823003 	add	r3, r2, r3
   13d78:	e5932004 	ldr	r2, [r3, #4]
   13d7c:	e59f105c 	ldr	r1, [pc, #92]	; 13de0 <DisableGpioDetect+0x1b4>
   13d80:	e51b3008 	ldr	r3, [fp, #-8]
   13d84:	e0022003 	and	r2, r2, r3
   13d88:	e51b300c 	ldr	r3, [fp, #-12]
   13d8c:	e283301e 	add	r3, r3, #30
   13d90:	e1a03103 	lsl	r3, r3, #2
   13d94:	e0813003 	add	r3, r1, r3
   13d98:	e5832004 	str	r2, [r3, #4]
		break;
   13d9c:	ea00000b 	b	13dd0 <DisableGpioDetect+0x1a4>
	case DETECT_FALLING_ASYNC:
		pRegs->GPAFEN[offset]&=mask;
   13da0:	e59f2038 	ldr	r2, [pc, #56]	; 13de0 <DisableGpioDetect+0x1b4>
   13da4:	e51b300c 	ldr	r3, [fp, #-12]
   13da8:	e2833022 	add	r3, r3, #34	; 0x22
   13dac:	e7922103 	ldr	r2, [r2, r3, lsl #2]
   13db0:	e59f1028 	ldr	r1, [pc, #40]	; 13de0 <DisableGpioDetect+0x1b4>
   13db4:	e51b3008 	ldr	r3, [fp, #-8]
   13db8:	e0022003 	and	r2, r2, r3
   13dbc:	e51b300c 	ldr	r3, [fp, #-12]
   13dc0:	e2833022 	add	r3, r3, #34	; 0x22
   13dc4:	e7812103 	str	r2, [r1, r3, lsl #2]
		break;
   13dc8:	ea000000 	b	13dd0 <DisableGpioDetect+0x1a4>
	case DETECT_NONE:
		break;
   13dcc:	e320f000 	nop	{0}
	}
}
   13dd0:	e320f000 	nop	{0}
   13dd4:	e28bd000 	add	sp, fp, #0
   13dd8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13ddc:	e12fff1e 	bx	lr
   13de0:	20200000 	eorcs	r0, r0, r0

00013de4 <ClearGpioInterrupt>:

void ClearGpioInterrupt(unsigned int pinNum)
{
   13de4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13de8:	e28db000 	add	fp, sp, #0
   13dec:	e24dd014 	sub	sp, sp, #20
   13df0:	e50b0010 	str	r0, [fp, #-16]
	unsigned long mask=(1<<(pinNum%32));
   13df4:	e51b3010 	ldr	r3, [fp, #-16]
   13df8:	e203301f 	and	r3, r3, #31
   13dfc:	e3a02001 	mov	r2, #1
   13e00:	e1a03312 	lsl	r3, r2, r3
   13e04:	e50b3008 	str	r3, [fp, #-8]
	unsigned long offset=pinNum/32;
   13e08:	e51b3010 	ldr	r3, [fp, #-16]
   13e0c:	e1a032a3 	lsr	r3, r3, #5
   13e10:	e50b300c 	str	r3, [fp, #-12]

	pRegs->GPEDS[offset]=mask;
   13e14:	e59f101c 	ldr	r1, [pc, #28]	; 13e38 <ClearGpioInterrupt+0x54>
   13e18:	e51b300c 	ldr	r3, [fp, #-12]
   13e1c:	e2833010 	add	r3, r3, #16
   13e20:	e51b2008 	ldr	r2, [fp, #-8]
   13e24:	e7812103 	str	r2, [r1, r3, lsl #2]
}
   13e28:	e320f000 	nop	{0}
   13e2c:	e28bd000 	add	sp, fp, #0
   13e30:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13e34:	e12fff1e 	bx	lr
   13e38:	20200000 	eorcs	r0, r0, r0

00013e3c <mailboxWrite>:

//Docuentation on the mailbox functions
//mailbuffer should probably be 16 byte aligned (for gpu at least):
//unsigned int mailbuffer[22] __attribute__((aligned (16)));
//https://github.com/raspberrypi/firmware/wiki/Mailbox-property-interface
void mailboxWrite(int data_addr, int channel){
   13e3c:	e92d4800 	push	{fp, lr}
   13e40:	e28db004 	add	fp, sp, #4
   13e44:	e24dd010 	sub	sp, sp, #16
   13e48:	e50b0010 	str	r0, [fp, #-16]
   13e4c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int mailbox = 0x2000B880;
   13e50:	e59f304c 	ldr	r3, [pc, #76]	; 13ea4 <mailboxWrite+0x68>
   13e54:	e50b3008 	str	r3, [fp, #-8]
	while(1){
		if((GET32(mailbox + 0x18)&0x80000000) == 0) break;
   13e58:	e51b3008 	ldr	r3, [fp, #-8]
   13e5c:	e2833018 	add	r3, r3, #24
   13e60:	e1a00003 	mov	r0, r3
   13e64:	eb0004be 	bl	15164 <GET32>
   13e68:	e1a03000 	mov	r3, r0
   13e6c:	e3530000 	cmp	r3, #0
   13e70:	aa000000 	bge	13e78 <mailboxWrite+0x3c>
   13e74:	eafffff7 	b	13e58 <mailboxWrite+0x1c>
   13e78:	e320f000 	nop	{0}
	}
	PUT32(mailbox + 0x20, data_addr + channel);
   13e7c:	e51b3008 	ldr	r3, [fp, #-8]
   13e80:	e2830020 	add	r0, r3, #32
   13e84:	e51b2010 	ldr	r2, [fp, #-16]
   13e88:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13e8c:	e0823003 	add	r3, r2, r3
   13e90:	e1a01003 	mov	r1, r3
   13e94:	eb0004b0 	bl	1515c <PUT32>
	return;
   13e98:	e320f000 	nop	{0}
}
   13e9c:	e24bd004 	sub	sp, fp, #4
   13ea0:	e8bd8800 	pop	{fp, pc}
   13ea4:	2000b880 	andcs	fp, r0, r0, lsl #17

00013ea8 <mailboxRead>:

int mailboxRead(int channel){
   13ea8:	e92d4800 	push	{fp, lr}
   13eac:	e28db004 	add	fp, sp, #4
   13eb0:	e24dd010 	sub	sp, sp, #16
   13eb4:	e50b0010 	str	r0, [fp, #-16]
	int ra;
	int mailbox = 0x2000B880;
   13eb8:	e59f3064 	ldr	r3, [pc, #100]	; 13f24 <mailboxRead+0x7c>
   13ebc:	e50b3008 	str	r3, [fp, #-8]
	while(1){
		while(1){
			ra = GET32(mailbox + 0x18);
   13ec0:	e51b3008 	ldr	r3, [fp, #-8]
   13ec4:	e2833018 	add	r3, r3, #24
   13ec8:	e1a00003 	mov	r0, r3
   13ecc:	eb0004a4 	bl	15164 <GET32>
   13ed0:	e50b000c 	str	r0, [fp, #-12]
			if((ra&0x40000000) == 0) break;
   13ed4:	e51b300c 	ldr	r3, [fp, #-12]
   13ed8:	e2033101 	and	r3, r3, #1073741824	; 0x40000000
   13edc:	e3530000 	cmp	r3, #0
   13ee0:	0a000000 	beq	13ee8 <mailboxRead+0x40>
			ra = GET32(mailbox + 0x18);
   13ee4:	eafffff5 	b	13ec0 <mailboxRead+0x18>
			if((ra&0x40000000) == 0) break;
   13ee8:	e320f000 	nop	{0}
		}
		ra = GET32(mailbox + 0x00);
   13eec:	e51b0008 	ldr	r0, [fp, #-8]
   13ef0:	eb00049b 	bl	15164 <GET32>
   13ef4:	e50b000c 	str	r0, [fp, #-12]
		if((ra&0xF) == channel) break;
   13ef8:	e51b300c 	ldr	r3, [fp, #-12]
   13efc:	e203300f 	and	r3, r3, #15
   13f00:	e51b2010 	ldr	r2, [fp, #-16]
   13f04:	e1520003 	cmp	r2, r3
   13f08:	0a000000 	beq	13f10 <mailboxRead+0x68>
	while(1){
   13f0c:	eaffffeb 	b	13ec0 <mailboxRead+0x18>
		if((ra&0xF) == channel) break;
   13f10:	e320f000 	nop	{0}
	}
	return(ra);
   13f14:	e51b300c 	ldr	r3, [fp, #-12]
   13f18:	e1a00003 	mov	r0, r3
   13f1c:	e24bd004 	sub	sp, fp, #4
   13f20:	e8bd8800 	pop	{fp, pc}
   13f24:	2000b880 	andcs	fp, r0, r0, lsl #17

00013f28 <enablelogging>:
#define CHAR_WIDTH 6
#define CHAR_HEIGHT 8
int SCREEN_WIDTH;
int SCREEN_HEIGHT;

void enablelogging(){ loaded = 1;}
   13f28:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13f2c:	e28db000 	add	fp, sp, #0
   13f30:	e59f3014 	ldr	r3, [pc, #20]	; 13f4c <enablelogging+0x24>
   13f34:	e3a02001 	mov	r2, #1
   13f38:	e5c32000 	strb	r2, [r3]
   13f3c:	e320f000 	nop	{0}
   13f40:	e28bd000 	add	sp, fp, #0
   13f44:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13f48:	e12fff1e 	bx	lr
   13f4c:	0002c130 	andeq	ip, r2, r0, lsr r1

00013f50 <initFB>:

//mailbuffer must be 16 byte aligned for GPU
unsigned int mailbuffer[22] __attribute__((aligned (16)));
unsigned int* framebuffer;

void initFB(){
   13f50:	e92d4800 	push	{fp, lr}
   13f54:	e28db004 	add	fp, sp, #4
		}

		attempts++;
	}*/

	SCREEN_WIDTH = 1920;//mailbuffer[5];
   13f58:	e59f3190 	ldr	r3, [pc, #400]	; 140f0 <initFB+0x1a0>
   13f5c:	e3a02d1e 	mov	r2, #1920	; 0x780
   13f60:	e5832000 	str	r2, [r3]
	SCREEN_HEIGHT = 1080;//mailbuffer[6];
   13f64:	e59f3188 	ldr	r3, [pc, #392]	; 140f4 <initFB+0x1a4>
   13f68:	e59f2188 	ldr	r2, [pc, #392]	; 140f8 <initFB+0x1a8>
   13f6c:	e5832000 	str	r2, [r3]

	mailbuffer[0] = 22 * 4;		//mail buffer size
   13f70:	e59f3184 	ldr	r3, [pc, #388]	; 140fc <initFB+0x1ac>
   13f74:	e3a02058 	mov	r2, #88	; 0x58
   13f78:	e5832000 	str	r2, [r3]
	mailbuffer[1] = 0;		//response code
   13f7c:	e59f3178 	ldr	r3, [pc, #376]	; 140fc <initFB+0x1ac>
   13f80:	e3a02000 	mov	r2, #0
   13f84:	e5832004 	str	r2, [r3, #4]

	mailbuffer[2] = 0x00048003;	//set phys display
   13f88:	e59f316c 	ldr	r3, [pc, #364]	; 140fc <initFB+0x1ac>
   13f8c:	e59f216c 	ldr	r2, [pc, #364]	; 14100 <initFB+0x1b0>
   13f90:	e5832008 	str	r2, [r3, #8]
	mailbuffer[3] = 8;		//value buffer size
   13f94:	e59f3160 	ldr	r3, [pc, #352]	; 140fc <initFB+0x1ac>
   13f98:	e3a02008 	mov	r2, #8
   13f9c:	e583200c 	str	r2, [r3, #12]
	mailbuffer[4] = 8;		//Req. + value length (bytes)
   13fa0:	e59f3154 	ldr	r3, [pc, #340]	; 140fc <initFB+0x1ac>
   13fa4:	e3a02008 	mov	r2, #8
   13fa8:	e5832010 	str	r2, [r3, #16]
	mailbuffer[5] = SCREEN_WIDTH;	//screen x
   13fac:	e59f313c 	ldr	r3, [pc, #316]	; 140f0 <initFB+0x1a0>
   13fb0:	e5933000 	ldr	r3, [r3]
   13fb4:	e1a02003 	mov	r2, r3
   13fb8:	e59f313c 	ldr	r3, [pc, #316]	; 140fc <initFB+0x1ac>
   13fbc:	e5832014 	str	r2, [r3, #20]
	mailbuffer[6] = SCREEN_HEIGHT;	//screen y
   13fc0:	e59f312c 	ldr	r3, [pc, #300]	; 140f4 <initFB+0x1a4>
   13fc4:	e5933000 	ldr	r3, [r3]
   13fc8:	e1a02003 	mov	r2, r3
   13fcc:	e59f3128 	ldr	r3, [pc, #296]	; 140fc <initFB+0x1ac>
   13fd0:	e5832018 	str	r2, [r3, #24]

	mailbuffer[7] = 0x00048004;	//set virtual display
   13fd4:	e59f3120 	ldr	r3, [pc, #288]	; 140fc <initFB+0x1ac>
   13fd8:	e59f2124 	ldr	r2, [pc, #292]	; 14104 <initFB+0x1b4>
   13fdc:	e583201c 	str	r2, [r3, #28]
	mailbuffer[8] = 8;		//value buffer size
   13fe0:	e59f3114 	ldr	r3, [pc, #276]	; 140fc <initFB+0x1ac>
   13fe4:	e3a02008 	mov	r2, #8
   13fe8:	e5832020 	str	r2, [r3, #32]
	mailbuffer[9] = 8;		//Req. + value length (bytes)
   13fec:	e59f3108 	ldr	r3, [pc, #264]	; 140fc <initFB+0x1ac>
   13ff0:	e3a02008 	mov	r2, #8
   13ff4:	e5832024 	str	r2, [r3, #36]	; 0x24
	mailbuffer[10] = SCREEN_WIDTH;	//screen x
   13ff8:	e59f30f0 	ldr	r3, [pc, #240]	; 140f0 <initFB+0x1a0>
   13ffc:	e5933000 	ldr	r3, [r3]
   14000:	e1a02003 	mov	r2, r3
   14004:	e59f30f0 	ldr	r3, [pc, #240]	; 140fc <initFB+0x1ac>
   14008:	e5832028 	str	r2, [r3, #40]	; 0x28
	mailbuffer[11] = SCREEN_HEIGHT; //screen y
   1400c:	e59f30e0 	ldr	r3, [pc, #224]	; 140f4 <initFB+0x1a4>
   14010:	e5933000 	ldr	r3, [r3]
   14014:	e1a02003 	mov	r2, r3
   14018:	e59f30dc 	ldr	r3, [pc, #220]	; 140fc <initFB+0x1ac>
   1401c:	e583202c 	str	r2, [r3, #44]	; 0x2c

	mailbuffer[12] = 0x0048005;	//set depth
   14020:	e59f30d4 	ldr	r3, [pc, #212]	; 140fc <initFB+0x1ac>
   14024:	e59f20dc 	ldr	r2, [pc, #220]	; 14108 <initFB+0x1b8>
   14028:	e5832030 	str	r2, [r3, #48]	; 0x30
	mailbuffer[13] = 4;		//value buffer size
   1402c:	e59f30c8 	ldr	r3, [pc, #200]	; 140fc <initFB+0x1ac>
   14030:	e3a02004 	mov	r2, #4
   14034:	e5832034 	str	r2, [r3, #52]	; 0x34
	mailbuffer[14] = 4;		//Req. + value length (bytes)
   14038:	e59f30bc 	ldr	r3, [pc, #188]	; 140fc <initFB+0x1ac>
   1403c:	e3a02004 	mov	r2, #4
   14040:	e5832038 	str	r2, [r3, #56]	; 0x38
	mailbuffer[15] = 32;		//bits per pixel
   14044:	e59f30b0 	ldr	r3, [pc, #176]	; 140fc <initFB+0x1ac>
   14048:	e3a02020 	mov	r2, #32
   1404c:	e583203c 	str	r2, [r3, #60]	; 0x3c
	//pixel format is ARGB, 0xFF0000FF is blue at full alpha transparency

	mailbuffer[16] = 0x00040001;	//allocate buffer
   14050:	e59f30a4 	ldr	r3, [pc, #164]	; 140fc <initFB+0x1ac>
   14054:	e59f20b0 	ldr	r2, [pc, #176]	; 1410c <initFB+0x1bc>
   14058:	e5832040 	str	r2, [r3, #64]	; 0x40
	mailbuffer[17] = 8;		//value buffer size
   1405c:	e59f3098 	ldr	r3, [pc, #152]	; 140fc <initFB+0x1ac>
   14060:	e3a02008 	mov	r2, #8
   14064:	e5832044 	str	r2, [r3, #68]	; 0x44
	mailbuffer[18] = 4;		//Req. + value length (bytes)
   14068:	e59f308c 	ldr	r3, [pc, #140]	; 140fc <initFB+0x1ac>
   1406c:	e3a02004 	mov	r2, #4
   14070:	e5832048 	str	r2, [r3, #72]	; 0x48
	mailbuffer[19] = 0;		//framebuffer address
   14074:	e59f3080 	ldr	r3, [pc, #128]	; 140fc <initFB+0x1ac>
   14078:	e3a02000 	mov	r2, #0
   1407c:	e583204c 	str	r2, [r3, #76]	; 0x4c
	mailbuffer[20] = 0;		//framebuffer size
   14080:	e59f3074 	ldr	r3, [pc, #116]	; 140fc <initFB+0x1ac>
   14084:	e3a02000 	mov	r2, #0
   14088:	e5832050 	str	r2, [r3, #80]	; 0x50

	mailbuffer[21] = 0;		//terminate buffer
   1408c:	e59f3068 	ldr	r3, [pc, #104]	; 140fc <initFB+0x1ac>
   14090:	e3a02000 	mov	r2, #0
   14094:	e5832054 	str	r2, [r3, #84]	; 0x54

	//spam mail the GPU until the response code is ok
	while(mailbuffer[1] != 0x80000000){
   14098:	ea000005 	b	140b4 <initFB+0x164>
		mailboxWrite((int)mailbuffer, 8);
   1409c:	e59f3058 	ldr	r3, [pc, #88]	; 140fc <initFB+0x1ac>
   140a0:	e3a01008 	mov	r1, #8
   140a4:	e1a00003 	mov	r0, r3
   140a8:	ebffff63 	bl	13e3c <mailboxWrite>
		mailboxRead(8);
   140ac:	e3a00008 	mov	r0, #8
   140b0:	ebffff7c 	bl	13ea8 <mailboxRead>
	while(mailbuffer[1] != 0x80000000){
   140b4:	e59f3040 	ldr	r3, [pc, #64]	; 140fc <initFB+0x1ac>
   140b8:	e5933004 	ldr	r3, [r3, #4]
   140bc:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
   140c0:	1afffff5 	bne	1409c <initFB+0x14c>
	}

	//https://github.com/raspberrypi/firmware/wiki/Accessing-mailboxes
	//shift FB by 0x40000000 if L2 cache is enabled, or 0xC0000000 if disabled
	framebuffer = (unsigned int*)(mailbuffer[19] - 0xC0000000);
   140c4:	e59f3030 	ldr	r3, [pc, #48]	; 140fc <initFB+0x1ac>
   140c8:	e593304c 	ldr	r3, [r3, #76]	; 0x4c
   140cc:	e2833101 	add	r3, r3, #1073741824	; 0x40000000
   140d0:	e1a02003 	mov	r2, r3
   140d4:	e59f3034 	ldr	r3, [pc, #52]	; 14110 <initFB+0x1c0>
   140d8:	e5832000 	str	r2, [r3]
	loaded = 1;
   140dc:	e59f3030 	ldr	r3, [pc, #48]	; 14114 <initFB+0x1c4>
   140e0:	e3a02001 	mov	r2, #1
   140e4:	e5c32000 	strb	r2, [r3]
}
   140e8:	e320f000 	nop	{0}
   140ec:	e8bd8800 	pop	{fp, pc}
   140f0:	0002d190 	muleq	r2, r0, r1
   140f4:	0002d194 	muleq	r2, r4, r1
   140f8:	00000438 	andeq	r0, r0, r8, lsr r4
   140fc:	0002d1a0 	andeq	sp, r2, r0, lsr #3
   14100:	00048003 	andeq	r8, r4, r3
   14104:	00048004 	andeq	r8, r4, r4
   14108:	00048005 	andeq	r8, r4, r5
   1410c:	00040001 	andeq	r0, r4, r1
   14110:	0002d198 	muleq	r2, r8, r1
   14114:	0002c130 	andeq	ip, r2, r0, lsr r1

00014118 <drawPixel>:

__attribute__((no_instrument_function))
void drawPixel(unsigned int x, unsigned int y, int colour) {
   14118:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1411c:	e28db000 	add	fp, sp, #0
   14120:	e24dd014 	sub	sp, sp, #20
   14124:	e50b0008 	str	r0, [fp, #-8]
   14128:	e50b100c 	str	r1, [fp, #-12]
   1412c:	e50b2010 	str	r2, [fp, #-16]
    framebuffer[y * SCREEN_WIDTH + x] = colour;
   14130:	e59f303c 	ldr	r3, [pc, #60]	; 14174 <drawPixel+0x5c>
   14134:	e5932000 	ldr	r2, [r3]
   14138:	e59f3038 	ldr	r3, [pc, #56]	; 14178 <drawPixel+0x60>
   1413c:	e5933000 	ldr	r3, [r3]
   14140:	e1a01003 	mov	r1, r3
   14144:	e51b300c 	ldr	r3, [fp, #-12]
   14148:	e0010193 	mul	r1, r3, r1
   1414c:	e51b3008 	ldr	r3, [fp, #-8]
   14150:	e0813003 	add	r3, r1, r3
   14154:	e1a03103 	lsl	r3, r3, #2
   14158:	e0823003 	add	r3, r2, r3
   1415c:	e51b2010 	ldr	r2, [fp, #-16]
   14160:	e5832000 	str	r2, [r3]
}
   14164:	e320f000 	nop	{0}
   14168:	e28bd000 	add	sp, fp, #0
   1416c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14170:	e12fff1e 	bx	lr
   14174:	0002d198 	muleq	r2, r8, r1
   14178:	0002d190 	muleq	r2, r0, r1

0001417c <drawRect>:

__attribute__((no_instrument_function))
void drawRect(unsigned int x1, unsigned int y1, unsigned int x2, unsigned int y2, int colour) {
   1417c:	e92d4800 	push	{fp, lr}
   14180:	e28db004 	add	fp, sp, #4
   14184:	e24dd018 	sub	sp, sp, #24
   14188:	e50b0010 	str	r0, [fp, #-16]
   1418c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   14190:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14194:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    unsigned int i, j = 0;
   14198:	e3a03000 	mov	r3, #0
   1419c:	e50b300c 	str	r3, [fp, #-12]
    for(i = x1; i < x2; i++) {
   141a0:	e51b3010 	ldr	r3, [fp, #-16]
   141a4:	e50b3008 	str	r3, [fp, #-8]
   141a8:	ea000010 	b	141f0 <drawRect+0x74>
        for(j = y1; j < y2; j++) {
   141ac:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   141b0:	e50b300c 	str	r3, [fp, #-12]
   141b4:	ea000006 	b	141d4 <drawRect+0x58>
            drawPixel(i, j, colour);
   141b8:	e59b2004 	ldr	r2, [fp, #4]
   141bc:	e51b100c 	ldr	r1, [fp, #-12]
   141c0:	e51b0008 	ldr	r0, [fp, #-8]
   141c4:	ebffffd3 	bl	14118 <drawPixel>
        for(j = y1; j < y2; j++) {
   141c8:	e51b300c 	ldr	r3, [fp, #-12]
   141cc:	e2833001 	add	r3, r3, #1
   141d0:	e50b300c 	str	r3, [fp, #-12]
   141d4:	e51b200c 	ldr	r2, [fp, #-12]
   141d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   141dc:	e1520003 	cmp	r2, r3
   141e0:	3afffff4 	bcc	141b8 <drawRect+0x3c>
    for(i = x1; i < x2; i++) {
   141e4:	e51b3008 	ldr	r3, [fp, #-8]
   141e8:	e2833001 	add	r3, r3, #1
   141ec:	e50b3008 	str	r3, [fp, #-8]
   141f0:	e51b2008 	ldr	r2, [fp, #-8]
   141f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   141f8:	e1520003 	cmp	r2, r3
   141fc:	3affffea 	bcc	141ac <drawRect+0x30>
        }
    }
}
   14200:	e320f000 	nop	{0}
   14204:	e24bd004 	sub	sp, fp, #4
   14208:	e8bd8800 	pop	{fp, pc}

0001420c <drawChar>:
//	1				1	0
//	1	1	1	1	1	0
//	1				1	0
//	1				1	0
__attribute__((no_instrument_function))
void drawChar(unsigned char c, int x, int y, int colour){
   1420c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14210:	e28db000 	add	fp, sp, #0
   14214:	e24dd01c 	sub	sp, sp, #28
   14218:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1421c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14220:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
   14224:	e1a03000 	mov	r3, r0
   14228:	e54b300d 	strb	r3, [fp, #-13]
	int i, j;

	//convert the character to an index
	c = c & 0x7F;
   1422c:	e55b300d 	ldrb	r3, [fp, #-13]
   14230:	e203307f 	and	r3, r3, #127	; 0x7f
   14234:	e54b300d 	strb	r3, [fp, #-13]
	if (c < ' ') {
   14238:	e55b300d 	ldrb	r3, [fp, #-13]
   1423c:	e353001f 	cmp	r3, #31
   14240:	8a000002 	bhi	14250 <drawChar+0x44>
		c = 0;
   14244:	e3a03000 	mov	r3, #0
   14248:	e54b300d 	strb	r3, [fp, #-13]
   1424c:	ea000002 	b	1425c <drawChar+0x50>
	} else {
		c -= ' ';
   14250:	e55b300d 	ldrb	r3, [fp, #-13]
   14254:	e2433020 	sub	r3, r3, #32
   14258:	e54b300d 	strb	r3, [fp, #-13]
	}

	//draw pixels of the character
	for (j = 0; j < CHAR_WIDTH; j++) {
   1425c:	e3a03000 	mov	r3, #0
   14260:	e50b300c 	str	r3, [fp, #-12]
   14264:	ea00002b 	b	14318 <drawChar+0x10c>
		for (i = 0; i < CHAR_HEIGHT; i++) {
   14268:	e3a03000 	mov	r3, #0
   1426c:	e50b3008 	str	r3, [fp, #-8]
   14270:	ea000022 	b	14300 <drawChar+0xf4>
			//unsigned char temp = font[c][j];
			if (font[c][j] & (1<<i)) {
   14274:	e55b200d 	ldrb	r2, [fp, #-13]
   14278:	e59f10b4 	ldr	r1, [pc, #180]	; 14334 <drawChar+0x128>
   1427c:	e1a03002 	mov	r3, r2
   14280:	e1a03083 	lsl	r3, r3, #1
   14284:	e0833002 	add	r3, r3, r2
   14288:	e1a03083 	lsl	r3, r3, #1
   1428c:	e0812003 	add	r2, r1, r3
   14290:	e51b300c 	ldr	r3, [fp, #-12]
   14294:	e0823003 	add	r3, r2, r3
   14298:	e5d33000 	ldrb	r3, [r3]
   1429c:	e1a02003 	mov	r2, r3
   142a0:	e51b3008 	ldr	r3, [fp, #-8]
   142a4:	e1a03352 	asr	r3, r2, r3
   142a8:	e2033001 	and	r3, r3, #1
   142ac:	e3530000 	cmp	r3, #0
   142b0:	0a00000f 	beq	142f4 <drawChar+0xe8>
				framebuffer[(y + i) * SCREEN_WIDTH + (x + j)] = colour;
   142b4:	e59f307c 	ldr	r3, [pc, #124]	; 14338 <drawChar+0x12c>
   142b8:	e5932000 	ldr	r2, [r3]
   142bc:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   142c0:	e51b3008 	ldr	r3, [fp, #-8]
   142c4:	e0813003 	add	r3, r1, r3
   142c8:	e59f106c 	ldr	r1, [pc, #108]	; 1433c <drawChar+0x130>
   142cc:	e5911000 	ldr	r1, [r1]
   142d0:	e0010391 	mul	r1, r1, r3
   142d4:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   142d8:	e51b300c 	ldr	r3, [fp, #-12]
   142dc:	e0803003 	add	r3, r0, r3
   142e0:	e0813003 	add	r3, r1, r3
   142e4:	e1a03103 	lsl	r3, r3, #2
   142e8:	e0823003 	add	r3, r2, r3
   142ec:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   142f0:	e5832000 	str	r2, [r3]
		for (i = 0; i < CHAR_HEIGHT; i++) {
   142f4:	e51b3008 	ldr	r3, [fp, #-8]
   142f8:	e2833001 	add	r3, r3, #1
   142fc:	e50b3008 	str	r3, [fp, #-8]
   14300:	e51b3008 	ldr	r3, [fp, #-8]
   14304:	e3530007 	cmp	r3, #7
   14308:	daffffd9 	ble	14274 <drawChar+0x68>
	for (j = 0; j < CHAR_WIDTH; j++) {
   1430c:	e51b300c 	ldr	r3, [fp, #-12]
   14310:	e2833001 	add	r3, r3, #1
   14314:	e50b300c 	str	r3, [fp, #-12]
   14318:	e51b300c 	ldr	r3, [fp, #-12]
   1431c:	e3530005 	cmp	r3, #5
   14320:	daffffd0 	ble	14268 <drawChar+0x5c>
			}
		}
	}
}
   14324:	e320f000 	nop	{0}
   14328:	e28bd000 	add	sp, fp, #0
   1432c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14330:	e12fff1e 	bx	lr
   14334:	00028280 	andeq	r8, r2, r0, lsl #5
   14338:	0002d198 	muleq	r2, r8, r1
   1433c:	0002d190 	muleq	r2, r0, r1

00014340 <drawString>:

__attribute__((no_instrument_function))
void drawString(const char* str, int x, int y, int colour){
   14340:	e92d4800 	push	{fp, lr}
   14344:	e28db004 	add	fp, sp, #4
   14348:	e24dd010 	sub	sp, sp, #16
   1434c:	e50b0008 	str	r0, [fp, #-8]
   14350:	e50b100c 	str	r1, [fp, #-12]
   14354:	e50b2010 	str	r2, [fp, #-16]
   14358:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	while (*str) {
   1435c:	ea00000a 	b	1438c <drawString+0x4c>
		drawChar(*str++, x, y, colour);
   14360:	e51b3008 	ldr	r3, [fp, #-8]
   14364:	e2832001 	add	r2, r3, #1
   14368:	e50b2008 	str	r2, [fp, #-8]
   1436c:	e5d30000 	ldrb	r0, [r3]
   14370:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14374:	e51b2010 	ldr	r2, [fp, #-16]
   14378:	e51b100c 	ldr	r1, [fp, #-12]
   1437c:	ebffffa2 	bl	1420c <drawChar>
		x += CHAR_WIDTH; 
   14380:	e51b300c 	ldr	r3, [fp, #-12]
   14384:	e2833006 	add	r3, r3, #6
   14388:	e50b300c 	str	r3, [fp, #-12]
	while (*str) {
   1438c:	e51b3008 	ldr	r3, [fp, #-8]
   14390:	e5d33000 	ldrb	r3, [r3]
   14394:	e3530000 	cmp	r3, #0
   14398:	1afffff0 	bne	14360 <drawString+0x20>
	}
}
   1439c:	e320f000 	nop	{0}
   143a0:	e24bd004 	sub	sp, fp, #4
   143a4:	e8bd8800 	pop	{fp, pc}

000143a8 <println>:

int position_x = 0;
int position_y = 0;
__attribute__((no_instrument_function))
void println(const char* message, int colour){
   143a8:	e92d4800 	push	{fp, lr}
   143ac:	e28db004 	add	fp, sp, #4
   143b0:	e24dd020 	sub	sp, sp, #32
   143b4:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   143b8:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
	if(loaded == 0) return; //if video isn't loaded don't bother
   143bc:	e59f31c8 	ldr	r3, [pc, #456]	; 1458c <println+0x1e4>
   143c0:	e5d33000 	ldrb	r3, [r3]
   143c4:	e3530000 	cmp	r3, #0
   143c8:	0a00006c 	beq	14580 <println+0x1d8>

	int nFlags;
	__asm volatile ("mrs %0, cpsr" : "=r" (nFlags));
   143cc:	e10f3000 	mrs	r3, CPSR
   143d0:	e50b300c 	str	r3, [fp, #-12]
	char s_bWereEnabled = nFlags & 0x80 ? 0 : 1; 
   143d4:	e51b300c 	ldr	r3, [fp, #-12]
   143d8:	e2033080 	and	r3, r3, #128	; 0x80
   143dc:	e3530000 	cmp	r3, #0
   143e0:	03a03001 	moveq	r3, #1
   143e4:	13a03000 	movne	r3, #0
   143e8:	e6ef3073 	uxtb	r3, r3
   143ec:	e54b300d 	strb	r3, [fp, #-13]
	if(s_bWereEnabled) __asm volatile ("cpsid i" : : : "memory");
   143f0:	e55b300d 	ldrb	r3, [fp, #-13]
   143f4:	e3530000 	cmp	r3, #0
   143f8:	0a000000 	beq	14400 <println+0x58>
   143fc:	f10c0080 	cpsid	i

	drawString(message, position_x, position_y, colour);
   14400:	e59f3188 	ldr	r3, [pc, #392]	; 14590 <println+0x1e8>
   14404:	e5931000 	ldr	r1, [r3]
   14408:	e59f3184 	ldr	r3, [pc, #388]	; 14594 <println+0x1ec>
   1440c:	e5932000 	ldr	r2, [r3]
   14410:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   14414:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   14418:	ebffffc8 	bl	14340 <drawString>
	position_y = position_y + CHAR_HEIGHT + 1;
   1441c:	e59f3170 	ldr	r3, [pc, #368]	; 14594 <println+0x1ec>
   14420:	e5933000 	ldr	r3, [r3]
   14424:	e2833009 	add	r3, r3, #9
   14428:	e59f2164 	ldr	r2, [pc, #356]	; 14594 <println+0x1ec>
   1442c:	e5823000 	str	r3, [r2]
	if(position_y >= SCREEN_HEIGHT){
   14430:	e59f315c 	ldr	r3, [pc, #348]	; 14594 <println+0x1ec>
   14434:	e5932000 	ldr	r2, [r3]
   14438:	e59f3158 	ldr	r3, [pc, #344]	; 14598 <println+0x1f0>
   1443c:	e5933000 	ldr	r3, [r3]
   14440:	e1520003 	cmp	r2, r3
   14444:	ba000048 	blt	1456c <println+0x1c4>
		if(position_x + 2 * (SCREEN_WIDTH / 8) > SCREEN_WIDTH){
   14448:	e59f314c 	ldr	r3, [pc, #332]	; 1459c <println+0x1f4>
   1444c:	e5933000 	ldr	r3, [r3]
   14450:	e2832007 	add	r2, r3, #7
   14454:	e3530000 	cmp	r3, #0
   14458:	b1a03002 	movlt	r3, r2
   1445c:	a1a03003 	movge	r3, r3
   14460:	e1a031c3 	asr	r3, r3, #3
   14464:	e1a02083 	lsl	r2, r3, #1
   14468:	e59f3120 	ldr	r3, [pc, #288]	; 14590 <println+0x1e8>
   1446c:	e5933000 	ldr	r3, [r3]
   14470:	e0822003 	add	r2, r2, r3
   14474:	e59f3120 	ldr	r3, [pc, #288]	; 1459c <println+0x1f4>
   14478:	e5933000 	ldr	r3, [r3]
   1447c:	e1520003 	cmp	r2, r3
   14480:	da000029 	ble	1452c <println+0x184>

			volatile int* timeStamp = (int*)0x3f003004;
   14484:	e59f3114 	ldr	r3, [pc, #276]	; 145a0 <println+0x1f8>
   14488:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
			int stop = *timeStamp + 5000 * 1000;
   1448c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14490:	e5932000 	ldr	r2, [r3]
   14494:	e59f3108 	ldr	r3, [pc, #264]	; 145a4 <println+0x1fc>
   14498:	e0823003 	add	r3, r2, r3
   1449c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			while (*timeStamp < stop) __asm__("nop");
   144a0:	ea000000 	b	144a8 <println+0x100>
   144a4:	e320f000 	nop	{0}
   144a8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   144ac:	e5933000 	ldr	r3, [r3]
   144b0:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   144b4:	e1520003 	cmp	r2, r3
   144b8:	cafffff9 	bgt	144a4 <println+0xfc>

			for(int x = 0; x < SCREEN_WIDTH * SCREEN_HEIGHT; x++){
   144bc:	e3a03000 	mov	r3, #0
   144c0:	e50b3008 	str	r3, [fp, #-8]
   144c4:	ea000009 	b	144f0 <println+0x148>
				framebuffer[x] = 0xFF000000;
   144c8:	e59f30d8 	ldr	r3, [pc, #216]	; 145a8 <println+0x200>
   144cc:	e5932000 	ldr	r2, [r3]
   144d0:	e51b3008 	ldr	r3, [fp, #-8]
   144d4:	e1a03103 	lsl	r3, r3, #2
   144d8:	e0823003 	add	r3, r2, r3
   144dc:	e3a024ff 	mov	r2, #-16777216	; 0xff000000
   144e0:	e5832000 	str	r2, [r3]
			for(int x = 0; x < SCREEN_WIDTH * SCREEN_HEIGHT; x++){
   144e4:	e51b3008 	ldr	r3, [fp, #-8]
   144e8:	e2833001 	add	r3, r3, #1
   144ec:	e50b3008 	str	r3, [fp, #-8]
   144f0:	e59f30a4 	ldr	r3, [pc, #164]	; 1459c <println+0x1f4>
   144f4:	e5933000 	ldr	r3, [r3]
   144f8:	e59f2098 	ldr	r2, [pc, #152]	; 14598 <println+0x1f0>
   144fc:	e5922000 	ldr	r2, [r2]
   14500:	e0030392 	mul	r3, r2, r3
   14504:	e51b2008 	ldr	r2, [fp, #-8]
   14508:	e1520003 	cmp	r2, r3
   1450c:	baffffed 	blt	144c8 <println+0x120>
			}
			position_y = 0;
   14510:	e59f307c 	ldr	r3, [pc, #124]	; 14594 <println+0x1ec>
   14514:	e3a02000 	mov	r2, #0
   14518:	e5832000 	str	r2, [r3]
			position_x = 0;
   1451c:	e59f306c 	ldr	r3, [pc, #108]	; 14590 <println+0x1e8>
   14520:	e3a02000 	mov	r2, #0
   14524:	e5832000 	str	r2, [r3]
   14528:	ea00000f 	b	1456c <println+0x1c4>
		}else{
			position_y = 0;
   1452c:	e59f3060 	ldr	r3, [pc, #96]	; 14594 <println+0x1ec>
   14530:	e3a02000 	mov	r2, #0
   14534:	e5832000 	str	r2, [r3]
			position_x += SCREEN_WIDTH / 8;
   14538:	e59f305c 	ldr	r3, [pc, #92]	; 1459c <println+0x1f4>
   1453c:	e5933000 	ldr	r3, [r3]
   14540:	e2832007 	add	r2, r3, #7
   14544:	e3530000 	cmp	r3, #0
   14548:	b1a03002 	movlt	r3, r2
   1454c:	a1a03003 	movge	r3, r3
   14550:	e1a031c3 	asr	r3, r3, #3
   14554:	e1a02003 	mov	r2, r3
   14558:	e59f3030 	ldr	r3, [pc, #48]	; 14590 <println+0x1e8>
   1455c:	e5933000 	ldr	r3, [r3]
   14560:	e0823003 	add	r3, r2, r3
   14564:	e59f2024 	ldr	r2, [pc, #36]	; 14590 <println+0x1e8>
   14568:	e5823000 	str	r3, [r2]
		}
	}

	if(s_bWereEnabled) __asm volatile ("cpsie i" : : : "memory");
   1456c:	e55b300d 	ldrb	r3, [fp, #-13]
   14570:	e3530000 	cmp	r3, #0
   14574:	0a000002 	beq	14584 <println+0x1dc>
   14578:	f1080080 	cpsie	i
   1457c:	ea000000 	b	14584 <println+0x1dc>
	if(loaded == 0) return; //if video isn't loaded don't bother
   14580:	e320f000 	nop	{0}
}
   14584:	e24bd004 	sub	sp, fp, #4
   14588:	e8bd8800 	pop	{fp, pc}
   1458c:	0002c130 	andeq	ip, r2, r0, lsr r1
   14590:	0002c134 	andeq	ip, r2, r4, lsr r1
   14594:	0002c138 	andeq	ip, r2, r8, lsr r1
   14598:	0002d194 	muleq	r2, r4, r1
   1459c:	0002d190 	muleq	r2, r0, r1
   145a0:	3f003004 	svccc	0x00003004
   145a4:	004c4b40 	subeq	r4, ip, r0, asr #22
   145a8:	0002d198 	muleq	r2, r8, r1

000145ac <printHex>:

__attribute__((no_instrument_function))
void printHex(const char* message, int hexi, int colour){
   145ac:	e92d4800 	push	{fp, lr}
   145b0:	e28db004 	add	fp, sp, #4
   145b4:	e24dd0f0 	sub	sp, sp, #240	; 0xf0
   145b8:	e50b00e8 	str	r0, [fp, #-232]	; 0xffffff18
   145bc:	e50b10ec 	str	r1, [fp, #-236]	; 0xffffff14
   145c0:	e50b20f0 	str	r2, [fp, #-240]	; 0xffffff10
if(loaded == 0) return; //if video isn't loaded don't bother
   145c4:	e59f31f4 	ldr	r3, [pc, #500]	; 147c0 <printHex+0x214>
   145c8:	e5d33000 	ldrb	r3, [r3]
   145cc:	e3530000 	cmp	r3, #0
   145d0:	0a000077 	beq	147b4 <printHex+0x208>
	char hex[16] = {'0','1','2','3','4','5','6','7',
   145d4:	e59f31e8 	ldr	r3, [pc, #488]	; 147c4 <printHex+0x218>
   145d8:	e24bc018 	sub	ip, fp, #24
   145dc:	e893000f 	ldm	r3, {r0, r1, r2, r3}
   145e0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
					'8','9','A','B','C','D','E','F'};
	char m[200];
	int i = 0;
   145e4:	e3a03000 	mov	r3, #0
   145e8:	e50b3008 	str	r3, [fp, #-8]
	while (*message){
   145ec:	ea00000b 	b	14620 <printHex+0x74>
		m[i] = *message++;
   145f0:	e51b30e8 	ldr	r3, [fp, #-232]	; 0xffffff18
   145f4:	e2832001 	add	r2, r3, #1
   145f8:	e50b20e8 	str	r2, [fp, #-232]	; 0xffffff18
   145fc:	e5d31000 	ldrb	r1, [r3]
   14600:	e24b20e0 	sub	r2, fp, #224	; 0xe0
   14604:	e51b3008 	ldr	r3, [fp, #-8]
   14608:	e0823003 	add	r3, r2, r3
   1460c:	e1a02001 	mov	r2, r1
   14610:	e5c32000 	strb	r2, [r3]
		i++;
   14614:	e51b3008 	ldr	r3, [fp, #-8]
   14618:	e2833001 	add	r3, r3, #1
   1461c:	e50b3008 	str	r3, [fp, #-8]
	while (*message){
   14620:	e51b30e8 	ldr	r3, [fp, #-232]	; 0xffffff18
   14624:	e5d33000 	ldrb	r3, [r3]
   14628:	e3530000 	cmp	r3, #0
   1462c:	1affffef 	bne	145f0 <printHex+0x44>
	}
	//overwrite the null terminator
	m[i + 0] = hex[(hexi >> 28)&0xF];
   14630:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   14634:	e1a03e23 	lsr	r3, r3, #28
   14638:	e24b2004 	sub	r2, fp, #4
   1463c:	e0823003 	add	r3, r2, r3
   14640:	e5531014 	ldrb	r1, [r3, #-20]	; 0xffffffec
   14644:	e24b20e0 	sub	r2, fp, #224	; 0xe0
   14648:	e51b3008 	ldr	r3, [fp, #-8]
   1464c:	e0823003 	add	r3, r2, r3
   14650:	e1a02001 	mov	r2, r1
   14654:	e5c32000 	strb	r2, [r3]
	m[i + 1] = hex[(hexi >> 24)&0xF];
   14658:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   1465c:	e1a03c43 	asr	r3, r3, #24
   14660:	e203200f 	and	r2, r3, #15
   14664:	e51b3008 	ldr	r3, [fp, #-8]
   14668:	e2833001 	add	r3, r3, #1
   1466c:	e24b1004 	sub	r1, fp, #4
   14670:	e0812002 	add	r2, r1, r2
   14674:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   14678:	e24b1004 	sub	r1, fp, #4
   1467c:	e0813003 	add	r3, r1, r3
   14680:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 2] = hex[(hexi >> 20)&0xF];
   14684:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   14688:	e1a03a43 	asr	r3, r3, #20
   1468c:	e203200f 	and	r2, r3, #15
   14690:	e51b3008 	ldr	r3, [fp, #-8]
   14694:	e2833002 	add	r3, r3, #2
   14698:	e24b1004 	sub	r1, fp, #4
   1469c:	e0812002 	add	r2, r1, r2
   146a0:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   146a4:	e24b1004 	sub	r1, fp, #4
   146a8:	e0813003 	add	r3, r1, r3
   146ac:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 3] = hex[(hexi >> 16)&0xF];
   146b0:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   146b4:	e1a03843 	asr	r3, r3, #16
   146b8:	e203200f 	and	r2, r3, #15
   146bc:	e51b3008 	ldr	r3, [fp, #-8]
   146c0:	e2833003 	add	r3, r3, #3
   146c4:	e24b1004 	sub	r1, fp, #4
   146c8:	e0812002 	add	r2, r1, r2
   146cc:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   146d0:	e24b1004 	sub	r1, fp, #4
   146d4:	e0813003 	add	r3, r1, r3
   146d8:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 4] = hex[(hexi >> 12)&0xF];
   146dc:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   146e0:	e1a03643 	asr	r3, r3, #12
   146e4:	e203200f 	and	r2, r3, #15
   146e8:	e51b3008 	ldr	r3, [fp, #-8]
   146ec:	e2833004 	add	r3, r3, #4
   146f0:	e24b1004 	sub	r1, fp, #4
   146f4:	e0812002 	add	r2, r1, r2
   146f8:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   146fc:	e24b1004 	sub	r1, fp, #4
   14700:	e0813003 	add	r3, r1, r3
   14704:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 5] = hex[(hexi >> 8)&0xF];
   14708:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   1470c:	e1a03443 	asr	r3, r3, #8
   14710:	e203200f 	and	r2, r3, #15
   14714:	e51b3008 	ldr	r3, [fp, #-8]
   14718:	e2833005 	add	r3, r3, #5
   1471c:	e24b1004 	sub	r1, fp, #4
   14720:	e0812002 	add	r2, r1, r2
   14724:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   14728:	e24b1004 	sub	r1, fp, #4
   1472c:	e0813003 	add	r3, r1, r3
   14730:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 6] = hex[(hexi >> 4)&0xF];
   14734:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   14738:	e1a03243 	asr	r3, r3, #4
   1473c:	e203200f 	and	r2, r3, #15
   14740:	e51b3008 	ldr	r3, [fp, #-8]
   14744:	e2833006 	add	r3, r3, #6
   14748:	e24b1004 	sub	r1, fp, #4
   1474c:	e0812002 	add	r2, r1, r2
   14750:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   14754:	e24b1004 	sub	r1, fp, #4
   14758:	e0813003 	add	r3, r1, r3
   1475c:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 7] = hex[(hexi >> 0)&0xF];
   14760:	e51b30ec 	ldr	r3, [fp, #-236]	; 0xffffff14
   14764:	e203200f 	and	r2, r3, #15
   14768:	e51b3008 	ldr	r3, [fp, #-8]
   1476c:	e2833007 	add	r3, r3, #7
   14770:	e24b1004 	sub	r1, fp, #4
   14774:	e0812002 	add	r2, r1, r2
   14778:	e5522014 	ldrb	r2, [r2, #-20]	; 0xffffffec
   1477c:	e24b1004 	sub	r1, fp, #4
   14780:	e0813003 	add	r3, r1, r3
   14784:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	m[i + 8] = 0; //null termination
   14788:	e51b3008 	ldr	r3, [fp, #-8]
   1478c:	e2833008 	add	r3, r3, #8
   14790:	e24b2004 	sub	r2, fp, #4
   14794:	e0823003 	add	r3, r2, r3
   14798:	e3a02000 	mov	r2, #0
   1479c:	e54320dc 	strb	r2, [r3, #-220]	; 0xffffff24
	println(m, colour);
   147a0:	e24b30e0 	sub	r3, fp, #224	; 0xe0
   147a4:	e51b10f0 	ldr	r1, [fp, #-240]	; 0xffffff10
   147a8:	e1a00003 	mov	r0, r3
   147ac:	ebfffefd 	bl	143a8 <println>
   147b0:	ea000000 	b	147b8 <printHex+0x20c>
if(loaded == 0) return; //if video isn't loaded don't bother
   147b4:	e320f000 	nop	{0}
}
   147b8:	e24bd004 	sub	sp, fp, #4
   147bc:	e8bd8800 	pop	{fp, pc}
   147c0:	0002c130 	andeq	ip, r2, r0, lsr r1
   147c4:	000284c0 	andeq	r8, r2, r0, asr #9

000147c8 <videotest>:

void videotest(){
   147c8:	e92d4800 	push	{fp, lr}
   147cc:	e28db004 	add	fp, sp, #4
   147d0:	e24dd008 	sub	sp, sp, #8
	//This loop turns on every pixel the screen size allows for.
	//If the shaded area is larger or smaller than your screen, 
	//you have under/over scan issues. Add disable_overscan=1 to your config.txt
	for(int x = 0; x < SCREEN_WIDTH * SCREEN_HEIGHT; x++){
   147d4:	e3a03000 	mov	r3, #0
   147d8:	e50b3008 	str	r3, [fp, #-8]
   147dc:	ea000009 	b	14808 <videotest+0x40>
		framebuffer[x] = 0xFF111111;
   147e0:	e59f30b0 	ldr	r3, [pc, #176]	; 14898 <videotest+0xd0>
   147e4:	e5932000 	ldr	r2, [r3]
   147e8:	e51b3008 	ldr	r3, [fp, #-8]
   147ec:	e1a03103 	lsl	r3, r3, #2
   147f0:	e0823003 	add	r3, r2, r3
   147f4:	e59f20a0 	ldr	r2, [pc, #160]	; 1489c <videotest+0xd4>
   147f8:	e5832000 	str	r2, [r3]
	for(int x = 0; x < SCREEN_WIDTH * SCREEN_HEIGHT; x++){
   147fc:	e51b3008 	ldr	r3, [fp, #-8]
   14800:	e2833001 	add	r3, r3, #1
   14804:	e50b3008 	str	r3, [fp, #-8]
   14808:	e59f3090 	ldr	r3, [pc, #144]	; 148a0 <videotest+0xd8>
   1480c:	e5933000 	ldr	r3, [r3]
   14810:	e59f208c 	ldr	r2, [pc, #140]	; 148a4 <videotest+0xdc>
   14814:	e5922000 	ldr	r2, [r2]
   14818:	e0030392 	mul	r3, r2, r3
   1481c:	e51b2008 	ldr	r2, [fp, #-8]
   14820:	e1520003 	cmp	r2, r3
   14824:	baffffed 	blt	147e0 <videotest+0x18>
	}

	//division crashes the system here but not in other places it seems?
	drawString("Forty-Two", SCREEN_WIDTH / 2 - 4.5 * CHAR_WIDTH, SCREEN_HEIGHT / 2 + CHAR_HEIGHT / 2, 0xFF00FF00);
   14828:	e59f3070 	ldr	r3, [pc, #112]	; 148a0 <videotest+0xd8>
   1482c:	e5933000 	ldr	r3, [r3]
   14830:	e1a02fa3 	lsr	r2, r3, #31
   14834:	e0823003 	add	r3, r2, r3
   14838:	e1a030c3 	asr	r3, r3, #1
   1483c:	e1a00003 	mov	r0, r3
   14840:	eb0003a1 	bl	156cc <__aeabi_i2d>
   14844:	e3a02000 	mov	r2, #0
   14848:	e59f3058 	ldr	r3, [pc, #88]	; 148a8 <videotest+0xe0>
   1484c:	eb0002d0 	bl	15394 <__aeabi_dsub>
   14850:	e1a02000 	mov	r2, r0
   14854:	e1a03001 	mov	r3, r1
   14858:	e1a00002 	mov	r0, r2
   1485c:	e1a01003 	mov	r1, r3
   14860:	eb0003d2 	bl	157b0 <__aeabi_d2iz>
   14864:	e1a01000 	mov	r1, r0
   14868:	e59f3034 	ldr	r3, [pc, #52]	; 148a4 <videotest+0xdc>
   1486c:	e5933000 	ldr	r3, [r3]
   14870:	e1a02fa3 	lsr	r2, r3, #31
   14874:	e0823003 	add	r3, r2, r3
   14878:	e1a030c3 	asr	r3, r3, #1
   1487c:	e2832004 	add	r2, r3, #4
   14880:	e59f3024 	ldr	r3, [pc, #36]	; 148ac <videotest+0xe4>
   14884:	e59f0024 	ldr	r0, [pc, #36]	; 148b0 <videotest+0xe8>
   14888:	ebfffeac 	bl	14340 <drawString>
}
   1488c:	e320f000 	nop	{0}
   14890:	e24bd004 	sub	sp, fp, #4
   14894:	e8bd8800 	pop	{fp, pc}
   14898:	0002d198 	muleq	r2, r8, r1
   1489c:	ff111111 			; <UNDEFINED> instruction: 0xff111111
   148a0:	0002d190 	muleq	r2, r0, r1
   148a4:	0002d194 	muleq	r2, r4, r1
   148a8:	403b0000 	eorsmi	r0, fp, r0
   148ac:	ff00ff00 			; <UNDEFINED> instruction: 0xff00ff00
   148b0:	000284d0 	ldrdeq	r8, [r2], -r0

000148b4 <memset>:
//standard memory functions to avoid using incompatible libraries on ARM

#include <FreeRTOS.h>
#include <mem.h>

void *memset(void *s, int c, size_t n){
   148b4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   148b8:	e28db000 	add	fp, sp, #0
   148bc:	e24dd01c 	sub	sp, sp, #28
   148c0:	e50b0010 	str	r0, [fp, #-16]
   148c4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   148c8:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    unsigned char* p=s;
   148cc:	e51b3010 	ldr	r3, [fp, #-16]
   148d0:	e50b3008 	str	r3, [fp, #-8]
    while(n--)
   148d4:	ea000005 	b	148f0 <memset+0x3c>
        *p++ = (unsigned char)c;
   148d8:	e51b3008 	ldr	r3, [fp, #-8]
   148dc:	e2832001 	add	r2, r3, #1
   148e0:	e50b2008 	str	r2, [fp, #-8]
   148e4:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   148e8:	e6ef2072 	uxtb	r2, r2
   148ec:	e5c32000 	strb	r2, [r3]
    while(n--)
   148f0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   148f4:	e2432001 	sub	r2, r3, #1
   148f8:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   148fc:	e3530000 	cmp	r3, #0
   14900:	1afffff4 	bne	148d8 <memset+0x24>
    return s;
   14904:	e51b3010 	ldr	r3, [fp, #-16]
}
   14908:	e1a00003 	mov	r0, r3
   1490c:	e28bd000 	add	sp, fp, #0
   14910:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14914:	e12fff1e 	bx	lr

00014918 <memmove>:

void *memmove(void *dest, const void *src, size_t n){
   14918:	e92d4810 	push	{r4, fp, lr}
   1491c:	e28db008 	add	fp, sp, #8
   14920:	e24dd01c 	sub	sp, sp, #28
   14924:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   14928:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1492c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   14930:	e1a0300d 	mov	r3, sp
   14934:	e1a04003 	mov	r4, r3
    unsigned char tmp[n];
   14938:	e51bc020 	ldr	ip, [fp, #-32]	; 0xffffffe0
   1493c:	e1a0300c 	mov	r3, ip
   14940:	e2433001 	sub	r3, r3, #1
   14944:	e50b3010 	str	r3, [fp, #-16]
   14948:	e1a0000c 	mov	r0, ip
   1494c:	e3a01000 	mov	r1, #0
   14950:	e3a02000 	mov	r2, #0
   14954:	e3a03000 	mov	r3, #0
   14958:	e1a03181 	lsl	r3, r1, #3
   1495c:	e1833ea0 	orr	r3, r3, r0, lsr #29
   14960:	e1a02180 	lsl	r2, r0, #3
   14964:	e1a0000c 	mov	r0, ip
   14968:	e3a01000 	mov	r1, #0
   1496c:	e3a02000 	mov	r2, #0
   14970:	e3a03000 	mov	r3, #0
   14974:	e1a03181 	lsl	r3, r1, #3
   14978:	e1833ea0 	orr	r3, r3, r0, lsr #29
   1497c:	e1a02180 	lsl	r2, r0, #3
   14980:	e28c3007 	add	r3, ip, #7
   14984:	e1a031a3 	lsr	r3, r3, #3
   14988:	e1a03183 	lsl	r3, r3, #3
   1498c:	e04dd003 	sub	sp, sp, r3
   14990:	e1a0300d 	mov	r3, sp
   14994:	e2833000 	add	r3, r3, #0
   14998:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    memcpy2(tmp,src,n);
   1499c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   149a0:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   149a4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   149a8:	e1a00003 	mov	r0, r3
   149ac:	eb000009 	bl	149d8 <memcpy2>
    memcpy2(dest,tmp,n);
   149b0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   149b4:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   149b8:	e1a01003 	mov	r1, r3
   149bc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   149c0:	eb000004 	bl	149d8 <memcpy2>
    return dest;
   149c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   149c8:	e1a0d004 	mov	sp, r4
}
   149cc:	e1a00003 	mov	r0, r3
   149d0:	e24bd008 	sub	sp, fp, #8
   149d4:	e8bd8810 	pop	{r4, fp, pc}

000149d8 <memcpy2>:

void *memcpy2(void *dest, const void *src, size_t n){
   149d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   149dc:	e28db000 	add	fp, sp, #0
   149e0:	e24dd01c 	sub	sp, sp, #28
   149e4:	e50b0010 	str	r0, [fp, #-16]
   149e8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   149ec:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	/*unaligned word moves don't work
	for sizes not a multiple of 4,
	this function does not work
	just use a loop inline*/
    char *dp = dest;
   149f0:	e51b3010 	ldr	r3, [fp, #-16]
   149f4:	e50b3008 	str	r3, [fp, #-8]
    const char *sp = src;
   149f8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   149fc:	e50b300c 	str	r3, [fp, #-12]
    while (n--)
   14a00:	ea000007 	b	14a24 <memcpy2+0x4c>
        *dp++ = *sp++;
   14a04:	e51b200c 	ldr	r2, [fp, #-12]
   14a08:	e2823001 	add	r3, r2, #1
   14a0c:	e50b300c 	str	r3, [fp, #-12]
   14a10:	e51b3008 	ldr	r3, [fp, #-8]
   14a14:	e2831001 	add	r1, r3, #1
   14a18:	e50b1008 	str	r1, [fp, #-8]
   14a1c:	e5d22000 	ldrb	r2, [r2]
   14a20:	e5c32000 	strb	r2, [r3]
    while (n--)
   14a24:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a28:	e2432001 	sub	r2, r3, #1
   14a2c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14a30:	e3530000 	cmp	r3, #0
   14a34:	1afffff2 	bne	14a04 <memcpy2+0x2c>
	return dest;
   14a38:	e51b3010 	ldr	r3, [fp, #-16]
}
   14a3c:	e1a00003 	mov	r0, r3
   14a40:	e28bd000 	add	sp, fp, #0
   14a44:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14a48:	e12fff1e 	bx	lr

00014a4c <memcmp>:

int memcmp(const void* s1, const void* s2, size_t n){
   14a4c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14a50:	e28db000 	add	fp, sp, #0
   14a54:	e24dd01c 	sub	sp, sp, #28
   14a58:	e50b0010 	str	r0, [fp, #-16]
   14a5c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   14a60:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    const unsigned char *p1 = s1, *p2 = s2;
   14a64:	e51b3010 	ldr	r3, [fp, #-16]
   14a68:	e50b3008 	str	r3, [fp, #-8]
   14a6c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14a70:	e50b300c 	str	r3, [fp, #-12]
    while(n--)
   14a74:	ea000012 	b	14ac4 <memcmp+0x78>
        if( *p1 != *p2 )
   14a78:	e51b3008 	ldr	r3, [fp, #-8]
   14a7c:	e5d32000 	ldrb	r2, [r3]
   14a80:	e51b300c 	ldr	r3, [fp, #-12]
   14a84:	e5d33000 	ldrb	r3, [r3]
   14a88:	e1520003 	cmp	r2, r3
   14a8c:	0a000006 	beq	14aac <memcmp+0x60>
            return *p1 - *p2;
   14a90:	e51b3008 	ldr	r3, [fp, #-8]
   14a94:	e5d33000 	ldrb	r3, [r3]
   14a98:	e1a02003 	mov	r2, r3
   14a9c:	e51b300c 	ldr	r3, [fp, #-12]
   14aa0:	e5d33000 	ldrb	r3, [r3]
   14aa4:	e0423003 	sub	r3, r2, r3
   14aa8:	ea00000b 	b	14adc <memcmp+0x90>
        else
            p1++,p2++;
   14aac:	e51b3008 	ldr	r3, [fp, #-8]
   14ab0:	e2833001 	add	r3, r3, #1
   14ab4:	e50b3008 	str	r3, [fp, #-8]
   14ab8:	e51b300c 	ldr	r3, [fp, #-12]
   14abc:	e2833001 	add	r3, r3, #1
   14ac0:	e50b300c 	str	r3, [fp, #-12]
    while(n--)
   14ac4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ac8:	e2432001 	sub	r2, r3, #1
   14acc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14ad0:	e3530000 	cmp	r3, #0
   14ad4:	1affffe7 	bne	14a78 <memcmp+0x2c>
    return 0;
   14ad8:	e3a03000 	mov	r3, #0
}
   14adc:	e1a00003 	mov	r0, r3
   14ae0:	e28bd000 	add	sp, fp, #0
   14ae4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14ae8:	e12fff1e 	bx	lr

00014aec <strcpy>:

char *strcpy(char *dest, const char* src){
   14aec:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14af0:	e28db000 	add	fp, sp, #0
   14af4:	e24dd014 	sub	sp, sp, #20
   14af8:	e50b0010 	str	r0, [fp, #-16]
   14afc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    char *ret = dest;
   14b00:	e51b3010 	ldr	r3, [fp, #-16]
   14b04:	e50b3008 	str	r3, [fp, #-8]
    while (*dest++ = *src++)
   14b08:	e320f000 	nop	{0}
   14b0c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   14b10:	e2823001 	add	r3, r2, #1
   14b14:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
   14b18:	e51b3010 	ldr	r3, [fp, #-16]
   14b1c:	e2831001 	add	r1, r3, #1
   14b20:	e50b1010 	str	r1, [fp, #-16]
   14b24:	e5d22000 	ldrb	r2, [r2]
   14b28:	e5c32000 	strb	r2, [r3]
   14b2c:	e5d33000 	ldrb	r3, [r3]
   14b30:	e3530000 	cmp	r3, #0
   14b34:	1afffff4 	bne	14b0c <strcpy+0x20>
        ;
    return ret;
   14b38:	e51b3008 	ldr	r3, [fp, #-8]
}
   14b3c:	e1a00003 	mov	r0, r3
   14b40:	e28bd000 	add	sp, fp, #0
   14b44:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14b48:	e12fff1e 	bx	lr

00014b4c <strncpy>:

char *strncpy(char *dest, const char *src, size_t n){
   14b4c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14b50:	e28db000 	add	fp, sp, #0
   14b54:	e24dd01c 	sub	sp, sp, #28
   14b58:	e50b0010 	str	r0, [fp, #-16]
   14b5c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   14b60:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    char *ret = dest;
   14b64:	e51b3010 	ldr	r3, [fp, #-16]
   14b68:	e50b3008 	str	r3, [fp, #-8]
    do {
        if (!n--)
   14b6c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b70:	e2432001 	sub	r2, r3, #1
   14b74:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14b78:	e3530000 	cmp	r3, #0
   14b7c:	1a000001 	bne	14b88 <strncpy+0x3c>
            return ret;
   14b80:	e51b3008 	ldr	r3, [fp, #-8]
   14b84:	ea000016 	b	14be4 <strncpy+0x98>
    } while (*dest++ = *src++);
   14b88:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   14b8c:	e2823001 	add	r3, r2, #1
   14b90:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
   14b94:	e51b3010 	ldr	r3, [fp, #-16]
   14b98:	e2831001 	add	r1, r3, #1
   14b9c:	e50b1010 	str	r1, [fp, #-16]
   14ba0:	e5d22000 	ldrb	r2, [r2]
   14ba4:	e5c32000 	strb	r2, [r3]
   14ba8:	e5d33000 	ldrb	r3, [r3]
   14bac:	e3530000 	cmp	r3, #0
   14bb0:	1affffed 	bne	14b6c <strncpy+0x20>
    while (n--)
   14bb4:	ea000004 	b	14bcc <strncpy+0x80>
        *dest++ = 0;
   14bb8:	e51b3010 	ldr	r3, [fp, #-16]
   14bbc:	e2832001 	add	r2, r3, #1
   14bc0:	e50b2010 	str	r2, [fp, #-16]
   14bc4:	e3a02000 	mov	r2, #0
   14bc8:	e5c32000 	strb	r2, [r3]
    while (n--)
   14bcc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bd0:	e2432001 	sub	r2, r3, #1
   14bd4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14bd8:	e3530000 	cmp	r3, #0
   14bdc:	1afffff5 	bne	14bb8 <strncpy+0x6c>
    return ret;
   14be0:	e51b3008 	ldr	r3, [fp, #-8]
}
   14be4:	e1a00003 	mov	r0, r3
   14be8:	e28bd000 	add	sp, fp, #0
   14bec:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14bf0:	e12fff1e 	bx	lr

00014bf4 <strlen>:

size_t strlen(const char *s){
   14bf4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14bf8:	e28db000 	add	fp, sp, #0
   14bfc:	e24dd014 	sub	sp, sp, #20
   14c00:	e50b0010 	str	r0, [fp, #-16]
    size_t i;
    for (i = 0; s[i] != '\0'; i++) ;
   14c04:	e3a03000 	mov	r3, #0
   14c08:	e50b3008 	str	r3, [fp, #-8]
   14c0c:	ea000002 	b	14c1c <strlen+0x28>
   14c10:	e51b3008 	ldr	r3, [fp, #-8]
   14c14:	e2833001 	add	r3, r3, #1
   14c18:	e50b3008 	str	r3, [fp, #-8]
   14c1c:	e51b2010 	ldr	r2, [fp, #-16]
   14c20:	e51b3008 	ldr	r3, [fp, #-8]
   14c24:	e0823003 	add	r3, r2, r3
   14c28:	e5d33000 	ldrb	r3, [r3]
   14c2c:	e3530000 	cmp	r3, #0
   14c30:	1afffff6 	bne	14c10 <strlen+0x1c>
    return i;
   14c34:	e51b3008 	ldr	r3, [fp, #-8]
}
   14c38:	e1a00003 	mov	r0, r3
   14c3c:	e28bd000 	add	sp, fp, #0
   14c40:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14c44:	e12fff1e 	bx	lr

00014c48 <rand>:

//this is not random at all
int next = 1;
   14c48:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14c4c:	e28db000 	add	fp, sp, #0
   14c50:	e59f3038 	ldr	r3, [pc, #56]	; 14c90 <rand+0x48>
   14c54:	e5933000 	ldr	r3, [r3]
   14c58:	e59f2034 	ldr	r2, [pc, #52]	; 14c94 <rand+0x4c>
   14c5c:	e0030392 	mul	r3, r2, r3
   14c60:	e2833a03 	add	r3, r3, #12288	; 0x3000
   14c64:	e2833039 	add	r3, r3, #57	; 0x39
   14c68:	e59f2020 	ldr	r2, [pc, #32]	; 14c90 <rand+0x48>
   14c6c:	e5823000 	str	r3, [r2]
   14c70:	e59f3018 	ldr	r3, [pc, #24]	; 14c90 <rand+0x48>
   14c74:	e5933000 	ldr	r3, [r3]
   14c78:	e1a03883 	lsl	r3, r3, #17
   14c7c:	e1a038a3 	lsr	r3, r3, #17
   14c80:	e1a00003 	mov	r0, r3
   14c84:	e28bd000 	add	sp, fp, #0
   14c88:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14c8c:	e12fff1e 	bx	lr
   14c90:	0002bcc8 	andeq	fp, r2, r8, asr #25
   14c94:	41c64e6d 	bicmi	r4, r6, sp, ror #28

00014c98 <pvPortMalloc>:
/* STATIC FUNCTIONS ARE DEFINED AS MACROS TO MINIMIZE THE FUNCTION CALL DEPTH. */

/*-----------------------------------------------------------*/
size_t allocated = 0;
void *pvPortMalloc( size_t xWantedSize )
{
   14c98:	e92d4800 	push	{fp, lr}
   14c9c:	e28db004 	add	fp, sp, #4
   14ca0:	e24dd018 	sub	sp, sp, #24
   14ca4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
xBlockLink *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;
   14ca8:	e3a03000 	mov	r3, #0
   14cac:	e50b3010 	str	r3, [fp, #-16]

	vTaskSuspendAll();
   14cb0:	ebfff68c 	bl	126e8 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
   14cb4:	e59f3194 	ldr	r3, [pc, #404]	; 14e50 <pvPortMalloc+0x1b8>
   14cb8:	e5933000 	ldr	r3, [r3]
   14cbc:	e3530000 	cmp	r3, #0
   14cc0:	1a000000 	bne	14cc8 <pvPortMalloc+0x30>
		{
			prvHeapInit();
   14cc4:	eb000093 	bl	14f18 <prvHeapInit>
		}

		/* The wanted size is increased so it can contain a xBlockLink
		structure in addition to the requested amount of bytes. */
		if( xWantedSize > 0 )
   14cc8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ccc:	e3530000 	cmp	r3, #0
   14cd0:	0a00000c 	beq	14d08 <pvPortMalloc+0x70>
		{
			xWantedSize += heapSTRUCT_SIZE;
   14cd4:	e3a03010 	mov	r3, #16
   14cd8:	e1a02003 	mov	r2, r3
   14cdc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ce0:	e0833002 	add	r3, r3, r2
   14ce4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

			/* Ensure that blocks are always aligned to the required number of 
			bytes. */
			if( xWantedSize & portBYTE_ALIGNMENT_MASK )
   14ce8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14cec:	e2033007 	and	r3, r3, #7
   14cf0:	e3530000 	cmp	r3, #0
   14cf4:	0a000003 	beq	14d08 <pvPortMalloc+0x70>
			{
				/* Byte alignment required. */
				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
   14cf8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14cfc:	e3c33007 	bic	r3, r3, #7
   14d00:	e2833008 	add	r3, r3, #8
   14d04:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			}
		}

		if( ( xWantedSize > 0 ) && ( xWantedSize < xTotalHeapSize ) )
   14d08:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d0c:	e3530000 	cmp	r3, #0
   14d10:	0a000043 	beq	14e24 <pvPortMalloc+0x18c>
   14d14:	e3a02a01 	mov	r2, #4096	; 0x1000
   14d18:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d1c:	e1530002 	cmp	r3, r2
   14d20:	2a00003f 	bcs	14e24 <pvPortMalloc+0x18c>
		{
			/* Traverse the list from the start	(lowest address) block until one
			of adequate size is found. */
			pxPreviousBlock = &xStart;
   14d24:	e59f3128 	ldr	r3, [pc, #296]	; 14e54 <pvPortMalloc+0x1bc>
   14d28:	e50b300c 	str	r3, [fp, #-12]
			pxBlock = xStart.pxNextFreeBlock;
   14d2c:	e59f3120 	ldr	r3, [pc, #288]	; 14e54 <pvPortMalloc+0x1bc>
   14d30:	e5933000 	ldr	r3, [r3]
   14d34:	e50b3008 	str	r3, [fp, #-8]
			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
   14d38:	ea000004 	b	14d50 <pvPortMalloc+0xb8>
			{
				pxPreviousBlock = pxBlock;
   14d3c:	e51b3008 	ldr	r3, [fp, #-8]
   14d40:	e50b300c 	str	r3, [fp, #-12]
				pxBlock = pxBlock->pxNextFreeBlock;
   14d44:	e51b3008 	ldr	r3, [fp, #-8]
   14d48:	e5933000 	ldr	r3, [r3]
   14d4c:	e50b3008 	str	r3, [fp, #-8]
			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
   14d50:	e51b3008 	ldr	r3, [fp, #-8]
   14d54:	e5933004 	ldr	r3, [r3, #4]
   14d58:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d5c:	e1520003 	cmp	r2, r3
   14d60:	9a000003 	bls	14d74 <pvPortMalloc+0xdc>
   14d64:	e51b3008 	ldr	r3, [fp, #-8]
   14d68:	e5933000 	ldr	r3, [r3]
   14d6c:	e3530000 	cmp	r3, #0
   14d70:	1afffff1 	bne	14d3c <pvPortMalloc+0xa4>
			}

			/* If the end marker was reached then a block of adequate size was
			not found. */
			if( pxBlock != pxEnd )
   14d74:	e59f30d4 	ldr	r3, [pc, #212]	; 14e50 <pvPortMalloc+0x1b8>
   14d78:	e5933000 	ldr	r3, [r3]
   14d7c:	e51b2008 	ldr	r2, [fp, #-8]
   14d80:	e1520003 	cmp	r2, r3
   14d84:	0a000026 	beq	14e24 <pvPortMalloc+0x18c>
			{
				/* Return the memory space - jumping over the xBlockLink structure
				at its start. */
				pvReturn = ( void * ) ( ( ( unsigned char * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
   14d88:	e51b300c 	ldr	r3, [fp, #-12]
   14d8c:	e5933000 	ldr	r3, [r3]
   14d90:	e3a02010 	mov	r2, #16
   14d94:	e0833002 	add	r3, r3, r2
   14d98:	e50b3010 	str	r3, [fp, #-16]

				/* This block is being returned for use so must be taken out of
				the	list of free blocks. */
				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
   14d9c:	e51b3008 	ldr	r3, [fp, #-8]
   14da0:	e5932000 	ldr	r2, [r3]
   14da4:	e51b300c 	ldr	r3, [fp, #-12]
   14da8:	e5832000 	str	r2, [r3]

				/* If the block is larger than required it can be split into two. */
				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
   14dac:	e51b3008 	ldr	r3, [fp, #-8]
   14db0:	e5932004 	ldr	r2, [r3, #4]
   14db4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14db8:	e0423003 	sub	r3, r2, r3
   14dbc:	e3a02010 	mov	r2, #16
   14dc0:	e1a02082 	lsl	r2, r2, #1
   14dc4:	e1530002 	cmp	r3, r2
   14dc8:	9a00000e 	bls	14e08 <pvPortMalloc+0x170>
				{
					/* This block is to be split into two.  Create a new block
					following the number of bytes requested. The void cast is
					used to prevent byte alignment warnings from the compiler. */
					pxNewBlockLink = ( void * ) ( ( ( unsigned char * ) pxBlock ) + xWantedSize );
   14dcc:	e51b2008 	ldr	r2, [fp, #-8]
   14dd0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14dd4:	e0823003 	add	r3, r2, r3
   14dd8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

					/* Calculate the sizes of two blocks split from the single
					block. */
					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
   14ddc:	e51b3008 	ldr	r3, [fp, #-8]
   14de0:	e5932004 	ldr	r2, [r3, #4]
   14de4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14de8:	e0422003 	sub	r2, r2, r3
   14dec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14df0:	e5832004 	str	r2, [r3, #4]
					pxBlock->xBlockSize = xWantedSize;
   14df4:	e51b3008 	ldr	r3, [fp, #-8]
   14df8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dfc:	e5832004 	str	r2, [r3, #4]

					/* Insert the new block into the list of free blocks. */
					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
   14e00:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   14e04:	eb000079 	bl	14ff0 <prvInsertBlockIntoFreeList>
				}

				xFreeBytesRemaining -= pxBlock->xBlockSize;
   14e08:	e59f3048 	ldr	r3, [pc, #72]	; 14e58 <pvPortMalloc+0x1c0>
   14e0c:	e5932000 	ldr	r2, [r3]
   14e10:	e51b3008 	ldr	r3, [fp, #-8]
   14e14:	e5933004 	ldr	r3, [r3, #4]
   14e18:	e0423003 	sub	r3, r2, r3
   14e1c:	e59f2034 	ldr	r2, [pc, #52]	; 14e58 <pvPortMalloc+0x1c0>
   14e20:	e5823000 	str	r3, [r2]
			}
		}
	}
	xTaskResumeAll();
   14e24:	ebfff63b 	bl	12718 <xTaskResumeAll>
			vApplicationMallocFailedHook();
		}
	}
	#endif
	
	allocated += xWantedSize;
   14e28:	e59f302c 	ldr	r3, [pc, #44]	; 14e5c <pvPortMalloc+0x1c4>
   14e2c:	e5932000 	ldr	r2, [r3]
   14e30:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e34:	e0823003 	add	r3, r2, r3
   14e38:	e59f201c 	ldr	r2, [pc, #28]	; 14e5c <pvPortMalloc+0x1c4>
   14e3c:	e5823000 	str	r3, [r2]

	return pvReturn;
   14e40:	e51b3010 	ldr	r3, [fp, #-16]
}
   14e44:	e1a00003 	mov	r0, r3
   14e48:	e24bd004 	sub	sp, fp, #4
   14e4c:	e8bd8800 	pop	{fp, pc}
   14e50:	0002d148 	andeq	sp, r2, r8, asr #2
   14e54:	0002d140 	andeq	sp, r2, r0, asr #2
   14e58:	0002bccc 	andeq	fp, r2, ip, asr #25
   14e5c:	0002d14c 	andeq	sp, r2, ip, asr #2

00014e60 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   14e60:	e92d4800 	push	{fp, lr}
   14e64:	e28db004 	add	fp, sp, #4
   14e68:	e24dd010 	sub	sp, sp, #16
   14e6c:	e50b0010 	str	r0, [fp, #-16]
unsigned char *puc = ( unsigned char * ) pv;
   14e70:	e51b3010 	ldr	r3, [fp, #-16]
   14e74:	e50b3008 	str	r3, [fp, #-8]
xBlockLink *pxLink;

	if( pv != NULL )
   14e78:	e51b3010 	ldr	r3, [fp, #-16]
   14e7c:	e3530000 	cmp	r3, #0
   14e80:	0a000011 	beq	14ecc <vPortFree+0x6c>
	{
		/* The memory being freed will have an xBlockLink structure immediately
		before it. */
		puc -= heapSTRUCT_SIZE;
   14e84:	e3a03010 	mov	r3, #16
   14e88:	e2633000 	rsb	r3, r3, #0
   14e8c:	e51b2008 	ldr	r2, [fp, #-8]
   14e90:	e0823003 	add	r3, r2, r3
   14e94:	e50b3008 	str	r3, [fp, #-8]

		/* This casting is to keep the compiler from issuing warnings. */
		pxLink = ( void * ) puc;
   14e98:	e51b3008 	ldr	r3, [fp, #-8]
   14e9c:	e50b300c 	str	r3, [fp, #-12]

		vTaskSuspendAll();
   14ea0:	ebfff610 	bl	126e8 <vTaskSuspendAll>
		{
			/* Add this block to the list of free blocks. */
			xFreeBytesRemaining += pxLink->xBlockSize;
   14ea4:	e51b300c 	ldr	r3, [fp, #-12]
   14ea8:	e5932004 	ldr	r2, [r3, #4]
   14eac:	e59f3024 	ldr	r3, [pc, #36]	; 14ed8 <vPortFree+0x78>
   14eb0:	e5933000 	ldr	r3, [r3]
   14eb4:	e0823003 	add	r3, r2, r3
   14eb8:	e59f2018 	ldr	r2, [pc, #24]	; 14ed8 <vPortFree+0x78>
   14ebc:	e5823000 	str	r3, [r2]
			prvInsertBlockIntoFreeList( ( ( xBlockLink * ) pxLink ) );			
   14ec0:	e51b000c 	ldr	r0, [fp, #-12]
   14ec4:	eb000049 	bl	14ff0 <prvInsertBlockIntoFreeList>
		}
		xTaskResumeAll();
   14ec8:	ebfff612 	bl	12718 <xTaskResumeAll>
	}
}
   14ecc:	e320f000 	nop	{0}
   14ed0:	e24bd004 	sub	sp, fp, #4
   14ed4:	e8bd8800 	pop	{fp, pc}
   14ed8:	0002bccc 	andeq	fp, r2, ip, asr #25

00014edc <xPortGetFreeHeapSize>:
/*-----------------------------------------------------------*/

size_t xPortGetFreeHeapSize( void )
{
   14edc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14ee0:	e28db000 	add	fp, sp, #0
	return xFreeBytesRemaining;
   14ee4:	e59f3010 	ldr	r3, [pc, #16]	; 14efc <xPortGetFreeHeapSize+0x20>
   14ee8:	e5933000 	ldr	r3, [r3]
}
   14eec:	e1a00003 	mov	r0, r3
   14ef0:	e28bd000 	add	sp, fp, #0
   14ef4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14ef8:	e12fff1e 	bx	lr
   14efc:	0002bccc 	andeq	fp, r2, ip, asr #25

00014f00 <vPortInitialiseBlocks>:
/*-----------------------------------------------------------*/

void vPortInitialiseBlocks( void )
{
   14f00:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14f04:	e28db000 	add	fp, sp, #0
	/* This just exists to keep the linker quiet. */
}
   14f08:	e320f000 	nop	{0}
   14f0c:	e28bd000 	add	sp, fp, #0
   14f10:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14f14:	e12fff1e 	bx	lr

00014f18 <prvHeapInit>:
/*-----------------------------------------------------------*/

static void prvHeapInit( void )
{
   14f18:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14f1c:	e28db000 	add	fp, sp, #0
   14f20:	e24dd00c 	sub	sp, sp, #12
	/* Ensure the start of the heap is aligned. */
	configASSERT( ( ( ( unsigned long ) xHeap.ucHeap ) & ( ( unsigned long ) portBYTE_ALIGNMENT_MASK ) ) == 0UL );

	/* xStart is used to hold a pointer to the first item in the list of free
	blocks.  The void cast is used to prevent compiler warnings. */
	xStart.pxNextFreeBlock = ( void * ) xHeap.ucHeap;
   14f24:	e59f30b4 	ldr	r3, [pc, #180]	; 14fe0 <prvHeapInit+0xc8>
   14f28:	e59f20b4 	ldr	r2, [pc, #180]	; 14fe4 <prvHeapInit+0xcc>
   14f2c:	e5832000 	str	r2, [r3]
	xStart.xBlockSize = ( size_t ) 0;
   14f30:	e59f30a8 	ldr	r3, [pc, #168]	; 14fe0 <prvHeapInit+0xc8>
   14f34:	e3a02000 	mov	r2, #0
   14f38:	e5832004 	str	r2, [r3, #4]

	/* pxEnd is used to mark the end of the list of free blocks and is inserted
	at the end of the heap space. */
	pucHeapEnd = xHeap.ucHeap + xTotalHeapSize;
   14f3c:	e3a02a01 	mov	r2, #4096	; 0x1000
   14f40:	e59f309c 	ldr	r3, [pc, #156]	; 14fe4 <prvHeapInit+0xcc>
   14f44:	e0823003 	add	r3, r2, r3
   14f48:	e50b3008 	str	r3, [fp, #-8]
	pucHeapEnd -= heapSTRUCT_SIZE;
   14f4c:	e3a03010 	mov	r3, #16
   14f50:	e2633000 	rsb	r3, r3, #0
   14f54:	e51b2008 	ldr	r2, [fp, #-8]
   14f58:	e0823003 	add	r3, r2, r3
   14f5c:	e50b3008 	str	r3, [fp, #-8]
	pxEnd = ( void * ) pucHeapEnd;
   14f60:	e59f2080 	ldr	r2, [pc, #128]	; 14fe8 <prvHeapInit+0xd0>
   14f64:	e51b3008 	ldr	r3, [fp, #-8]
   14f68:	e5823000 	str	r3, [r2]
	configASSERT( ( ( ( unsigned long ) pxEnd ) & ( ( unsigned long ) portBYTE_ALIGNMENT_MASK ) ) == 0UL );
	pxEnd->xBlockSize = 0;
   14f6c:	e59f3074 	ldr	r3, [pc, #116]	; 14fe8 <prvHeapInit+0xd0>
   14f70:	e5933000 	ldr	r3, [r3]
   14f74:	e3a02000 	mov	r2, #0
   14f78:	e5832004 	str	r2, [r3, #4]
	pxEnd->pxNextFreeBlock = NULL;
   14f7c:	e59f3064 	ldr	r3, [pc, #100]	; 14fe8 <prvHeapInit+0xd0>
   14f80:	e5933000 	ldr	r3, [r3]
   14f84:	e3a02000 	mov	r2, #0
   14f88:	e5832000 	str	r2, [r3]

	/* To start with there is a single free block that is sized to take up the
	entire heap space, minus the space taken by pxEnd. */
	pxFirstFreeBlock = ( void * ) xHeap.ucHeap;
   14f8c:	e59f3050 	ldr	r3, [pc, #80]	; 14fe4 <prvHeapInit+0xcc>
   14f90:	e50b300c 	str	r3, [fp, #-12]
	pxFirstFreeBlock->xBlockSize = xTotalHeapSize - heapSTRUCT_SIZE;
   14f94:	e3a03a01 	mov	r3, #4096	; 0x1000
   14f98:	e3a02010 	mov	r2, #16
   14f9c:	e0432002 	sub	r2, r3, r2
   14fa0:	e51b300c 	ldr	r3, [fp, #-12]
   14fa4:	e5832004 	str	r2, [r3, #4]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
   14fa8:	e59f3038 	ldr	r3, [pc, #56]	; 14fe8 <prvHeapInit+0xd0>
   14fac:	e5932000 	ldr	r2, [r3]
   14fb0:	e51b300c 	ldr	r3, [fp, #-12]
   14fb4:	e5832000 	str	r2, [r3]

	/* The heap now contains pxEnd. */
	xFreeBytesRemaining -= heapSTRUCT_SIZE;
   14fb8:	e59f302c 	ldr	r3, [pc, #44]	; 14fec <prvHeapInit+0xd4>
   14fbc:	e5933000 	ldr	r3, [r3]
   14fc0:	e3a02010 	mov	r2, #16
   14fc4:	e0433002 	sub	r3, r3, r2
   14fc8:	e59f201c 	ldr	r2, [pc, #28]	; 14fec <prvHeapInit+0xd4>
   14fcc:	e5823000 	str	r3, [r2]
}
   14fd0:	e320f000 	nop	{0}
   14fd4:	e28bd000 	add	sp, fp, #0
   14fd8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14fdc:	e12fff1e 	bx	lr
   14fe0:	0002d140 	andeq	sp, r2, r0, asr #2
   14fe4:	0002c140 	andeq	ip, r2, r0, asr #2
   14fe8:	0002d148 	andeq	sp, r2, r8, asr #2
   14fec:	0002bccc 	andeq	fp, r2, ip, asr #25

00014ff0 <prvInsertBlockIntoFreeList>:
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( xBlockLink *pxBlockToInsert )
{
   14ff0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14ff4:	e28db000 	add	fp, sp, #0
   14ff8:	e24dd014 	sub	sp, sp, #20
   14ffc:	e50b0010 	str	r0, [fp, #-16]
xBlockLink *pxIterator;
unsigned char *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
   15000:	e59f3134 	ldr	r3, [pc, #308]	; 1513c <prvInsertBlockIntoFreeList+0x14c>
   15004:	e50b3008 	str	r3, [fp, #-8]
   15008:	ea000002 	b	15018 <prvInsertBlockIntoFreeList+0x28>
   1500c:	e51b3008 	ldr	r3, [fp, #-8]
   15010:	e5933000 	ldr	r3, [r3]
   15014:	e50b3008 	str	r3, [fp, #-8]
   15018:	e51b3008 	ldr	r3, [fp, #-8]
   1501c:	e5933000 	ldr	r3, [r3]
   15020:	e51b2010 	ldr	r2, [fp, #-16]
   15024:	e1520003 	cmp	r2, r3
   15028:	8afffff7 	bhi	1500c <prvInsertBlockIntoFreeList+0x1c>
		/* Nothing to do here, just iterate to the right position. */
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */	
	puc = ( unsigned char * ) pxIterator;
   1502c:	e51b3008 	ldr	r3, [fp, #-8]
   15030:	e50b300c 	str	r3, [fp, #-12]
	if( ( puc + pxIterator->xBlockSize ) == ( unsigned char * ) pxBlockToInsert )
   15034:	e51b3008 	ldr	r3, [fp, #-8]
   15038:	e5933004 	ldr	r3, [r3, #4]
   1503c:	e51b200c 	ldr	r2, [fp, #-12]
   15040:	e0823003 	add	r3, r2, r3
   15044:	e51b2010 	ldr	r2, [fp, #-16]
   15048:	e1520003 	cmp	r2, r3
   1504c:	1a000008 	bne	15074 <prvInsertBlockIntoFreeList+0x84>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
   15050:	e51b3008 	ldr	r3, [fp, #-8]
   15054:	e5932004 	ldr	r2, [r3, #4]
   15058:	e51b3010 	ldr	r3, [fp, #-16]
   1505c:	e5933004 	ldr	r3, [r3, #4]
   15060:	e0822003 	add	r2, r2, r3
   15064:	e51b3008 	ldr	r3, [fp, #-8]
   15068:	e5832004 	str	r2, [r3, #4]
		pxBlockToInsert = pxIterator;
   1506c:	e51b3008 	ldr	r3, [fp, #-8]
   15070:	e50b3010 	str	r3, [fp, #-16]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( unsigned char * ) pxBlockToInsert;
   15074:	e51b3010 	ldr	r3, [fp, #-16]
   15078:	e50b300c 	str	r3, [fp, #-12]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( unsigned char * ) pxIterator->pxNextFreeBlock )
   1507c:	e51b3010 	ldr	r3, [fp, #-16]
   15080:	e5933004 	ldr	r3, [r3, #4]
   15084:	e51b200c 	ldr	r2, [fp, #-12]
   15088:	e0822003 	add	r2, r2, r3
   1508c:	e51b3008 	ldr	r3, [fp, #-8]
   15090:	e5933000 	ldr	r3, [r3]
   15094:	e1520003 	cmp	r2, r3
   15098:	1a000018 	bne	15100 <prvInsertBlockIntoFreeList+0x110>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
   1509c:	e51b3008 	ldr	r3, [fp, #-8]
   150a0:	e5932000 	ldr	r2, [r3]
   150a4:	e59f3094 	ldr	r3, [pc, #148]	; 15140 <prvInsertBlockIntoFreeList+0x150>
   150a8:	e5933000 	ldr	r3, [r3]
   150ac:	e1520003 	cmp	r2, r3
   150b0:	0a00000d 	beq	150ec <prvInsertBlockIntoFreeList+0xfc>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
   150b4:	e51b3010 	ldr	r3, [fp, #-16]
   150b8:	e5932004 	ldr	r2, [r3, #4]
   150bc:	e51b3008 	ldr	r3, [fp, #-8]
   150c0:	e5933000 	ldr	r3, [r3]
   150c4:	e5933004 	ldr	r3, [r3, #4]
   150c8:	e0822003 	add	r2, r2, r3
   150cc:	e51b3010 	ldr	r3, [fp, #-16]
   150d0:	e5832004 	str	r2, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
   150d4:	e51b3008 	ldr	r3, [fp, #-8]
   150d8:	e5933000 	ldr	r3, [r3]
   150dc:	e5932000 	ldr	r2, [r3]
   150e0:	e51b3010 	ldr	r3, [fp, #-16]
   150e4:	e5832000 	str	r2, [r3]
   150e8:	ea000008 	b	15110 <prvInsertBlockIntoFreeList+0x120>
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
   150ec:	e59f304c 	ldr	r3, [pc, #76]	; 15140 <prvInsertBlockIntoFreeList+0x150>
   150f0:	e5932000 	ldr	r2, [r3]
   150f4:	e51b3010 	ldr	r3, [fp, #-16]
   150f8:	e5832000 	str	r2, [r3]
   150fc:	ea000003 	b	15110 <prvInsertBlockIntoFreeList+0x120>
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;		
   15100:	e51b3008 	ldr	r3, [fp, #-8]
   15104:	e5932000 	ldr	r2, [r3]
   15108:	e51b3010 	ldr	r3, [fp, #-16]
   1510c:	e5832000 	str	r2, [r3]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
   15110:	e51b2008 	ldr	r2, [fp, #-8]
   15114:	e51b3010 	ldr	r3, [fp, #-16]
   15118:	e1520003 	cmp	r2, r3
   1511c:	0a000002 	beq	1512c <prvInsertBlockIntoFreeList+0x13c>
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
   15120:	e51b3008 	ldr	r3, [fp, #-8]
   15124:	e51b2010 	ldr	r2, [fp, #-16]
   15128:	e5832000 	str	r2, [r3]
	}
}
   1512c:	e320f000 	nop	{0}
   15130:	e28bd000 	add	sp, fp, #0
   15134:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   15138:	e12fff1e 	bx	lr
   1513c:	0002d140 	andeq	sp, r2, r0, asr #2
   15140:	0002d148 	andeq	sp, r2, r8, asr #2

00015144 <undefined_instruction>:
   15144:	eafffffe 	b	15144 <undefined_instruction>

00015148 <prefetch_abort>:
   15148:	eafffffe 	b	15148 <prefetch_abort>

0001514c <data_abort>:
   1514c:	eafffffe 	b	1514c <data_abort>

00015150 <unused>:
   15150:	eafffffe 	b	15150 <unused>

00015154 <fiq>:
   15154:	eafffffe 	b	15154 <fiq>

00015158 <hang>:
   15158:	eafffffe 	b	15158 <hang>

0001515c <PUT32>:
   1515c:	e5801000 	str	r1, [r0]
   15160:	e12fff1e 	bx	lr

00015164 <GET32>:
   15164:	e5900000 	ldr	r0, [r0]
   15168:	e12fff1e 	bx	lr

0001516c <task1>:
#include "Drivers/video.h"
#include "uspi.h"

#define ALIVE_LED 23

void task1(void *pParam) {
   1516c:	e92d4800 	push	{fp, lr}
   15170:	e28db004 	add	fp, sp, #4
   15174:	e24dd010 	sub	sp, sp, #16
   15178:	e50b0010 	str	r0, [fp, #-16]

	int i = 0;
   1517c:	e3a03000 	mov	r3, #0
   15180:	e50b3008 	str	r3, [fp, #-8]
	while(1) {
		i++;
   15184:	e51b3008 	ldr	r3, [fp, #-8]
   15188:	e2833001 	add	r3, r3, #1
   1518c:	e50b3008 	str	r3, [fp, #-8]
		SetGpio(ALIVE_LED, 1);
   15190:	e3a01001 	mov	r1, #1
   15194:	e3a00017 	mov	r0, #23
   15198:	ebfff9f5 	bl	13974 <SetGpio>
		vTaskDelay(200);
   1519c:	e3a000c8 	mov	r0, #200	; 0xc8
   151a0:	ebfff395 	bl	11ffc <vTaskDelay>
		i++;
   151a4:	eafffff6 	b	15184 <task1+0x18>

000151a8 <task2>:
	}
}

void task2(void *pParam) {
   151a8:	e92d4800 	push	{fp, lr}
   151ac:	e28db004 	add	fp, sp, #4
   151b0:	e24dd010 	sub	sp, sp, #16
   151b4:	e50b0010 	str	r0, [fp, #-16]

	int i = 0;
   151b8:	e3a03000 	mov	r3, #0
   151bc:	e50b3008 	str	r3, [fp, #-8]
	while(1) {
		i++;
   151c0:	e51b3008 	ldr	r3, [fp, #-8]
   151c4:	e2833001 	add	r3, r3, #1
   151c8:	e50b3008 	str	r3, [fp, #-8]
		vTaskDelay(100);
   151cc:	e3a00064 	mov	r0, #100	; 0x64
   151d0:	ebfff389 	bl	11ffc <vTaskDelay>
		SetGpio(ALIVE_LED, 0);
   151d4:	e3a01000 	mov	r1, #0
   151d8:	e3a00017 	mov	r0, #23
   151dc:	ebfff9e4 	bl	13974 <SetGpio>
		vTaskDelay(100);
   151e0:	e3a00064 	mov	r0, #100	; 0x64
   151e4:	ebfff384 	bl	11ffc <vTaskDelay>
		i++;
   151e8:	eafffff4 	b	151c0 <task2+0x18>

000151ec <keyPressedHandler>:
	}
}

static void keyPressedHandler( const char *pString ) {
   151ec:	e92d4800 	push	{fp, lr}
   151f0:	e28db004 	add	fp, sp, #4
   151f4:	e24dd008 	sub	sp, sp, #8
   151f8:	e50b0008 	str	r0, [fp, #-8]
    println(pString,WHITE_TEXT);
   151fc:	e3e01000 	mvn	r1, #0
   15200:	e51b0008 	ldr	r0, [fp, #-8]
   15204:	ebfffc67 	bl	143a8 <println>
}
   15208:	e320f000 	nop	{0}
   1520c:	e24bd004 	sub	sp, fp, #4
   15210:	e8bd8800 	pop	{fp, pc}

00015214 <task3>:

void task3(void *pParam) {
   15214:	e92d4800 	push	{fp, lr}
   15218:	e28db004 	add	fp, sp, #4
   1521c:	e24dd010 	sub	sp, sp, #16
   15220:	e50b0010 	str	r0, [fp, #-16]
    int i = 0;
   15224:	e3a03000 	mov	r3, #0
   15228:	e50b3008 	str	r3, [fp, #-8]
    // if (!USPiEnvInitialize()){
    //     println("USPiEnvInitialize() error!");
    //     return;
    // }

    if (!USPiInitialize ())
   1522c:	eb000176 	bl	1580c <USPiInitialize>
   15230:	e1a03000 	mov	r3, r0
   15234:	e3530000 	cmp	r3, #0
   15238:	1a000003 	bne	1524c <task3+0x38>
	{
		println("Cannot initialize USPi", GREEN_TEXT);		
   1523c:	e59f105c 	ldr	r1, [pc, #92]	; 152a0 <task3+0x8c>
   15240:	e59f005c 	ldr	r0, [pc, #92]	; 152a4 <task3+0x90>
   15244:	ebfffc57 	bl	143a8 <println>

		return;
   15248:	ea000012 	b	15298 <task3+0x84>
	}

    if (!USPiKeyboardAvailable ()) {
   1524c:	eb000209 	bl	15a78 <USPiKeyboardAvailable>
   15250:	e1a03000 	mov	r3, r0
   15254:	e3530000 	cmp	r3, #0
   15258:	1a000003 	bne	1526c <task3+0x58>
        println("Keyboard not found!",GREEN_TEXT);
   1525c:	e59f103c 	ldr	r1, [pc, #60]	; 152a0 <task3+0x8c>
   15260:	e59f0040 	ldr	r0, [pc, #64]	; 152a8 <task3+0x94>
   15264:	ebfffc4f 	bl	143a8 <println>

        return;
   15268:	ea00000a 	b	15298 <task3+0x84>
    }

    USPiKeyboardRegisterKeyPressedHandler (keyPressedHandler);
   1526c:	e59f0038 	ldr	r0, [pc, #56]	; 152ac <task3+0x98>
   15270:	eb000212 	bl	15ac0 <USPiKeyboardRegisterKeyPressedHandler>

    println("Type stuff...",GREEN_TEXT);
   15274:	e59f1024 	ldr	r1, [pc, #36]	; 152a0 <task3+0x8c>
   15278:	e59f0030 	ldr	r0, [pc, #48]	; 152b0 <task3+0x9c>
   1527c:	ebfffc49 	bl	143a8 <println>

    while(1) {
        i++;
   15280:	e51b3008 	ldr	r3, [fp, #-8]
   15284:	e2833001 	add	r3, r3, #1
   15288:	e50b3008 	str	r3, [fp, #-8]
        vTaskDelay(1000);
   1528c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
   15290:	ebfff359 	bl	11ffc <vTaskDelay>
        i++;
   15294:	eafffff9 	b	15280 <task3+0x6c>
        //println("Hello Screen\n", GREEN_TEXT);
    }
}
   15298:	e24bd004 	sub	sp, fp, #4
   1529c:	e8bd8800 	pop	{fp, pc}
   152a0:	ff00ff00 			; <UNDEFINED> instruction: 0xff00ff00
   152a4:	000284e4 	andeq	r8, r2, r4, ror #9
   152a8:	000284fc 	strdeq	r8, [r2], -ip
   152ac:	000151ec 	andeq	r5, r1, ip, ror #3
   152b0:	00028510 	andeq	r8, r2, r0, lsl r5

000152b4 <main>:
 *
 *	-- Absolutely nothing wrong with this being called main(), just it doesn't have
 *	-- the same prototype as you'd see in a linux program.
 **/
void main (void)
{
   152b4:	e92d4800 	push	{fp, lr}
   152b8:	e28db004 	add	fp, sp, #4
   152bc:	e24dd010 	sub	sp, sp, #16
	SetGpioFunction(ALIVE_LED, 1);			// RDY led
   152c0:	e3a01001 	mov	r1, #1
   152c4:	e3a00017 	mov	r0, #23
   152c8:	ebfff965 	bl	13864 <SetGpioFunction>

    initFB();
   152cc:	ebfffb1f 	bl	13f50 <initFB>


	xTaskCreate(task1, "LED_0", 128, NULL, 0, NULL);
   152d0:	e3a03000 	mov	r3, #0
   152d4:	e58d300c 	str	r3, [sp, #12]
   152d8:	e3a03000 	mov	r3, #0
   152dc:	e58d3008 	str	r3, [sp, #8]
   152e0:	e3a03000 	mov	r3, #0
   152e4:	e58d3004 	str	r3, [sp, #4]
   152e8:	e3a03000 	mov	r3, #0
   152ec:	e58d3000 	str	r3, [sp]
   152f0:	e3a03000 	mov	r3, #0
   152f4:	e3a02080 	mov	r2, #128	; 0x80
   152f8:	e59f1074 	ldr	r1, [pc, #116]	; 15374 <main+0xc0>
   152fc:	e59f0074 	ldr	r0, [pc, #116]	; 15378 <main+0xc4>
   15300:	ebfff226 	bl	11ba0 <xTaskGenericCreate>
	xTaskCreate(task2, "LED_1", 128, NULL, 0, NULL);
   15304:	e3a03000 	mov	r3, #0
   15308:	e58d300c 	str	r3, [sp, #12]
   1530c:	e3a03000 	mov	r3, #0
   15310:	e58d3008 	str	r3, [sp, #8]
   15314:	e3a03000 	mov	r3, #0
   15318:	e58d3004 	str	r3, [sp, #4]
   1531c:	e3a03000 	mov	r3, #0
   15320:	e58d3000 	str	r3, [sp]
   15324:	e3a03000 	mov	r3, #0
   15328:	e3a02080 	mov	r2, #128	; 0x80
   1532c:	e59f1048 	ldr	r1, [pc, #72]	; 1537c <main+0xc8>
   15330:	e59f0048 	ldr	r0, [pc, #72]	; 15380 <main+0xcc>
   15334:	ebfff219 	bl	11ba0 <xTaskGenericCreate>

    xTaskCreate(task3, "Screen_Print", 128, NULL, 0, NULL);
   15338:	e3a03000 	mov	r3, #0
   1533c:	e58d300c 	str	r3, [sp, #12]
   15340:	e3a03000 	mov	r3, #0
   15344:	e58d3008 	str	r3, [sp, #8]
   15348:	e3a03000 	mov	r3, #0
   1534c:	e58d3004 	str	r3, [sp, #4]
   15350:	e3a03000 	mov	r3, #0
   15354:	e58d3000 	str	r3, [sp]
   15358:	e3a03000 	mov	r3, #0
   1535c:	e3a02080 	mov	r2, #128	; 0x80
   15360:	e59f101c 	ldr	r1, [pc, #28]	; 15384 <main+0xd0>
   15364:	e59f001c 	ldr	r0, [pc, #28]	; 15388 <main+0xd4>
   15368:	ebfff20c 	bl	11ba0 <xTaskGenericCreate>

	vTaskStartScheduler();
   1536c:	ebfff4a8 	bl	12614 <vTaskStartScheduler>

	/*
	 *	We should never get here, but just in case something goes wrong,
	 *	we'll place the CPU into a safe loop.
	 */
	while(1) {
   15370:	eafffffe 	b	15370 <main+0xbc>
   15374:	00028520 	andeq	r8, r2, r0, lsr #10
   15378:	0001516c 	andeq	r5, r1, ip, ror #2
   1537c:	00028528 	andeq	r8, r2, r8, lsr #10
   15380:	000151a8 	andeq	r5, r1, r8, lsr #3
   15384:	00028530 	andeq	r8, r2, r0, lsr r5
   15388:	00015214 	andeq	r5, r1, r4, lsl r2

0001538c <__aeabi_drsub>:
   1538c:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
   15390:	ea000000 	b	15398 <__adddf3>

00015394 <__aeabi_dsub>:
   15394:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

00015398 <__adddf3>:
   15398:	e92d4030 	push	{r4, r5, lr}
   1539c:	e1a04081 	lsl	r4, r1, #1
   153a0:	e1a05083 	lsl	r5, r3, #1
   153a4:	e1340005 	teq	r4, r5
   153a8:	01300002 	teqeq	r0, r2
   153ac:	1194c000 	orrsne	ip, r4, r0
   153b0:	1195c002 	orrsne	ip, r5, r2
   153b4:	11f0cac4 	mvnsne	ip, r4, asr #21
   153b8:	11f0cac5 	mvnsne	ip, r5, asr #21
   153bc:	0a00008c 	beq	155f4 <__adddf3+0x25c>
   153c0:	e1a04aa4 	lsr	r4, r4, #21
   153c4:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
   153c8:	b2655000 	rsblt	r5, r5, #0
   153cc:	da000006 	ble	153ec <__adddf3+0x54>
   153d0:	e0844005 	add	r4, r4, r5
   153d4:	e0202002 	eor	r2, r0, r2
   153d8:	e0213003 	eor	r3, r1, r3
   153dc:	e0220000 	eor	r0, r2, r0
   153e0:	e0231001 	eor	r1, r3, r1
   153e4:	e0202002 	eor	r2, r0, r2
   153e8:	e0213003 	eor	r3, r1, r3
   153ec:	e3550036 	cmp	r5, #54	; 0x36
   153f0:	88bd4030 	pophi	{r4, r5, lr}
   153f4:	812fff1e 	bxhi	lr
   153f8:	e3110102 	tst	r1, #-2147483648	; 0x80000000
   153fc:	e1a01601 	lsl	r1, r1, #12
   15400:	e3a0c601 	mov	ip, #1048576	; 0x100000
   15404:	e18c1621 	orr	r1, ip, r1, lsr #12
   15408:	0a000001 	beq	15414 <__adddf3+0x7c>
   1540c:	e2700000 	rsbs	r0, r0, #0
   15410:	e2e11000 	rsc	r1, r1, #0
   15414:	e3130102 	tst	r3, #-2147483648	; 0x80000000
   15418:	e1a03603 	lsl	r3, r3, #12
   1541c:	e18c3623 	orr	r3, ip, r3, lsr #12
   15420:	0a000001 	beq	1542c <__adddf3+0x94>
   15424:	e2722000 	rsbs	r2, r2, #0
   15428:	e2e33000 	rsc	r3, r3, #0
   1542c:	e1340005 	teq	r4, r5
   15430:	0a000069 	beq	155dc <__adddf3+0x244>
   15434:	e2444001 	sub	r4, r4, #1
   15438:	e275e020 	rsbs	lr, r5, #32
   1543c:	ba000005 	blt	15458 <__adddf3+0xc0>
   15440:	e1a0ce12 	lsl	ip, r2, lr
   15444:	e0900532 	adds	r0, r0, r2, lsr r5
   15448:	e2a11000 	adc	r1, r1, #0
   1544c:	e0900e13 	adds	r0, r0, r3, lsl lr
   15450:	e0b11553 	adcs	r1, r1, r3, asr r5
   15454:	ea000006 	b	15474 <__adddf3+0xdc>
   15458:	e2455020 	sub	r5, r5, #32
   1545c:	e28ee020 	add	lr, lr, #32
   15460:	e3520001 	cmp	r2, #1
   15464:	e1a0ce13 	lsl	ip, r3, lr
   15468:	238cc002 	orrcs	ip, ip, #2
   1546c:	e0900553 	adds	r0, r0, r3, asr r5
   15470:	e0b11fc3 	adcs	r1, r1, r3, asr #31
   15474:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
   15478:	5a000002 	bpl	15488 <__adddf3+0xf0>
   1547c:	e27cc000 	rsbs	ip, ip, #0
   15480:	e2f00000 	rscs	r0, r0, #0
   15484:	e2e11000 	rsc	r1, r1, #0
   15488:	e3510601 	cmp	r1, #1048576	; 0x100000
   1548c:	3a00000f 	bcc	154d0 <__adddf3+0x138>
   15490:	e3510602 	cmp	r1, #2097152	; 0x200000
   15494:	3a000006 	bcc	154b4 <__adddf3+0x11c>
   15498:	e1b010a1 	lsrs	r1, r1, #1
   1549c:	e1b00060 	rrxs	r0, r0
   154a0:	e1a0c06c 	rrx	ip, ip
   154a4:	e2844001 	add	r4, r4, #1
   154a8:	e1a02a84 	lsl	r2, r4, #21
   154ac:	e3720501 	cmn	r2, #4194304	; 0x400000
   154b0:	2a00006b 	bcs	15664 <__adddf3+0x2cc>
   154b4:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
   154b8:	01b0c0a0 	lsrseq	ip, r0, #1
   154bc:	e2b00000 	adcs	r0, r0, #0
   154c0:	e0a11a04 	adc	r1, r1, r4, lsl #20
   154c4:	e1811005 	orr	r1, r1, r5
   154c8:	e8bd4030 	pop	{r4, r5, lr}
   154cc:	e12fff1e 	bx	lr
   154d0:	e1b0c08c 	lsls	ip, ip, #1
   154d4:	e0b00000 	adcs	r0, r0, r0
   154d8:	e0a11001 	adc	r1, r1, r1
   154dc:	e3110601 	tst	r1, #1048576	; 0x100000
   154e0:	e2444001 	sub	r4, r4, #1
   154e4:	1afffff2 	bne	154b4 <__adddf3+0x11c>
   154e8:	e3310000 	teq	r1, #0
   154ec:	13a03014 	movne	r3, #20
   154f0:	03a03034 	moveq	r3, #52	; 0x34
   154f4:	01a01000 	moveq	r1, r0
   154f8:	03a00000 	moveq	r0, #0
   154fc:	e1a02001 	mov	r2, r1
   15500:	e3520801 	cmp	r2, #65536	; 0x10000
   15504:	21a02822 	lsrcs	r2, r2, #16
   15508:	22433010 	subcs	r3, r3, #16
   1550c:	e3520c01 	cmp	r2, #256	; 0x100
   15510:	21a02422 	lsrcs	r2, r2, #8
   15514:	22433008 	subcs	r3, r3, #8
   15518:	e3520010 	cmp	r2, #16
   1551c:	21a02222 	lsrcs	r2, r2, #4
   15520:	22433004 	subcs	r3, r3, #4
   15524:	e3520004 	cmp	r2, #4
   15528:	22433002 	subcs	r3, r3, #2
   1552c:	304330a2 	subcc	r3, r3, r2, lsr #1
   15530:	e04331a2 	sub	r3, r3, r2, lsr #3
   15534:	e2532020 	subs	r2, r3, #32
   15538:	aa000007 	bge	1555c <__adddf3+0x1c4>
   1553c:	e292200c 	adds	r2, r2, #12
   15540:	da000004 	ble	15558 <__adddf3+0x1c0>
   15544:	e282c014 	add	ip, r2, #20
   15548:	e262200c 	rsb	r2, r2, #12
   1554c:	e1a00c11 	lsl	r0, r1, ip
   15550:	e1a01231 	lsr	r1, r1, r2
   15554:	ea000004 	b	1556c <__adddf3+0x1d4>
   15558:	e2822014 	add	r2, r2, #20
   1555c:	d262c020 	rsble	ip, r2, #32
   15560:	e1a01211 	lsl	r1, r1, r2
   15564:	d1811c30 	orrle	r1, r1, r0, lsr ip
   15568:	d1a00210 	lslle	r0, r0, r2
   1556c:	e0544003 	subs	r4, r4, r3
   15570:	a0811a04 	addge	r1, r1, r4, lsl #20
   15574:	a1811005 	orrge	r1, r1, r5
   15578:	a8bd4030 	popge	{r4, r5, lr}
   1557c:	a12fff1e 	bxge	lr
   15580:	e1e04004 	mvn	r4, r4
   15584:	e254401f 	subs	r4, r4, #31
   15588:	aa00000f 	bge	155cc <__adddf3+0x234>
   1558c:	e294400c 	adds	r4, r4, #12
   15590:	ca000006 	bgt	155b0 <__adddf3+0x218>
   15594:	e2844014 	add	r4, r4, #20
   15598:	e2642020 	rsb	r2, r4, #32
   1559c:	e1a00430 	lsr	r0, r0, r4
   155a0:	e1800211 	orr	r0, r0, r1, lsl r2
   155a4:	e1851431 	orr	r1, r5, r1, lsr r4
   155a8:	e8bd4030 	pop	{r4, r5, lr}
   155ac:	e12fff1e 	bx	lr
   155b0:	e264400c 	rsb	r4, r4, #12
   155b4:	e2642020 	rsb	r2, r4, #32
   155b8:	e1a00230 	lsr	r0, r0, r2
   155bc:	e1800411 	orr	r0, r0, r1, lsl r4
   155c0:	e1a01005 	mov	r1, r5
   155c4:	e8bd4030 	pop	{r4, r5, lr}
   155c8:	e12fff1e 	bx	lr
   155cc:	e1a00431 	lsr	r0, r1, r4
   155d0:	e1a01005 	mov	r1, r5
   155d4:	e8bd4030 	pop	{r4, r5, lr}
   155d8:	e12fff1e 	bx	lr
   155dc:	e3340000 	teq	r4, #0
   155e0:	e2233601 	eor	r3, r3, #1048576	; 0x100000
   155e4:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
   155e8:	02844001 	addeq	r4, r4, #1
   155ec:	12455001 	subne	r5, r5, #1
   155f0:	eaffff8f 	b	15434 <__adddf3+0x9c>
   155f4:	e1f0cac4 	mvns	ip, r4, asr #21
   155f8:	11f0cac5 	mvnsne	ip, r5, asr #21
   155fc:	0a00001d 	beq	15678 <__adddf3+0x2e0>
   15600:	e1340005 	teq	r4, r5
   15604:	01300002 	teqeq	r0, r2
   15608:	0a000004 	beq	15620 <__adddf3+0x288>
   1560c:	e194c000 	orrs	ip, r4, r0
   15610:	01a01003 	moveq	r1, r3
   15614:	01a00002 	moveq	r0, r2
   15618:	e8bd4030 	pop	{r4, r5, lr}
   1561c:	e12fff1e 	bx	lr
   15620:	e1310003 	teq	r1, r3
   15624:	13a01000 	movne	r1, #0
   15628:	13a00000 	movne	r0, #0
   1562c:	18bd4030 	popne	{r4, r5, lr}
   15630:	112fff1e 	bxne	lr
   15634:	e1b0caa4 	lsrs	ip, r4, #21
   15638:	1a000004 	bne	15650 <__adddf3+0x2b8>
   1563c:	e1b00080 	lsls	r0, r0, #1
   15640:	e0b11001 	adcs	r1, r1, r1
   15644:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
   15648:	e8bd4030 	pop	{r4, r5, lr}
   1564c:	e12fff1e 	bx	lr
   15650:	e2944501 	adds	r4, r4, #4194304	; 0x400000
   15654:	32811601 	addcc	r1, r1, #1048576	; 0x100000
   15658:	38bd4030 	popcc	{r4, r5, lr}
   1565c:	312fff1e 	bxcc	lr
   15660:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
   15664:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
   15668:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
   1566c:	e3a00000 	mov	r0, #0
   15670:	e8bd4030 	pop	{r4, r5, lr}
   15674:	e12fff1e 	bx	lr
   15678:	e1f0cac4 	mvns	ip, r4, asr #21
   1567c:	11a01003 	movne	r1, r3
   15680:	11a00002 	movne	r0, r2
   15684:	01f0cac5 	mvnseq	ip, r5, asr #21
   15688:	11a03001 	movne	r3, r1
   1568c:	11a02000 	movne	r2, r0
   15690:	e1904601 	orrs	r4, r0, r1, lsl #12
   15694:	01925603 	orrseq	r5, r2, r3, lsl #12
   15698:	01310003 	teqeq	r1, r3
   1569c:	13811702 	orrne	r1, r1, #524288	; 0x80000
   156a0:	e8bd4030 	pop	{r4, r5, lr}
   156a4:	e12fff1e 	bx	lr

000156a8 <__aeabi_ui2d>:
   156a8:	e3300000 	teq	r0, #0
   156ac:	03a01000 	moveq	r1, #0
   156b0:	012fff1e 	bxeq	lr
   156b4:	e92d4030 	push	{r4, r5, lr}
   156b8:	e3a04b01 	mov	r4, #1024	; 0x400
   156bc:	e2844032 	add	r4, r4, #50	; 0x32
   156c0:	e3a05000 	mov	r5, #0
   156c4:	e3a01000 	mov	r1, #0
   156c8:	eaffff86 	b	154e8 <__adddf3+0x150>

000156cc <__aeabi_i2d>:
   156cc:	e3300000 	teq	r0, #0
   156d0:	03a01000 	moveq	r1, #0
   156d4:	012fff1e 	bxeq	lr
   156d8:	e92d4030 	push	{r4, r5, lr}
   156dc:	e3a04b01 	mov	r4, #1024	; 0x400
   156e0:	e2844032 	add	r4, r4, #50	; 0x32
   156e4:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
   156e8:	42600000 	rsbmi	r0, r0, #0
   156ec:	e3a01000 	mov	r1, #0
   156f0:	eaffff7c 	b	154e8 <__adddf3+0x150>

000156f4 <__aeabi_f2d>:
   156f4:	e1b02080 	lsls	r2, r0, #1
   156f8:	e1a011c2 	asr	r1, r2, #3
   156fc:	e1a01061 	rrx	r1, r1
   15700:	e1a00e02 	lsl	r0, r2, #28
   15704:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
   15708:	133304ff 	teqne	r3, #-16777216	; 0xff000000
   1570c:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
   15710:	112fff1e 	bxne	lr
   15714:	e3d224ff 	bics	r2, r2, #-16777216	; 0xff000000
   15718:	012fff1e 	bxeq	lr
   1571c:	e33304ff 	teq	r3, #-16777216	; 0xff000000
   15720:	03811702 	orreq	r1, r1, #524288	; 0x80000
   15724:	012fff1e 	bxeq	lr
   15728:	e92d4030 	push	{r4, r5, lr}
   1572c:	e3a04d0e 	mov	r4, #896	; 0x380
   15730:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
   15734:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
   15738:	eaffff6a 	b	154e8 <__adddf3+0x150>

0001573c <__aeabi_ul2d>:
   1573c:	e1902001 	orrs	r2, r0, r1
   15740:	012fff1e 	bxeq	lr
   15744:	e92d4030 	push	{r4, r5, lr}
   15748:	e3a05000 	mov	r5, #0
   1574c:	ea000006 	b	1576c <__aeabi_l2d+0x1c>

00015750 <__aeabi_l2d>:
   15750:	e1902001 	orrs	r2, r0, r1
   15754:	012fff1e 	bxeq	lr
   15758:	e92d4030 	push	{r4, r5, lr}
   1575c:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
   15760:	5a000001 	bpl	1576c <__aeabi_l2d+0x1c>
   15764:	e2700000 	rsbs	r0, r0, #0
   15768:	e2e11000 	rsc	r1, r1, #0
   1576c:	e3a04b01 	mov	r4, #1024	; 0x400
   15770:	e2844032 	add	r4, r4, #50	; 0x32
   15774:	e1b0cb21 	lsrs	ip, r1, #22
   15778:	0affff42 	beq	15488 <__adddf3+0xf0>
   1577c:	e3a02003 	mov	r2, #3
   15780:	e1b0c1ac 	lsrs	ip, ip, #3
   15784:	12822003 	addne	r2, r2, #3
   15788:	e1b0c1ac 	lsrs	ip, ip, #3
   1578c:	12822003 	addne	r2, r2, #3
   15790:	e08221ac 	add	r2, r2, ip, lsr #3
   15794:	e2623020 	rsb	r3, r2, #32
   15798:	e1a0c310 	lsl	ip, r0, r3
   1579c:	e1a00230 	lsr	r0, r0, r2
   157a0:	e1800311 	orr	r0, r0, r1, lsl r3
   157a4:	e1a01231 	lsr	r1, r1, r2
   157a8:	e0844002 	add	r4, r4, r2
   157ac:	eaffff35 	b	15488 <__adddf3+0xf0>

000157b0 <__aeabi_d2iz>:
   157b0:	e1a02081 	lsl	r2, r1, #1
   157b4:	e2922602 	adds	r2, r2, #2097152	; 0x200000
   157b8:	2a00000c 	bcs	157f0 <__aeabi_d2iz+0x40>
   157bc:	5a000009 	bpl	157e8 <__aeabi_d2iz+0x38>
   157c0:	e3e03e3e 	mvn	r3, #992	; 0x3e0
   157c4:	e0532ac2 	subs	r2, r3, r2, asr #21
   157c8:	9a00000a 	bls	157f8 <__aeabi_d2iz+0x48>
   157cc:	e1a03581 	lsl	r3, r1, #11
   157d0:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
   157d4:	e1833aa0 	orr	r3, r3, r0, lsr #21
   157d8:	e3110102 	tst	r1, #-2147483648	; 0x80000000
   157dc:	e1a00233 	lsr	r0, r3, r2
   157e0:	12600000 	rsbne	r0, r0, #0
   157e4:	e12fff1e 	bx	lr
   157e8:	e3a00000 	mov	r0, #0
   157ec:	e12fff1e 	bx	lr
   157f0:	e1900601 	orrs	r0, r0, r1, lsl #12
   157f4:	1a000002 	bne	15804 <__aeabi_d2iz+0x54>
   157f8:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
   157fc:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
   15800:	e12fff1e 	bx	lr
   15804:	e3a00000 	mov	r0, #0
   15808:	e12fff1e 	bx	lr

0001580c <USPiInitialize>:
   1580c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   15810:	e59f5220 	ldr	r5, [pc, #544]	; 15a38 <USPiInitialize+0x22c>
   15814:	e24dd010 	sub	sp, sp, #16
   15818:	e59f221c 	ldr	r2, [pc, #540]	; 15a3c <USPiInitialize+0x230>
   1581c:	e3a01004 	mov	r1, #4
   15820:	e59f0218 	ldr	r0, [pc, #536]	; 15a40 <USPiInitialize+0x234>
   15824:	eb0045c6 	bl	26f44 <LogWrite>
   15828:	e5953000 	ldr	r3, [r5]
   1582c:	e3530000 	cmp	r3, #0
   15830:	0a000003 	beq	15844 <USPiInitialize+0x38>
   15834:	e3a02024 	mov	r2, #36	; 0x24
   15838:	e59f1204 	ldr	r1, [pc, #516]	; 15a44 <USPiInitialize+0x238>
   1583c:	e59f0204 	ldr	r0, [pc, #516]	; 15a48 <USPiInitialize+0x23c>
   15840:	eb0045d1 	bl	26f8c <uspi_assertion_failed>
   15844:	e59f0200 	ldr	r0, [pc, #512]	; 15a4c <USPiInitialize+0x240>
   15848:	eb003db8 	bl	24f30 <malloc>
   1584c:	e3500000 	cmp	r0, #0
   15850:	e5850000 	str	r0, [r5]
   15854:	0a000071 	beq	15a20 <USPiInitialize+0x214>
   15858:	e3a04000 	mov	r4, #0
   1585c:	eb001c7f 	bl	1ca60 <DeviceNameService>
   15860:	e5950000 	ldr	r0, [r5]
   15864:	e2800004 	add	r0, r0, #4
   15868:	eb0003b8 	bl	16750 <DWHCIDevice>
   1586c:	e5950000 	ldr	r0, [r5]
   15870:	e58047b0 	str	r4, [r0, #1968]	; 0x7b0
   15874:	e58047b4 	str	r4, [r0, #1972]	; 0x7b4
   15878:	e2800004 	add	r0, r0, #4
   1587c:	eb000bf2 	bl	1884c <DWHCIDeviceInitialize>
   15880:	e2506000 	subs	r6, r0, #0
   15884:	0a000056 	beq	159e4 <USPiInitialize+0x1d8>
   15888:	eb001d35 	bl	1cd64 <DeviceNameServiceGet>
   1588c:	e1a02004 	mov	r2, r4
   15890:	e59f11b8 	ldr	r1, [pc, #440]	; 15a50 <USPiInitialize+0x244>
   15894:	e5956000 	ldr	r6, [r5]
   15898:	eb001cf6 	bl	1cc78 <DeviceNameServiceGetDevice>
   1589c:	e5860798 	str	r0, [r6, #1944]	; 0x798
   158a0:	eb001d2f 	bl	1cd64 <DeviceNameServiceGet>
   158a4:	e1a02004 	mov	r2, r4
   158a8:	e59f11a4 	ldr	r1, [pc, #420]	; 15a54 <USPiInitialize+0x248>
   158ac:	e5956000 	ldr	r6, [r5]
   158b0:	eb001cf0 	bl	1cc78 <DeviceNameServiceGetDevice>
   158b4:	e586079c 	str	r0, [r6, #1948]	; 0x79c
   158b8:	eb001d29 	bl	1cd64 <DeviceNameServiceGet>
   158bc:	e1a02004 	mov	r2, r4
   158c0:	e59f1190 	ldr	r1, [pc, #400]	; 15a58 <USPiInitialize+0x24c>
   158c4:	e5956000 	ldr	r6, [r5]
   158c8:	eb001cea 	bl	1cc78 <DeviceNameServiceGetDevice>
   158cc:	e59f8188 	ldr	r8, [pc, #392]	; 15a5c <USPiInitialize+0x250>
   158d0:	e58607c8 	str	r0, [r6, #1992]	; 0x7c8
   158d4:	e2846001 	add	r6, r4, #1
   158d8:	e28d0004 	add	r0, sp, #4
   158dc:	eb002789 	bl	1f708 <String>
   158e0:	e1a02006 	mov	r2, r6
   158e4:	e1a01008 	mov	r1, r8
   158e8:	e28d0004 	add	r0, sp, #4
   158ec:	eb002a44 	bl	20204 <StringFormat>
   158f0:	eb001d1b 	bl	1cd64 <DeviceNameServiceGet>
   158f4:	e1a07000 	mov	r7, r0
   158f8:	e28d0004 	add	r0, sp, #4
   158fc:	eb0027b4 	bl	1f7d4 <StringGet>
   15900:	e3a02001 	mov	r2, #1
   15904:	e1a01000 	mov	r1, r0
   15908:	e1a00007 	mov	r0, r7
   1590c:	e5957000 	ldr	r7, [r5]
   15910:	eb001cd8 	bl	1cc78 <DeviceNameServiceGetDevice>
   15914:	e2843f7a 	add	r3, r4, #488	; 0x1e8
   15918:	e7870103 	str	r0, [r7, r3, lsl #2]
   1591c:	e28d0004 	add	r0, sp, #4
   15920:	eb00279a 	bl	1f790 <_String>
   15924:	e3560004 	cmp	r6, #4
   15928:	e1a04006 	mov	r4, r6
   1592c:	1affffe8 	bne	158d4 <USPiInitialize+0xc8>
   15930:	eb001d0b 	bl	1cd64 <DeviceNameServiceGet>
   15934:	e3a02000 	mov	r2, #0
   15938:	e59f1120 	ldr	r1, [pc, #288]	; 15a60 <USPiInitialize+0x254>
   1593c:	e5954000 	ldr	r4, [r5]
   15940:	eb001ccc 	bl	1cc78 <DeviceNameServiceGetDevice>
   15944:	e58407b0 	str	r0, [r4, #1968]	; 0x7b0
   15948:	eb001d05 	bl	1cd64 <DeviceNameServiceGet>
   1594c:	e3a02000 	mov	r2, #0
   15950:	e59f110c 	ldr	r1, [pc, #268]	; 15a64 <USPiInitialize+0x258>
   15954:	e5956000 	ldr	r6, [r5]
   15958:	eb001cc6 	bl	1cc78 <DeviceNameServiceGetDevice>
   1595c:	e3a04000 	mov	r4, #0
   15960:	e59f8100 	ldr	r8, [pc, #256]	; 15a68 <USPiInitialize+0x25c>
   15964:	e58607b4 	str	r0, [r6, #1972]	; 0x7b4
   15968:	e2846001 	add	r6, r4, #1
   1596c:	e28d0004 	add	r0, sp, #4
   15970:	eb002764 	bl	1f708 <String>
   15974:	e1a02006 	mov	r2, r6
   15978:	e1a01008 	mov	r1, r8
   1597c:	e28d0004 	add	r0, sp, #4
   15980:	eb002a1f 	bl	20204 <StringFormat>
   15984:	eb001cf6 	bl	1cd64 <DeviceNameServiceGet>
   15988:	e1a07000 	mov	r7, r0
   1598c:	e28d0004 	add	r0, sp, #4
   15990:	eb00278f 	bl	1f7d4 <StringGet>
   15994:	e3a02000 	mov	r2, #0
   15998:	e1a01000 	mov	r1, r0
   1599c:	e1a00007 	mov	r0, r7
   159a0:	e5957000 	ldr	r7, [r5]
   159a4:	eb001cb3 	bl	1cc78 <DeviceNameServiceGetDevice>
   159a8:	e2843f7b 	add	r3, r4, #492	; 0x1ec
   159ac:	e2833002 	add	r3, r3, #2
   159b0:	e7870103 	str	r0, [r7, r3, lsl #2]
   159b4:	e28d0004 	add	r0, sp, #4
   159b8:	eb002774 	bl	1f790 <_String>
   159bc:	e3560004 	cmp	r6, #4
   159c0:	e1a04006 	mov	r4, r6
   159c4:	1affffe7 	bne	15968 <USPiInitialize+0x15c>
   159c8:	e1a01006 	mov	r1, r6
   159cc:	e59f2098 	ldr	r2, [pc, #152]	; 15a6c <USPiInitialize+0x260>
   159d0:	e59f0068 	ldr	r0, [pc, #104]	; 15a40 <USPiInitialize+0x234>
   159d4:	eb00455a 	bl	26f44 <LogWrite>
   159d8:	e3a00001 	mov	r0, #1
   159dc:	e28dd010 	add	sp, sp, #16
   159e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   159e4:	e59f2084 	ldr	r2, [pc, #132]	; 15a70 <USPiInitialize+0x264>
   159e8:	e3a01001 	mov	r1, #1
   159ec:	e59f004c 	ldr	r0, [pc, #76]	; 15a40 <USPiInitialize+0x234>
   159f0:	eb004553 	bl	26f44 <LogWrite>
   159f4:	e5950000 	ldr	r0, [r5]
   159f8:	e2800004 	add	r0, r0, #4
   159fc:	eb000366 	bl	1679c <_DWHCIDevice>
   15a00:	e5950000 	ldr	r0, [r5]
   15a04:	eb001c2d 	bl	1cac0 <_DeviceNameService>
   15a08:	e5950000 	ldr	r0, [r5]
   15a0c:	eb003dad 	bl	250c8 <free>
   15a10:	e1a00006 	mov	r0, r6
   15a14:	e5856000 	str	r6, [r5]
   15a18:	e28dd010 	add	sp, sp, #16
   15a1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   15a20:	e59f004c 	ldr	r0, [pc, #76]	; 15a74 <USPiInitialize+0x268>
   15a24:	e3a02026 	mov	r2, #38	; 0x26
   15a28:	e59f1014 	ldr	r1, [pc, #20]	; 15a44 <USPiInitialize+0x238>
   15a2c:	eb004556 	bl	26f8c <uspi_assertion_failed>
   15a30:	e5950000 	ldr	r0, [r5]
   15a34:	eaffff87 	b	15858 <USPiInitialize+0x4c>
   15a38:	0002d150 	andeq	sp, r2, r0, asr r1
   15a3c:	000298ec 	andeq	r9, r2, ip, ror #17
   15a40:	00028540 	andeq	r8, r2, r0, asr #10
   15a44:	0002990c 	andeq	r9, r2, ip, lsl #18
   15a48:	0002991c 	andeq	r9, r2, ip, lsl r9
   15a4c:	000007cc 	andeq	r0, r0, ip, asr #15
   15a50:	0002996c 	andeq	r9, r2, ip, ror #18
   15a54:	00029974 	andeq	r9, r2, r4, ror r9
   15a58:	0002997c 	andeq	r9, r2, ip, ror r9
   15a5c:	00029984 	andeq	r9, r2, r4, lsl #19
   15a60:	0002998c 	andeq	r9, r2, ip, lsl #19
   15a64:	00029994 	muleq	r2, r4, r9
   15a68:	0002999c 	muleq	r2, ip, r9
   15a6c:	000299a4 	andeq	r9, r2, r4, lsr #19
   15a70:	0002993c 	andeq	r9, r2, ip, lsr r9
   15a74:	0002992c 	andeq	r9, r2, ip, lsr #18

00015a78 <USPiKeyboardAvailable>:
   15a78:	e92d4010 	push	{r4, lr}
   15a7c:	e59f4030 	ldr	r4, [pc, #48]	; 15ab4 <USPiKeyboardAvailable+0x3c>
   15a80:	e5943000 	ldr	r3, [r4]
   15a84:	e3530000 	cmp	r3, #0
   15a88:	0a000003 	beq	15a9c <USPiKeyboardAvailable+0x24>
   15a8c:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15a90:	e2900000 	adds	r0, r0, #0
   15a94:	13a00001 	movne	r0, #1
   15a98:	e8bd8010 	pop	{r4, pc}
   15a9c:	e3a02062 	mov	r2, #98	; 0x62
   15aa0:	e59f1010 	ldr	r1, [pc, #16]	; 15ab8 <USPiKeyboardAvailable+0x40>
   15aa4:	e59f0010 	ldr	r0, [pc, #16]	; 15abc <USPiKeyboardAvailable+0x44>
   15aa8:	eb004537 	bl	26f8c <uspi_assertion_failed>
   15aac:	e5943000 	ldr	r3, [r4]
   15ab0:	eafffff5 	b	15a8c <USPiKeyboardAvailable+0x14>
   15ab4:	0002d150 	andeq	sp, r2, r0, asr r1
   15ab8:	0002990c 	andeq	r9, r2, ip, lsl #18
   15abc:	0002992c 	andeq	r9, r2, ip, lsr #18

00015ac0 <USPiKeyboardRegisterKeyPressedHandler>:
   15ac0:	e92d4070 	push	{r4, r5, r6, lr}
   15ac4:	e59f4068 	ldr	r4, [pc, #104]	; 15b34 <USPiKeyboardRegisterKeyPressedHandler+0x74>
   15ac8:	e1a05000 	mov	r5, r0
   15acc:	e5943000 	ldr	r3, [r4]
   15ad0:	e3530000 	cmp	r3, #0
   15ad4:	0a000005 	beq	15af0 <USPiKeyboardRegisterKeyPressedHandler+0x30>
   15ad8:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15adc:	e3500000 	cmp	r0, #0
   15ae0:	0a00000a 	beq	15b10 <USPiKeyboardRegisterKeyPressedHandler+0x50>
   15ae4:	e1a01005 	mov	r1, r5
   15ae8:	e8bd4070 	pop	{r4, r5, r6, lr}
   15aec:	ea00305c 	b	21c64 <USBKeyboardDeviceRegisterKeyPressedHandler>
   15af0:	e59f0040 	ldr	r0, [pc, #64]	; 15b38 <USPiKeyboardRegisterKeyPressedHandler+0x78>
   15af4:	e3a02068 	mov	r2, #104	; 0x68
   15af8:	e59f103c 	ldr	r1, [pc, #60]	; 15b3c <USPiKeyboardRegisterKeyPressedHandler+0x7c>
   15afc:	eb004522 	bl	26f8c <uspi_assertion_failed>
   15b00:	e5943000 	ldr	r3, [r4]
   15b04:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15b08:	e3500000 	cmp	r0, #0
   15b0c:	1afffff4 	bne	15ae4 <USPiKeyboardRegisterKeyPressedHandler+0x24>
   15b10:	e59f1024 	ldr	r1, [pc, #36]	; 15b3c <USPiKeyboardRegisterKeyPressedHandler+0x7c>
   15b14:	e59f0024 	ldr	r0, [pc, #36]	; 15b40 <USPiKeyboardRegisterKeyPressedHandler+0x80>
   15b18:	e3a02069 	mov	r2, #105	; 0x69
   15b1c:	eb00451a 	bl	26f8c <uspi_assertion_failed>
   15b20:	e5943000 	ldr	r3, [r4]
   15b24:	e1a01005 	mov	r1, r5
   15b28:	e8bd4070 	pop	{r4, r5, r6, lr}
   15b2c:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15b30:	ea00304b 	b	21c64 <USBKeyboardDeviceRegisterKeyPressedHandler>
   15b34:	0002d150 	andeq	sp, r2, r0, asr r1
   15b38:	0002992c 	andeq	r9, r2, ip, lsr #18
   15b3c:	0002990c 	andeq	r9, r2, ip, lsl #18
   15b40:	000299cc 	andeq	r9, r2, ip, asr #19

00015b44 <USPiKeyboardRegisterShutdownHandler>:
   15b44:	e92d4070 	push	{r4, r5, r6, lr}
   15b48:	e59f4068 	ldr	r4, [pc, #104]	; 15bb8 <USPiKeyboardRegisterShutdownHandler+0x74>
   15b4c:	e1a05000 	mov	r5, r0
   15b50:	e5943000 	ldr	r3, [r4]
   15b54:	e3530000 	cmp	r3, #0
   15b58:	0a000005 	beq	15b74 <USPiKeyboardRegisterShutdownHandler+0x30>
   15b5c:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15b60:	e3500000 	cmp	r0, #0
   15b64:	0a00000a 	beq	15b94 <USPiKeyboardRegisterShutdownHandler+0x50>
   15b68:	e1a01005 	mov	r1, r5
   15b6c:	e8bd4070 	pop	{r4, r5, r6, lr}
   15b70:	ea003069 	b	21d1c <USBKeyboardDeviceRegisterShutdownHandler>
   15b74:	e59f0040 	ldr	r0, [pc, #64]	; 15bbc <USPiKeyboardRegisterShutdownHandler+0x78>
   15b78:	e3a0206f 	mov	r2, #111	; 0x6f
   15b7c:	e59f103c 	ldr	r1, [pc, #60]	; 15bc0 <USPiKeyboardRegisterShutdownHandler+0x7c>
   15b80:	eb004501 	bl	26f8c <uspi_assertion_failed>
   15b84:	e5943000 	ldr	r3, [r4]
   15b88:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15b8c:	e3500000 	cmp	r0, #0
   15b90:	1afffff4 	bne	15b68 <USPiKeyboardRegisterShutdownHandler+0x24>
   15b94:	e59f1024 	ldr	r1, [pc, #36]	; 15bc0 <USPiKeyboardRegisterShutdownHandler+0x7c>
   15b98:	e59f0024 	ldr	r0, [pc, #36]	; 15bc4 <USPiKeyboardRegisterShutdownHandler+0x80>
   15b9c:	e3a02070 	mov	r2, #112	; 0x70
   15ba0:	eb0044f9 	bl	26f8c <uspi_assertion_failed>
   15ba4:	e5943000 	ldr	r3, [r4]
   15ba8:	e1a01005 	mov	r1, r5
   15bac:	e8bd4070 	pop	{r4, r5, r6, lr}
   15bb0:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15bb4:	ea003058 	b	21d1c <USBKeyboardDeviceRegisterShutdownHandler>
   15bb8:	0002d150 	andeq	sp, r2, r0, asr r1
   15bbc:	0002992c 	andeq	r9, r2, ip, lsr #18
   15bc0:	0002990c 	andeq	r9, r2, ip, lsl #18
   15bc4:	000299cc 	andeq	r9, r2, ip, asr #19

00015bc8 <USPiKeyboardUpdateLEDs>:
   15bc8:	e92d4010 	push	{r4, lr}
   15bcc:	e59f405c 	ldr	r4, [pc, #92]	; 15c30 <USPiKeyboardUpdateLEDs+0x68>
   15bd0:	e5943000 	ldr	r3, [r4]
   15bd4:	e3530000 	cmp	r3, #0
   15bd8:	0a000004 	beq	15bf0 <USPiKeyboardUpdateLEDs+0x28>
   15bdc:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15be0:	e3500000 	cmp	r0, #0
   15be4:	0a000009 	beq	15c10 <USPiKeyboardUpdateLEDs+0x48>
   15be8:	e8bd4010 	pop	{r4, lr}
   15bec:	ea003133 	b	220c0 <USBKeyboardDeviceUpdateLEDs>
   15bf0:	e59f003c 	ldr	r0, [pc, #60]	; 15c34 <USPiKeyboardUpdateLEDs+0x6c>
   15bf4:	e3a02076 	mov	r2, #118	; 0x76
   15bf8:	e59f1038 	ldr	r1, [pc, #56]	; 15c38 <USPiKeyboardUpdateLEDs+0x70>
   15bfc:	eb0044e2 	bl	26f8c <uspi_assertion_failed>
   15c00:	e5943000 	ldr	r3, [r4]
   15c04:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15c08:	e3500000 	cmp	r0, #0
   15c0c:	1afffff5 	bne	15be8 <USPiKeyboardUpdateLEDs+0x20>
   15c10:	e59f0024 	ldr	r0, [pc, #36]	; 15c3c <USPiKeyboardUpdateLEDs+0x74>
   15c14:	e3a02077 	mov	r2, #119	; 0x77
   15c18:	e59f1018 	ldr	r1, [pc, #24]	; 15c38 <USPiKeyboardUpdateLEDs+0x70>
   15c1c:	eb0044da 	bl	26f8c <uspi_assertion_failed>
   15c20:	e5943000 	ldr	r3, [r4]
   15c24:	e8bd4010 	pop	{r4, lr}
   15c28:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15c2c:	ea003123 	b	220c0 <USBKeyboardDeviceUpdateLEDs>
   15c30:	0002d150 	andeq	sp, r2, r0, asr r1
   15c34:	0002992c 	andeq	r9, r2, ip, lsr #18
   15c38:	0002990c 	andeq	r9, r2, ip, lsl #18
   15c3c:	000299cc 	andeq	r9, r2, ip, asr #19

00015c40 <USPiKeyboardRegisterKeyStatusHandlerRaw>:
   15c40:	e92d4070 	push	{r4, r5, r6, lr}
   15c44:	e59f4068 	ldr	r4, [pc, #104]	; 15cb4 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x74>
   15c48:	e1a05000 	mov	r5, r0
   15c4c:	e5943000 	ldr	r3, [r4]
   15c50:	e3530000 	cmp	r3, #0
   15c54:	0a000005 	beq	15c70 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x30>
   15c58:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15c5c:	e3500000 	cmp	r0, #0
   15c60:	0a00000a 	beq	15c90 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x50>
   15c64:	e1a01005 	mov	r1, r5
   15c68:	e8bd4070 	pop	{r4, r5, r6, lr}
   15c6c:	ea003041 	b	21d78 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw>
   15c70:	e59f0040 	ldr	r0, [pc, #64]	; 15cb8 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x78>
   15c74:	e3a0207d 	mov	r2, #125	; 0x7d
   15c78:	e59f103c 	ldr	r1, [pc, #60]	; 15cbc <USPiKeyboardRegisterKeyStatusHandlerRaw+0x7c>
   15c7c:	eb0044c2 	bl	26f8c <uspi_assertion_failed>
   15c80:	e5943000 	ldr	r3, [r4]
   15c84:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15c88:	e3500000 	cmp	r0, #0
   15c8c:	1afffff4 	bne	15c64 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x24>
   15c90:	e59f1024 	ldr	r1, [pc, #36]	; 15cbc <USPiKeyboardRegisterKeyStatusHandlerRaw+0x7c>
   15c94:	e59f0024 	ldr	r0, [pc, #36]	; 15cc0 <USPiKeyboardRegisterKeyStatusHandlerRaw+0x80>
   15c98:	e3a0207e 	mov	r2, #126	; 0x7e
   15c9c:	eb0044ba 	bl	26f8c <uspi_assertion_failed>
   15ca0:	e5943000 	ldr	r3, [r4]
   15ca4:	e1a01005 	mov	r1, r5
   15ca8:	e8bd4070 	pop	{r4, r5, r6, lr}
   15cac:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15cb0:	ea003030 	b	21d78 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw>
   15cb4:	0002d150 	andeq	sp, r2, r0, asr r1
   15cb8:	0002992c 	andeq	r9, r2, ip, lsr #18
   15cbc:	0002990c 	andeq	r9, r2, ip, lsl #18
   15cc0:	000299cc 	andeq	r9, r2, ip, asr #19

00015cc4 <USPiKeyboardSetLEDs>:
   15cc4:	e92d4070 	push	{r4, r5, r6, lr}
   15cc8:	e59f4068 	ldr	r4, [pc, #104]	; 15d38 <USPiKeyboardSetLEDs+0x74>
   15ccc:	e1a05000 	mov	r5, r0
   15cd0:	e5943000 	ldr	r3, [r4]
   15cd4:	e3530000 	cmp	r3, #0
   15cd8:	0a000005 	beq	15cf4 <USPiKeyboardSetLEDs+0x30>
   15cdc:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15ce0:	e3500000 	cmp	r0, #0
   15ce4:	0a00000a 	beq	15d14 <USPiKeyboardSetLEDs+0x50>
   15ce8:	e1a01005 	mov	r1, r5
   15cec:	e8bd4070 	pop	{r4, r5, r6, lr}
   15cf0:	ea003037 	b	21dd4 <USBKeyboardDeviceSetLEDs>
   15cf4:	e59f0040 	ldr	r0, [pc, #64]	; 15d3c <USPiKeyboardSetLEDs+0x78>
   15cf8:	e3a02084 	mov	r2, #132	; 0x84
   15cfc:	e59f103c 	ldr	r1, [pc, #60]	; 15d40 <USPiKeyboardSetLEDs+0x7c>
   15d00:	eb0044a1 	bl	26f8c <uspi_assertion_failed>
   15d04:	e5943000 	ldr	r3, [r4]
   15d08:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15d0c:	e3500000 	cmp	r0, #0
   15d10:	1afffff4 	bne	15ce8 <USPiKeyboardSetLEDs+0x24>
   15d14:	e59f1024 	ldr	r1, [pc, #36]	; 15d40 <USPiKeyboardSetLEDs+0x7c>
   15d18:	e59f0024 	ldr	r0, [pc, #36]	; 15d44 <USPiKeyboardSetLEDs+0x80>
   15d1c:	e3a02085 	mov	r2, #133	; 0x85
   15d20:	eb004499 	bl	26f8c <uspi_assertion_failed>
   15d24:	e5943000 	ldr	r3, [r4]
   15d28:	e1a01005 	mov	r1, r5
   15d2c:	e8bd4070 	pop	{r4, r5, r6, lr}
   15d30:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   15d34:	ea003026 	b	21dd4 <USBKeyboardDeviceSetLEDs>
   15d38:	0002d150 	andeq	sp, r2, r0, asr r1
   15d3c:	0002992c 	andeq	r9, r2, ip, lsr #18
   15d40:	0002990c 	andeq	r9, r2, ip, lsl #18
   15d44:	000299cc 	andeq	r9, r2, ip, asr #19

00015d48 <USPiMouseAvailable>:
   15d48:	e92d4010 	push	{r4, lr}
   15d4c:	e59f4030 	ldr	r4, [pc, #48]	; 15d84 <USPiMouseAvailable+0x3c>
   15d50:	e5943000 	ldr	r3, [r4]
   15d54:	e3530000 	cmp	r3, #0
   15d58:	0a000003 	beq	15d6c <USPiMouseAvailable+0x24>
   15d5c:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   15d60:	e2900000 	adds	r0, r0, #0
   15d64:	13a00001 	movne	r0, #1
   15d68:	e8bd8010 	pop	{r4, pc}
   15d6c:	e3a0208b 	mov	r2, #139	; 0x8b
   15d70:	e59f1010 	ldr	r1, [pc, #16]	; 15d88 <USPiMouseAvailable+0x40>
   15d74:	e59f0010 	ldr	r0, [pc, #16]	; 15d8c <USPiMouseAvailable+0x44>
   15d78:	eb004483 	bl	26f8c <uspi_assertion_failed>
   15d7c:	e5943000 	ldr	r3, [r4]
   15d80:	eafffff5 	b	15d5c <USPiMouseAvailable+0x14>
   15d84:	0002d150 	andeq	sp, r2, r0, asr r1
   15d88:	0002990c 	andeq	r9, r2, ip, lsl #18
   15d8c:	0002992c 	andeq	r9, r2, ip, lsr #18

00015d90 <USPiMouseRegisterStatusHandler>:
   15d90:	e92d4070 	push	{r4, r5, r6, lr}
   15d94:	e59f4068 	ldr	r4, [pc, #104]	; 15e04 <USPiMouseRegisterStatusHandler+0x74>
   15d98:	e1a05000 	mov	r5, r0
   15d9c:	e5943000 	ldr	r3, [r4]
   15da0:	e3530000 	cmp	r3, #0
   15da4:	0a000005 	beq	15dc0 <USPiMouseRegisterStatusHandler+0x30>
   15da8:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   15dac:	e3500000 	cmp	r0, #0
   15db0:	0a00000a 	beq	15de0 <USPiMouseRegisterStatusHandler+0x50>
   15db4:	e1a01005 	mov	r1, r5
   15db8:	e8bd4070 	pop	{r4, r5, r6, lr}
   15dbc:	ea0032ed 	b	22978 <USBMouseDeviceRegisterStatusHandler>
   15dc0:	e59f0040 	ldr	r0, [pc, #64]	; 15e08 <USPiMouseRegisterStatusHandler+0x78>
   15dc4:	e3a02091 	mov	r2, #145	; 0x91
   15dc8:	e59f103c 	ldr	r1, [pc, #60]	; 15e0c <USPiMouseRegisterStatusHandler+0x7c>
   15dcc:	eb00446e 	bl	26f8c <uspi_assertion_failed>
   15dd0:	e5943000 	ldr	r3, [r4]
   15dd4:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   15dd8:	e3500000 	cmp	r0, #0
   15ddc:	1afffff4 	bne	15db4 <USPiMouseRegisterStatusHandler+0x24>
   15de0:	e59f1024 	ldr	r1, [pc, #36]	; 15e0c <USPiMouseRegisterStatusHandler+0x7c>
   15de4:	e59f0024 	ldr	r0, [pc, #36]	; 15e10 <USPiMouseRegisterStatusHandler+0x80>
   15de8:	e3a02092 	mov	r2, #146	; 0x92
   15dec:	eb004466 	bl	26f8c <uspi_assertion_failed>
   15df0:	e5943000 	ldr	r3, [r4]
   15df4:	e1a01005 	mov	r1, r5
   15df8:	e8bd4070 	pop	{r4, r5, r6, lr}
   15dfc:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   15e00:	ea0032dc 	b	22978 <USBMouseDeviceRegisterStatusHandler>
   15e04:	0002d150 	andeq	sp, r2, r0, asr r1
   15e08:	0002992c 	andeq	r9, r2, ip, lsr #18
   15e0c:	0002990c 	andeq	r9, r2, ip, lsl #18
   15e10:	000299e4 	andeq	r9, r2, r4, ror #19

00015e14 <USPiMassStorageDeviceAvailable>:
   15e14:	e92d4010 	push	{r4, lr}
   15e18:	e59f4044 	ldr	r4, [pc, #68]	; 15e64 <USPiMassStorageDeviceAvailable+0x50>
   15e1c:	e5943000 	ldr	r3, [r4]
   15e20:	e3530000 	cmp	r3, #0
   15e24:	0a000008 	beq	15e4c <USPiMassStorageDeviceAvailable+0x38>
   15e28:	e3a00000 	mov	r0, #0
   15e2c:	e2833e7a 	add	r3, r3, #1952	; 0x7a0
   15e30:	e4932004 	ldr	r2, [r3], #4
   15e34:	e3520000 	cmp	r2, #0
   15e38:	08bd8010 	popeq	{r4, pc}
   15e3c:	e2800001 	add	r0, r0, #1
   15e40:	e3500004 	cmp	r0, #4
   15e44:	1afffff9 	bne	15e30 <USPiMassStorageDeviceAvailable+0x1c>
   15e48:	e8bd8010 	pop	{r4, pc}
   15e4c:	e3a02098 	mov	r2, #152	; 0x98
   15e50:	e59f1010 	ldr	r1, [pc, #16]	; 15e68 <USPiMassStorageDeviceAvailable+0x54>
   15e54:	e59f0010 	ldr	r0, [pc, #16]	; 15e6c <USPiMassStorageDeviceAvailable+0x58>
   15e58:	eb00444b 	bl	26f8c <uspi_assertion_failed>
   15e5c:	e5943000 	ldr	r3, [r4]
   15e60:	eafffff0 	b	15e28 <USPiMassStorageDeviceAvailable+0x14>
   15e64:	0002d150 	andeq	sp, r2, r0, asr r1
   15e68:	0002990c 	andeq	r9, r2, ip, lsl #18
   15e6c:	0002992c 	andeq	r9, r2, ip, lsr #18

00015e70 <USPiMassStorageDeviceRead>:
   15e70:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e74:	e59f5084 	ldr	r5, [pc, #132]	; 15f00 <USPiMassStorageDeviceRead+0x90>
   15e78:	e1a07001 	mov	r7, r1
   15e7c:	e5951000 	ldr	r1, [r5]
   15e80:	e1a06000 	mov	r6, r0
   15e84:	e3510000 	cmp	r1, #0
   15e88:	e1a08002 	mov	r8, r2
   15e8c:	e1a09003 	mov	r9, r3
   15e90:	e59d4020 	ldr	r4, [sp, #32]
   15e94:	0a000012 	beq	15ee4 <USPiMassStorageDeviceRead+0x74>
   15e98:	e3540003 	cmp	r4, #3
   15e9c:	8a000015 	bhi	15ef8 <USPiMassStorageDeviceRead+0x88>
   15ea0:	e5953000 	ldr	r3, [r5]
   15ea4:	e2844f7a 	add	r4, r4, #488	; 0x1e8
   15ea8:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   15eac:	e3500000 	cmp	r0, #0
   15eb0:	0a000010 	beq	15ef8 <USPiMassStorageDeviceRead+0x88>
   15eb4:	e1a02006 	mov	r2, r6
   15eb8:	e1a03007 	mov	r3, r7
   15ebc:	eb0029d0 	bl	20604 <USBBulkOnlyMassStorageDeviceSeek>
   15ec0:	e1510007 	cmp	r1, r7
   15ec4:	01500006 	cmpeq	r0, r6
   15ec8:	1a00000a 	bne	15ef8 <USPiMassStorageDeviceRead+0x88>
   15ecc:	e5953000 	ldr	r3, [r5]
   15ed0:	e1a02009 	mov	r2, r9
   15ed4:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   15ed8:	e1a01008 	mov	r1, r8
   15edc:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ee0:	ea002c93 	b	21134 <USBBulkOnlyMassStorageDeviceRead>
   15ee4:	e3a020a8 	mov	r2, #168	; 0xa8
   15ee8:	e59f1014 	ldr	r1, [pc, #20]	; 15f04 <USPiMassStorageDeviceRead+0x94>
   15eec:	e59f0014 	ldr	r0, [pc, #20]	; 15f08 <USPiMassStorageDeviceRead+0x98>
   15ef0:	eb004425 	bl	26f8c <uspi_assertion_failed>
   15ef4:	eaffffe7 	b	15e98 <USPiMassStorageDeviceRead+0x28>
   15ef8:	e3e00000 	mvn	r0, #0
   15efc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f00:	0002d150 	andeq	sp, r2, r0, asr r1
   15f04:	0002990c 	andeq	r9, r2, ip, lsl #18
   15f08:	0002992c 	andeq	r9, r2, ip, lsr #18

00015f0c <USPiMassStorageDeviceWrite>:
   15f0c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f10:	e59f5084 	ldr	r5, [pc, #132]	; 15f9c <USPiMassStorageDeviceWrite+0x90>
   15f14:	e1a07001 	mov	r7, r1
   15f18:	e5951000 	ldr	r1, [r5]
   15f1c:	e1a06000 	mov	r6, r0
   15f20:	e3510000 	cmp	r1, #0
   15f24:	e1a08002 	mov	r8, r2
   15f28:	e1a09003 	mov	r9, r3
   15f2c:	e59d4020 	ldr	r4, [sp, #32]
   15f30:	0a000012 	beq	15f80 <USPiMassStorageDeviceWrite+0x74>
   15f34:	e3540003 	cmp	r4, #3
   15f38:	8a000015 	bhi	15f94 <USPiMassStorageDeviceWrite+0x88>
   15f3c:	e5953000 	ldr	r3, [r5]
   15f40:	e2844f7a 	add	r4, r4, #488	; 0x1e8
   15f44:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   15f48:	e3500000 	cmp	r0, #0
   15f4c:	0a000010 	beq	15f94 <USPiMassStorageDeviceWrite+0x88>
   15f50:	e1a02006 	mov	r2, r6
   15f54:	e1a03007 	mov	r3, r7
   15f58:	eb0029a9 	bl	20604 <USBBulkOnlyMassStorageDeviceSeek>
   15f5c:	e1510007 	cmp	r1, r7
   15f60:	01500006 	cmpeq	r0, r6
   15f64:	1a00000a 	bne	15f94 <USPiMassStorageDeviceWrite+0x88>
   15f68:	e5953000 	ldr	r3, [r5]
   15f6c:	e1a02009 	mov	r2, r9
   15f70:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   15f74:	e1a01008 	mov	r1, r8
   15f78:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f7c:	ea002c8d 	b	211b8 <USBBulkOnlyMassStorageDeviceWrite>
   15f80:	e3a020ba 	mov	r2, #186	; 0xba
   15f84:	e59f1014 	ldr	r1, [pc, #20]	; 15fa0 <USPiMassStorageDeviceWrite+0x94>
   15f88:	e59f0014 	ldr	r0, [pc, #20]	; 15fa4 <USPiMassStorageDeviceWrite+0x98>
   15f8c:	eb0043fe 	bl	26f8c <uspi_assertion_failed>
   15f90:	eaffffe7 	b	15f34 <USPiMassStorageDeviceWrite+0x28>
   15f94:	e3e00000 	mvn	r0, #0
   15f98:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f9c:	0002d150 	andeq	sp, r2, r0, asr r1
   15fa0:	0002990c 	andeq	r9, r2, ip, lsl #18
   15fa4:	0002992c 	andeq	r9, r2, ip, lsr #18

00015fa8 <USPiMassStorageDeviceGetCapacity>:
   15fa8:	e92d4070 	push	{r4, r5, r6, lr}
   15fac:	e59f504c 	ldr	r5, [pc, #76]	; 16000 <USPiMassStorageDeviceGetCapacity+0x58>
   15fb0:	e1a04000 	mov	r4, r0
   15fb4:	e5953000 	ldr	r3, [r5]
   15fb8:	e3530000 	cmp	r3, #0
   15fbc:	0a00000a 	beq	15fec <USPiMassStorageDeviceGetCapacity+0x44>
   15fc0:	e3540003 	cmp	r4, #3
   15fc4:	8a000006 	bhi	15fe4 <USPiMassStorageDeviceGetCapacity+0x3c>
   15fc8:	e5953000 	ldr	r3, [r5]
   15fcc:	e2844f7a 	add	r4, r4, #488	; 0x1e8
   15fd0:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   15fd4:	e3500000 	cmp	r0, #0
   15fd8:	0a000001 	beq	15fe4 <USPiMassStorageDeviceGetCapacity+0x3c>
   15fdc:	e8bd4070 	pop	{r4, r5, r6, lr}
   15fe0:	ea002998 	b	20648 <USBBulkOnlyMassStorageDeviceGetCapacity>
   15fe4:	e3a00000 	mov	r0, #0
   15fe8:	e8bd8070 	pop	{r4, r5, r6, pc}
   15fec:	e3a020cc 	mov	r2, #204	; 0xcc
   15ff0:	e59f100c 	ldr	r1, [pc, #12]	; 16004 <USPiMassStorageDeviceGetCapacity+0x5c>
   15ff4:	e59f000c 	ldr	r0, [pc, #12]	; 16008 <USPiMassStorageDeviceGetCapacity+0x60>
   15ff8:	eb0043e3 	bl	26f8c <uspi_assertion_failed>
   15ffc:	eaffffef 	b	15fc0 <USPiMassStorageDeviceGetCapacity+0x18>
   16000:	0002d150 	andeq	sp, r2, r0, asr r1
   16004:	0002990c 	andeq	r9, r2, ip, lsl #18
   16008:	0002992c 	andeq	r9, r2, ip, lsr #18

0001600c <USPiEthernetAvailable>:
   1600c:	e92d4010 	push	{r4, lr}
   16010:	e59f4044 	ldr	r4, [pc, #68]	; 1605c <USPiEthernetAvailable+0x50>
   16014:	e5943000 	ldr	r3, [r4]
   16018:	e3530000 	cmp	r3, #0
   1601c:	0a000008 	beq	16044 <USPiEthernetAvailable+0x38>
   16020:	e59327b0 	ldr	r2, [r3, #1968]	; 0x7b0
   16024:	e3520000 	cmp	r2, #0
   16028:	0a000001 	beq	16034 <USPiEthernetAvailable+0x28>
   1602c:	e3a00001 	mov	r0, #1
   16030:	e8bd8010 	pop	{r4, pc}
   16034:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   16038:	e2900000 	adds	r0, r0, #0
   1603c:	13a00001 	movne	r0, #1
   16040:	e8bd8010 	pop	{r4, pc}
   16044:	e3a020d9 	mov	r2, #217	; 0xd9
   16048:	e59f1010 	ldr	r1, [pc, #16]	; 16060 <USPiEthernetAvailable+0x54>
   1604c:	e59f0010 	ldr	r0, [pc, #16]	; 16064 <USPiEthernetAvailable+0x58>
   16050:	eb0043cd 	bl	26f8c <uspi_assertion_failed>
   16054:	e5943000 	ldr	r3, [r4]
   16058:	eafffff0 	b	16020 <USPiEthernetAvailable+0x14>
   1605c:	0002d150 	andeq	sp, r2, r0, asr r1
   16060:	0002990c 	andeq	r9, r2, ip, lsl #18
   16064:	0002992c 	andeq	r9, r2, ip, lsr #18

00016068 <USPiGetMACAddress>:
   16068:	e92d4070 	push	{r4, r5, r6, lr}
   1606c:	e59f50a8 	ldr	r5, [pc, #168]	; 1611c <USPiGetMACAddress+0xb4>
   16070:	e1a04000 	mov	r4, r0
   16074:	e5953000 	ldr	r3, [r5]
   16078:	e3530000 	cmp	r3, #0
   1607c:	0a000019 	beq	160e8 <USPiGetMACAddress+0x80>
   16080:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   16084:	e3500000 	cmp	r0, #0
   16088:	0a000007 	beq	160ac <USPiGetMACAddress+0x44>
   1608c:	eb002213 	bl	1e8e0 <LAN7800DeviceGetMACAddress>
   16090:	e3540000 	cmp	r4, #0
   16094:	e1a05000 	mov	r5, r0
   16098:	0a00000a 	beq	160c8 <USPiGetMACAddress+0x60>
   1609c:	e1a01004 	mov	r1, r4
   160a0:	e1a00005 	mov	r0, r5
   160a4:	e8bd4070 	pop	{r4, r5, r6, lr}
   160a8:	ea001bc6 	b	1cfc8 <MACAddressCopyTo>
   160ac:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   160b0:	e3500000 	cmp	r0, #0
   160b4:	0a000011 	beq	16100 <USPiGetMACAddress+0x98>
   160b8:	eb001eb9 	bl	1dba4 <SMSC951xDeviceGetMACAddress>
   160bc:	e3540000 	cmp	r4, #0
   160c0:	e1a05000 	mov	r5, r0
   160c4:	1afffff4 	bne	1609c <USPiGetMACAddress+0x34>
   160c8:	e59f1050 	ldr	r1, [pc, #80]	; 16120 <USPiGetMACAddress+0xb8>
   160cc:	e59f0050 	ldr	r0, [pc, #80]	; 16124 <USPiGetMACAddress+0xbc>
   160d0:	e3a020ec 	mov	r2, #236	; 0xec
   160d4:	eb0043ac 	bl	26f8c <uspi_assertion_failed>
   160d8:	e1a01004 	mov	r1, r4
   160dc:	e1a00005 	mov	r0, r5
   160e0:	e8bd4070 	pop	{r4, r5, r6, lr}
   160e4:	ea001bb7 	b	1cfc8 <MACAddressCopyTo>
   160e8:	e3a020df 	mov	r2, #223	; 0xdf
   160ec:	e59f102c 	ldr	r1, [pc, #44]	; 16120 <USPiGetMACAddress+0xb8>
   160f0:	e59f0030 	ldr	r0, [pc, #48]	; 16128 <USPiGetMACAddress+0xc0>
   160f4:	eb0043a4 	bl	26f8c <uspi_assertion_failed>
   160f8:	e5953000 	ldr	r3, [r5]
   160fc:	eaffffdf 	b	16080 <USPiGetMACAddress+0x18>
   16100:	e59f0024 	ldr	r0, [pc, #36]	; 1612c <USPiGetMACAddress+0xc4>
   16104:	e3a020e8 	mov	r2, #232	; 0xe8
   16108:	e59f1010 	ldr	r1, [pc, #16]	; 16120 <USPiGetMACAddress+0xb8>
   1610c:	eb00439e 	bl	26f8c <uspi_assertion_failed>
   16110:	e5953000 	ldr	r3, [r5]
   16114:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   16118:	eaffffe6 	b	160b8 <USPiGetMACAddress+0x50>
   1611c:	0002d150 	andeq	sp, r2, r0, asr r1
   16120:	0002990c 	andeq	r9, r2, ip, lsl #18
   16124:	0002b558 	andeq	fp, r2, r8, asr r5
   16128:	0002992c 	andeq	r9, r2, ip, lsr #18
   1612c:	00029a00 	andeq	r9, r2, r0, lsl #20

00016130 <USPiEthernetIsLinkUp>:
   16130:	e92d4010 	push	{r4, lr}
   16134:	e59f4074 	ldr	r4, [pc, #116]	; 161b0 <USPiEthernetIsLinkUp+0x80>
   16138:	e5943000 	ldr	r3, [r4]
   1613c:	e3530000 	cmp	r3, #0
   16140:	0a00000d 	beq	1617c <USPiEthernetIsLinkUp+0x4c>
   16144:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   16148:	e3500000 	cmp	r0, #0
   1614c:	1a000006 	bne	1616c <USPiEthernetIsLinkUp+0x3c>
   16150:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   16154:	e3500000 	cmp	r0, #0
   16158:	0a00000d 	beq	16194 <USPiEthernetIsLinkUp+0x64>
   1615c:	eb0020ef 	bl	1e520 <SMSC951xDeviceIsLinkUp>
   16160:	e2900000 	adds	r0, r0, #0
   16164:	13a00001 	movne	r0, #1
   16168:	e8bd8010 	pop	{r4, pc}
   1616c:	eb0023d8 	bl	1f0d4 <LAN7800DeviceIsLinkUp>
   16170:	e2900000 	adds	r0, r0, #0
   16174:	13a00001 	movne	r0, #1
   16178:	e8bd8010 	pop	{r4, pc}
   1617c:	e3a020f2 	mov	r2, #242	; 0xf2
   16180:	e59f102c 	ldr	r1, [pc, #44]	; 161b4 <USPiEthernetIsLinkUp+0x84>
   16184:	e59f002c 	ldr	r0, [pc, #44]	; 161b8 <USPiEthernetIsLinkUp+0x88>
   16188:	eb00437f 	bl	26f8c <uspi_assertion_failed>
   1618c:	e5943000 	ldr	r3, [r4]
   16190:	eaffffeb 	b	16144 <USPiEthernetIsLinkUp+0x14>
   16194:	e59f0020 	ldr	r0, [pc, #32]	; 161bc <USPiEthernetIsLinkUp+0x8c>
   16198:	e3a020f9 	mov	r2, #249	; 0xf9
   1619c:	e59f1010 	ldr	r1, [pc, #16]	; 161b4 <USPiEthernetIsLinkUp+0x84>
   161a0:	eb004379 	bl	26f8c <uspi_assertion_failed>
   161a4:	e5943000 	ldr	r3, [r4]
   161a8:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   161ac:	eaffffea 	b	1615c <USPiEthernetIsLinkUp+0x2c>
   161b0:	0002d150 	andeq	sp, r2, r0, asr r1
   161b4:	0002990c 	andeq	r9, r2, ip, lsl #18
   161b8:	0002992c 	andeq	r9, r2, ip, lsr #18
   161bc:	00029a00 	andeq	r9, r2, r0, lsl #20

000161c0 <USPiSendFrame>:
   161c0:	e92d4070 	push	{r4, r5, r6, lr}
   161c4:	e59f408c 	ldr	r4, [pc, #140]	; 16258 <USPiSendFrame+0x98>
   161c8:	e1a05000 	mov	r5, r0
   161cc:	e5943000 	ldr	r3, [r4]
   161d0:	e1a06001 	mov	r6, r1
   161d4:	e3530000 	cmp	r3, #0
   161d8:	0a000011 	beq	16224 <USPiSendFrame+0x64>
   161dc:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   161e0:	e3500000 	cmp	r0, #0
   161e4:	1a000008 	bne	1620c <USPiSendFrame+0x4c>
   161e8:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   161ec:	e3500000 	cmp	r0, #0
   161f0:	0a000011 	beq	1623c <USPiSendFrame+0x7c>
   161f4:	e1a02006 	mov	r2, r6
   161f8:	e1a01005 	mov	r1, r5
   161fc:	eb001e76 	bl	1dbdc <SMSC951xDeviceSendFrame>
   16200:	e2900000 	adds	r0, r0, #0
   16204:	13a00001 	movne	r0, #1
   16208:	e8bd8070 	pop	{r4, r5, r6, pc}
   1620c:	e1a02006 	mov	r2, r6
   16210:	e1a01005 	mov	r1, r5
   16214:	eb0021bf 	bl	1e918 <LAN7800DeviceSendFrame>
   16218:	e2900000 	adds	r0, r0, #0
   1621c:	13a00001 	movne	r0, #1
   16220:	e8bd8070 	pop	{r4, r5, r6, pc}
   16224:	e3a020ff 	mov	r2, #255	; 0xff
   16228:	e59f102c 	ldr	r1, [pc, #44]	; 1625c <USPiSendFrame+0x9c>
   1622c:	e59f002c 	ldr	r0, [pc, #44]	; 16260 <USPiSendFrame+0xa0>
   16230:	eb004355 	bl	26f8c <uspi_assertion_failed>
   16234:	e5943000 	ldr	r3, [r4]
   16238:	eaffffe7 	b	161dc <USPiSendFrame+0x1c>
   1623c:	e59f0020 	ldr	r0, [pc, #32]	; 16264 <USPiSendFrame+0xa4>
   16240:	e59f2020 	ldr	r2, [pc, #32]	; 16268 <USPiSendFrame+0xa8>
   16244:	e59f1010 	ldr	r1, [pc, #16]	; 1625c <USPiSendFrame+0x9c>
   16248:	eb00434f 	bl	26f8c <uspi_assertion_failed>
   1624c:	e5943000 	ldr	r3, [r4]
   16250:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   16254:	eaffffe6 	b	161f4 <USPiSendFrame+0x34>
   16258:	0002d150 	andeq	sp, r2, r0, asr r1
   1625c:	0002990c 	andeq	r9, r2, ip, lsl #18
   16260:	0002992c 	andeq	r9, r2, ip, lsr #18
   16264:	00029a00 	andeq	r9, r2, r0, lsl #20
   16268:	00000106 	andeq	r0, r0, r6, lsl #2

0001626c <USPiReceiveFrame>:
   1626c:	e92d4070 	push	{r4, r5, r6, lr}
   16270:	e59f408c 	ldr	r4, [pc, #140]	; 16304 <USPiReceiveFrame+0x98>
   16274:	e1a05000 	mov	r5, r0
   16278:	e5943000 	ldr	r3, [r4]
   1627c:	e1a06001 	mov	r6, r1
   16280:	e3530000 	cmp	r3, #0
   16284:	0a000011 	beq	162d0 <USPiReceiveFrame+0x64>
   16288:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   1628c:	e3500000 	cmp	r0, #0
   16290:	1a000008 	bne	162b8 <USPiReceiveFrame+0x4c>
   16294:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   16298:	e3500000 	cmp	r0, #0
   1629c:	0a000011 	beq	162e8 <USPiReceiveFrame+0x7c>
   162a0:	e1a02006 	mov	r2, r6
   162a4:	e1a01005 	mov	r1, r5
   162a8:	eb001e8c 	bl	1dce0 <SMSC951xDeviceReceiveFrame>
   162ac:	e2900000 	adds	r0, r0, #0
   162b0:	13a00001 	movne	r0, #1
   162b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   162b8:	e1a02006 	mov	r2, r6
   162bc:	e1a01005 	mov	r1, r5
   162c0:	eb0021d7 	bl	1ea24 <LAN7800DeviceReceiveFrame>
   162c4:	e2900000 	adds	r0, r0, #0
   162c8:	13a00001 	movne	r0, #1
   162cc:	e8bd8070 	pop	{r4, r5, r6, pc}
   162d0:	e3a02f43 	mov	r2, #268	; 0x10c
   162d4:	e59f102c 	ldr	r1, [pc, #44]	; 16308 <USPiReceiveFrame+0x9c>
   162d8:	e59f002c 	ldr	r0, [pc, #44]	; 1630c <USPiReceiveFrame+0xa0>
   162dc:	eb00432a 	bl	26f8c <uspi_assertion_failed>
   162e0:	e5943000 	ldr	r3, [r4]
   162e4:	eaffffe7 	b	16288 <USPiReceiveFrame+0x1c>
   162e8:	e59f0020 	ldr	r0, [pc, #32]	; 16310 <USPiReceiveFrame+0xa4>
   162ec:	e59f2020 	ldr	r2, [pc, #32]	; 16314 <USPiReceiveFrame+0xa8>
   162f0:	e59f1010 	ldr	r1, [pc, #16]	; 16308 <USPiReceiveFrame+0x9c>
   162f4:	eb004324 	bl	26f8c <uspi_assertion_failed>
   162f8:	e5943000 	ldr	r3, [r4]
   162fc:	e59307b0 	ldr	r0, [r3, #1968]	; 0x7b0
   16300:	eaffffe6 	b	162a0 <USPiReceiveFrame+0x34>
   16304:	0002d150 	andeq	sp, r2, r0, asr r1
   16308:	0002990c 	andeq	r9, r2, ip, lsl #18
   1630c:	0002992c 	andeq	r9, r2, ip, lsr #18
   16310:	00029a00 	andeq	r9, r2, r0, lsl #20
   16314:	00000113 	andeq	r0, r0, r3, lsl r1

00016318 <USPiGamePadAvailable>:
   16318:	e92d4010 	push	{r4, lr}
   1631c:	e59f4048 	ldr	r4, [pc, #72]	; 1636c <USPiGamePadAvailable+0x54>
   16320:	e5943000 	ldr	r3, [r4]
   16324:	e3530000 	cmp	r3, #0
   16328:	0a000009 	beq	16354 <USPiGamePadAvailable+0x3c>
   1632c:	e3a00000 	mov	r0, #0
   16330:	e2833e7b 	add	r3, r3, #1968	; 0x7b0
   16334:	e2833008 	add	r3, r3, #8
   16338:	e4932004 	ldr	r2, [r3], #4
   1633c:	e3520000 	cmp	r2, #0
   16340:	08bd8010 	popeq	{r4, pc}
   16344:	e2800001 	add	r0, r0, #1
   16348:	e3500004 	cmp	r0, #4
   1634c:	1afffff9 	bne	16338 <USPiGamePadAvailable+0x20>
   16350:	e8bd8010 	pop	{r4, pc}
   16354:	e59f2014 	ldr	r2, [pc, #20]	; 16370 <USPiGamePadAvailable+0x58>
   16358:	e59f1014 	ldr	r1, [pc, #20]	; 16374 <USPiGamePadAvailable+0x5c>
   1635c:	e59f0014 	ldr	r0, [pc, #20]	; 16378 <USPiGamePadAvailable+0x60>
   16360:	eb004309 	bl	26f8c <uspi_assertion_failed>
   16364:	e5943000 	ldr	r3, [r4]
   16368:	eaffffef 	b	1632c <USPiGamePadAvailable+0x14>
   1636c:	0002d150 	andeq	sp, r2, r0, asr r1
   16370:	00000119 	andeq	r0, r0, r9, lsl r1
   16374:	0002990c 	andeq	r9, r2, ip, lsl #18
   16378:	0002992c 	andeq	r9, r2, ip, lsr #18

0001637c <USPiGamePadRegisterStatusHandler>:
   1637c:	e92d4070 	push	{r4, r5, r6, lr}
   16380:	e59f5058 	ldr	r5, [pc, #88]	; 163e0 <USPiGamePadRegisterStatusHandler+0x64>
   16384:	e1a06000 	mov	r6, r0
   16388:	e5952000 	ldr	r2, [r5]
   1638c:	e3520000 	cmp	r2, #0
   16390:	0a00000c 	beq	163c8 <USPiGamePadRegisterStatusHandler+0x4c>
   16394:	e3a04000 	mov	r4, #0
   16398:	e2843f7b 	add	r3, r4, #492	; 0x1ec
   1639c:	e2833002 	add	r3, r3, #2
   163a0:	e7920103 	ldr	r0, [r2, r3, lsl #2]
   163a4:	e2844001 	add	r4, r4, #1
   163a8:	e3500000 	cmp	r0, #0
   163ac:	0a000001 	beq	163b8 <USPiGamePadRegisterStatusHandler+0x3c>
   163b0:	e1a01006 	mov	r1, r6
   163b4:	eb00352c 	bl	2386c <USBGamePadDeviceRegisterStatusHandler>
   163b8:	e3540004 	cmp	r4, #4
   163bc:	08bd8070 	popeq	{r4, r5, r6, pc}
   163c0:	e5952000 	ldr	r2, [r5]
   163c4:	eafffff3 	b	16398 <USPiGamePadRegisterStatusHandler+0x1c>
   163c8:	e59f2014 	ldr	r2, [pc, #20]	; 163e4 <USPiGamePadRegisterStatusHandler+0x68>
   163cc:	e59f1014 	ldr	r1, [pc, #20]	; 163e8 <USPiGamePadRegisterStatusHandler+0x6c>
   163d0:	e59f0014 	ldr	r0, [pc, #20]	; 163ec <USPiGamePadRegisterStatusHandler+0x70>
   163d4:	eb0042ec 	bl	26f8c <uspi_assertion_failed>
   163d8:	e5952000 	ldr	r2, [r5]
   163dc:	eaffffec 	b	16394 <USPiGamePadRegisterStatusHandler+0x18>
   163e0:	0002d150 	andeq	sp, r2, r0, asr r1
   163e4:	00000129 	andeq	r0, r0, r9, lsr #2
   163e8:	0002990c 	andeq	r9, r2, ip, lsl #18
   163ec:	0002992c 	andeq	r9, r2, ip, lsr #18

000163f0 <USPiGamePadGetStatus>:
   163f0:	e92d4070 	push	{r4, r5, r6, lr}
   163f4:	e59f5060 	ldr	r5, [pc, #96]	; 1645c <USPiGamePadGetStatus+0x6c>
   163f8:	e1a04000 	mov	r4, r0
   163fc:	e5953000 	ldr	r3, [r5]
   16400:	e3530000 	cmp	r3, #0
   16404:	0a00000c 	beq	1643c <USPiGamePadGetStatus+0x4c>
   16408:	e3540003 	cmp	r4, #3
   1640c:	8a000010 	bhi	16454 <USPiGamePadGetStatus+0x64>
   16410:	e2844f7b 	add	r4, r4, #492	; 0x1ec
   16414:	e5953000 	ldr	r3, [r5]
   16418:	e2844002 	add	r4, r4, #2
   1641c:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   16420:	e3500000 	cmp	r0, #0
   16424:	08bd8070 	popeq	{r4, r5, r6, pc}
   16428:	eb003528 	bl	238d0 <USBGamePadDeviceGetReport>
   1642c:	e5953000 	ldr	r3, [r5]
   16430:	e7930104 	ldr	r0, [r3, r4, lsl #2]
   16434:	e280001c 	add	r0, r0, #28
   16438:	e8bd8070 	pop	{r4, r5, r6, pc}
   1643c:	e59f201c 	ldr	r2, [pc, #28]	; 16460 <USPiGamePadGetStatus+0x70>
   16440:	e59f101c 	ldr	r1, [pc, #28]	; 16464 <USPiGamePadGetStatus+0x74>
   16444:	e59f001c 	ldr	r0, [pc, #28]	; 16468 <USPiGamePadGetStatus+0x78>
   16448:	eb0042cf 	bl	26f8c <uspi_assertion_failed>
   1644c:	e3540003 	cmp	r4, #3
   16450:	9affffee 	bls	16410 <USPiGamePadGetStatus+0x20>
   16454:	e3a00000 	mov	r0, #0
   16458:	e8bd8070 	pop	{r4, r5, r6, pc}
   1645c:	0002d150 	andeq	sp, r2, r0, asr r1
   16460:	00000137 	andeq	r0, r0, r7, lsr r1
   16464:	0002990c 	andeq	r9, r2, ip, lsl #18
   16468:	0002992c 	andeq	r9, r2, ip, lsr #18

0001646c <USPiMIDIAvailable>:
   1646c:	e92d4010 	push	{r4, lr}
   16470:	e59f4030 	ldr	r4, [pc, #48]	; 164a8 <USPiMIDIAvailable+0x3c>
   16474:	e5943000 	ldr	r3, [r4]
   16478:	e3530000 	cmp	r3, #0
   1647c:	0a000003 	beq	16490 <USPiMIDIAvailable+0x24>
   16480:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   16484:	e2900000 	adds	r0, r0, #0
   16488:	13a00001 	movne	r0, #1
   1648c:	e8bd8010 	pop	{r4, pc}
   16490:	e59f2014 	ldr	r2, [pc, #20]	; 164ac <USPiMIDIAvailable+0x40>
   16494:	e59f1014 	ldr	r1, [pc, #20]	; 164b0 <USPiMIDIAvailable+0x44>
   16498:	e59f0014 	ldr	r0, [pc, #20]	; 164b4 <USPiMIDIAvailable+0x48>
   1649c:	eb0042ba 	bl	26f8c <uspi_assertion_failed>
   164a0:	e5943000 	ldr	r3, [r4]
   164a4:	eafffff5 	b	16480 <USPiMIDIAvailable+0x14>
   164a8:	0002d150 	andeq	sp, r2, r0, asr r1
   164ac:	00000146 	andeq	r0, r0, r6, asr #2
   164b0:	0002990c 	andeq	r9, r2, ip, lsl #18
   164b4:	0002992c 	andeq	r9, r2, ip, lsr #18

000164b8 <USPiMIDIRegisterPacketHandler>:
   164b8:	e92d4070 	push	{r4, r5, r6, lr}
   164bc:	e59f4068 	ldr	r4, [pc, #104]	; 1652c <USPiMIDIRegisterPacketHandler+0x74>
   164c0:	e1a05000 	mov	r5, r0
   164c4:	e5943000 	ldr	r3, [r4]
   164c8:	e3530000 	cmp	r3, #0
   164cc:	0a000005 	beq	164e8 <USPiMIDIRegisterPacketHandler+0x30>
   164d0:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   164d4:	e3500000 	cmp	r0, #0
   164d8:	0a00000a 	beq	16508 <USPiMIDIRegisterPacketHandler+0x50>
   164dc:	e1a01005 	mov	r1, r5
   164e0:	e8bd4070 	pop	{r4, r5, r6, lr}
   164e4:	ea00385d 	b	24660 <USBMIDIDeviceRegisterPacketHandler>
   164e8:	e59f0040 	ldr	r0, [pc, #64]	; 16530 <USPiMIDIRegisterPacketHandler+0x78>
   164ec:	e3a02f53 	mov	r2, #332	; 0x14c
   164f0:	e59f103c 	ldr	r1, [pc, #60]	; 16534 <USPiMIDIRegisterPacketHandler+0x7c>
   164f4:	eb0042a4 	bl	26f8c <uspi_assertion_failed>
   164f8:	e5943000 	ldr	r3, [r4]
   164fc:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   16500:	e3500000 	cmp	r0, #0
   16504:	1afffff4 	bne	164dc <USPiMIDIRegisterPacketHandler+0x24>
   16508:	e59f1024 	ldr	r1, [pc, #36]	; 16534 <USPiMIDIRegisterPacketHandler+0x7c>
   1650c:	e59f0024 	ldr	r0, [pc, #36]	; 16538 <USPiMIDIRegisterPacketHandler+0x80>
   16510:	e59f2024 	ldr	r2, [pc, #36]	; 1653c <USPiMIDIRegisterPacketHandler+0x84>
   16514:	eb00429c 	bl	26f8c <uspi_assertion_failed>
   16518:	e5943000 	ldr	r3, [r4]
   1651c:	e1a01005 	mov	r1, r5
   16520:	e8bd4070 	pop	{r4, r5, r6, lr}
   16524:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   16528:	ea00384c 	b	24660 <USBMIDIDeviceRegisterPacketHandler>
   1652c:	0002d150 	andeq	sp, r2, r0, asr r1
   16530:	0002992c 	andeq	r9, r2, ip, lsr #18
   16534:	0002990c 	andeq	r9, r2, ip, lsl #18
   16538:	00029a18 	andeq	r9, r2, r8, lsl sl
   1653c:	0000014d 	andeq	r0, r0, sp, asr #2

00016540 <USPiDeviceGetInformation>:
   16540:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   16544:	e59f71a8 	ldr	r7, [pc, #424]	; 166f4 <USPiDeviceGetInformation+0x1b4>
   16548:	e1a04000 	mov	r4, r0
   1654c:	e5973000 	ldr	r3, [r7]
   16550:	e1a06001 	mov	r6, r1
   16554:	e3530000 	cmp	r3, #0
   16558:	e1a05002 	mov	r5, r2
   1655c:	0a000050 	beq	166a4 <USPiDeviceGetInformation+0x164>
   16560:	e2440001 	sub	r0, r4, #1
   16564:	e3500005 	cmp	r0, #5
   16568:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
   1656c:	ea000005 	b	16588 <USPiDeviceGetInformation+0x48>
   16570:	00016628 	andeq	r6, r1, r8, lsr #12
   16574:	0001663c 	andeq	r6, r1, ip, lsr r6
   16578:	00016650 	andeq	r6, r1, r0, asr r6
   1657c:	00016668 	andeq	r6, r1, r8, ror #12
   16580:	00016688 	andeq	r6, r1, r8, lsl #13
   16584:	00016594 	muleq	r1, r4, r5
   16588:	e3a03000 	mov	r3, #0
   1658c:	e1a00003 	mov	r0, r3
   16590:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   16594:	e3560000 	cmp	r6, #0
   16598:	1afffffa 	bne	16588 <USPiDeviceGetInformation+0x48>
   1659c:	e5973000 	ldr	r3, [r7]
   165a0:	e59307c8 	ldr	r0, [r3, #1992]	; 0x7c8
   165a4:	e3500000 	cmp	r0, #0
   165a8:	01a03000 	moveq	r3, r0
   165ac:	0afffff6 	beq	1658c <USPiDeviceGetInformation+0x4c>
   165b0:	eb001bcf 	bl	1d4f4 <USBFunctionGetDevice>
   165b4:	e2506000 	subs	r6, r0, #0
   165b8:	0a000048 	beq	166e0 <USPiDeviceGetInformation+0x1a0>
   165bc:	e1a00006 	mov	r0, r6
   165c0:	eb001062 	bl	1a750 <USBDeviceGetDeviceDescriptor>
   165c4:	e2504000 	subs	r4, r0, #0
   165c8:	0a00003f 	beq	166cc <USPiDeviceGetInformation+0x18c>
   165cc:	e3550000 	cmp	r5, #0
   165d0:	0a000038 	beq	166b8 <USPiDeviceGetInformation+0x178>
   165d4:	e5d42009 	ldrb	r2, [r4, #9]
   165d8:	e5d43008 	ldrb	r3, [r4, #8]
   165dc:	e2860020 	add	r0, r6, #32
   165e0:	e1833402 	orr	r3, r3, r2, lsl #8
   165e4:	e1c530b0 	strh	r3, [r5]
   165e8:	e5d4200b 	ldrb	r2, [r4, #11]
   165ec:	e5d4300a 	ldrb	r3, [r4, #10]
   165f0:	e1833402 	orr	r3, r3, r2, lsl #8
   165f4:	e1c530b2 	strh	r3, [r5, #2]
   165f8:	e5d4200d 	ldrb	r2, [r4, #13]
   165fc:	e5d4300c 	ldrb	r3, [r4, #12]
   16600:	e1833402 	orr	r3, r3, r2, lsl #8
   16604:	e1c530b4 	strh	r3, [r5, #4]
   16608:	eb00363a 	bl	23ef8 <USBStringGet>
   1660c:	e5850008 	str	r0, [r5, #8]
   16610:	e286002c 	add	r0, r6, #44	; 0x2c
   16614:	eb003637 	bl	23ef8 <USBStringGet>
   16618:	e3a03001 	mov	r3, #1
   1661c:	e585000c 	str	r0, [r5, #12]
   16620:	e1a00003 	mov	r0, r3
   16624:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   16628:	e3560000 	cmp	r6, #0
   1662c:	1affffd5 	bne	16588 <USPiDeviceGetInformation+0x48>
   16630:	e5973000 	ldr	r3, [r7]
   16634:	e5930798 	ldr	r0, [r3, #1944]	; 0x798
   16638:	eaffffd9 	b	165a4 <USPiDeviceGetInformation+0x64>
   1663c:	e3560000 	cmp	r6, #0
   16640:	1affffd0 	bne	16588 <USPiDeviceGetInformation+0x48>
   16644:	e5973000 	ldr	r3, [r7]
   16648:	e593079c 	ldr	r0, [r3, #1948]	; 0x79c
   1664c:	eaffffd4 	b	165a4 <USPiDeviceGetInformation+0x64>
   16650:	e3560003 	cmp	r6, #3
   16654:	8affffcb 	bhi	16588 <USPiDeviceGetInformation+0x48>
   16658:	e5973000 	ldr	r3, [r7]
   1665c:	e2866f7a 	add	r6, r6, #488	; 0x1e8
   16660:	e7930106 	ldr	r0, [r3, r6, lsl #2]
   16664:	eaffffce 	b	165a4 <USPiDeviceGetInformation+0x64>
   16668:	e3560000 	cmp	r6, #0
   1666c:	1affffc5 	bne	16588 <USPiDeviceGetInformation+0x48>
   16670:	e5973000 	ldr	r3, [r7]
   16674:	e59307b4 	ldr	r0, [r3, #1972]	; 0x7b4
   16678:	e3500000 	cmp	r0, #0
   1667c:	059307b0 	ldreq	r0, [r3, #1968]	; 0x7b0
   16680:	1affffca 	bne	165b0 <USPiDeviceGetInformation+0x70>
   16684:	eaffffc6 	b	165a4 <USPiDeviceGetInformation+0x64>
   16688:	e3560003 	cmp	r6, #3
   1668c:	8affffbd 	bhi	16588 <USPiDeviceGetInformation+0x48>
   16690:	e2866f7b 	add	r6, r6, #492	; 0x1ec
   16694:	e5973000 	ldr	r3, [r7]
   16698:	e2866002 	add	r6, r6, #2
   1669c:	e7930106 	ldr	r0, [r3, r6, lsl #2]
   166a0:	eaffffbf 	b	165a4 <USPiDeviceGetInformation+0x64>
   166a4:	e59f204c 	ldr	r2, [pc, #76]	; 166f8 <USPiDeviceGetInformation+0x1b8>
   166a8:	e59f104c 	ldr	r1, [pc, #76]	; 166fc <USPiDeviceGetInformation+0x1bc>
   166ac:	e59f004c 	ldr	r0, [pc, #76]	; 16700 <USPiDeviceGetInformation+0x1c0>
   166b0:	eb004235 	bl	26f8c <uspi_assertion_failed>
   166b4:	eaffffa9 	b	16560 <USPiDeviceGetInformation+0x20>
   166b8:	e59f2044 	ldr	r2, [pc, #68]	; 16704 <USPiDeviceGetInformation+0x1c4>
   166bc:	e59f1038 	ldr	r1, [pc, #56]	; 166fc <USPiDeviceGetInformation+0x1bc>
   166c0:	e59f0040 	ldr	r0, [pc, #64]	; 16708 <USPiDeviceGetInformation+0x1c8>
   166c4:	eb004230 	bl	26f8c <uspi_assertion_failed>
   166c8:	eaffffc1 	b	165d4 <USPiDeviceGetInformation+0x94>
   166cc:	e59f2038 	ldr	r2, [pc, #56]	; 1670c <USPiDeviceGetInformation+0x1cc>
   166d0:	e59f1024 	ldr	r1, [pc, #36]	; 166fc <USPiDeviceGetInformation+0x1bc>
   166d4:	e59f0034 	ldr	r0, [pc, #52]	; 16710 <USPiDeviceGetInformation+0x1d0>
   166d8:	eb00422b 	bl	26f8c <uspi_assertion_failed>
   166dc:	eaffffba 	b	165cc <USPiDeviceGetInformation+0x8c>
   166e0:	e3a02f65 	mov	r2, #404	; 0x194
   166e4:	e59f1010 	ldr	r1, [pc, #16]	; 166fc <USPiDeviceGetInformation+0x1bc>
   166e8:	e59f0024 	ldr	r0, [pc, #36]	; 16714 <USPiDeviceGetInformation+0x1d4>
   166ec:	eb004226 	bl	26f8c <uspi_assertion_failed>
   166f0:	eaffffb1 	b	165bc <USPiDeviceGetInformation+0x7c>
   166f4:	0002d150 	andeq	sp, r2, r0, asr r1
   166f8:	00000153 	andeq	r0, r0, r3, asr r1
   166fc:	0002990c 	andeq	r9, r2, ip, lsl #18
   16700:	0002992c 	andeq	r9, r2, ip, lsr #18
   16704:	00000199 	muleq	r0, r9, r1
   16708:	00029a4c 	andeq	r9, r2, ip, asr #20
   1670c:	00000197 	muleq	r0, r7, r1
   16710:	00029a40 	andeq	r9, r2, r0, asr #20
   16714:	00029a30 	andeq	r9, r2, r0, lsr sl

00016718 <DWHCIDeviceCompletionRoutine>:
   16718:	e92d4010 	push	{r4, lr}
   1671c:	e2524000 	subs	r4, r2, #0
   16720:	0a000002 	beq	16730 <DWHCIDeviceCompletionRoutine+0x18>
   16724:	e3a03000 	mov	r3, #0
   16728:	e5843788 	str	r3, [r4, #1928]	; 0x788
   1672c:	e8bd8010 	pop	{r4, pc}
   16730:	e59f200c 	ldr	r2, [pc, #12]	; 16744 <DWHCIDeviceCompletionRoutine+0x2c>
   16734:	e59f100c 	ldr	r1, [pc, #12]	; 16748 <DWHCIDeviceCompletionRoutine+0x30>
   16738:	e59f000c 	ldr	r0, [pc, #12]	; 1674c <DWHCIDeviceCompletionRoutine+0x34>
   1673c:	eb004212 	bl	26f8c <uspi_assertion_failed>
   16740:	eafffff7 	b	16724 <DWHCIDeviceCompletionRoutine+0xc>
   16744:	000002da 	ldrdeq	r0, [r0], -sl
   16748:	00029a58 	andeq	r9, r2, r8, asr sl
   1674c:	00029a68 	andeq	r9, r2, r8, ror #20

00016750 <DWHCIDevice>:
   16750:	e92d4010 	push	{r4, lr}
   16754:	e2504000 	subs	r4, r0, #0
   16758:	0a000008 	beq	16780 <DWHCIDevice+0x30>
   1675c:	e3a03000 	mov	r3, #0
   16760:	e2840d1e 	add	r0, r4, #1920	; 0x780
   16764:	e5843004 	str	r3, [r4, #4]
   16768:	e5843000 	str	r3, [r4]
   1676c:	e5843788 	str	r3, [r4, #1928]	; 0x788
   16770:	e1a01004 	mov	r1, r4
   16774:	e8bd4010 	pop	{r4, lr}
   16778:	e280000c 	add	r0, r0, #12
   1677c:	ea002e64 	b	22114 <DWHCIRootPort>
   16780:	e3a0205f 	mov	r2, #95	; 0x5f
   16784:	e59f1008 	ldr	r1, [pc, #8]	; 16794 <DWHCIDevice+0x44>
   16788:	e59f0008 	ldr	r0, [pc, #8]	; 16798 <DWHCIDevice+0x48>
   1678c:	eb0041fe 	bl	26f8c <uspi_assertion_failed>
   16790:	eafffff1 	b	1675c <DWHCIDevice+0xc>
   16794:	00029a58 	andeq	r9, r2, r8, asr sl
   16798:	00029a68 	andeq	r9, r2, r8, ror #20

0001679c <_DWHCIDevice>:
   1679c:	e2800d1e 	add	r0, r0, #1920	; 0x780
   167a0:	e280000c 	add	r0, r0, #12
   167a4:	ea002e70 	b	2216c <_DWHCIRootPort>

000167a8 <DWHCIDeviceEnableGlobalInterrupts>:
   167a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   167ac:	e3500000 	cmp	r0, #0
   167b0:	e24dd014 	sub	sp, sp, #20
   167b4:	0a00000d 	beq	167f0 <DWHCIDeviceEnableGlobalInterrupts+0x48>
   167b8:	e28d0004 	add	r0, sp, #4
   167bc:	e59f1040 	ldr	r1, [pc, #64]	; 16804 <DWHCIDeviceEnableGlobalInterrupts+0x5c>
   167c0:	eb00099b 	bl	18e34 <DWHCIRegister>
   167c4:	e28d0004 	add	r0, sp, #4
   167c8:	eb0009c5 	bl	18ee4 <DWHCIRegisterRead>
   167cc:	e3a01001 	mov	r1, #1
   167d0:	e28d0004 	add	r0, sp, #4
   167d4:	eb000a3f 	bl	190d8 <DWHCIRegisterOr>
   167d8:	e28d0004 	add	r0, sp, #4
   167dc:	eb0009d0 	bl	18f24 <DWHCIRegisterWrite>
   167e0:	e28d0004 	add	r0, sp, #4
   167e4:	eb0009b1 	bl	18eb0 <_DWHCIRegister>
   167e8:	e28dd014 	add	sp, sp, #20
   167ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   167f0:	e59f2010 	ldr	r2, [pc, #16]	; 16808 <DWHCIDeviceEnableGlobalInterrupts+0x60>
   167f4:	e59f1010 	ldr	r1, [pc, #16]	; 1680c <DWHCIDeviceEnableGlobalInterrupts+0x64>
   167f8:	e59f0010 	ldr	r0, [pc, #16]	; 16810 <DWHCIDeviceEnableGlobalInterrupts+0x68>
   167fc:	eb0041e2 	bl	26f8c <uspi_assertion_failed>
   16800:	eaffffec 	b	167b8 <DWHCIDeviceEnableGlobalInterrupts+0x10>
   16804:	20980008 	addscs	r0, r8, r8
   16808:	0000023f 	andeq	r0, r0, pc, lsr r2
   1680c:	00029a58 	andeq	r9, r2, r8, asr sl
   16810:	00029a68 	andeq	r9, r2, r8, ror #20

00016814 <DWHCIDeviceEnableCommonInterrupts>:
   16814:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   16818:	e3500000 	cmp	r0, #0
   1681c:	e24dd014 	sub	sp, sp, #20
   16820:	0a00000a 	beq	16850 <DWHCIDeviceEnableCommonInterrupts+0x3c>
   16824:	e59f1038 	ldr	r1, [pc, #56]	; 16864 <DWHCIDeviceEnableCommonInterrupts+0x50>
   16828:	e28d0004 	add	r0, sp, #4
   1682c:	eb000980 	bl	18e34 <DWHCIRegister>
   16830:	e28d0004 	add	r0, sp, #4
   16834:	eb000a92 	bl	19284 <DWHCIRegisterSetAll>
   16838:	e28d0004 	add	r0, sp, #4
   1683c:	eb0009b8 	bl	18f24 <DWHCIRegisterWrite>
   16840:	e28d0004 	add	r0, sp, #4
   16844:	eb000999 	bl	18eb0 <_DWHCIRegister>
   16848:	e28dd014 	add	sp, sp, #20
   1684c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   16850:	e3a02f93 	mov	r2, #588	; 0x24c
   16854:	e59f100c 	ldr	r1, [pc, #12]	; 16868 <DWHCIDeviceEnableCommonInterrupts+0x54>
   16858:	e59f000c 	ldr	r0, [pc, #12]	; 1686c <DWHCIDeviceEnableCommonInterrupts+0x58>
   1685c:	eb0041ca 	bl	26f8c <uspi_assertion_failed>
   16860:	eaffffef 	b	16824 <DWHCIDeviceEnableCommonInterrupts+0x10>
   16864:	20980014 	addscs	r0, r8, r4, lsl r0
   16868:	00029a58 	andeq	r9, r2, r8, asr sl
   1686c:	00029a68 	andeq	r9, r2, r8, ror #20

00016870 <DWHCIDeviceEnableHostInterrupts>:
   16870:	e92d4010 	push	{r4, lr}
   16874:	e2504000 	subs	r4, r0, #0
   16878:	e24dd010 	sub	sp, sp, #16
   1687c:	0a000012 	beq	168cc <DWHCIDeviceEnableHostInterrupts+0x5c>
   16880:	e3a02000 	mov	r2, #0
   16884:	e59f1054 	ldr	r1, [pc, #84]	; 168e0 <DWHCIDeviceEnableHostInterrupts+0x70>
   16888:	e28d0004 	add	r0, sp, #4
   1688c:	eb000976 	bl	18e6c <DWHCIRegister2>
   16890:	e28d0004 	add	r0, sp, #4
   16894:	eb0009a2 	bl	18f24 <DWHCIRegisterWrite>
   16898:	e1a00004 	mov	r0, r4
   1689c:	ebffffdc 	bl	16814 <DWHCIDeviceEnableCommonInterrupts>
   168a0:	e28d0004 	add	r0, sp, #4
   168a4:	eb00098e 	bl	18ee4 <DWHCIRegisterRead>
   168a8:	e3a01402 	mov	r1, #33554432	; 0x2000000
   168ac:	e28d0004 	add	r0, sp, #4
   168b0:	eb000a08 	bl	190d8 <DWHCIRegisterOr>
   168b4:	e28d0004 	add	r0, sp, #4
   168b8:	eb000999 	bl	18f24 <DWHCIRegisterWrite>
   168bc:	e28d0004 	add	r0, sp, #4
   168c0:	eb00097a 	bl	18eb0 <_DWHCIRegister>
   168c4:	e28dd010 	add	sp, sp, #16
   168c8:	e8bd8010 	pop	{r4, pc}
   168cc:	e3a02f99 	mov	r2, #612	; 0x264
   168d0:	e59f100c 	ldr	r1, [pc, #12]	; 168e4 <DWHCIDeviceEnableHostInterrupts+0x74>
   168d4:	e59f000c 	ldr	r0, [pc, #12]	; 168e8 <DWHCIDeviceEnableHostInterrupts+0x78>
   168d8:	eb0041ab 	bl	26f8c <uspi_assertion_failed>
   168dc:	eaffffe7 	b	16880 <DWHCIDeviceEnableHostInterrupts+0x10>
   168e0:	20980018 	addscs	r0, r8, r8, lsl r0
   168e4:	00029a58 	andeq	r9, r2, r8, asr sl
   168e8:	00029a68 	andeq	r9, r2, r8, ror #20

000168ec <DWHCIDeviceEnableChannelInterrupt>:
   168ec:	e92d4010 	push	{r4, lr}
   168f0:	e3500000 	cmp	r0, #0
   168f4:	e24dd010 	sub	sp, sp, #16
   168f8:	e1a04001 	mov	r4, r1
   168fc:	0a000010 	beq	16944 <DWHCIDeviceEnableChannelInterrupt+0x58>
   16900:	e28d0004 	add	r0, sp, #4
   16904:	e59f104c 	ldr	r1, [pc, #76]	; 16958 <DWHCIDeviceEnableChannelInterrupt+0x6c>
   16908:	eb000949 	bl	18e34 <DWHCIRegister>
   1690c:	eb00340e 	bl	2394c <uspi_EnterCritical>
   16910:	e28d0004 	add	r0, sp, #4
   16914:	eb000972 	bl	18ee4 <DWHCIRegisterRead>
   16918:	e3a01001 	mov	r1, #1
   1691c:	e28d0004 	add	r0, sp, #4
   16920:	e1a01411 	lsl	r1, r1, r4
   16924:	eb0009eb 	bl	190d8 <DWHCIRegisterOr>
   16928:	e28d0004 	add	r0, sp, #4
   1692c:	eb00097c 	bl	18f24 <DWHCIRegisterWrite>
   16930:	eb003414 	bl	23988 <uspi_LeaveCritical>
   16934:	e28d0004 	add	r0, sp, #4
   16938:	eb00095c 	bl	18eb0 <_DWHCIRegister>
   1693c:	e28dd010 	add	sp, sp, #16
   16940:	e8bd8010 	pop	{r4, pc}
   16944:	e3a02f9e 	mov	r2, #632	; 0x278
   16948:	e59f100c 	ldr	r1, [pc, #12]	; 1695c <DWHCIDeviceEnableChannelInterrupt+0x70>
   1694c:	e59f000c 	ldr	r0, [pc, #12]	; 16960 <DWHCIDeviceEnableChannelInterrupt+0x74>
   16950:	eb00418d 	bl	26f8c <uspi_assertion_failed>
   16954:	eaffffe9 	b	16900 <DWHCIDeviceEnableChannelInterrupt+0x14>
   16958:	20980418 	addscs	r0, r8, r8, lsl r4
   1695c:	00029a58 	andeq	r9, r2, r8, asr sl
   16960:	00029a68 	andeq	r9, r2, r8, ror #20

00016964 <DWHCIDeviceDisableChannelInterrupt>:
   16964:	e92d4010 	push	{r4, lr}
   16968:	e3500000 	cmp	r0, #0
   1696c:	e24dd010 	sub	sp, sp, #16
   16970:	e1a04001 	mov	r4, r1
   16974:	0a000010 	beq	169bc <DWHCIDeviceDisableChannelInterrupt+0x58>
   16978:	e28d0004 	add	r0, sp, #4
   1697c:	e59f104c 	ldr	r1, [pc, #76]	; 169d0 <DWHCIDeviceDisableChannelInterrupt+0x6c>
   16980:	eb00092b 	bl	18e34 <DWHCIRegister>
   16984:	eb0033f0 	bl	2394c <uspi_EnterCritical>
   16988:	e28d0004 	add	r0, sp, #4
   1698c:	eb000954 	bl	18ee4 <DWHCIRegisterRead>
   16990:	e3a01001 	mov	r1, #1
   16994:	e28d0004 	add	r0, sp, #4
   16998:	e1e01411 	mvn	r1, r1, lsl r4
   1699c:	eb0009b5 	bl	19078 <DWHCIRegisterAnd>
   169a0:	e28d0004 	add	r0, sp, #4
   169a4:	eb00095e 	bl	18f24 <DWHCIRegisterWrite>
   169a8:	eb0033f6 	bl	23988 <uspi_LeaveCritical>
   169ac:	e28d0004 	add	r0, sp, #4
   169b0:	eb00093e 	bl	18eb0 <_DWHCIRegister>
   169b4:	e28dd010 	add	sp, sp, #16
   169b8:	e8bd8010 	pop	{r4, pc}
   169bc:	e59f2010 	ldr	r2, [pc, #16]	; 169d4 <DWHCIDeviceDisableChannelInterrupt+0x70>
   169c0:	e59f1010 	ldr	r1, [pc, #16]	; 169d8 <DWHCIDeviceDisableChannelInterrupt+0x74>
   169c4:	e59f0010 	ldr	r0, [pc, #16]	; 169dc <DWHCIDeviceDisableChannelInterrupt+0x78>
   169c8:	eb00416f 	bl	26f8c <uspi_assertion_failed>
   169cc:	eaffffe9 	b	16978 <DWHCIDeviceDisableChannelInterrupt+0x14>
   169d0:	20980418 	addscs	r0, r8, r8, lsl r4
   169d4:	0000028a 	andeq	r0, r0, sl, lsl #5
   169d8:	00029a58 	andeq	r9, r2, r8, asr sl
   169dc:	00029a68 	andeq	r9, r2, r8, ror #20

000169e0 <DWHCIDeviceStartChannel>:
   169e0:	e92d4070 	push	{r4, r5, r6, lr}
   169e4:	e2506000 	subs	r6, r0, #0
   169e8:	e24dd048 	sub	sp, sp, #72	; 0x48
   169ec:	e1a04001 	mov	r4, r1
   169f0:	0a0000e3 	beq	16d84 <DWHCIDeviceStartChannel+0x3a4>
   169f4:	e3540000 	cmp	r4, #0
   169f8:	0a0000dc 	beq	16d70 <DWHCIDeviceStartChannel+0x390>
   169fc:	e1a00004 	mov	r0, r4
   16a00:	eb000b13 	bl	19654 <DWHCITransferStageDataGetChannelNumber>
   16a04:	e5963000 	ldr	r3, [r6]
   16a08:	e1a05000 	mov	r5, r0
   16a0c:	e1530000 	cmp	r3, r0
   16a10:	9a0000d1 	bls	16d5c <DWHCIDeviceStartChannel+0x37c>
   16a14:	e1a00004 	mov	r0, r4
   16a18:	e3a01001 	mov	r1, #1
   16a1c:	eb000aef 	bl	195e0 <DWHCITransferStageDataSetSubState>
   16a20:	e59f1380 	ldr	r1, [pc, #896]	; 16da8 <DWHCIDeviceStartChannel+0x3c8>
   16a24:	e1a05285 	lsl	r5, r5, #5
   16a28:	e0851001 	add	r1, r5, r1
   16a2c:	e1a0000d 	mov	r0, sp
   16a30:	eb0008ff 	bl	18e34 <DWHCIRegister>
   16a34:	e1a0000d 	mov	r0, sp
   16a38:	eb000a11 	bl	19284 <DWHCIRegisterSetAll>
   16a3c:	e1a0000d 	mov	r0, sp
   16a40:	eb000937 	bl	18f24 <DWHCIRegisterWrite>
   16a44:	e59f1360 	ldr	r1, [pc, #864]	; 16dac <DWHCIDeviceStartChannel+0x3cc>
   16a48:	e3a02000 	mov	r2, #0
   16a4c:	e0851001 	add	r1, r5, r1
   16a50:	e28d000c 	add	r0, sp, #12
   16a54:	eb000904 	bl	18e6c <DWHCIRegister2>
   16a58:	e1a00004 	mov	r0, r4
   16a5c:	eb000c99 	bl	19cc8 <DWHCITransferStageDataGetBytesToTransfer>
   16a60:	e3c014ff 	bic	r1, r0, #-16777216	; 0xff000000
   16a64:	e3c1173e 	bic	r1, r1, #16252928	; 0xf80000
   16a68:	e28d000c 	add	r0, sp, #12
   16a6c:	eb000999 	bl	190d8 <DWHCIRegisterOr>
   16a70:	e1a00004 	mov	r0, r4
   16a74:	eb000ca1 	bl	19d00 <DWHCITransferStageDataGetPacketsToTransfer>
   16a78:	e59f1330 	ldr	r1, [pc, #816]	; 16db0 <DWHCIDeviceStartChannel+0x3d0>
   16a7c:	e0011980 	and	r1, r1, r0, lsl #19
   16a80:	e28d000c 	add	r0, sp, #12
   16a84:	eb000993 	bl	190d8 <DWHCIRegisterOr>
   16a88:	e1a00004 	mov	r0, r4
   16a8c:	eb000c35 	bl	19b68 <DWHCITransferStageDataGetPID>
   16a90:	e1a01e80 	lsl	r1, r0, #29
   16a94:	e28d000c 	add	r0, sp, #12
   16a98:	eb00098e 	bl	190d8 <DWHCIRegisterOr>
   16a9c:	e28d000c 	add	r0, sp, #12
   16aa0:	eb00091f 	bl	18f24 <DWHCIRegisterWrite>
   16aa4:	e1a00004 	mov	r0, r4
   16aa8:	eb000c71 	bl	19c74 <DWHCITransferStageDataGetDMAAddress>
   16aac:	e59f1300 	ldr	r1, [pc, #768]	; 16db4 <DWHCIDeviceStartChannel+0x3d4>
   16ab0:	e3c02103 	bic	r2, r0, #-1073741824	; 0xc0000000
   16ab4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
   16ab8:	e0851001 	add	r1, r5, r1
   16abc:	e28d0018 	add	r0, sp, #24
   16ac0:	eb0008e9 	bl	18e6c <DWHCIRegister2>
   16ac4:	e28d0018 	add	r0, sp, #24
   16ac8:	eb000915 	bl	18f24 <DWHCIRegisterWrite>
   16acc:	e1a00004 	mov	r0, r4
   16ad0:	eb000c67 	bl	19c74 <DWHCITransferStageDataGetDMAAddress>
   16ad4:	e1a06000 	mov	r6, r0
   16ad8:	e1a00004 	mov	r0, r4
   16adc:	eb000c79 	bl	19cc8 <DWHCITransferStageDataGetBytesToTransfer>
   16ae0:	e1a01000 	mov	r1, r0
   16ae4:	e1a00006 	mov	r0, r6
   16ae8:	eb0033bf 	bl	239ec <uspi_CleanAndInvalidateDataCacheRange>
   16aec:	e3a02000 	mov	r2, #0
   16af0:	ee072fba 	mcr	15, 0, r2, cr7, cr10, {5}
   16af4:	e59f12bc 	ldr	r1, [pc, #700]	; 16db8 <DWHCIDeviceStartChannel+0x3d8>
   16af8:	e28d0024 	add	r0, sp, #36	; 0x24
   16afc:	e0851001 	add	r1, r5, r1
   16b00:	eb0008d9 	bl	18e6c <DWHCIRegister2>
   16b04:	e1a00004 	mov	r0, r4
   16b08:	eb000c8a 	bl	19d38 <DWHCITransferStageDataIsSplit>
   16b0c:	e3500000 	cmp	r0, #0
   16b10:	1a00007a 	bne	16d00 <DWHCIDeviceStartChannel+0x320>
   16b14:	e28d0024 	add	r0, sp, #36	; 0x24
   16b18:	eb000901 	bl	18f24 <DWHCIRegisterWrite>
   16b1c:	e59f1298 	ldr	r1, [pc, #664]	; 16dbc <DWHCIDeviceStartChannel+0x3dc>
   16b20:	e28d0030 	add	r0, sp, #48	; 0x30
   16b24:	e0851001 	add	r1, r5, r1
   16b28:	eb0008c1 	bl	18e34 <DWHCIRegister>
   16b2c:	e28d0030 	add	r0, sp, #48	; 0x30
   16b30:	eb0008eb 	bl	18ee4 <DWHCIRegisterRead>
   16b34:	e59f1284 	ldr	r1, [pc, #644]	; 16dc0 <DWHCIDeviceStartChannel+0x3e0>
   16b38:	e28d0030 	add	r0, sp, #48	; 0x30
   16b3c:	eb00094d 	bl	19078 <DWHCIRegisterAnd>
   16b40:	e1a00004 	mov	r0, r4
   16b44:	eb000bec 	bl	19afc <DWHCITransferStageDataGetMaxPacketSize>
   16b48:	e1a01a80 	lsl	r1, r0, #21
   16b4c:	e1a01aa1 	lsr	r1, r1, #21
   16b50:	e28d0030 	add	r0, sp, #48	; 0x30
   16b54:	eb00095f 	bl	190d8 <DWHCIRegisterOr>
   16b58:	e28d0030 	add	r0, sp, #48	; 0x30
   16b5c:	e3e01603 	mvn	r1, #3145728	; 0x300000
   16b60:	eb000944 	bl	19078 <DWHCIRegisterAnd>
   16b64:	e28d0030 	add	r0, sp, #48	; 0x30
   16b68:	e3a01601 	mov	r1, #1048576	; 0x100000
   16b6c:	eb000959 	bl	190d8 <DWHCIRegisterOr>
   16b70:	e1a00004 	mov	r0, r4
   16b74:	eb000c22 	bl	19c04 <DWHCITransferStageDataIsDirectionIn>
   16b78:	e3500000 	cmp	r0, #0
   16b7c:	1a000050 	bne	16cc4 <DWHCIDeviceStartChannel+0x2e4>
   16b80:	e3e01902 	mvn	r1, #32768	; 0x8000
   16b84:	e28d0030 	add	r0, sp, #48	; 0x30
   16b88:	eb00093a 	bl	19078 <DWHCIRegisterAnd>
   16b8c:	e1a00004 	mov	r0, r4
   16b90:	eb000be7 	bl	19b34 <DWHCITransferStageDataGetSpeed>
   16b94:	e3500000 	cmp	r0, #0
   16b98:	1a000050 	bne	16ce0 <DWHCIDeviceStartChannel+0x300>
   16b9c:	e3a01802 	mov	r1, #131072	; 0x20000
   16ba0:	e28d0030 	add	r0, sp, #48	; 0x30
   16ba4:	eb00094b 	bl	190d8 <DWHCIRegisterOr>
   16ba8:	e3e0157f 	mvn	r1, #532676608	; 0x1fc00000
   16bac:	e28d0030 	add	r0, sp, #48	; 0x30
   16bb0:	eb000930 	bl	19078 <DWHCIRegisterAnd>
   16bb4:	e1a00004 	mov	r0, r4
   16bb8:	eb000b77 	bl	1999c <DWHCITransferStageDataGetDeviceAddress>
   16bbc:	e1a01b00 	lsl	r1, r0, #22
   16bc0:	e28d0030 	add	r0, sp, #48	; 0x30
   16bc4:	eb000943 	bl	190d8 <DWHCIRegisterOr>
   16bc8:	e3e01703 	mvn	r1, #786432	; 0xc0000
   16bcc:	e28d0030 	add	r0, sp, #48	; 0x30
   16bd0:	eb000928 	bl	19078 <DWHCIRegisterAnd>
   16bd4:	e1a00004 	mov	r0, r4
   16bd8:	eb000b88 	bl	19a00 <DWHCITransferStageDataGetEndpointType>
   16bdc:	e1a01900 	lsl	r1, r0, #18
   16be0:	e28d0030 	add	r0, sp, #48	; 0x30
   16be4:	eb00093b 	bl	190d8 <DWHCIRegisterOr>
   16be8:	e3e01b1e 	mvn	r1, #30720	; 0x7800
   16bec:	e28d0030 	add	r0, sp, #48	; 0x30
   16bf0:	eb000920 	bl	19078 <DWHCIRegisterAnd>
   16bf4:	e1a00004 	mov	r0, r4
   16bf8:	eb000ba5 	bl	19a94 <DWHCITransferStageDataGetEndpointNumber>
   16bfc:	e1a01580 	lsl	r1, r0, #11
   16c00:	e28d0030 	add	r0, sp, #48	; 0x30
   16c04:	eb000933 	bl	190d8 <DWHCIRegisterOr>
   16c08:	e1a00004 	mov	r0, r4
   16c0c:	eb000d1a 	bl	1a07c <DWHCITransferStageDataGetFrameScheduler>
   16c10:	e2506000 	subs	r6, r0, #0
   16c14:	0a000009 	beq	16c40 <DWHCIDeviceStartChannel+0x260>
   16c18:	e5963010 	ldr	r3, [r6, #16]
   16c1c:	e12fff33 	blx	r3
   16c20:	e5963014 	ldr	r3, [r6, #20]
   16c24:	e1a00006 	mov	r0, r6
   16c28:	e12fff33 	blx	r3
   16c2c:	e3500000 	cmp	r0, #0
   16c30:	0a00002e 	beq	16cf0 <DWHCIDeviceStartChannel+0x310>
   16c34:	e3a01202 	mov	r1, #536870912	; 0x20000000
   16c38:	e28d0030 	add	r0, sp, #48	; 0x30
   16c3c:	eb000925 	bl	190d8 <DWHCIRegisterOr>
   16c40:	e59f117c 	ldr	r1, [pc, #380]	; 16dc4 <DWHCIDeviceStartChannel+0x3e4>
   16c44:	e28d003c 	add	r0, sp, #60	; 0x3c
   16c48:	e0851001 	add	r1, r5, r1
   16c4c:	eb000878 	bl	18e34 <DWHCIRegister>
   16c50:	e1a00004 	mov	r0, r4
   16c54:	eb000ca8 	bl	19efc <DWHCITransferStageDataGetStatusMask>
   16c58:	e1a01000 	mov	r1, r0
   16c5c:	e28d003c 	add	r0, sp, #60	; 0x3c
   16c60:	eb0008dc 	bl	18fd8 <DWHCIRegisterSet>
   16c64:	e28d003c 	add	r0, sp, #60	; 0x3c
   16c68:	eb0008ad 	bl	18f24 <DWHCIRegisterWrite>
   16c6c:	e28d0030 	add	r0, sp, #48	; 0x30
   16c70:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   16c74:	eb000917 	bl	190d8 <DWHCIRegisterOr>
   16c78:	e3e01101 	mvn	r1, #1073741824	; 0x40000000
   16c7c:	e28d0030 	add	r0, sp, #48	; 0x30
   16c80:	eb0008fc 	bl	19078 <DWHCIRegisterAnd>
   16c84:	e28d0030 	add	r0, sp, #48	; 0x30
   16c88:	eb0008a5 	bl	18f24 <DWHCIRegisterWrite>
   16c8c:	e28d003c 	add	r0, sp, #60	; 0x3c
   16c90:	eb000886 	bl	18eb0 <_DWHCIRegister>
   16c94:	e28d0030 	add	r0, sp, #48	; 0x30
   16c98:	eb000884 	bl	18eb0 <_DWHCIRegister>
   16c9c:	e28d0024 	add	r0, sp, #36	; 0x24
   16ca0:	eb000882 	bl	18eb0 <_DWHCIRegister>
   16ca4:	e28d0018 	add	r0, sp, #24
   16ca8:	eb000880 	bl	18eb0 <_DWHCIRegister>
   16cac:	e28d000c 	add	r0, sp, #12
   16cb0:	eb00087e 	bl	18eb0 <_DWHCIRegister>
   16cb4:	e1a0000d 	mov	r0, sp
   16cb8:	eb00087c 	bl	18eb0 <_DWHCIRegister>
   16cbc:	e28dd048 	add	sp, sp, #72	; 0x48
   16cc0:	e8bd8070 	pop	{r4, r5, r6, pc}
   16cc4:	e3a01902 	mov	r1, #32768	; 0x8000
   16cc8:	e28d0030 	add	r0, sp, #48	; 0x30
   16ccc:	eb000901 	bl	190d8 <DWHCIRegisterOr>
   16cd0:	e1a00004 	mov	r0, r4
   16cd4:	eb000b96 	bl	19b34 <DWHCITransferStageDataGetSpeed>
   16cd8:	e3500000 	cmp	r0, #0
   16cdc:	0affffae 	beq	16b9c <DWHCIDeviceStartChannel+0x1bc>
   16ce0:	e3e01802 	mvn	r1, #131072	; 0x20000
   16ce4:	e28d0030 	add	r0, sp, #48	; 0x30
   16ce8:	eb0008e2 	bl	19078 <DWHCIRegisterAnd>
   16cec:	eaffffad 	b	16ba8 <DWHCIDeviceStartChannel+0x1c8>
   16cf0:	e3e01202 	mvn	r1, #536870912	; 0x20000000
   16cf4:	e28d0030 	add	r0, sp, #48	; 0x30
   16cf8:	eb0008de 	bl	19078 <DWHCIRegisterAnd>
   16cfc:	eaffffcf 	b	16c40 <DWHCIDeviceStartChannel+0x260>
   16d00:	e1a00004 	mov	r0, r4
   16d04:	eb000c55 	bl	19e60 <DWHCITransferStageDataGetHubPortAddress>
   16d08:	e1a01000 	mov	r1, r0
   16d0c:	e28d0024 	add	r0, sp, #36	; 0x24
   16d10:	eb0008f0 	bl	190d8 <DWHCIRegisterOr>
   16d14:	e1a00004 	mov	r0, r4
   16d18:	eb000c2c 	bl	19dd0 <DWHCITransferStageDataGetHubAddress>
   16d1c:	e1a01380 	lsl	r1, r0, #7
   16d20:	e28d0024 	add	r0, sp, #36	; 0x24
   16d24:	eb0008eb 	bl	190d8 <DWHCIRegisterOr>
   16d28:	e1a00004 	mov	r0, r4
   16d2c:	eb000c70 	bl	19ef4 <DWHCITransferStageDataGetSplitPosition>
   16d30:	e1a01700 	lsl	r1, r0, #14
   16d34:	e28d0024 	add	r0, sp, #36	; 0x24
   16d38:	eb0008e6 	bl	190d8 <DWHCIRegisterOr>
   16d3c:	e1a00004 	mov	r0, r4
   16d40:	eb000c0a 	bl	19d70 <DWHCITransferStageDataIsSplitComplete>
   16d44:	e3500000 	cmp	r0, #0
   16d48:	1a000012 	bne	16d98 <DWHCIDeviceStartChannel+0x3b8>
   16d4c:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   16d50:	e28d0024 	add	r0, sp, #36	; 0x24
   16d54:	eb0008df 	bl	190d8 <DWHCIRegisterOr>
   16d58:	eaffff6d 	b	16b14 <DWHCIDeviceStartChannel+0x134>
   16d5c:	e59f2064 	ldr	r2, [pc, #100]	; 16dc8 <DWHCIDeviceStartChannel+0x3e8>
   16d60:	e59f1064 	ldr	r1, [pc, #100]	; 16dcc <DWHCIDeviceStartChannel+0x3ec>
   16d64:	e59f0064 	ldr	r0, [pc, #100]	; 16dd0 <DWHCIDeviceStartChannel+0x3f0>
   16d68:	eb004087 	bl	26f8c <uspi_assertion_failed>
   16d6c:	eaffff28 	b	16a14 <DWHCIDeviceStartChannel+0x34>
   16d70:	e59f205c 	ldr	r2, [pc, #92]	; 16dd4 <DWHCIDeviceStartChannel+0x3f4>
   16d74:	e59f1050 	ldr	r1, [pc, #80]	; 16dcc <DWHCIDeviceStartChannel+0x3ec>
   16d78:	e59f0058 	ldr	r0, [pc, #88]	; 16dd8 <DWHCIDeviceStartChannel+0x3f8>
   16d7c:	eb004082 	bl	26f8c <uspi_assertion_failed>
   16d80:	eaffff1d 	b	169fc <DWHCIDeviceStartChannel+0x1c>
   16d84:	e59f2050 	ldr	r2, [pc, #80]	; 16ddc <DWHCIDeviceStartChannel+0x3fc>
   16d88:	e59f103c 	ldr	r1, [pc, #60]	; 16dcc <DWHCIDeviceStartChannel+0x3ec>
   16d8c:	e59f004c 	ldr	r0, [pc, #76]	; 16de0 <DWHCIDeviceStartChannel+0x400>
   16d90:	eb00407d 	bl	26f8c <uspi_assertion_failed>
   16d94:	eaffff16 	b	169f4 <DWHCIDeviceStartChannel+0x14>
   16d98:	e3a01801 	mov	r1, #65536	; 0x10000
   16d9c:	e28d0024 	add	r0, sp, #36	; 0x24
   16da0:	eb0008cc 	bl	190d8 <DWHCIRegisterOr>
   16da4:	eaffffe8 	b	16d4c <DWHCIDeviceStartChannel+0x36c>
   16da8:	20980508 	addscs	r0, r8, r8, lsl #10
   16dac:	20980510 	addscs	r0, r8, r0, lsl r5
   16db0:	1ff80000 	svcne	0x00f80000
   16db4:	20980514 	addscs	r0, r8, r4, lsl r5
   16db8:	20980504 	addscs	r0, r8, r4, lsl #10
   16dbc:	20980500 	addscs	r0, r8, r0, lsl #10
   16dc0:	fffff800 			; <UNDEFINED> instruction: 0xfffff800
   16dc4:	2098050c 	addscs	r0, r8, ip, lsl #10
   16dc8:	00000337 	andeq	r0, r0, r7, lsr r3
   16dcc:	00029a58 	andeq	r9, r2, r8, asr sl
   16dd0:	00029a84 	andeq	r9, r2, r4, lsl #21
   16dd4:	00000335 	andeq	r0, r0, r5, lsr r3
   16dd8:	00029a74 	andeq	r9, r2, r4, ror sl
   16ddc:	00000333 	andeq	r0, r0, r3, lsr r3
   16de0:	00029a68 	andeq	r9, r2, r8, ror #20

00016de4 <DWHCIDeviceStartTransaction>:
   16de4:	e92d4070 	push	{r4, r5, r6, lr}
   16de8:	e2506000 	subs	r6, r0, #0
   16dec:	e24dd018 	sub	sp, sp, #24
   16df0:	e1a05001 	mov	r5, r1
   16df4:	0a00003e 	beq	16ef4 <DWHCIDeviceStartTransaction+0x110>
   16df8:	e3550000 	cmp	r5, #0
   16dfc:	0a000037 	beq	16ee0 <DWHCIDeviceStartTransaction+0xfc>
   16e00:	e1a00005 	mov	r0, r5
   16e04:	eb000a12 	bl	19654 <DWHCITransferStageDataGetChannelNumber>
   16e08:	e5963000 	ldr	r3, [r6]
   16e0c:	e1a04000 	mov	r4, r0
   16e10:	e1530000 	cmp	r3, r0
   16e14:	9a00002c 	bls	16ecc <DWHCIDeviceStartTransaction+0xe8>
   16e18:	e59f10e8 	ldr	r1, [pc, #232]	; 16f08 <DWHCIDeviceStartTransaction+0x124>
   16e1c:	e1a0000d 	mov	r0, sp
   16e20:	e0841001 	add	r1, r4, r1
   16e24:	e1a04281 	lsl	r4, r1, #5
   16e28:	e1a01004 	mov	r1, r4
   16e2c:	eb000800 	bl	18e34 <DWHCIRegister>
   16e30:	e1a0000d 	mov	r0, sp
   16e34:	eb00082a 	bl	18ee4 <DWHCIRegisterRead>
   16e38:	e1a0000d 	mov	r0, sp
   16e3c:	e3a01102 	mov	r1, #-2147483648	; 0x80000000
   16e40:	eb000873 	bl	19014 <DWHCIRegisterIsSet>
   16e44:	e3500000 	cmp	r0, #0
   16e48:	1a000006 	bne	16e68 <DWHCIDeviceStartTransaction+0x84>
   16e4c:	e1a01005 	mov	r1, r5
   16e50:	e1a00006 	mov	r0, r6
   16e54:	ebfffee1 	bl	169e0 <DWHCIDeviceStartChannel>
   16e58:	e1a0000d 	mov	r0, sp
   16e5c:	eb000813 	bl	18eb0 <_DWHCIRegister>
   16e60:	e28dd018 	add	sp, sp, #24
   16e64:	e8bd8070 	pop	{r4, r5, r6, pc}
   16e68:	e1a00005 	mov	r0, r5
   16e6c:	e3a01000 	mov	r1, #0
   16e70:	eb0009da 	bl	195e0 <DWHCITransferStageDataSetSubState>
   16e74:	e1a0000d 	mov	r0, sp
   16e78:	e3e01102 	mvn	r1, #-2147483648	; 0x80000000
   16e7c:	eb00087d 	bl	19078 <DWHCIRegisterAnd>
   16e80:	e3a01101 	mov	r1, #1073741824	; 0x40000000
   16e84:	e1a0000d 	mov	r0, sp
   16e88:	eb000892 	bl	190d8 <DWHCIRegisterOr>
   16e8c:	e1a0000d 	mov	r0, sp
   16e90:	eb000823 	bl	18f24 <DWHCIRegisterWrite>
   16e94:	e284100c 	add	r1, r4, #12
   16e98:	e28d000c 	add	r0, sp, #12
   16e9c:	eb0007e4 	bl	18e34 <DWHCIRegister>
   16ea0:	e3a01002 	mov	r1, #2
   16ea4:	e28d000c 	add	r0, sp, #12
   16ea8:	eb00084a 	bl	18fd8 <DWHCIRegisterSet>
   16eac:	e28d000c 	add	r0, sp, #12
   16eb0:	eb00081b 	bl	18f24 <DWHCIRegisterWrite>
   16eb4:	e28d000c 	add	r0, sp, #12
   16eb8:	eb0007fc 	bl	18eb0 <_DWHCIRegister>
   16ebc:	e1a0000d 	mov	r0, sp
   16ec0:	eb0007fa 	bl	18eb0 <_DWHCIRegister>
   16ec4:	e28dd018 	add	sp, sp, #24
   16ec8:	e8bd8070 	pop	{r4, r5, r6, pc}
   16ecc:	e3a02fc5 	mov	r2, #788	; 0x314
   16ed0:	e59f1034 	ldr	r1, [pc, #52]	; 16f0c <DWHCIDeviceStartTransaction+0x128>
   16ed4:	e59f0034 	ldr	r0, [pc, #52]	; 16f10 <DWHCIDeviceStartTransaction+0x12c>
   16ed8:	eb00402b 	bl	26f8c <uspi_assertion_failed>
   16edc:	eaffffcd 	b	16e18 <DWHCIDeviceStartTransaction+0x34>
   16ee0:	e59f202c 	ldr	r2, [pc, #44]	; 16f14 <DWHCIDeviceStartTransaction+0x130>
   16ee4:	e59f1020 	ldr	r1, [pc, #32]	; 16f0c <DWHCIDeviceStartTransaction+0x128>
   16ee8:	e59f0028 	ldr	r0, [pc, #40]	; 16f18 <DWHCIDeviceStartTransaction+0x134>
   16eec:	eb004026 	bl	26f8c <uspi_assertion_failed>
   16ef0:	eaffffc2 	b	16e00 <DWHCIDeviceStartTransaction+0x1c>
   16ef4:	e3a02e31 	mov	r2, #784	; 0x310
   16ef8:	e59f100c 	ldr	r1, [pc, #12]	; 16f0c <DWHCIDeviceStartTransaction+0x128>
   16efc:	e59f0018 	ldr	r0, [pc, #24]	; 16f1c <DWHCIDeviceStartTransaction+0x138>
   16f00:	eb004021 	bl	26f8c <uspi_assertion_failed>
   16f04:	eaffffbb 	b	16df8 <DWHCIDeviceStartTransaction+0x14>
   16f08:	0104c028 	tsteq	r4, r8, lsr #32
   16f0c:	00029a58 	andeq	r9, r2, r8, asr sl
   16f10:	00029a84 	andeq	r9, r2, r4, lsl #21
   16f14:	00000312 	andeq	r0, r0, r2, lsl r3
   16f18:	00029a74 	andeq	r9, r2, r4, ror sl
   16f1c:	00029a68 	andeq	r9, r2, r8, ror #20

00016f20 <DWHCIDeviceTimerHandler>:
   16f20:	e92d4070 	push	{r4, r5, r6, lr}
   16f24:	e2525000 	subs	r5, r2, #0
   16f28:	e1a04001 	mov	r4, r1
   16f2c:	0a00002c 	beq	16fe4 <DWHCIDeviceTimerHandler+0xc4>
   16f30:	e3540000 	cmp	r4, #0
   16f34:	0a000030 	beq	16ffc <DWHCIDeviceTimerHandler+0xdc>
   16f38:	e3a03000 	mov	r3, #0
   16f3c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   16f40:	e1540003 	cmp	r4, r3
   16f44:	0a000021 	beq	16fd0 <DWHCIDeviceTimerHandler+0xb0>
   16f48:	e1a00004 	mov	r0, r4
   16f4c:	eb000996 	bl	195ac <DWHCITransferStageDataGetState>
   16f50:	e3500003 	cmp	r0, #3
   16f54:	0a000003 	beq	16f68 <DWHCIDeviceTimerHandler+0x48>
   16f58:	e59f20c4 	ldr	r2, [pc, #196]	; 17024 <DWHCIDeviceTimerHandler+0x104>
   16f5c:	e59f10c4 	ldr	r1, [pc, #196]	; 17028 <DWHCIDeviceTimerHandler+0x108>
   16f60:	e59f00c4 	ldr	r0, [pc, #196]	; 1702c <DWHCIDeviceTimerHandler+0x10c>
   16f64:	eb004008 	bl	26f8c <uspi_assertion_failed>
   16f68:	e1a00004 	mov	r0, r4
   16f6c:	eb000b71 	bl	19d38 <DWHCITransferStageDataIsSplit>
   16f70:	e2501000 	subs	r1, r0, #0
   16f74:	0a00000d 	beq	16fb0 <DWHCIDeviceTimerHandler+0x90>
   16f78:	e3a01001 	mov	r1, #1
   16f7c:	e1a00004 	mov	r0, r4
   16f80:	eb00097b 	bl	19574 <DWHCITransferStageDataSetState>
   16f84:	e3a01000 	mov	r1, #0
   16f88:	e1a00004 	mov	r0, r4
   16f8c:	eb000961 	bl	19518 <DWHCITransferStageDataSetSplitComplete>
   16f90:	e1a00004 	mov	r0, r4
   16f94:	eb000c38 	bl	1a07c <DWHCITransferStageDataGetFrameScheduler>
   16f98:	e2506000 	subs	r6, r0, #0
   16f9c:	0a00001b 	beq	17010 <DWHCIDeviceTimerHandler+0xf0>
   16fa0:	e5963004 	ldr	r3, [r6, #4]
   16fa4:	e1a00006 	mov	r0, r6
   16fa8:	e12fff33 	blx	r3
   16fac:	ea000001 	b	16fb8 <DWHCIDeviceTimerHandler+0x98>
   16fb0:	e1a00004 	mov	r0, r4
   16fb4:	eb00096e 	bl	19574 <DWHCITransferStageDataSetState>
   16fb8:	e1a01004 	mov	r1, r4
   16fbc:	e1a00005 	mov	r0, r5
   16fc0:	ebffff87 	bl	16de4 <DWHCIDeviceStartTransaction>
   16fc4:	e3a03000 	mov	r3, #0
   16fc8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   16fcc:	e8bd8070 	pop	{r4, r5, r6, pc}
   16fd0:	e59f2058 	ldr	r2, [pc, #88]	; 17030 <DWHCIDeviceTimerHandler+0x110>
   16fd4:	e59f104c 	ldr	r1, [pc, #76]	; 17028 <DWHCIDeviceTimerHandler+0x108>
   16fd8:	e59f0054 	ldr	r0, [pc, #84]	; 17034 <DWHCIDeviceTimerHandler+0x114>
   16fdc:	eb003fea 	bl	26f8c <uspi_assertion_failed>
   16fe0:	eaffffd8 	b	16f48 <DWHCIDeviceTimerHandler+0x28>
   16fe4:	e59f204c 	ldr	r2, [pc, #76]	; 17038 <DWHCIDeviceTimerHandler+0x118>
   16fe8:	e59f1038 	ldr	r1, [pc, #56]	; 17028 <DWHCIDeviceTimerHandler+0x108>
   16fec:	e59f0048 	ldr	r0, [pc, #72]	; 1703c <DWHCIDeviceTimerHandler+0x11c>
   16ff0:	eb003fe5 	bl	26f8c <uspi_assertion_failed>
   16ff4:	e3540000 	cmp	r4, #0
   16ff8:	1affffce 	bne	16f38 <DWHCIDeviceTimerHandler+0x18>
   16ffc:	e3a02d13 	mov	r2, #1216	; 0x4c0
   17000:	e59f1020 	ldr	r1, [pc, #32]	; 17028 <DWHCIDeviceTimerHandler+0x108>
   17004:	e59f0028 	ldr	r0, [pc, #40]	; 17034 <DWHCIDeviceTimerHandler+0x114>
   17008:	eb003fdf 	bl	26f8c <uspi_assertion_failed>
   1700c:	eaffffc9 	b	16f38 <DWHCIDeviceTimerHandler+0x18>
   17010:	e59f2028 	ldr	r2, [pc, #40]	; 17040 <DWHCIDeviceTimerHandler+0x120>
   17014:	e59f100c 	ldr	r1, [pc, #12]	; 17028 <DWHCIDeviceTimerHandler+0x108>
   17018:	e59f0024 	ldr	r0, [pc, #36]	; 17044 <DWHCIDeviceTimerHandler+0x124>
   1701c:	eb003fda 	bl	26f8c <uspi_assertion_failed>
   17020:	eaffffde 	b	16fa0 <DWHCIDeviceTimerHandler+0x80>
   17024:	000004c5 	andeq	r0, r0, r5, asr #9
   17028:	00029a58 	andeq	r9, r2, r8, asr sl
   1702c:	00029aa4 	andeq	r9, r2, r4, lsr #21
   17030:	000004c4 	andeq	r0, r0, r4, asr #9
   17034:	00029a74 	andeq	r9, r2, r4, ror sl
   17038:	000004bd 			; <UNDEFINED> instruction: 0x000004bd
   1703c:	00029a68 	andeq	r9, r2, r8, ror #20
   17040:	000004ce 	andeq	r0, r0, lr, asr #9
   17044:	00029aec 	andeq	r9, r2, ip, ror #21

00017048 <DWHCIDeviceAllocateChannel>:
   17048:	e92d4070 	push	{r4, r5, r6, lr}
   1704c:	e2505000 	subs	r5, r0, #0
   17050:	0a00001b 	beq	170c4 <DWHCIDeviceAllocateChannel+0x7c>
   17054:	eb00323c 	bl	2394c <uspi_EnterCritical>
   17058:	e5951000 	ldr	r1, [r5]
   1705c:	e3510000 	cmp	r1, #0
   17060:	0a00000b 	beq	17094 <DWHCIDeviceAllocateChannel+0x4c>
   17064:	e5953004 	ldr	r3, [r5, #4]
   17068:	e2133001 	ands	r3, r3, #1
   1706c:	0a00000c 	beq	170a4 <DWHCIDeviceAllocateChannel+0x5c>
   17070:	e3a04000 	mov	r4, #0
   17074:	ea000002 	b	17084 <DWHCIDeviceAllocateChannel+0x3c>
   17078:	e5952004 	ldr	r2, [r5, #4]
   1707c:	e1120003 	tst	r2, r3
   17080:	0a000009 	beq	170ac <DWHCIDeviceAllocateChannel+0x64>
   17084:	e2844001 	add	r4, r4, #1
   17088:	e1540001 	cmp	r4, r1
   1708c:	e1a03083 	lsl	r3, r3, #1
   17090:	1afffff8 	bne	17078 <DWHCIDeviceAllocateChannel+0x30>
   17094:	e3a04010 	mov	r4, #16
   17098:	eb00323a 	bl	23988 <uspi_LeaveCritical>
   1709c:	e1a00004 	mov	r0, r4
   170a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   170a4:	e1a04003 	mov	r4, r3
   170a8:	e3a03001 	mov	r3, #1
   170ac:	e5952004 	ldr	r2, [r5, #4]
   170b0:	e1823003 	orr	r3, r2, r3
   170b4:	e5853004 	str	r3, [r5, #4]
   170b8:	eb003232 	bl	23988 <uspi_LeaveCritical>
   170bc:	e1a00004 	mov	r0, r4
   170c0:	e8bd8070 	pop	{r4, r5, r6, pc}
   170c4:	e59f200c 	ldr	r2, [pc, #12]	; 170d8 <DWHCIDeviceAllocateChannel+0x90>
   170c8:	e59f100c 	ldr	r1, [pc, #12]	; 170dc <DWHCIDeviceAllocateChannel+0x94>
   170cc:	e59f000c 	ldr	r0, [pc, #12]	; 170e0 <DWHCIDeviceAllocateChannel+0x98>
   170d0:	eb003fad 	bl	26f8c <uspi_assertion_failed>
   170d4:	eaffffde 	b	17054 <DWHCIDeviceAllocateChannel+0xc>
   170d8:	000004dd 	ldrdeq	r0, [r0], -sp
   170dc:	00029a58 	andeq	r9, r2, r8, asr sl
   170e0:	00029a68 	andeq	r9, r2, r8, ror #20

000170e4 <DWHCIDeviceFreeChannel>:
   170e4:	e92d4070 	push	{r4, r5, r6, lr}
   170e8:	e2504000 	subs	r4, r0, #0
   170ec:	e1a06001 	mov	r6, r1
   170f0:	0a000017 	beq	17154 <DWHCIDeviceFreeChannel+0x70>
   170f4:	e5943000 	ldr	r3, [r4]
   170f8:	e1530006 	cmp	r3, r6
   170fc:	9a00000a 	bls	1712c <DWHCIDeviceFreeChannel+0x48>
   17100:	e3a05001 	mov	r5, #1
   17104:	eb003210 	bl	2394c <uspi_EnterCritical>
   17108:	e5943004 	ldr	r3, [r4, #4]
   1710c:	e1a05615 	lsl	r5, r5, r6
   17110:	e1130005 	tst	r3, r5
   17114:	0a000009 	beq	17140 <DWHCIDeviceFreeChannel+0x5c>
   17118:	e5943004 	ldr	r3, [r4, #4]
   1711c:	e1c35005 	bic	r5, r3, r5
   17120:	e5845004 	str	r5, [r4, #4]
   17124:	e8bd4070 	pop	{r4, r5, r6, lr}
   17128:	ea003216 	b	23988 <uspi_LeaveCritical>
   1712c:	e59f2034 	ldr	r2, [pc, #52]	; 17168 <DWHCIDeviceFreeChannel+0x84>
   17130:	e59f1034 	ldr	r1, [pc, #52]	; 1716c <DWHCIDeviceFreeChannel+0x88>
   17134:	e59f0034 	ldr	r0, [pc, #52]	; 17170 <DWHCIDeviceFreeChannel+0x8c>
   17138:	eb003f93 	bl	26f8c <uspi_assertion_failed>
   1713c:	eaffffef 	b	17100 <DWHCIDeviceFreeChannel+0x1c>
   17140:	e59f202c 	ldr	r2, [pc, #44]	; 17174 <DWHCIDeviceFreeChannel+0x90>
   17144:	e59f1020 	ldr	r1, [pc, #32]	; 1716c <DWHCIDeviceFreeChannel+0x88>
   17148:	e59f0028 	ldr	r0, [pc, #40]	; 17178 <DWHCIDeviceFreeChannel+0x94>
   1714c:	eb003f8e 	bl	26f8c <uspi_assertion_failed>
   17150:	eafffff0 	b	17118 <DWHCIDeviceFreeChannel+0x34>
   17154:	e59f2020 	ldr	r2, [pc, #32]	; 1717c <DWHCIDeviceFreeChannel+0x98>
   17158:	e59f100c 	ldr	r1, [pc, #12]	; 1716c <DWHCIDeviceFreeChannel+0x88>
   1715c:	e59f001c 	ldr	r0, [pc, #28]	; 17180 <DWHCIDeviceFreeChannel+0x9c>
   17160:	eb003f89 	bl	26f8c <uspi_assertion_failed>
   17164:	eaffffe2 	b	170f4 <DWHCIDeviceFreeChannel+0x10>
   17168:	000004f9 	strdeq	r0, [r0], -r9
   1716c:	00029a58 	andeq	r9, r2, r8, asr sl
   17170:	00029a84 	andeq	r9, r2, r4, lsl #21
   17174:	000004fe 	strdeq	r0, [r0], -lr
   17178:	00029b04 	andeq	r9, r2, r4, lsl #22
   1717c:	000004f7 	strdeq	r0, [r0], -r7
   17180:	00029a68 	andeq	r9, r2, r8, ror #20

00017184 <DWHCIDeviceTransferStageAsync>:
   17184:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   17188:	e2506000 	subs	r6, r0, #0
   1718c:	e24dd00c 	sub	sp, sp, #12
   17190:	e1a05001 	mov	r5, r1
   17194:	e1a08002 	mov	r8, r2
   17198:	e1a09003 	mov	r9, r3
   1719c:	0a00003e 	beq	1729c <DWHCIDeviceTransferStageAsync+0x118>
   171a0:	e3550000 	cmp	r5, #0
   171a4:	0a000042 	beq	172b4 <DWHCIDeviceTransferStageAsync+0x130>
   171a8:	e1a00006 	mov	r0, r6
   171ac:	ebffffa5 	bl	17048 <DWHCIDeviceAllocateChannel>
   171b0:	e5963000 	ldr	r3, [r6]
   171b4:	e1a07000 	mov	r7, r0
   171b8:	e1530000 	cmp	r3, r0
   171bc:	93a05000 	movls	r5, #0
   171c0:	8a000002 	bhi	171d0 <DWHCIDeviceTransferStageAsync+0x4c>
   171c4:	e1a00005 	mov	r0, r5
   171c8:	e28dd00c 	add	sp, sp, #12
   171cc:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   171d0:	e0604200 	rsb	r4, r0, r0, lsl #4
   171d4:	e0864184 	add	r4, r6, r4, lsl #3
   171d8:	e2844008 	add	r4, r4, #8
   171dc:	e1a03008 	mov	r3, r8
   171e0:	e1a02005 	mov	r2, r5
   171e4:	e1a00004 	mov	r0, r4
   171e8:	e1a01007 	mov	r1, r7
   171ec:	e58d9000 	str	r9, [sp]
   171f0:	eb000941 	bl	196fc <DWHCITransferStageData>
   171f4:	e1a01007 	mov	r1, r7
   171f8:	e1a00006 	mov	r0, r6
   171fc:	ebfffdba 	bl	168ec <DWHCIDeviceEnableChannelInterrupt>
   17200:	e1a00004 	mov	r0, r4
   17204:	eb000acb 	bl	19d38 <DWHCITransferStageDataIsSplit>
   17208:	e2501000 	subs	r1, r0, #0
   1720c:	e1a00004 	mov	r0, r4
   17210:	1a000007 	bne	17234 <DWHCIDeviceTransferStageAsync+0xb0>
   17214:	eb0008d6 	bl	19574 <DWHCITransferStageDataSetState>
   17218:	e3a05001 	mov	r5, #1
   1721c:	e1a00006 	mov	r0, r6
   17220:	e1a01004 	mov	r1, r4
   17224:	ebfffeee 	bl	16de4 <DWHCIDeviceStartTransaction>
   17228:	e1a00005 	mov	r0, r5
   1722c:	e28dd00c 	add	sp, sp, #12
   17230:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   17234:	eb000904 	bl	1964c <DWHCITransferStageDataBeginSplitCycle>
   17238:	e2505000 	subs	r5, r0, #0
   1723c:	0a00000d 	beq	17278 <DWHCIDeviceTransferStageAsync+0xf4>
   17240:	e3a01001 	mov	r1, #1
   17244:	e1a00004 	mov	r0, r4
   17248:	eb0008c9 	bl	19574 <DWHCITransferStageDataSetState>
   1724c:	e3a01000 	mov	r1, #0
   17250:	e1a00004 	mov	r0, r4
   17254:	eb0008af 	bl	19518 <DWHCITransferStageDataSetSplitComplete>
   17258:	e1a00004 	mov	r0, r4
   1725c:	eb000b86 	bl	1a07c <DWHCITransferStageDataGetFrameScheduler>
   17260:	e2505000 	subs	r5, r0, #0
   17264:	0a000017 	beq	172c8 <DWHCIDeviceTransferStageAsync+0x144>
   17268:	e5953004 	ldr	r3, [r5, #4]
   1726c:	e1a00005 	mov	r0, r5
   17270:	e12fff33 	blx	r3
   17274:	eaffffe7 	b	17218 <DWHCIDeviceTransferStageAsync+0x94>
   17278:	e1a01007 	mov	r1, r7
   1727c:	e1a00006 	mov	r0, r6
   17280:	ebfffdb7 	bl	16964 <DWHCIDeviceDisableChannelInterrupt>
   17284:	e1a00004 	mov	r0, r4
   17288:	eb00082d 	bl	19344 <_DWHCITransferStageData>
   1728c:	e1a01007 	mov	r1, r7
   17290:	e1a00006 	mov	r0, r6
   17294:	ebffff92 	bl	170e4 <DWHCIDeviceFreeChannel>
   17298:	eaffffc9 	b	171c4 <DWHCIDeviceTransferStageAsync+0x40>
   1729c:	e59f2038 	ldr	r2, [pc, #56]	; 172dc <DWHCIDeviceTransferStageAsync+0x158>
   172a0:	e59f1038 	ldr	r1, [pc, #56]	; 172e0 <DWHCIDeviceTransferStageAsync+0x15c>
   172a4:	e59f0038 	ldr	r0, [pc, #56]	; 172e4 <DWHCIDeviceTransferStageAsync+0x160>
   172a8:	eb003f37 	bl	26f8c <uspi_assertion_failed>
   172ac:	e3550000 	cmp	r5, #0
   172b0:	1affffbc 	bne	171a8 <DWHCIDeviceTransferStageAsync+0x24>
   172b4:	e59f202c 	ldr	r2, [pc, #44]	; 172e8 <DWHCIDeviceTransferStageAsync+0x164>
   172b8:	e59f1020 	ldr	r1, [pc, #32]	; 172e0 <DWHCIDeviceTransferStageAsync+0x15c>
   172bc:	e59f0028 	ldr	r0, [pc, #40]	; 172ec <DWHCIDeviceTransferStageAsync+0x168>
   172c0:	eb003f31 	bl	26f8c <uspi_assertion_failed>
   172c4:	eaffffb7 	b	171a8 <DWHCIDeviceTransferStageAsync+0x24>
   172c8:	e59f2020 	ldr	r2, [pc, #32]	; 172f0 <DWHCIDeviceTransferStageAsync+0x16c>
   172cc:	e59f100c 	ldr	r1, [pc, #12]	; 172e0 <DWHCIDeviceTransferStageAsync+0x15c>
   172d0:	e59f001c 	ldr	r0, [pc, #28]	; 172f4 <DWHCIDeviceTransferStageAsync+0x170>
   172d4:	eb003f2c 	bl	26f8c <uspi_assertion_failed>
   172d8:	eaffffe2 	b	17268 <DWHCIDeviceTransferStageAsync+0xe4>
   172dc:	000002e1 	andeq	r0, r0, r1, ror #5
   172e0:	00029a58 	andeq	r9, r2, r8, asr sl
   172e4:	00029a68 	andeq	r9, r2, r8, ror #20
   172e8:	000002e2 	andeq	r0, r0, r2, ror #5
   172ec:	00029b30 	andeq	r9, r2, r0, lsr fp
   172f0:	00000305 	andeq	r0, r0, r5, lsl #6
   172f4:	00029aec 	andeq	r9, r2, ip, ror #21

000172f8 <DWHCIDeviceSubmitAsyncRequest>:
   172f8:	e92d4070 	push	{r4, r5, r6, lr}
   172fc:	e2505000 	subs	r5, r0, #0
   17300:	e1a04001 	mov	r4, r1
   17304:	0a000031 	beq	173d0 <DWHCIDeviceSubmitAsyncRequest+0xd8>
   17308:	e3a03000 	mov	r3, #0
   1730c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   17310:	e1540003 	cmp	r4, r3
   17314:	0a000028 	beq	173bc <DWHCIDeviceSubmitAsyncRequest+0xc4>
   17318:	e1a00004 	mov	r0, r4
   1731c:	eb001275 	bl	1bcf8 <USBRequestGetEndpoint>
   17320:	eb001182 	bl	1b930 <USBEndpointGetType>
   17324:	e3500001 	cmp	r0, #1
   17328:	1a000011 	bne	17374 <DWHCIDeviceSubmitAsyncRequest+0x7c>
   1732c:	e1a00004 	mov	r0, r4
   17330:	eb0012f8 	bl	1bf18 <USBRequestGetBufLen>
   17334:	e3500000 	cmp	r0, #0
   17338:	0a00001a 	beq	173a8 <DWHCIDeviceSubmitAsyncRequest+0xb0>
   1733c:	e3a01000 	mov	r1, #0
   17340:	e1a00004 	mov	r0, r4
   17344:	eb00127f 	bl	1bd48 <USBRequestSetStatus>
   17348:	e1a00004 	mov	r0, r4
   1734c:	eb001269 	bl	1bcf8 <USBRequestGetEndpoint>
   17350:	eb001183 	bl	1b964 <USBEndpointIsDirectionIn>
   17354:	e1a01004 	mov	r1, r4
   17358:	e1a02000 	mov	r2, r0
   1735c:	e3a03000 	mov	r3, #0
   17360:	e1a00005 	mov	r0, r5
   17364:	ebffff86 	bl	17184 <DWHCIDeviceTransferStageAsync>
   17368:	e3a03000 	mov	r3, #0
   1736c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   17370:	e8bd8070 	pop	{r4, r5, r6, pc}
   17374:	e1a00004 	mov	r0, r4
   17378:	eb00125e 	bl	1bcf8 <USBRequestGetEndpoint>
   1737c:	eb00116b 	bl	1b930 <USBEndpointGetType>
   17380:	e3500002 	cmp	r0, #2
   17384:	0affffe8 	beq	1732c <DWHCIDeviceSubmitAsyncRequest+0x34>
   17388:	e3a02f56 	mov	r2, #344	; 0x158
   1738c:	e59f1050 	ldr	r1, [pc, #80]	; 173e4 <DWHCIDeviceSubmitAsyncRequest+0xec>
   17390:	e59f0050 	ldr	r0, [pc, #80]	; 173e8 <DWHCIDeviceSubmitAsyncRequest+0xf0>
   17394:	eb003efc 	bl	26f8c <uspi_assertion_failed>
   17398:	e1a00004 	mov	r0, r4
   1739c:	eb0012dd 	bl	1bf18 <USBRequestGetBufLen>
   173a0:	e3500000 	cmp	r0, #0
   173a4:	1affffe4 	bne	1733c <DWHCIDeviceSubmitAsyncRequest+0x44>
   173a8:	e59f203c 	ldr	r2, [pc, #60]	; 173ec <DWHCIDeviceSubmitAsyncRequest+0xf4>
   173ac:	e59f1030 	ldr	r1, [pc, #48]	; 173e4 <DWHCIDeviceSubmitAsyncRequest+0xec>
   173b0:	e59f0038 	ldr	r0, [pc, #56]	; 173f0 <DWHCIDeviceSubmitAsyncRequest+0xf8>
   173b4:	eb003ef4 	bl	26f8c <uspi_assertion_failed>
   173b8:	eaffffdf 	b	1733c <DWHCIDeviceSubmitAsyncRequest+0x44>
   173bc:	e59f2030 	ldr	r2, [pc, #48]	; 173f4 <DWHCIDeviceSubmitAsyncRequest+0xfc>
   173c0:	e59f101c 	ldr	r1, [pc, #28]	; 173e4 <DWHCIDeviceSubmitAsyncRequest+0xec>
   173c4:	e59f002c 	ldr	r0, [pc, #44]	; 173f8 <DWHCIDeviceSubmitAsyncRequest+0x100>
   173c8:	eb003eef 	bl	26f8c <uspi_assertion_failed>
   173cc:	eaffffd1 	b	17318 <DWHCIDeviceSubmitAsyncRequest+0x20>
   173d0:	e59f2024 	ldr	r2, [pc, #36]	; 173fc <DWHCIDeviceSubmitAsyncRequest+0x104>
   173d4:	e59f1008 	ldr	r1, [pc, #8]	; 173e4 <DWHCIDeviceSubmitAsyncRequest+0xec>
   173d8:	e59f0020 	ldr	r0, [pc, #32]	; 17400 <DWHCIDeviceSubmitAsyncRequest+0x108>
   173dc:	eb003eea 	bl	26f8c <uspi_assertion_failed>
   173e0:	eaffffc8 	b	17308 <DWHCIDeviceSubmitAsyncRequest+0x10>
   173e4:	00029a58 	andeq	r9, r2, r8, asr sl
   173e8:	00029b3c 	andeq	r9, r2, ip, lsr fp
   173ec:	00000159 	andeq	r0, r0, r9, asr r1
   173f0:	00029bd0 	ldrdeq	r9, [r2], -r0
   173f4:	00000156 	andeq	r0, r0, r6, asr r1
   173f8:	00029b30 	andeq	r9, r2, r0, lsr fp
   173fc:	00000152 	andeq	r0, r0, r2, asr r1
   17400:	00029a68 	andeq	r9, r2, r8, ror #20

00017404 <DWHCIDeviceTransferStage>:
   17404:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   17408:	e2504000 	subs	r4, r0, #0
   1740c:	e1a05001 	mov	r5, r1
   17410:	e1a06002 	mov	r6, r2
   17414:	e1a07003 	mov	r7, r3
   17418:	0a000024 	beq	174b0 <DWHCIDeviceTransferStage+0xac>
   1741c:	e3550000 	cmp	r5, #0
   17420:	0a00001d 	beq	1749c <DWHCIDeviceTransferStage+0x98>
   17424:	e1a03004 	mov	r3, r4
   17428:	e3a02000 	mov	r2, #0
   1742c:	e59f1090 	ldr	r1, [pc, #144]	; 174c4 <DWHCIDeviceTransferStage+0xc0>
   17430:	e1a00005 	mov	r0, r5
   17434:	eb0012c4 	bl	1bf4c <USBRequestSetCompletionRoutine>
   17438:	e5943788 	ldr	r3, [r4, #1928]	; 0x788
   1743c:	e3530000 	cmp	r3, #0
   17440:	1a000010 	bne	17488 <DWHCIDeviceTransferStage+0x84>
   17444:	e3a01001 	mov	r1, #1
   17448:	e1a03007 	mov	r3, r7
   1744c:	e5841788 	str	r1, [r4, #1928]	; 0x788
   17450:	e1a02006 	mov	r2, r6
   17454:	e1a01005 	mov	r1, r5
   17458:	e1a00004 	mov	r0, r4
   1745c:	ebffff48 	bl	17184 <DWHCIDeviceTransferStageAsync>
   17460:	e2503000 	subs	r3, r0, #0
   17464:	0a000005 	beq	17480 <DWHCIDeviceTransferStage+0x7c>
   17468:	e5943788 	ldr	r3, [r4, #1928]	; 0x788
   1746c:	e3530000 	cmp	r3, #0
   17470:	1afffffc 	bne	17468 <DWHCIDeviceTransferStage+0x64>
   17474:	e1a00005 	mov	r0, r5
   17478:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1747c:	ea00124d 	b	1bdb8 <USBRequestGetStatus>
   17480:	e5843788 	str	r3, [r4, #1928]	; 0x788
   17484:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   17488:	e59f2038 	ldr	r2, [pc, #56]	; 174c8 <DWHCIDeviceTransferStage+0xc4>
   1748c:	e59f1038 	ldr	r1, [pc, #56]	; 174cc <DWHCIDeviceTransferStage+0xc8>
   17490:	e59f0038 	ldr	r0, [pc, #56]	; 174d0 <DWHCIDeviceTransferStage+0xcc>
   17494:	eb003ebc 	bl	26f8c <uspi_assertion_failed>
   17498:	eaffffe9 	b	17444 <DWHCIDeviceTransferStage+0x40>
   1749c:	e59f2030 	ldr	r2, [pc, #48]	; 174d4 <DWHCIDeviceTransferStage+0xd0>
   174a0:	e59f1024 	ldr	r1, [pc, #36]	; 174cc <DWHCIDeviceTransferStage+0xc8>
   174a4:	e59f002c 	ldr	r0, [pc, #44]	; 174d8 <DWHCIDeviceTransferStage+0xd4>
   174a8:	eb003eb7 	bl	26f8c <uspi_assertion_failed>
   174ac:	eaffffdc 	b	17424 <DWHCIDeviceTransferStage+0x20>
   174b0:	e3a02d0b 	mov	r2, #704	; 0x2c0
   174b4:	e59f1010 	ldr	r1, [pc, #16]	; 174cc <DWHCIDeviceTransferStage+0xc8>
   174b8:	e59f001c 	ldr	r0, [pc, #28]	; 174dc <DWHCIDeviceTransferStage+0xd8>
   174bc:	eb003eb2 	bl	26f8c <uspi_assertion_failed>
   174c0:	eaffffd5 	b	1741c <DWHCIDeviceTransferStage+0x18>
   174c4:	00016718 	andeq	r6, r1, r8, lsl r7
   174c8:	000002c5 	andeq	r0, r0, r5, asr #5
   174cc:	00029a58 	andeq	r9, r2, r8, asr sl
   174d0:	00029bf0 	strdeq	r9, [r2], -r0
   174d4:	000002c2 	andeq	r0, r0, r2, asr #5
   174d8:	00029b30 	andeq	r9, r2, r0, lsr fp
   174dc:	00029a68 	andeq	r9, r2, r8, ror #20

000174e0 <DWHCIDeviceSubmitBlockingRequest>:
   174e0:	e92d4070 	push	{r4, r5, r6, lr}
   174e4:	e2505000 	subs	r5, r0, #0
   174e8:	e1a04001 	mov	r4, r1
   174ec:	0a00007f 	beq	176f0 <DWHCIDeviceSubmitBlockingRequest+0x210>
   174f0:	e3a03000 	mov	r3, #0
   174f4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   174f8:	e1540003 	cmp	r4, r3
   174fc:	0a000076 	beq	176dc <DWHCIDeviceSubmitBlockingRequest+0x1fc>
   17500:	e3a01000 	mov	r1, #0
   17504:	e1a00004 	mov	r0, r4
   17508:	eb00120e 	bl	1bd48 <USBRequestSetStatus>
   1750c:	e1a00004 	mov	r0, r4
   17510:	eb0011f8 	bl	1bcf8 <USBRequestGetEndpoint>
   17514:	eb001105 	bl	1b930 <USBEndpointGetType>
   17518:	e3500000 	cmp	r0, #0
   1751c:	e1a00004 	mov	r0, r4
   17520:	1a000018 	bne	17588 <DWHCIDeviceSubmitBlockingRequest+0xa8>
   17524:	eb001246 	bl	1be44 <USBRequestGetSetupData>
   17528:	e2506000 	subs	r6, r0, #0
   1752c:	0a000074 	beq	17704 <DWHCIDeviceSubmitBlockingRequest+0x224>
   17530:	e1d630d0 	ldrsb	r3, [r6]
   17534:	e1a00004 	mov	r0, r4
   17538:	e3530000 	cmp	r3, #0
   1753c:	ba00002c 	blt	175f4 <DWHCIDeviceSubmitBlockingRequest+0x114>
   17540:	eb001274 	bl	1bf18 <USBRequestGetBufLen>
   17544:	e2503000 	subs	r3, r0, #0
   17548:	1a000042 	bne	17658 <DWHCIDeviceSubmitBlockingRequest+0x178>
   1754c:	e1a02003 	mov	r2, r3
   17550:	e1a01004 	mov	r1, r4
   17554:	e1a00005 	mov	r0, r5
   17558:	ebffffa9 	bl	17404 <DWHCIDeviceTransferStage>
   1755c:	e3500000 	cmp	r0, #0
   17560:	0a000006 	beq	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   17564:	e3a03001 	mov	r3, #1
   17568:	e1a01004 	mov	r1, r4
   1756c:	e1a00005 	mov	r0, r5
   17570:	e1a02003 	mov	r2, r3
   17574:	ebffffa2 	bl	17404 <DWHCIDeviceTransferStage>
   17578:	e3500000 	cmp	r0, #0
   1757c:	1a000018 	bne	175e4 <DWHCIDeviceSubmitBlockingRequest+0x104>
   17580:	e3a00000 	mov	r0, #0
   17584:	e8bd8070 	pop	{r4, r5, r6, pc}
   17588:	eb0011da 	bl	1bcf8 <USBRequestGetEndpoint>
   1758c:	eb0010e7 	bl	1b930 <USBEndpointGetType>
   17590:	e3500001 	cmp	r0, #1
   17594:	0a000004 	beq	175ac <DWHCIDeviceSubmitBlockingRequest+0xcc>
   17598:	e1a00004 	mov	r0, r4
   1759c:	eb0011d5 	bl	1bcf8 <USBRequestGetEndpoint>
   175a0:	eb0010e2 	bl	1b930 <USBEndpointGetType>
   175a4:	e3500002 	cmp	r0, #2
   175a8:	1a000039 	bne	17694 <DWHCIDeviceSubmitBlockingRequest+0x1b4>
   175ac:	e1a00004 	mov	r0, r4
   175b0:	eb001258 	bl	1bf18 <USBRequestGetBufLen>
   175b4:	e3500000 	cmp	r0, #0
   175b8:	0a00003d 	beq	176b4 <DWHCIDeviceSubmitBlockingRequest+0x1d4>
   175bc:	e1a00004 	mov	r0, r4
   175c0:	eb0011cc 	bl	1bcf8 <USBRequestGetEndpoint>
   175c4:	eb0010e6 	bl	1b964 <USBEndpointIsDirectionIn>
   175c8:	e1a01004 	mov	r1, r4
   175cc:	e1a02000 	mov	r2, r0
   175d0:	e3a03000 	mov	r3, #0
   175d4:	e1a00005 	mov	r0, r5
   175d8:	ebffff89 	bl	17404 <DWHCIDeviceTransferStage>
   175dc:	e3500000 	cmp	r0, #0
   175e0:	0affffe6 	beq	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   175e4:	e3a03000 	mov	r3, #0
   175e8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   175ec:	e3a00001 	mov	r0, #1
   175f0:	e8bd8070 	pop	{r4, r5, r6, pc}
   175f4:	eb001247 	bl	1bf18 <USBRequestGetBufLen>
   175f8:	e3500000 	cmp	r0, #0
   175fc:	0a000031 	beq	176c8 <DWHCIDeviceSubmitBlockingRequest+0x1e8>
   17600:	e3a03000 	mov	r3, #0
   17604:	e1a01004 	mov	r1, r4
   17608:	e1a02003 	mov	r2, r3
   1760c:	e1a00005 	mov	r0, r5
   17610:	ebffff7b 	bl	17404 <DWHCIDeviceTransferStage>
   17614:	e3500000 	cmp	r0, #0
   17618:	0affffd8 	beq	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   1761c:	e3a03000 	mov	r3, #0
   17620:	e3a02001 	mov	r2, #1
   17624:	e1a01004 	mov	r1, r4
   17628:	e1a00005 	mov	r0, r5
   1762c:	ebffff74 	bl	17404 <DWHCIDeviceTransferStage>
   17630:	e3500000 	cmp	r0, #0
   17634:	0affffd1 	beq	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   17638:	e1a01004 	mov	r1, r4
   1763c:	e1a00005 	mov	r0, r5
   17640:	e3a03001 	mov	r3, #1
   17644:	e3a02000 	mov	r2, #0
   17648:	ebffff6d 	bl	17404 <DWHCIDeviceTransferStage>
   1764c:	e3500000 	cmp	r0, #0
   17650:	1affffe3 	bne	175e4 <DWHCIDeviceSubmitBlockingRequest+0x104>
   17654:	eaffffc9 	b	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   17658:	e3a03000 	mov	r3, #0
   1765c:	e1a01004 	mov	r1, r4
   17660:	e1a02003 	mov	r2, r3
   17664:	e1a00005 	mov	r0, r5
   17668:	ebffff65 	bl	17404 <DWHCIDeviceTransferStage>
   1766c:	e3500000 	cmp	r0, #0
   17670:	0affffc2 	beq	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   17674:	e3a03000 	mov	r3, #0
   17678:	e1a01004 	mov	r1, r4
   1767c:	e1a02003 	mov	r2, r3
   17680:	e1a00005 	mov	r0, r5
   17684:	ebffff5e 	bl	17404 <DWHCIDeviceTransferStage>
   17688:	e3500000 	cmp	r0, #0
   1768c:	0affffbb 	beq	17580 <DWHCIDeviceSubmitBlockingRequest+0xa0>
   17690:	eaffffb3 	b	17564 <DWHCIDeviceSubmitBlockingRequest+0x84>
   17694:	e59f207c 	ldr	r2, [pc, #124]	; 17718 <DWHCIDeviceSubmitBlockingRequest+0x238>
   17698:	e59f107c 	ldr	r1, [pc, #124]	; 1771c <DWHCIDeviceSubmitBlockingRequest+0x23c>
   1769c:	e59f007c 	ldr	r0, [pc, #124]	; 17720 <DWHCIDeviceSubmitBlockingRequest+0x240>
   176a0:	eb003e39 	bl	26f8c <uspi_assertion_failed>
   176a4:	e1a00004 	mov	r0, r4
   176a8:	eb00121a 	bl	1bf18 <USBRequestGetBufLen>
   176ac:	e3500000 	cmp	r0, #0
   176b0:	1affffc1 	bne	175bc <DWHCIDeviceSubmitBlockingRequest+0xdc>
   176b4:	e59f2068 	ldr	r2, [pc, #104]	; 17724 <DWHCIDeviceSubmitBlockingRequest+0x244>
   176b8:	e59f105c 	ldr	r1, [pc, #92]	; 1771c <DWHCIDeviceSubmitBlockingRequest+0x23c>
   176bc:	e59f0064 	ldr	r0, [pc, #100]	; 17728 <DWHCIDeviceSubmitBlockingRequest+0x248>
   176c0:	eb003e31 	bl	26f8c <uspi_assertion_failed>
   176c4:	eaffffbc 	b	175bc <DWHCIDeviceSubmitBlockingRequest+0xdc>
   176c8:	e59f205c 	ldr	r2, [pc, #92]	; 1772c <DWHCIDeviceSubmitBlockingRequest+0x24c>
   176cc:	e59f1048 	ldr	r1, [pc, #72]	; 1771c <DWHCIDeviceSubmitBlockingRequest+0x23c>
   176d0:	e59f0050 	ldr	r0, [pc, #80]	; 17728 <DWHCIDeviceSubmitBlockingRequest+0x248>
   176d4:	eb003e2c 	bl	26f8c <uspi_assertion_failed>
   176d8:	eaffffc8 	b	17600 <DWHCIDeviceSubmitBlockingRequest+0x120>
   176dc:	e59f204c 	ldr	r2, [pc, #76]	; 17730 <DWHCIDeviceSubmitBlockingRequest+0x250>
   176e0:	e59f1034 	ldr	r1, [pc, #52]	; 1771c <DWHCIDeviceSubmitBlockingRequest+0x23c>
   176e4:	e59f0048 	ldr	r0, [pc, #72]	; 17734 <DWHCIDeviceSubmitBlockingRequest+0x254>
   176e8:	eb003e27 	bl	26f8c <uspi_assertion_failed>
   176ec:	eaffff83 	b	17500 <DWHCIDeviceSubmitBlockingRequest+0x20>
   176f0:	e59f2040 	ldr	r2, [pc, #64]	; 17738 <DWHCIDeviceSubmitBlockingRequest+0x258>
   176f4:	e59f1020 	ldr	r1, [pc, #32]	; 1771c <DWHCIDeviceSubmitBlockingRequest+0x23c>
   176f8:	e59f003c 	ldr	r0, [pc, #60]	; 1773c <DWHCIDeviceSubmitBlockingRequest+0x25c>
   176fc:	eb003e22 	bl	26f8c <uspi_assertion_failed>
   17700:	eaffff7a 	b	174f0 <DWHCIDeviceSubmitBlockingRequest+0x10>
   17704:	e59f2034 	ldr	r2, [pc, #52]	; 17740 <DWHCIDeviceSubmitBlockingRequest+0x260>
   17708:	e59f100c 	ldr	r1, [pc, #12]	; 1771c <DWHCIDeviceSubmitBlockingRequest+0x23c>
   1770c:	e59f0030 	ldr	r0, [pc, #48]	; 17744 <DWHCIDeviceSubmitBlockingRequest+0x264>
   17710:	eb003e1d 	bl	26f8c <uspi_assertion_failed>
   17714:	eaffff85 	b	17530 <DWHCIDeviceSubmitBlockingRequest+0x50>
   17718:	00000142 	andeq	r0, r0, r2, asr #2
   1771c:	00029a58 	andeq	r9, r2, r8, asr sl
   17720:	00029b3c 	andeq	r9, r2, ip, lsr fp
   17724:	00000143 	andeq	r0, r0, r3, asr #2
   17728:	00029bd0 	ldrdeq	r9, [r2], -r0
   1772c:	00000121 	andeq	r0, r0, r1, lsr #2
   17730:	00000117 	andeq	r0, r0, r7, lsl r1
   17734:	00029b30 	andeq	r9, r2, r0, lsr fp
   17738:	00000113 	andeq	r0, r0, r3, lsl r1
   1773c:	00029a68 	andeq	r9, r2, r8, ror #20
   17740:	0000011d 	andeq	r0, r0, sp, lsl r1
   17744:	00029c04 	andeq	r9, r2, r4, lsl #24

00017748 <DWHCIDeviceControlMessage>:
   17748:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1774c:	e2505000 	subs	r5, r0, #0
   17750:	e24dd038 	sub	sp, sp, #56	; 0x38
   17754:	e1a0a001 	mov	sl, r1
   17758:	e1a09002 	mov	r9, r2
   1775c:	e1a08003 	mov	r8, r3
   17760:	e1dd75b8 	ldrh	r7, [sp, #88]	; 0x58
   17764:	e1dd65bc 	ldrh	r6, [sp, #92]	; 0x5c
   17768:	e1dd46b4 	ldrh	r4, [sp, #100]	; 0x64
   1776c:	0a000018 	beq	177d4 <DWHCIDeviceControlMessage+0x8c>
   17770:	e28d300c 	add	r3, sp, #12
   17774:	e1a0100a 	mov	r1, sl
   17778:	e58d3000 	str	r3, [sp]
   1777c:	e28d0014 	add	r0, sp, #20
   17780:	e1a03004 	mov	r3, r4
   17784:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
   17788:	e5cd900c 	strb	r9, [sp, #12]
   1778c:	e5cd800d 	strb	r8, [sp, #13]
   17790:	e1cd70be 	strh	r7, [sp, #14]
   17794:	e1cd61b0 	strh	r6, [sp, #16]
   17798:	e1cd41b2 	strh	r4, [sp, #18]
   1779c:	eb001115 	bl	1bbf8 <USBRequest>
   177a0:	e28d1014 	add	r1, sp, #20
   177a4:	e1a00005 	mov	r0, r5
   177a8:	ebffff4c 	bl	174e0 <DWHCIDeviceSubmitBlockingRequest>
   177ac:	e3500000 	cmp	r0, #0
   177b0:	0a00000c 	beq	177e8 <DWHCIDeviceControlMessage+0xa0>
   177b4:	e28d0014 	add	r0, sp, #20
   177b8:	eb00118b 	bl	1bdec <USBRequestGetResultLength>
   177bc:	e1a04000 	mov	r4, r0
   177c0:	e28d0014 	add	r0, sp, #20
   177c4:	eb00113b 	bl	1bcb8 <_USBRequest>
   177c8:	e1a00004 	mov	r0, r4
   177cc:	e28dd038 	add	sp, sp, #56	; 0x38
   177d0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   177d4:	e3a020e5 	mov	r2, #229	; 0xe5
   177d8:	e59f1010 	ldr	r1, [pc, #16]	; 177f0 <DWHCIDeviceControlMessage+0xa8>
   177dc:	e59f0010 	ldr	r0, [pc, #16]	; 177f4 <DWHCIDeviceControlMessage+0xac>
   177e0:	eb003de9 	bl	26f8c <uspi_assertion_failed>
   177e4:	eaffffe1 	b	17770 <DWHCIDeviceControlMessage+0x28>
   177e8:	e3e04000 	mvn	r4, #0
   177ec:	eafffff3 	b	177c0 <DWHCIDeviceControlMessage+0x78>
   177f0:	00029a58 	andeq	r9, r2, r8, asr sl
   177f4:	00029a68 	andeq	r9, r2, r8, ror #20

000177f8 <DWHCIDeviceGetDescriptor>:
   177f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   177fc:	e2504000 	subs	r4, r0, #0
   17800:	e24dd018 	sub	sp, sp, #24
   17804:	e1a05001 	mov	r5, r1
   17808:	e1a08002 	mov	r8, r2
   1780c:	e59d7030 	ldr	r7, [sp, #48]	; 0x30
   17810:	e5dd6038 	ldrb	r6, [sp, #56]	; 0x38
   17814:	0a00000e 	beq	17854 <DWHCIDeviceGetDescriptor+0x5c>
   17818:	e3a0e000 	mov	lr, #0
   1781c:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
   17820:	e1833408 	orr	r3, r3, r8, lsl #8
   17824:	e6ffc072 	uxth	ip, r2
   17828:	e58d3000 	str	r3, [sp]
   1782c:	e58d7008 	str	r7, [sp, #8]
   17830:	e1a02006 	mov	r2, r6
   17834:	e1a01005 	mov	r1, r5
   17838:	e1a00004 	mov	r0, r4
   1783c:	e58de004 	str	lr, [sp, #4]
   17840:	e58dc00c 	str	ip, [sp, #12]
   17844:	e3a03006 	mov	r3, #6
   17848:	ebffffbe 	bl	17748 <DWHCIDeviceControlMessage>
   1784c:	e28dd018 	add	sp, sp, #24
   17850:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   17854:	e3a020bd 	mov	r2, #189	; 0xbd
   17858:	e59f1010 	ldr	r1, [pc, #16]	; 17870 <DWHCIDeviceGetDescriptor+0x78>
   1785c:	e59f0010 	ldr	r0, [pc, #16]	; 17874 <DWHCIDeviceGetDescriptor+0x7c>
   17860:	e58d3014 	str	r3, [sp, #20]
   17864:	eb003dc8 	bl	26f8c <uspi_assertion_failed>
   17868:	e59d3014 	ldr	r3, [sp, #20]
   1786c:	eaffffe9 	b	17818 <DWHCIDeviceGetDescriptor+0x20>
   17870:	00029a58 	andeq	r9, r2, r8, asr sl
   17874:	00029a68 	andeq	r9, r2, r8, ror #20

00017878 <DWHCIDeviceSetAddress>:
   17878:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1787c:	e2505000 	subs	r5, r0, #0
   17880:	e24dd014 	sub	sp, sp, #20
   17884:	e1a06001 	mov	r6, r1
   17888:	e1a07002 	mov	r7, r2
   1788c:	0a000011 	beq	178d8 <DWHCIDeviceSetAddress+0x60>
   17890:	e3a04000 	mov	r4, #0
   17894:	e58d7000 	str	r7, [sp]
   17898:	e1a01006 	mov	r1, r6
   1789c:	e1a00005 	mov	r0, r5
   178a0:	e58d400c 	str	r4, [sp, #12]
   178a4:	e58d4008 	str	r4, [sp, #8]
   178a8:	e58d4004 	str	r4, [sp, #4]
   178ac:	e1a02004 	mov	r2, r4
   178b0:	e3a03005 	mov	r3, #5
   178b4:	ebffffa3 	bl	17748 <DWHCIDeviceControlMessage>
   178b8:	e1500004 	cmp	r0, r4
   178bc:	b1a00004 	movlt	r0, r4
   178c0:	ba000002 	blt	178d0 <DWHCIDeviceSetAddress+0x58>
   178c4:	e3a00032 	mov	r0, #50	; 0x32
   178c8:	eb003d36 	bl	26da8 <MsDelay>
   178cc:	e3a00001 	mov	r0, #1
   178d0:	e28dd014 	add	sp, sp, #20
   178d4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   178d8:	e3a020c7 	mov	r2, #199	; 0xc7
   178dc:	e59f1008 	ldr	r1, [pc, #8]	; 178ec <DWHCIDeviceSetAddress+0x74>
   178e0:	e59f0008 	ldr	r0, [pc, #8]	; 178f0 <DWHCIDeviceSetAddress+0x78>
   178e4:	eb003da8 	bl	26f8c <uspi_assertion_failed>
   178e8:	eaffffe8 	b	17890 <DWHCIDeviceSetAddress+0x18>
   178ec:	00029a58 	andeq	r9, r2, r8, asr sl
   178f0:	00029a68 	andeq	r9, r2, r8, ror #20

000178f4 <DWHCIDeviceSetConfiguration>:
   178f4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   178f8:	e2505000 	subs	r5, r0, #0
   178fc:	e24dd014 	sub	sp, sp, #20
   17900:	e1a06001 	mov	r6, r1
   17904:	e1a07002 	mov	r7, r2
   17908:	0a000011 	beq	17954 <DWHCIDeviceSetConfiguration+0x60>
   1790c:	e3a04000 	mov	r4, #0
   17910:	e58d7000 	str	r7, [sp]
   17914:	e1a01006 	mov	r1, r6
   17918:	e1a00005 	mov	r0, r5
   1791c:	e58d400c 	str	r4, [sp, #12]
   17920:	e58d4008 	str	r4, [sp, #8]
   17924:	e58d4004 	str	r4, [sp, #4]
   17928:	e1a02004 	mov	r2, r4
   1792c:	e3a03009 	mov	r3, #9
   17930:	ebffff84 	bl	17748 <DWHCIDeviceControlMessage>
   17934:	e1500004 	cmp	r0, r4
   17938:	b1a00004 	movlt	r0, r4
   1793c:	ba000002 	blt	1794c <DWHCIDeviceSetConfiguration+0x58>
   17940:	e3a00032 	mov	r0, #50	; 0x32
   17944:	eb003d17 	bl	26da8 <MsDelay>
   17948:	e3a00001 	mov	r0, #1
   1794c:	e28dd014 	add	sp, sp, #20
   17950:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   17954:	e3a020d5 	mov	r2, #213	; 0xd5
   17958:	e59f1008 	ldr	r1, [pc, #8]	; 17968 <DWHCIDeviceSetConfiguration+0x74>
   1795c:	e59f0008 	ldr	r0, [pc, #8]	; 1796c <DWHCIDeviceSetConfiguration+0x78>
   17960:	eb003d89 	bl	26f8c <uspi_assertion_failed>
   17964:	eaffffe8 	b	1790c <DWHCIDeviceSetConfiguration+0x18>
   17968:	00029a58 	andeq	r9, r2, r8, asr sl
   1796c:	00029a68 	andeq	r9, r2, r8, ror #20

00017970 <DWHCIDeviceTransfer>:
   17970:	e92d4070 	push	{r4, r5, r6, lr}
   17974:	e2504000 	subs	r4, r0, #0
   17978:	e24dd038 	sub	sp, sp, #56	; 0x38
   1797c:	e1a05001 	mov	r5, r1
   17980:	e1a06002 	mov	r6, r2
   17984:	0a000012 	beq	179d4 <DWHCIDeviceTransfer+0x64>
   17988:	e3a00000 	mov	r0, #0
   1798c:	e1a02006 	mov	r2, r6
   17990:	e1a01005 	mov	r1, r5
   17994:	e58d0000 	str	r0, [sp]
   17998:	e28d0014 	add	r0, sp, #20
   1799c:	eb001095 	bl	1bbf8 <USBRequest>
   179a0:	e28d1014 	add	r1, sp, #20
   179a4:	e1a00004 	mov	r0, r4
   179a8:	ebfffecc 	bl	174e0 <DWHCIDeviceSubmitBlockingRequest>
   179ac:	e3500000 	cmp	r0, #0
   179b0:	0a00000e 	beq	179f0 <DWHCIDeviceTransfer+0x80>
   179b4:	e28d0014 	add	r0, sp, #20
   179b8:	eb00110b 	bl	1bdec <USBRequestGetResultLength>
   179bc:	e1a04000 	mov	r4, r0
   179c0:	e28d0014 	add	r0, sp, #20
   179c4:	eb0010bb 	bl	1bcb8 <_USBRequest>
   179c8:	e1a00004 	mov	r0, r4
   179cc:	e28dd038 	add	sp, sp, #56	; 0x38
   179d0:	e8bd8070 	pop	{r4, r5, r6, pc}
   179d4:	e3a02c01 	mov	r2, #256	; 0x100
   179d8:	e59f1018 	ldr	r1, [pc, #24]	; 179f8 <DWHCIDeviceTransfer+0x88>
   179dc:	e59f0018 	ldr	r0, [pc, #24]	; 179fc <DWHCIDeviceTransfer+0x8c>
   179e0:	e58d300c 	str	r3, [sp, #12]
   179e4:	eb003d68 	bl	26f8c <uspi_assertion_failed>
   179e8:	e59d300c 	ldr	r3, [sp, #12]
   179ec:	eaffffe5 	b	17988 <DWHCIDeviceTransfer+0x18>
   179f0:	e3e04000 	mvn	r4, #0
   179f4:	eafffff1 	b	179c0 <DWHCIDeviceTransfer+0x50>
   179f8:	00029a58 	andeq	r9, r2, r8, asr sl
   179fc:	00029a68 	andeq	r9, r2, r8, ror #20

00017a00 <DWHCIDeviceChannelInterruptHandler>:
   17a00:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a04:	e2506000 	subs	r6, r0, #0
   17a08:	e24dd018 	sub	sp, sp, #24
   17a0c:	e1a05001 	mov	r5, r1
   17a10:	0a000062 	beq	17ba0 <DWHCIDeviceChannelInterruptHandler+0x1a0>
   17a14:	e0654205 	rsb	r4, r5, r5, lsl #4
   17a18:	e0864184 	add	r4, r6, r4, lsl #3
   17a1c:	e2844008 	add	r4, r4, #8
   17a20:	e1a00004 	mov	r0, r4
   17a24:	eb000994 	bl	1a07c <DWHCITransferStageDataGetFrameScheduler>
   17a28:	e1a08000 	mov	r8, r0
   17a2c:	e1a00004 	mov	r0, r4
   17a30:	eb00097c 	bl	1a028 <DWHCITransferStageDataGetURB>
   17a34:	e2509000 	subs	r9, r0, #0
   17a38:	0a00005d 	beq	17bb4 <DWHCIDeviceChannelInterruptHandler+0x1b4>
   17a3c:	e1a00004 	mov	r0, r4
   17a40:	eb0006f4 	bl	19618 <DWHCITransferStageDataGetSubState>
   17a44:	e3500000 	cmp	r0, #0
   17a48:	0a000045 	beq	17b64 <DWHCIDeviceChannelInterruptHandler+0x164>
   17a4c:	e3500001 	cmp	r0, #1
   17a50:	0a000012 	beq	17aa0 <DWHCIDeviceChannelInterruptHandler+0xa0>
   17a54:	e59f23cc 	ldr	r2, [pc, #972]	; 17e28 <DWHCIDeviceChannelInterruptHandler+0x428>
   17a58:	e59f13cc 	ldr	r1, [pc, #972]	; 17e2c <DWHCIDeviceChannelInterruptHandler+0x42c>
   17a5c:	e59f03cc 	ldr	r0, [pc, #972]	; 17e30 <DWHCIDeviceChannelInterruptHandler+0x430>
   17a60:	eb003d49 	bl	26f8c <uspi_assertion_failed>
   17a64:	e1a00004 	mov	r0, r4
   17a68:	eb0006cf 	bl	195ac <DWHCITransferStageDataGetState>
   17a6c:	e3500001 	cmp	r0, #1
   17a70:	e1a07000 	mov	r7, r0
   17a74:	0a000097 	beq	17cd8 <DWHCIDeviceChannelInterruptHandler+0x2d8>
   17a78:	e3500000 	cmp	r0, #0
   17a7c:	0a00007a 	beq	17c6c <DWHCIDeviceChannelInterruptHandler+0x26c>
   17a80:	e3500002 	cmp	r0, #2
   17a84:	0a00004f 	beq	17bc8 <DWHCIDeviceChannelInterruptHandler+0x1c8>
   17a88:	e59f23a4 	ldr	r2, [pc, #932]	; 17e34 <DWHCIDeviceChannelInterruptHandler+0x434>
   17a8c:	e59f1398 	ldr	r1, [pc, #920]	; 17e2c <DWHCIDeviceChannelInterruptHandler+0x42c>
   17a90:	e59f0398 	ldr	r0, [pc, #920]	; 17e30 <DWHCIDeviceChannelInterruptHandler+0x430>
   17a94:	eb003d3c 	bl	26f8c <uspi_assertion_failed>
   17a98:	e28dd018 	add	sp, sp, #24
   17a9c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17aa0:	e1a00004 	mov	r0, r4
   17aa4:	eb000872 	bl	19c74 <DWHCITransferStageDataGetDMAAddress>
   17aa8:	e1a07000 	mov	r7, r0
   17aac:	e1a00004 	mov	r0, r4
   17ab0:	eb000884 	bl	19cc8 <DWHCITransferStageDataGetBytesToTransfer>
   17ab4:	e1a01000 	mov	r1, r0
   17ab8:	e1a00007 	mov	r0, r7
   17abc:	eb002fca 	bl	239ec <uspi_CleanAndInvalidateDataCacheRange>
   17ac0:	e3a03000 	mov	r3, #0
   17ac4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   17ac8:	e59f1368 	ldr	r1, [pc, #872]	; 17e38 <DWHCIDeviceChannelInterruptHandler+0x438>
   17acc:	e1a07285 	lsl	r7, r5, #5
   17ad0:	e0871001 	add	r1, r7, r1
   17ad4:	e1a0000d 	mov	r0, sp
   17ad8:	eb0004d5 	bl	18e34 <DWHCIRegister>
   17adc:	e1a0000d 	mov	r0, sp
   17ae0:	eb0004ff 	bl	18ee4 <DWHCIRegisterRead>
   17ae4:	e59f1350 	ldr	r1, [pc, #848]	; 17e3c <DWHCIDeviceChannelInterruptHandler+0x43c>
   17ae8:	e28d000c 	add	r0, sp, #12
   17aec:	e0871001 	add	r1, r7, r1
   17af0:	eb0004cf 	bl	18e34 <DWHCIRegister>
   17af4:	e28d000c 	add	r0, sp, #12
   17af8:	eb0004f9 	bl	18ee4 <DWHCIRegisterRead>
   17afc:	e3500002 	cmp	r0, #2
   17b00:	0a000054 	beq	17c58 <DWHCIDeviceChannelInterruptHandler+0x258>
   17b04:	e1a00004 	mov	r0, r4
   17b08:	eb0006de 	bl	19688 <DWHCITransferStageDataIsPeriodic>
   17b0c:	e3500000 	cmp	r0, #0
   17b10:	1a000018 	bne	17b78 <DWHCIDeviceChannelInterruptHandler+0x178>
   17b14:	e28d000c 	add	r0, sp, #12
   17b18:	eb0004f1 	bl	18ee4 <DWHCIRegisterRead>
   17b1c:	e1a0a000 	mov	sl, r0
   17b20:	e1a0000d 	mov	r0, sp
   17b24:	eb000515 	bl	18f80 <DWHCIRegisterGet>
   17b28:	e1a07000 	mov	r7, r0
   17b2c:	e1a0000d 	mov	r0, sp
   17b30:	eb000512 	bl	18f80 <DWHCIRegisterGet>
   17b34:	e59f2304 	ldr	r2, [pc, #772]	; 17e40 <DWHCIDeviceChannelInterruptHandler+0x440>
   17b38:	e3c034ff 	bic	r3, r0, #-16777216	; 0xff000000
   17b3c:	e3c3373e 	bic	r3, r3, #16252928	; 0xf80000
   17b40:	e1a0100a 	mov	r1, sl
   17b44:	e00229a7 	and	r2, r2, r7, lsr #19
   17b48:	e1a00004 	mov	r0, r4
   17b4c:	eb000612 	bl	1939c <DWHCITransferStageDataTransactionComplete>
   17b50:	e28d000c 	add	r0, sp, #12
   17b54:	eb0004d5 	bl	18eb0 <_DWHCIRegister>
   17b58:	e1a0000d 	mov	r0, sp
   17b5c:	eb0004d3 	bl	18eb0 <_DWHCIRegister>
   17b60:	eaffffbf 	b	17a64 <DWHCIDeviceChannelInterruptHandler+0x64>
   17b64:	e1a01004 	mov	r1, r4
   17b68:	e1a00006 	mov	r0, r6
   17b6c:	ebfffb9b 	bl	169e0 <DWHCIDeviceStartChannel>
   17b70:	e28dd018 	add	sp, sp, #24
   17b74:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b78:	e1a0000d 	mov	r0, sp
   17b7c:	eb0004ff 	bl	18f80 <DWHCIRegisterGet>
   17b80:	e2200206 	eor	r0, r0, #1610612736	; 0x60000000
   17b84:	e3100206 	tst	r0, #1610612736	; 0x60000000
   17b88:	1affffe1 	bne	17b14 <DWHCIDeviceChannelInterruptHandler+0x114>
   17b8c:	e59f22b0 	ldr	r2, [pc, #688]	; 17e44 <DWHCIDeviceChannelInterruptHandler+0x444>
   17b90:	e59f1294 	ldr	r1, [pc, #660]	; 17e2c <DWHCIDeviceChannelInterruptHandler+0x42c>
   17b94:	e59f02ac 	ldr	r0, [pc, #684]	; 17e48 <DWHCIDeviceChannelInterruptHandler+0x448>
   17b98:	eb003cfb 	bl	26f8c <uspi_assertion_failed>
   17b9c:	eaffffdc 	b	17b14 <DWHCIDeviceChannelInterruptHandler+0x114>
   17ba0:	e59f22a4 	ldr	r2, [pc, #676]	; 17e4c <DWHCIDeviceChannelInterruptHandler+0x44c>
   17ba4:	e59f1280 	ldr	r1, [pc, #640]	; 17e2c <DWHCIDeviceChannelInterruptHandler+0x42c>
   17ba8:	e59f02a0 	ldr	r0, [pc, #672]	; 17e50 <DWHCIDeviceChannelInterruptHandler+0x450>
   17bac:	eb003cf6 	bl	26f8c <uspi_assertion_failed>
   17bb0:	eaffff97 	b	17a14 <DWHCIDeviceChannelInterruptHandler+0x14>
   17bb4:	e59f2298 	ldr	r2, [pc, #664]	; 17e54 <DWHCIDeviceChannelInterruptHandler+0x454>
   17bb8:	e59f126c 	ldr	r1, [pc, #620]	; 17e2c <DWHCIDeviceChannelInterruptHandler+0x42c>
   17bbc:	e59f0294 	ldr	r0, [pc, #660]	; 17e58 <DWHCIDeviceChannelInterruptHandler+0x458>
   17bc0:	eb003cf1 	bl	26f8c <uspi_assertion_failed>
   17bc4:	eaffff9c 	b	17a3c <DWHCIDeviceChannelInterruptHandler+0x3c>
   17bc8:	e1a00004 	mov	r0, r4
   17bcc:	eb0008e2 	bl	19f5c <DWHCITransferStageDataGetTransactionStatus>
   17bd0:	e59f2284 	ldr	r2, [pc, #644]	; 17e5c <DWHCIDeviceChannelInterruptHandler+0x45c>
   17bd4:	e0022000 	and	r2, r2, r0
   17bd8:	e3520000 	cmp	r2, #0
   17bdc:	1a00007d 	bne	17dd8 <DWHCIDeviceChannelInterruptHandler+0x3d8>
   17be0:	e1a01000 	mov	r1, r0
   17be4:	e598300c 	ldr	r3, [r8, #12]
   17be8:	e1a00008 	mov	r0, r8
   17bec:	e12fff33 	blx	r3
   17bf0:	e5983008 	ldr	r3, [r8, #8]
   17bf4:	e1a00008 	mov	r0, r8
   17bf8:	e12fff33 	blx	r3
   17bfc:	e3500000 	cmp	r0, #0
   17c00:	1a000014 	bne	17c58 <DWHCIDeviceChannelInterruptHandler+0x258>
   17c04:	e1a00004 	mov	r0, r4
   17c08:	eb0008e8 	bl	19fb0 <DWHCITransferStageDataIsStageComplete>
   17c0c:	e3500000 	cmp	r0, #0
   17c10:	1a000041 	bne	17d1c <DWHCIDeviceChannelInterruptHandler+0x31c>
   17c14:	e1a00004 	mov	r0, r4
   17c18:	eb00068b 	bl	1964c <DWHCITransferStageDataBeginSplitCycle>
   17c1c:	e2501000 	subs	r1, r0, #0
   17c20:	0a00001e 	beq	17ca0 <DWHCIDeviceChannelInterruptHandler+0x2a0>
   17c24:	e1a00004 	mov	r0, r4
   17c28:	eb000696 	bl	19688 <DWHCITransferStageDataIsPeriodic>
   17c2c:	e2505000 	subs	r5, r0, #0
   17c30:	1a000048 	bne	17d58 <DWHCIDeviceChannelInterruptHandler+0x358>
   17c34:	e3a01001 	mov	r1, #1
   17c38:	e1a00004 	mov	r0, r4
   17c3c:	eb00064c 	bl	19574 <DWHCITransferStageDataSetState>
   17c40:	e1a00004 	mov	r0, r4
   17c44:	e1a01005 	mov	r1, r5
   17c48:	eb000632 	bl	19518 <DWHCITransferStageDataSetSplitComplete>
   17c4c:	e5983004 	ldr	r3, [r8, #4]
   17c50:	e1a00008 	mov	r0, r8
   17c54:	e12fff33 	blx	r3
   17c58:	e1a01004 	mov	r1, r4
   17c5c:	e1a00006 	mov	r0, r6
   17c60:	ebfffc5f 	bl	16de4 <DWHCIDeviceStartTransaction>
   17c64:	e28dd018 	add	sp, sp, #24
   17c68:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c6c:	e1a00004 	mov	r0, r4
   17c70:	eb0008b9 	bl	19f5c <DWHCITransferStageDataGetTransactionStatus>
   17c74:	e59f21e0 	ldr	r2, [pc, #480]	; 17e5c <DWHCIDeviceChannelInterruptHandler+0x45c>
   17c78:	e0022000 	and	r2, r2, r0
   17c7c:	e3520000 	cmp	r2, #0
   17c80:	1a00004b 	bne	17db4 <DWHCIDeviceChannelInterruptHandler+0x3b4>
   17c84:	e3100050 	tst	r0, #80	; 0x50
   17c88:	1a00002e 	bne	17d48 <DWHCIDeviceChannelInterruptHandler+0x348>
   17c8c:	e1a00004 	mov	r0, r4
   17c90:	eb0007e9 	bl	19c3c <DWHCITransferStageDataIsStatusStage>
   17c94:	e3500000 	cmp	r0, #0
   17c98:	0a00005c 	beq	17e10 <DWHCIDeviceChannelInterruptHandler+0x410>
   17c9c:	e3a01001 	mov	r1, #1
   17ca0:	e1a00009 	mov	r0, r9
   17ca4:	eb001027 	bl	1bd48 <USBRequestSetStatus>
   17ca8:	e1a01005 	mov	r1, r5
   17cac:	e1a00006 	mov	r0, r6
   17cb0:	ebfffb2b 	bl	16964 <DWHCIDeviceDisableChannelInterrupt>
   17cb4:	e1a00004 	mov	r0, r4
   17cb8:	eb0005a1 	bl	19344 <_DWHCITransferStageData>
   17cbc:	e1a01005 	mov	r1, r5
   17cc0:	e1a00006 	mov	r0, r6
   17cc4:	ebfffd06 	bl	170e4 <DWHCIDeviceFreeChannel>
   17cc8:	e1a00009 	mov	r0, r9
   17ccc:	eb0010bb 	bl	1bfc0 <USBRequestCallCompletionRoutine>
   17cd0:	e28dd018 	add	sp, sp, #24
   17cd4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17cd8:	e1a00004 	mov	r0, r4
   17cdc:	eb00089e 	bl	19f5c <DWHCITransferStageDataGetTransactionStatus>
   17ce0:	e59f2178 	ldr	r2, [pc, #376]	; 17e60 <DWHCIDeviceChannelInterruptHandler+0x460>
   17ce4:	e0022000 	and	r2, r2, r0
   17ce8:	e3520000 	cmp	r2, #0
   17cec:	1a000040 	bne	17df4 <DWHCIDeviceChannelInterruptHandler+0x3f4>
   17cf0:	e1a01000 	mov	r1, r0
   17cf4:	e598300c 	ldr	r3, [r8, #12]
   17cf8:	e1a00008 	mov	r0, r8
   17cfc:	e12fff33 	blx	r3
   17d00:	e1a00004 	mov	r0, r4
   17d04:	e3a01002 	mov	r1, #2
   17d08:	eb000619 	bl	19574 <DWHCITransferStageDataSetState>
   17d0c:	e1a01007 	mov	r1, r7
   17d10:	e1a00004 	mov	r0, r4
   17d14:	eb0005ff 	bl	19518 <DWHCITransferStageDataSetSplitComplete>
   17d18:	eaffffb4 	b	17bf0 <DWHCIDeviceChannelInterruptHandler+0x1f0>
   17d1c:	e1a01005 	mov	r1, r5
   17d20:	e1a00006 	mov	r0, r6
   17d24:	ebfffb0e 	bl	16964 <DWHCIDeviceDisableChannelInterrupt>
   17d28:	e1a00004 	mov	r0, r4
   17d2c:	eb0007c2 	bl	19c3c <DWHCITransferStageDataIsStatusStage>
   17d30:	e3500000 	cmp	r0, #0
   17d34:	0a000018 	beq	17d9c <DWHCIDeviceChannelInterruptHandler+0x39c>
   17d38:	e3a01001 	mov	r1, #1
   17d3c:	e1a00009 	mov	r0, r9
   17d40:	eb001000 	bl	1bd48 <USBRequestSetStatus>
   17d44:	eaffffda 	b	17cb4 <DWHCIDeviceChannelInterruptHandler+0x2b4>
   17d48:	e1a00004 	mov	r0, r4
   17d4c:	eb00064d 	bl	19688 <DWHCITransferStageDataIsPeriodic>
   17d50:	e3500000 	cmp	r0, #0
   17d54:	0affffcc 	beq	17c8c <DWHCIDeviceChannelInterruptHandler+0x28c>
   17d58:	e3a01003 	mov	r1, #3
   17d5c:	e1a00004 	mov	r0, r4
   17d60:	eb000603 	bl	19574 <DWHCITransferStageDataSetState>
   17d64:	e1a00009 	mov	r0, r9
   17d68:	eb000fe2 	bl	1bcf8 <USBRequestGetEndpoint>
   17d6c:	eb000f24 	bl	1ba04 <USBEndpointGetInterval>
   17d70:	e0800100 	add	r0, r0, r0, lsl #2
   17d74:	e59f30e8 	ldr	r3, [pc, #232]	; 17e64 <DWHCIDeviceChannelInterruptHandler+0x464>
   17d78:	e0800100 	add	r0, r0, r0, lsl #2
   17d7c:	e1a00100 	lsl	r0, r0, #2
   17d80:	e0803093 	umull	r3, r0, r3, r0
   17d84:	e1a02004 	mov	r2, r4
   17d88:	e1a03006 	mov	r3, r6
   17d8c:	e59f10d4 	ldr	r1, [pc, #212]	; 17e68 <DWHCIDeviceChannelInterruptHandler+0x468>
   17d90:	e1a00320 	lsr	r0, r0, #6
   17d94:	eb003c0f 	bl	26dd8 <StartKernelTimer>
   17d98:	eaffff3e 	b	17a98 <DWHCIDeviceChannelInterruptHandler+0x98>
   17d9c:	e1a00004 	mov	r0, r4
   17da0:	eb000891 	bl	19fec <DWHCITransferStageDataGetResultLen>
   17da4:	e1a01000 	mov	r1, r0
   17da8:	e1a00009 	mov	r0, r9
   17dac:	eb000ff3 	bl	1bd80 <USBRequestSetResultLen>
   17db0:	eaffffe0 	b	17d38 <DWHCIDeviceChannelInterruptHandler+0x338>
   17db4:	e1a03000 	mov	r3, r0
   17db8:	e59f20ac 	ldr	r2, [pc, #172]	; 17e6c <DWHCIDeviceChannelInterruptHandler+0x46c>
   17dbc:	e3a01001 	mov	r1, #1
   17dc0:	e59f00a8 	ldr	r0, [pc, #168]	; 17e70 <DWHCIDeviceChannelInterruptHandler+0x470>
   17dc4:	eb003c5e 	bl	26f44 <LogWrite>
   17dc8:	e1a01007 	mov	r1, r7
   17dcc:	e1a00009 	mov	r0, r9
   17dd0:	eb000fdc 	bl	1bd48 <USBRequestSetStatus>
   17dd4:	eaffffb3 	b	17ca8 <DWHCIDeviceChannelInterruptHandler+0x2a8>
   17dd8:	e1a03000 	mov	r3, r0
   17ddc:	e3a01001 	mov	r1, #1
   17de0:	e59f2084 	ldr	r2, [pc, #132]	; 17e6c <DWHCIDeviceChannelInterruptHandler+0x46c>
   17de4:	e59f0084 	ldr	r0, [pc, #132]	; 17e70 <DWHCIDeviceChannelInterruptHandler+0x470>
   17de8:	eb003c55 	bl	26f44 <LogWrite>
   17dec:	e3a01000 	mov	r1, #0
   17df0:	eaffffaa 	b	17ca0 <DWHCIDeviceChannelInterruptHandler+0x2a0>
   17df4:	e1a03000 	mov	r3, r0
   17df8:	e1a01007 	mov	r1, r7
   17dfc:	e59f2068 	ldr	r2, [pc, #104]	; 17e6c <DWHCIDeviceChannelInterruptHandler+0x46c>
   17e00:	e59f0068 	ldr	r0, [pc, #104]	; 17e70 <DWHCIDeviceChannelInterruptHandler+0x470>
   17e04:	eb003c4e 	bl	26f44 <LogWrite>
   17e08:	e3a01000 	mov	r1, #0
   17e0c:	eaffffa3 	b	17ca0 <DWHCIDeviceChannelInterruptHandler+0x2a0>
   17e10:	e1a00004 	mov	r0, r4
   17e14:	eb000874 	bl	19fec <DWHCITransferStageDataGetResultLen>
   17e18:	e1a01000 	mov	r1, r0
   17e1c:	e1a00009 	mov	r0, r9
   17e20:	eb000fd6 	bl	1bd80 <USBRequestSetResultLen>
   17e24:	eaffff9c 	b	17c9c <DWHCIDeviceChannelInterruptHandler+0x29c>
   17e28:	000003da 	ldrdeq	r0, [r0], -sl
   17e2c:	00029a58 	andeq	r9, r2, r8, asr sl
   17e30:	000299fc 	strdeq	r9, [r2], -ip
   17e34:	00000478 	andeq	r0, r0, r8, ror r4
   17e38:	20980510 	addscs	r0, r8, r0, lsl r5
   17e3c:	20980508 	addscs	r0, r8, r8, lsl #10
   17e40:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17e44:	000003cf 	andeq	r0, r0, pc, asr #7
   17e48:	00029c10 	andeq	r9, r2, r0, lsl ip
   17e4c:	000003ad 	andeq	r0, r0, sp, lsr #7
   17e50:	00029a68 	andeq	r9, r2, r8, ror #20
   17e54:	000003b2 			; <UNDEFINED> instruction: 0x000003b2
   17e58:	00029b30 	andeq	r9, r2, r0, lsr fp
   17e5c:	0000078c 	andeq	r0, r0, ip, lsl #15
   17e60:	000007dc 	ldrdeq	r0, [r0], -ip
   17e64:	10624dd3 	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   17e68:	00016f20 	andeq	r6, r1, r0, lsr #30
   17e6c:	00029ca8 	andeq	r9, r2, r8, lsr #25
   17e70:	00028548 	andeq	r8, r2, r8, asr #10

00017e74 <DWHCIDeviceInterruptHandler>:
   17e74:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   17e78:	e2506000 	subs	r6, r0, #0
   17e7c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   17e80:	0a000037 	beq	17f64 <DWHCIDeviceInterruptHandler+0xf0>
   17e84:	e3a04000 	mov	r4, #0
   17e88:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   17e8c:	e59f10e4 	ldr	r1, [pc, #228]	; 17f78 <DWHCIDeviceInterruptHandler+0x104>
   17e90:	e28d0004 	add	r0, sp, #4
   17e94:	eb0003e6 	bl	18e34 <DWHCIRegister>
   17e98:	e28d0004 	add	r0, sp, #4
   17e9c:	eb000410 	bl	18ee4 <DWHCIRegisterRead>
   17ea0:	e28d0004 	add	r0, sp, #4
   17ea4:	eb000435 	bl	18f80 <DWHCIRegisterGet>
   17ea8:	e3100402 	tst	r0, #33554432	; 0x2000000
   17eac:	1a000007 	bne	17ed0 <DWHCIDeviceInterruptHandler+0x5c>
   17eb0:	e28d0004 	add	r0, sp, #4
   17eb4:	eb00041a 	bl	18f24 <DWHCIRegisterWrite>
   17eb8:	e3a03000 	mov	r3, #0
   17ebc:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   17ec0:	e28d0004 	add	r0, sp, #4
   17ec4:	eb0003f9 	bl	18eb0 <_DWHCIRegister>
   17ec8:	e28dd02c 	add	sp, sp, #44	; 0x2c
   17ecc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   17ed0:	e59f10a4 	ldr	r1, [pc, #164]	; 17f7c <DWHCIDeviceInterruptHandler+0x108>
   17ed4:	e28d0010 	add	r0, sp, #16
   17ed8:	eb0003d5 	bl	18e34 <DWHCIRegister>
   17edc:	e28d0010 	add	r0, sp, #16
   17ee0:	eb0003ff 	bl	18ee4 <DWHCIRegisterRead>
   17ee4:	e28d0010 	add	r0, sp, #16
   17ee8:	eb00040d 	bl	18f24 <DWHCIRegisterWrite>
   17eec:	e5963000 	ldr	r3, [r6]
   17ef0:	e1530004 	cmp	r3, r4
   17ef4:	0a000017 	beq	17f58 <DWHCIDeviceInterruptHandler+0xe4>
   17ef8:	e3a05001 	mov	r5, #1
   17efc:	e59f707c 	ldr	r7, [pc, #124]	; 17f80 <DWHCIDeviceInterruptHandler+0x10c>
   17f00:	ea000004 	b	17f18 <DWHCIDeviceInterruptHandler+0xa4>
   17f04:	e5963000 	ldr	r3, [r6]
   17f08:	e2844001 	add	r4, r4, #1
   17f0c:	e1530004 	cmp	r3, r4
   17f10:	e1a05085 	lsl	r5, r5, #1
   17f14:	9a00000f 	bls	17f58 <DWHCIDeviceInterruptHandler+0xe4>
   17f18:	e28d0010 	add	r0, sp, #16
   17f1c:	eb000417 	bl	18f80 <DWHCIRegisterGet>
   17f20:	e1100005 	tst	r0, r5
   17f24:	0afffff6 	beq	17f04 <DWHCIDeviceInterruptHandler+0x90>
   17f28:	e3a02000 	mov	r2, #0
   17f2c:	e0871284 	add	r1, r7, r4, lsl #5
   17f30:	e28d001c 	add	r0, sp, #28
   17f34:	eb0003cc 	bl	18e6c <DWHCIRegister2>
   17f38:	e28d001c 	add	r0, sp, #28
   17f3c:	eb0003f8 	bl	18f24 <DWHCIRegisterWrite>
   17f40:	e1a00006 	mov	r0, r6
   17f44:	e1a01004 	mov	r1, r4
   17f48:	ebfffeac 	bl	17a00 <DWHCIDeviceChannelInterruptHandler>
   17f4c:	e28d001c 	add	r0, sp, #28
   17f50:	eb0003d6 	bl	18eb0 <_DWHCIRegister>
   17f54:	eaffffea 	b	17f04 <DWHCIDeviceInterruptHandler+0x90>
   17f58:	e28d0010 	add	r0, sp, #16
   17f5c:	eb0003d3 	bl	18eb0 <_DWHCIRegister>
   17f60:	eaffffd2 	b	17eb0 <DWHCIDeviceInterruptHandler+0x3c>
   17f64:	e3a02d12 	mov	r2, #1152	; 0x480
   17f68:	e59f1014 	ldr	r1, [pc, #20]	; 17f84 <DWHCIDeviceInterruptHandler+0x110>
   17f6c:	e59f0014 	ldr	r0, [pc, #20]	; 17f88 <DWHCIDeviceInterruptHandler+0x114>
   17f70:	eb003c05 	bl	26f8c <uspi_assertion_failed>
   17f74:	eaffffc2 	b	17e84 <DWHCIDeviceInterruptHandler+0x10>
   17f78:	20980014 	addscs	r0, r8, r4, lsl r0
   17f7c:	20980414 	addscs	r0, r8, r4, lsl r4
   17f80:	2098050c 	addscs	r0, r8, ip, lsl #10
   17f84:	00029a58 	andeq	r9, r2, r8, asr sl
   17f88:	00029a68 	andeq	r9, r2, r8, ror #20

00017f8c <DWHCIDeviceWaitForBit>:
   17f8c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   17f90:	e3500000 	cmp	r0, #0
   17f94:	e1a05001 	mov	r5, r1
   17f98:	e1a06002 	mov	r6, r2
   17f9c:	e1a07003 	mov	r7, r3
   17fa0:	e59d4018 	ldr	r4, [sp, #24]
   17fa4:	0a000024 	beq	1803c <DWHCIDeviceWaitForBit+0xb0>
   17fa8:	e3550000 	cmp	r5, #0
   17fac:	0a00001d 	beq	18028 <DWHCIDeviceWaitForBit+0x9c>
   17fb0:	e3560000 	cmp	r6, #0
   17fb4:	0a000016 	beq	18014 <DWHCIDeviceWaitForBit+0x88>
   17fb8:	e3540000 	cmp	r4, #0
   17fbc:	0a00000f 	beq	18000 <DWHCIDeviceWaitForBit+0x74>
   17fc0:	e1a00005 	mov	r0, r5
   17fc4:	eb0003c6 	bl	18ee4 <DWHCIRegisterRead>
   17fc8:	e1100006 	tst	r0, r6
   17fcc:	116f3f17 	clzne	r3, r7
   17fd0:	11a032a3 	lsrne	r3, r3, #5
   17fd4:	1a000001 	bne	17fe0 <DWHCIDeviceWaitForBit+0x54>
   17fd8:	e2973000 	adds	r3, r7, #0
   17fdc:	13a03001 	movne	r3, #1
   17fe0:	e3530000 	cmp	r3, #0
   17fe4:	e3a00001 	mov	r0, #1
   17fe8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   17fec:	eb003b6d 	bl	26da8 <MsDelay>
   17ff0:	e2544001 	subs	r4, r4, #1
   17ff4:	1afffff1 	bne	17fc0 <DWHCIDeviceWaitForBit+0x34>
   17ff8:	e1a00004 	mov	r0, r4
   17ffc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   18000:	e59f2048 	ldr	r2, [pc, #72]	; 18050 <DWHCIDeviceWaitForBit+0xc4>
   18004:	e59f1048 	ldr	r1, [pc, #72]	; 18054 <DWHCIDeviceWaitForBit+0xc8>
   18008:	e59f0048 	ldr	r0, [pc, #72]	; 18058 <DWHCIDeviceWaitForBit+0xcc>
   1800c:	eb003bde 	bl	26f8c <uspi_assertion_failed>
   18010:	eaffffea 	b	17fc0 <DWHCIDeviceWaitForBit+0x34>
   18014:	e59f2040 	ldr	r2, [pc, #64]	; 1805c <DWHCIDeviceWaitForBit+0xd0>
   18018:	e59f1034 	ldr	r1, [pc, #52]	; 18054 <DWHCIDeviceWaitForBit+0xc8>
   1801c:	e59f003c 	ldr	r0, [pc, #60]	; 18060 <DWHCIDeviceWaitForBit+0xd4>
   18020:	eb003bd9 	bl	26f8c <uspi_assertion_failed>
   18024:	eaffffe3 	b	17fb8 <DWHCIDeviceWaitForBit+0x2c>
   18028:	e59f2034 	ldr	r2, [pc, #52]	; 18064 <DWHCIDeviceWaitForBit+0xd8>
   1802c:	e59f1020 	ldr	r1, [pc, #32]	; 18054 <DWHCIDeviceWaitForBit+0xc8>
   18030:	e59f0030 	ldr	r0, [pc, #48]	; 18068 <DWHCIDeviceWaitForBit+0xdc>
   18034:	eb003bd4 	bl	26f8c <uspi_assertion_failed>
   18038:	eaffffdc 	b	17fb0 <DWHCIDeviceWaitForBit+0x24>
   1803c:	e59f2028 	ldr	r2, [pc, #40]	; 1806c <DWHCIDeviceWaitForBit+0xe0>
   18040:	e59f100c 	ldr	r1, [pc, #12]	; 18054 <DWHCIDeviceWaitForBit+0xc8>
   18044:	e59f0024 	ldr	r0, [pc, #36]	; 18070 <DWHCIDeviceWaitForBit+0xe4>
   18048:	eb003bcf 	bl	26f8c <uspi_assertion_failed>
   1804c:	eaffffd5 	b	17fa8 <DWHCIDeviceWaitForBit+0x1c>
   18050:	0000050a 	andeq	r0, r0, sl, lsl #10
   18054:	00029a58 	andeq	r9, r2, r8, asr sl
   18058:	00029ce8 	andeq	r9, r2, r8, ror #25
   1805c:	00000509 	andeq	r0, r0, r9, lsl #10
   18060:	00029cdc 	ldrdeq	r9, [r2], -ip
   18064:	00000508 	andeq	r0, r0, r8, lsl #10
   18068:	00029ccc 	andeq	r9, r2, ip, asr #25
   1806c:	00000506 	andeq	r0, r0, r6, lsl #10
   18070:	00029a68 	andeq	r9, r2, r8, ror #20

00018074 <DWHCIDeviceEnableRootPort>:
   18074:	e92d4030 	push	{r4, r5, lr}
   18078:	e2504000 	subs	r4, r0, #0
   1807c:	e24dd01c 	sub	sp, sp, #28
   18080:	0a000030 	beq	18148 <DWHCIDeviceEnableRootPort+0xd4>
   18084:	e28d000c 	add	r0, sp, #12
   18088:	e59f10cc 	ldr	r1, [pc, #204]	; 1815c <DWHCIDeviceEnableRootPort+0xe8>
   1808c:	eb000368 	bl	18e34 <DWHCIRegister>
   18090:	e3a05014 	mov	r5, #20
   18094:	e3a03001 	mov	r3, #1
   18098:	e1a00004 	mov	r0, r4
   1809c:	e28d100c 	add	r1, sp, #12
   180a0:	e58d5000 	str	r5, [sp]
   180a4:	e1a02003 	mov	r2, r3
   180a8:	ebffffb7 	bl	17f8c <DWHCIDeviceWaitForBit>
   180ac:	e2504000 	subs	r4, r0, #0
   180b0:	0a00001f 	beq	18134 <DWHCIDeviceEnableRootPort+0xc0>
   180b4:	e3a04001 	mov	r4, #1
   180b8:	e3a00064 	mov	r0, #100	; 0x64
   180bc:	eb003b39 	bl	26da8 <MsDelay>
   180c0:	e28d000c 	add	r0, sp, #12
   180c4:	eb000386 	bl	18ee4 <DWHCIRegisterRead>
   180c8:	e28d000c 	add	r0, sp, #12
   180cc:	e3e0102e 	mvn	r1, #46	; 0x2e
   180d0:	eb0003e8 	bl	19078 <DWHCIRegisterAnd>
   180d4:	e3a01c01 	mov	r1, #256	; 0x100
   180d8:	e28d000c 	add	r0, sp, #12
   180dc:	eb0003fd 	bl	190d8 <DWHCIRegisterOr>
   180e0:	e28d000c 	add	r0, sp, #12
   180e4:	eb00038e 	bl	18f24 <DWHCIRegisterWrite>
   180e8:	e3a00032 	mov	r0, #50	; 0x32
   180ec:	eb003b2d 	bl	26da8 <MsDelay>
   180f0:	e28d000c 	add	r0, sp, #12
   180f4:	eb00037a 	bl	18ee4 <DWHCIRegisterRead>
   180f8:	e28d000c 	add	r0, sp, #12
   180fc:	e3e0102e 	mvn	r1, #46	; 0x2e
   18100:	eb0003dc 	bl	19078 <DWHCIRegisterAnd>
   18104:	e3e01c01 	mvn	r1, #256	; 0x100
   18108:	e28d000c 	add	r0, sp, #12
   1810c:	eb0003d9 	bl	19078 <DWHCIRegisterAnd>
   18110:	e28d000c 	add	r0, sp, #12
   18114:	eb000382 	bl	18f24 <DWHCIRegisterWrite>
   18118:	e1a00005 	mov	r0, r5
   1811c:	eb003b21 	bl	26da8 <MsDelay>
   18120:	e28d000c 	add	r0, sp, #12
   18124:	eb000361 	bl	18eb0 <_DWHCIRegister>
   18128:	e1a00004 	mov	r0, r4
   1812c:	e28dd01c 	add	sp, sp, #28
   18130:	e8bd8030 	pop	{r4, r5, pc}
   18134:	e28d000c 	add	r0, sp, #12
   18138:	eb00035c 	bl	18eb0 <_DWHCIRegister>
   1813c:	e1a00004 	mov	r0, r4
   18140:	e28dd01c 	add	sp, sp, #28
   18144:	e8bd8030 	pop	{r4, r5, pc}
   18148:	e59f2010 	ldr	r2, [pc, #16]	; 18160 <DWHCIDeviceEnableRootPort+0xec>
   1814c:	e59f1010 	ldr	r1, [pc, #16]	; 18164 <DWHCIDeviceEnableRootPort+0xf0>
   18150:	e59f0010 	ldr	r0, [pc, #16]	; 18168 <DWHCIDeviceEnableRootPort+0xf4>
   18154:	eb003b8c 	bl	26f8c <uspi_assertion_failed>
   18158:	eaffffc9 	b	18084 <DWHCIDeviceEnableRootPort+0x10>
   1815c:	20980440 	addscs	r0, r8, r0, asr #8
   18160:	000001fb 	strdeq	r0, [r0], -fp
   18164:	00029a58 	andeq	r9, r2, r8, asr sl
   18168:	00029a68 	andeq	r9, r2, r8, ror #20

0001816c <DWHCIDeviceReset>:
   1816c:	e92d4030 	push	{r4, r5, lr}
   18170:	e2504000 	subs	r4, r0, #0
   18174:	e24dd01c 	sub	sp, sp, #28
   18178:	0a000026 	beq	18218 <DWHCIDeviceReset+0xac>
   1817c:	e3a05064 	mov	r5, #100	; 0x64
   18180:	e28d000c 	add	r0, sp, #12
   18184:	e3a02000 	mov	r2, #0
   18188:	e59f109c 	ldr	r1, [pc, #156]	; 1822c <DWHCIDeviceReset+0xc0>
   1818c:	eb000336 	bl	18e6c <DWHCIRegister2>
   18190:	e28d100c 	add	r1, sp, #12
   18194:	e58d5000 	str	r5, [sp]
   18198:	e3a03001 	mov	r3, #1
   1819c:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   181a0:	e1a00004 	mov	r0, r4
   181a4:	ebffff78 	bl	17f8c <DWHCIDeviceWaitForBit>
   181a8:	e3500000 	cmp	r0, #0
   181ac:	0a000014 	beq	18204 <DWHCIDeviceReset+0x98>
   181b0:	e3a01001 	mov	r1, #1
   181b4:	e28d000c 	add	r0, sp, #12
   181b8:	eb0003c6 	bl	190d8 <DWHCIRegisterOr>
   181bc:	e28d000c 	add	r0, sp, #12
   181c0:	eb000357 	bl	18f24 <DWHCIRegisterWrite>
   181c4:	e3a0300a 	mov	r3, #10
   181c8:	e1a00004 	mov	r0, r4
   181cc:	e58d3000 	str	r3, [sp]
   181d0:	e3a02001 	mov	r2, #1
   181d4:	e3a03000 	mov	r3, #0
   181d8:	e28d100c 	add	r1, sp, #12
   181dc:	ebffff6a 	bl	17f8c <DWHCIDeviceWaitForBit>
   181e0:	e3500000 	cmp	r0, #0
   181e4:	0a000006 	beq	18204 <DWHCIDeviceReset+0x98>
   181e8:	e1a00005 	mov	r0, r5
   181ec:	eb003aed 	bl	26da8 <MsDelay>
   181f0:	e28d000c 	add	r0, sp, #12
   181f4:	eb00032d 	bl	18eb0 <_DWHCIRegister>
   181f8:	e3a00001 	mov	r0, #1
   181fc:	e28dd01c 	add	sp, sp, #28
   18200:	e8bd8030 	pop	{r4, r5, pc}
   18204:	e28d000c 	add	r0, sp, #12
   18208:	eb000328 	bl	18eb0 <_DWHCIRegister>
   1820c:	e3a00000 	mov	r0, #0
   18210:	e28dd01c 	add	sp, sp, #28
   18214:	e8bd8030 	pop	{r4, r5, pc}
   18218:	e59f2010 	ldr	r2, [pc, #16]	; 18230 <DWHCIDeviceReset+0xc4>
   1821c:	e59f1010 	ldr	r1, [pc, #16]	; 18234 <DWHCIDeviceReset+0xc8>
   18220:	e59f0010 	ldr	r0, [pc, #16]	; 18238 <DWHCIDeviceReset+0xcc>
   18224:	eb003b58 	bl	26f8c <uspi_assertion_failed>
   18228:	eaffffd3 	b	1817c <DWHCIDeviceReset+0x10>
   1822c:	20980010 	addscs	r0, r8, r0, lsl r0
   18230:	0000021e 	andeq	r0, r0, lr, lsl r2
   18234:	00029a58 	andeq	r9, r2, r8, asr sl
   18238:	00029a68 	andeq	r9, r2, r8, ror #20

0001823c <DWHCIDeviceInitCore>:
   1823c:	e92d4030 	push	{r4, r5, lr}
   18240:	e2504000 	subs	r4, r0, #0
   18244:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   18248:	0a00008a 	beq	18478 <DWHCIDeviceInitCore+0x23c>
   1824c:	e59f1238 	ldr	r1, [pc, #568]	; 1848c <DWHCIDeviceInitCore+0x250>
   18250:	e28d0004 	add	r0, sp, #4
   18254:	eb0002f6 	bl	18e34 <DWHCIRegister>
   18258:	e28d0004 	add	r0, sp, #4
   1825c:	eb000320 	bl	18ee4 <DWHCIRegisterRead>
   18260:	e28d0004 	add	r0, sp, #4
   18264:	e3e01601 	mvn	r1, #1048576	; 0x100000
   18268:	eb000382 	bl	19078 <DWHCIRegisterAnd>
   1826c:	e3e01501 	mvn	r1, #4194304	; 0x400000
   18270:	e28d0004 	add	r0, sp, #4
   18274:	eb00037f 	bl	19078 <DWHCIRegisterAnd>
   18278:	e28d0004 	add	r0, sp, #4
   1827c:	eb000328 	bl	18f24 <DWHCIRegisterWrite>
   18280:	e1a00004 	mov	r0, r4
   18284:	ebffffb8 	bl	1816c <DWHCIDeviceReset>
   18288:	e2505000 	subs	r5, r0, #0
   1828c:	0a000072 	beq	1845c <DWHCIDeviceInitCore+0x220>
   18290:	e28d0004 	add	r0, sp, #4
   18294:	eb000312 	bl	18ee4 <DWHCIRegisterRead>
   18298:	e3e01010 	mvn	r1, #16
   1829c:	e28d0004 	add	r0, sp, #4
   182a0:	eb000374 	bl	19078 <DWHCIRegisterAnd>
   182a4:	e3e01008 	mvn	r1, #8
   182a8:	e28d0004 	add	r0, sp, #4
   182ac:	eb000371 	bl	19078 <DWHCIRegisterAnd>
   182b0:	e28d0004 	add	r0, sp, #4
   182b4:	eb00031a 	bl	18f24 <DWHCIRegisterWrite>
   182b8:	e59f11d0 	ldr	r1, [pc, #464]	; 18490 <DWHCIDeviceInitCore+0x254>
   182bc:	e28d0010 	add	r0, sp, #16
   182c0:	eb0002db 	bl	18e34 <DWHCIRegister>
   182c4:	e28d0010 	add	r0, sp, #16
   182c8:	eb000305 	bl	18ee4 <DWHCIRegisterRead>
   182cc:	e28d0010 	add	r0, sp, #16
   182d0:	eb00032a 	bl	18f80 <DWHCIRegisterGet>
   182d4:	e1a001a0 	lsr	r0, r0, #3
   182d8:	e2000003 	and	r0, r0, #3
   182dc:	e3500002 	cmp	r0, #2
   182e0:	1a000041 	bne	183ec <DWHCIDeviceInitCore+0x1b0>
   182e4:	e28d0004 	add	r0, sp, #4
   182e8:	eb0002fd 	bl	18ee4 <DWHCIRegisterRead>
   182ec:	e28d0010 	add	r0, sp, #16
   182f0:	eb000322 	bl	18f80 <DWHCIRegisterGet>
   182f4:	e1a00320 	lsr	r0, r0, #6
   182f8:	e2000003 	and	r0, r0, #3
   182fc:	e3500002 	cmp	r0, #2
   18300:	0a00003e 	beq	18400 <DWHCIDeviceInitCore+0x1c4>
   18304:	e3e01802 	mvn	r1, #131072	; 0x20000
   18308:	e28d0004 	add	r0, sp, #4
   1830c:	eb000359 	bl	19078 <DWHCIRegisterAnd>
   18310:	e3e01702 	mvn	r1, #524288	; 0x80000
   18314:	e28d0004 	add	r0, sp, #4
   18318:	eb000356 	bl	19078 <DWHCIRegisterAnd>
   1831c:	e28d0004 	add	r0, sp, #4
   18320:	eb0002ff 	bl	18f24 <DWHCIRegisterWrite>
   18324:	e5943000 	ldr	r3, [r4]
   18328:	e3530000 	cmp	r3, #0
   1832c:	1a000040 	bne	18434 <DWHCIDeviceInitCore+0x1f8>
   18330:	e28d0010 	add	r0, sp, #16
   18334:	eb000311 	bl	18f80 <DWHCIRegisterGet>
   18338:	e1a00720 	lsr	r0, r0, #14
   1833c:	e200000f 	and	r0, r0, #15
   18340:	e2403003 	sub	r3, r0, #3
   18344:	e353000c 	cmp	r3, #12
   18348:	e2800001 	add	r0, r0, #1
   1834c:	e5840000 	str	r0, [r4]
   18350:	8a00003c 	bhi	18448 <DWHCIDeviceInitCore+0x20c>
   18354:	e3a05001 	mov	r5, #1
   18358:	e28d001c 	add	r0, sp, #28
   1835c:	e59f1130 	ldr	r1, [pc, #304]	; 18494 <DWHCIDeviceInitCore+0x258>
   18360:	eb0002b3 	bl	18e34 <DWHCIRegister>
   18364:	e28d001c 	add	r0, sp, #28
   18368:	eb0002dd 	bl	18ee4 <DWHCIRegisterRead>
   1836c:	e28d001c 	add	r0, sp, #28
   18370:	e3a01020 	mov	r1, #32
   18374:	eb000357 	bl	190d8 <DWHCIRegisterOr>
   18378:	e28d001c 	add	r0, sp, #28
   1837c:	e3a01010 	mov	r1, #16
   18380:	eb000354 	bl	190d8 <DWHCIRegisterOr>
   18384:	e3e01006 	mvn	r1, #6
   18388:	e28d001c 	add	r0, sp, #28
   1838c:	eb000339 	bl	19078 <DWHCIRegisterAnd>
   18390:	e28d001c 	add	r0, sp, #28
   18394:	eb0002e2 	bl	18f24 <DWHCIRegisterWrite>
   18398:	e28d0004 	add	r0, sp, #4
   1839c:	eb0002d0 	bl	18ee4 <DWHCIRegisterRead>
   183a0:	e28d0004 	add	r0, sp, #4
   183a4:	e3e01c02 	mvn	r1, #512	; 0x200
   183a8:	eb000332 	bl	19078 <DWHCIRegisterAnd>
   183ac:	e3e01c01 	mvn	r1, #256	; 0x100
   183b0:	e28d0004 	add	r0, sp, #4
   183b4:	eb00032f 	bl	19078 <DWHCIRegisterAnd>
   183b8:	e28d0004 	add	r0, sp, #4
   183bc:	eb0002d8 	bl	18f24 <DWHCIRegisterWrite>
   183c0:	e1a00004 	mov	r0, r4
   183c4:	ebfff912 	bl	16814 <DWHCIDeviceEnableCommonInterrupts>
   183c8:	e28d001c 	add	r0, sp, #28
   183cc:	eb0002b7 	bl	18eb0 <_DWHCIRegister>
   183d0:	e28d0010 	add	r0, sp, #16
   183d4:	eb0002b5 	bl	18eb0 <_DWHCIRegister>
   183d8:	e28d0004 	add	r0, sp, #4
   183dc:	eb0002b3 	bl	18eb0 <_DWHCIRegister>
   183e0:	e1a00005 	mov	r0, r5
   183e4:	e28dd02c 	add	sp, sp, #44	; 0x2c
   183e8:	e8bd8030 	pop	{r4, r5, pc}
   183ec:	e59f20a4 	ldr	r2, [pc, #164]	; 18498 <DWHCIDeviceInitCore+0x25c>
   183f0:	e59f10a4 	ldr	r1, [pc, #164]	; 1849c <DWHCIDeviceInitCore+0x260>
   183f4:	e59f00a4 	ldr	r0, [pc, #164]	; 184a0 <DWHCIDeviceInitCore+0x264>
   183f8:	eb003ae3 	bl	26f8c <uspi_assertion_failed>
   183fc:	eaffffb8 	b	182e4 <DWHCIDeviceInitCore+0xa8>
   18400:	e28d0010 	add	r0, sp, #16
   18404:	eb0002dd 	bl	18f80 <DWHCIRegisterGet>
   18408:	e1a00420 	lsr	r0, r0, #8
   1840c:	e2000003 	and	r0, r0, #3
   18410:	e3500001 	cmp	r0, #1
   18414:	1affffba 	bne	18304 <DWHCIDeviceInitCore+0xc8>
   18418:	e28d0004 	add	r0, sp, #4
   1841c:	e3a01802 	mov	r1, #131072	; 0x20000
   18420:	eb00032c 	bl	190d8 <DWHCIRegisterOr>
   18424:	e3a01702 	mov	r1, #524288	; 0x80000
   18428:	e28d0004 	add	r0, sp, #4
   1842c:	eb000329 	bl	190d8 <DWHCIRegisterOr>
   18430:	eaffffb9 	b	1831c <DWHCIDeviceInitCore+0xe0>
   18434:	e59f2068 	ldr	r2, [pc, #104]	; 184a4 <DWHCIDeviceInitCore+0x268>
   18438:	e59f105c 	ldr	r1, [pc, #92]	; 1849c <DWHCIDeviceInitCore+0x260>
   1843c:	e59f0064 	ldr	r0, [pc, #100]	; 184a8 <DWHCIDeviceInitCore+0x26c>
   18440:	eb003ad1 	bl	26f8c <uspi_assertion_failed>
   18444:	eaffffb9 	b	18330 <DWHCIDeviceInitCore+0xf4>
   18448:	e3a02e19 	mov	r2, #400	; 0x190
   1844c:	e59f1048 	ldr	r1, [pc, #72]	; 1849c <DWHCIDeviceInitCore+0x260>
   18450:	e59f0054 	ldr	r0, [pc, #84]	; 184ac <DWHCIDeviceInitCore+0x270>
   18454:	eb003acc 	bl	26f8c <uspi_assertion_failed>
   18458:	eaffffbd 	b	18354 <DWHCIDeviceInitCore+0x118>
   1845c:	e59f204c 	ldr	r2, [pc, #76]	; 184b0 <DWHCIDeviceInitCore+0x274>
   18460:	e3a01001 	mov	r1, #1
   18464:	e59f0048 	ldr	r0, [pc, #72]	; 184b4 <DWHCIDeviceInitCore+0x278>
   18468:	eb003ab5 	bl	26f44 <LogWrite>
   1846c:	e1a00005 	mov	r0, r5
   18470:	e28dd02c 	add	sp, sp, #44	; 0x2c
   18474:	e8bd8030 	pop	{r4, r5, pc}
   18478:	e59f2038 	ldr	r2, [pc, #56]	; 184b8 <DWHCIDeviceInitCore+0x27c>
   1847c:	e59f1018 	ldr	r1, [pc, #24]	; 1849c <DWHCIDeviceInitCore+0x260>
   18480:	e59f0034 	ldr	r0, [pc, #52]	; 184bc <DWHCIDeviceInitCore+0x280>
   18484:	eb003ac0 	bl	26f8c <uspi_assertion_failed>
   18488:	eaffff6f 	b	1824c <DWHCIDeviceInitCore+0x10>
   1848c:	2098000c 	addscs	r0, r8, ip
   18490:	20980048 	addscs	r0, r8, r8, asr #32
   18494:	20980008 	addscs	r0, r8, r8
   18498:	0000017e 	andeq	r0, r0, lr, ror r1
   1849c:	00029a58 	andeq	r9, r2, r8, asr sl
   184a0:	00029d08 	andeq	r9, r2, r8, lsl #26
   184a4:	0000018e 	andeq	r0, r0, lr, lsl #3
   184a8:	00029d50 	andeq	r9, r2, r0, asr sp
   184ac:	00029d68 	andeq	r9, r2, r8, ror #26
   184b0:	00029cf8 	strdeq	r9, [r2], -r8
   184b4:	00028548 	andeq	r8, r2, r8, asr #10
   184b8:	00000166 	andeq	r0, r0, r6, ror #2
   184bc:	00029a68 	andeq	r9, r2, r8, ror #20

000184c0 <DWHCIDeviceFlushTxFIFO>:
   184c0:	e92d4030 	push	{r4, r5, lr}
   184c4:	e2504000 	subs	r4, r0, #0
   184c8:	e24dd01c 	sub	sp, sp, #28
   184cc:	e1a05001 	mov	r5, r1
   184d0:	0a000021 	beq	1855c <DWHCIDeviceFlushTxFIFO+0x9c>
   184d4:	e3a02000 	mov	r2, #0
   184d8:	e28d000c 	add	r0, sp, #12
   184dc:	e59f108c 	ldr	r1, [pc, #140]	; 18570 <DWHCIDeviceFlushTxFIFO+0xb0>
   184e0:	eb000261 	bl	18e6c <DWHCIRegister2>
   184e4:	e28d000c 	add	r0, sp, #12
   184e8:	e3a01020 	mov	r1, #32
   184ec:	eb0002f9 	bl	190d8 <DWHCIRegisterOr>
   184f0:	e28d000c 	add	r0, sp, #12
   184f4:	e3e01d1f 	mvn	r1, #1984	; 0x7c0
   184f8:	eb0002de 	bl	19078 <DWHCIRegisterAnd>
   184fc:	e1a01305 	lsl	r1, r5, #6
   18500:	e28d000c 	add	r0, sp, #12
   18504:	eb0002f3 	bl	190d8 <DWHCIRegisterOr>
   18508:	e28d000c 	add	r0, sp, #12
   1850c:	eb000284 	bl	18f24 <DWHCIRegisterWrite>
   18510:	e3a0300a 	mov	r3, #10
   18514:	e1a00004 	mov	r0, r4
   18518:	e58d3000 	str	r3, [sp]
   1851c:	e28d100c 	add	r1, sp, #12
   18520:	e3a03000 	mov	r3, #0
   18524:	e3a02020 	mov	r2, #32
   18528:	ebfffe97 	bl	17f8c <DWHCIDeviceWaitForBit>
   1852c:	e3500000 	cmp	r0, #0
   18530:	1a000003 	bne	18544 <DWHCIDeviceFlushTxFIFO+0x84>
   18534:	e28d000c 	add	r0, sp, #12
   18538:	eb00025c 	bl	18eb0 <_DWHCIRegister>
   1853c:	e28dd01c 	add	sp, sp, #28
   18540:	e8bd8030 	pop	{r4, r5, pc}
   18544:	e3a00001 	mov	r0, #1
   18548:	eb003a1c 	bl	26dc0 <usDelay>
   1854c:	e28d000c 	add	r0, sp, #12
   18550:	eb000256 	bl	18eb0 <_DWHCIRegister>
   18554:	e28dd01c 	add	sp, sp, #28
   18558:	e8bd8030 	pop	{r4, r5, pc}
   1855c:	e3a02fa7 	mov	r2, #668	; 0x29c
   18560:	e59f100c 	ldr	r1, [pc, #12]	; 18574 <DWHCIDeviceFlushTxFIFO+0xb4>
   18564:	e59f000c 	ldr	r0, [pc, #12]	; 18578 <DWHCIDeviceFlushTxFIFO+0xb8>
   18568:	eb003a87 	bl	26f8c <uspi_assertion_failed>
   1856c:	eaffffd8 	b	184d4 <DWHCIDeviceFlushTxFIFO+0x14>
   18570:	20980010 	addscs	r0, r8, r0, lsl r0
   18574:	00029a58 	andeq	r9, r2, r8, asr sl
   18578:	00029a68 	andeq	r9, r2, r8, ror #20

0001857c <DWHCIDeviceFlushRxFIFO>:
   1857c:	e92d4010 	push	{r4, lr}
   18580:	e2504000 	subs	r4, r0, #0
   18584:	e24dd018 	sub	sp, sp, #24
   18588:	0a00001b 	beq	185fc <DWHCIDeviceFlushRxFIFO+0x80>
   1858c:	e3a02000 	mov	r2, #0
   18590:	e28d000c 	add	r0, sp, #12
   18594:	e59f1074 	ldr	r1, [pc, #116]	; 18610 <DWHCIDeviceFlushRxFIFO+0x94>
   18598:	eb000233 	bl	18e6c <DWHCIRegister2>
   1859c:	e3a01010 	mov	r1, #16
   185a0:	e28d000c 	add	r0, sp, #12
   185a4:	eb0002cb 	bl	190d8 <DWHCIRegisterOr>
   185a8:	e28d000c 	add	r0, sp, #12
   185ac:	eb00025c 	bl	18f24 <DWHCIRegisterWrite>
   185b0:	e3a0300a 	mov	r3, #10
   185b4:	e1a00004 	mov	r0, r4
   185b8:	e58d3000 	str	r3, [sp]
   185bc:	e28d100c 	add	r1, sp, #12
   185c0:	e3a03000 	mov	r3, #0
   185c4:	e3a02010 	mov	r2, #16
   185c8:	ebfffe6f 	bl	17f8c <DWHCIDeviceWaitForBit>
   185cc:	e3500000 	cmp	r0, #0
   185d0:	1a000003 	bne	185e4 <DWHCIDeviceFlushRxFIFO+0x68>
   185d4:	e28d000c 	add	r0, sp, #12
   185d8:	eb000234 	bl	18eb0 <_DWHCIRegister>
   185dc:	e28dd018 	add	sp, sp, #24
   185e0:	e8bd8010 	pop	{r4, pc}
   185e4:	e3a00001 	mov	r0, #1
   185e8:	eb0039f4 	bl	26dc0 <usDelay>
   185ec:	e28d000c 	add	r0, sp, #12
   185f0:	eb00022e 	bl	18eb0 <_DWHCIRegister>
   185f4:	e28dd018 	add	sp, sp, #24
   185f8:	e8bd8010 	pop	{r4, pc}
   185fc:	e59f2010 	ldr	r2, [pc, #16]	; 18614 <DWHCIDeviceFlushRxFIFO+0x98>
   18600:	e59f1010 	ldr	r1, [pc, #16]	; 18618 <DWHCIDeviceFlushRxFIFO+0x9c>
   18604:	e59f0010 	ldr	r0, [pc, #16]	; 1861c <DWHCIDeviceFlushRxFIFO+0xa0>
   18608:	eb003a5f 	bl	26f8c <uspi_assertion_failed>
   1860c:	eaffffde 	b	1858c <DWHCIDeviceFlushRxFIFO+0x10>
   18610:	20980010 	addscs	r0, r8, r0, lsl r0
   18614:	000002af 	andeq	r0, r0, pc, lsr #5
   18618:	00029a58 	andeq	r9, r2, r8, asr sl
   1861c:	00029a68 	andeq	r9, r2, r8, ror #20

00018620 <DWHCIDeviceInitHost>:
   18620:	e92d4030 	push	{r4, r5, lr}
   18624:	e2504000 	subs	r4, r0, #0
   18628:	e24dd064 	sub	sp, sp, #100	; 0x64
   1862c:	0a000076 	beq	1880c <DWHCIDeviceInitHost+0x1ec>
   18630:	e3a02000 	mov	r2, #0
   18634:	e59f11e4 	ldr	r1, [pc, #484]	; 18820 <DWHCIDeviceInitHost+0x200>
   18638:	e1a0000d 	mov	r0, sp
   1863c:	eb00020a 	bl	18e6c <DWHCIRegister2>
   18640:	e1a0000d 	mov	r0, sp
   18644:	eb000236 	bl	18f24 <DWHCIRegisterWrite>
   18648:	e59f11d4 	ldr	r1, [pc, #468]	; 18824 <DWHCIDeviceInitHost+0x204>
   1864c:	e28d000c 	add	r0, sp, #12
   18650:	eb0001f7 	bl	18e34 <DWHCIRegister>
   18654:	e28d000c 	add	r0, sp, #12
   18658:	eb000221 	bl	18ee4 <DWHCIRegisterRead>
   1865c:	e28d000c 	add	r0, sp, #12
   18660:	e3e01003 	mvn	r1, #3
   18664:	eb000283 	bl	19078 <DWHCIRegisterAnd>
   18668:	e28d0018 	add	r0, sp, #24
   1866c:	e59f11b4 	ldr	r1, [pc, #436]	; 18828 <DWHCIDeviceInitHost+0x208>
   18670:	eb0001ef 	bl	18e34 <DWHCIRegister>
   18674:	e28d0024 	add	r0, sp, #36	; 0x24
   18678:	e59f11ac 	ldr	r1, [pc, #428]	; 1882c <DWHCIDeviceInitHost+0x20c>
   1867c:	eb0001ec 	bl	18e34 <DWHCIRegister>
   18680:	e28d0018 	add	r0, sp, #24
   18684:	eb000216 	bl	18ee4 <DWHCIRegisterRead>
   18688:	e1a00320 	lsr	r0, r0, #6
   1868c:	e2000003 	and	r0, r0, #3
   18690:	e3500002 	cmp	r0, #2
   18694:	0a000048 	beq	187bc <DWHCIDeviceInitHost+0x19c>
   18698:	e3a01000 	mov	r1, #0
   1869c:	e28d000c 	add	r0, sp, #12
   186a0:	eb00028c 	bl	190d8 <DWHCIRegisterOr>
   186a4:	e28d000c 	add	r0, sp, #12
   186a8:	eb00021d 	bl	18f24 <DWHCIRegisterWrite>
   186ac:	e3a02b01 	mov	r2, #1024	; 0x400
   186b0:	e59f1178 	ldr	r1, [pc, #376]	; 18830 <DWHCIDeviceInitHost+0x210>
   186b4:	e28d0030 	add	r0, sp, #48	; 0x30
   186b8:	eb0001eb 	bl	18e6c <DWHCIRegister2>
   186bc:	e28d0030 	add	r0, sp, #48	; 0x30
   186c0:	eb000217 	bl	18f24 <DWHCIRegisterWrite>
   186c4:	e3a02000 	mov	r2, #0
   186c8:	e28d003c 	add	r0, sp, #60	; 0x3c
   186cc:	e59f1160 	ldr	r1, [pc, #352]	; 18834 <DWHCIDeviceInitHost+0x214>
   186d0:	eb0001e5 	bl	18e6c <DWHCIRegister2>
   186d4:	e28d003c 	add	r0, sp, #60	; 0x3c
   186d8:	e3a01b01 	mov	r1, #1024	; 0x400
   186dc:	eb00027d 	bl	190d8 <DWHCIRegisterOr>
   186e0:	e3a01301 	mov	r1, #67108864	; 0x4000000
   186e4:	e28d003c 	add	r0, sp, #60	; 0x3c
   186e8:	eb00027a 	bl	190d8 <DWHCIRegisterOr>
   186ec:	e28d003c 	add	r0, sp, #60	; 0x3c
   186f0:	eb00020b 	bl	18f24 <DWHCIRegisterWrite>
   186f4:	e3a02000 	mov	r2, #0
   186f8:	e28d0048 	add	r0, sp, #72	; 0x48
   186fc:	e59f1134 	ldr	r1, [pc, #308]	; 18838 <DWHCIDeviceInitHost+0x218>
   18700:	eb0001d9 	bl	18e6c <DWHCIRegister2>
   18704:	e28d0048 	add	r0, sp, #72	; 0x48
   18708:	e3a01b02 	mov	r1, #2048	; 0x800
   1870c:	eb000271 	bl	190d8 <DWHCIRegisterOr>
   18710:	e3a01301 	mov	r1, #67108864	; 0x4000000
   18714:	e28d0048 	add	r0, sp, #72	; 0x48
   18718:	eb00026e 	bl	190d8 <DWHCIRegisterOr>
   1871c:	e28d0048 	add	r0, sp, #72	; 0x48
   18720:	eb0001ff 	bl	18f24 <DWHCIRegisterWrite>
   18724:	e3a01010 	mov	r1, #16
   18728:	e1a00004 	mov	r0, r4
   1872c:	ebffff63 	bl	184c0 <DWHCIDeviceFlushTxFIFO>
   18730:	e1a00004 	mov	r0, r4
   18734:	ebffff90 	bl	1857c <DWHCIDeviceFlushRxFIFO>
   18738:	e59f10fc 	ldr	r1, [pc, #252]	; 1883c <DWHCIDeviceInitHost+0x21c>
   1873c:	e28d0054 	add	r0, sp, #84	; 0x54
   18740:	eb0001bb 	bl	18e34 <DWHCIRegister>
   18744:	e28d0054 	add	r0, sp, #84	; 0x54
   18748:	eb0001e5 	bl	18ee4 <DWHCIRegisterRead>
   1874c:	e28d0054 	add	r0, sp, #84	; 0x54
   18750:	e3e0102e 	mvn	r1, #46	; 0x2e
   18754:	eb000247 	bl	19078 <DWHCIRegisterAnd>
   18758:	e28d0054 	add	r0, sp, #84	; 0x54
   1875c:	eb000207 	bl	18f80 <DWHCIRegisterGet>
   18760:	e3100a01 	tst	r0, #4096	; 0x1000
   18764:	0a000022 	beq	187f4 <DWHCIDeviceInitHost+0x1d4>
   18768:	e1a00004 	mov	r0, r4
   1876c:	ebfff83f 	bl	16870 <DWHCIDeviceEnableHostInterrupts>
   18770:	e28d0054 	add	r0, sp, #84	; 0x54
   18774:	eb0001cd 	bl	18eb0 <_DWHCIRegister>
   18778:	e28d0048 	add	r0, sp, #72	; 0x48
   1877c:	eb0001cb 	bl	18eb0 <_DWHCIRegister>
   18780:	e28d003c 	add	r0, sp, #60	; 0x3c
   18784:	eb0001c9 	bl	18eb0 <_DWHCIRegister>
   18788:	e28d0030 	add	r0, sp, #48	; 0x30
   1878c:	eb0001c7 	bl	18eb0 <_DWHCIRegister>
   18790:	e28d0024 	add	r0, sp, #36	; 0x24
   18794:	eb0001c5 	bl	18eb0 <_DWHCIRegister>
   18798:	e28d0018 	add	r0, sp, #24
   1879c:	eb0001c3 	bl	18eb0 <_DWHCIRegister>
   187a0:	e28d000c 	add	r0, sp, #12
   187a4:	eb0001c1 	bl	18eb0 <_DWHCIRegister>
   187a8:	e1a0000d 	mov	r0, sp
   187ac:	eb0001bf 	bl	18eb0 <_DWHCIRegister>
   187b0:	e3a00001 	mov	r0, #1
   187b4:	e28dd064 	add	sp, sp, #100	; 0x64
   187b8:	e8bd8030 	pop	{r4, r5, pc}
   187bc:	e28d0018 	add	r0, sp, #24
   187c0:	eb0001ee 	bl	18f80 <DWHCIRegisterGet>
   187c4:	e1a00420 	lsr	r0, r0, #8
   187c8:	e2005003 	and	r5, r0, #3
   187cc:	e3550001 	cmp	r5, #1
   187d0:	1affffb0 	bne	18698 <DWHCIDeviceInitHost+0x78>
   187d4:	e28d0024 	add	r0, sp, #36	; 0x24
   187d8:	eb0001c1 	bl	18ee4 <DWHCIRegisterRead>
   187dc:	e3100802 	tst	r0, #131072	; 0x20000
   187e0:	0affffac 	beq	18698 <DWHCIDeviceInitHost+0x78>
   187e4:	e1a01005 	mov	r1, r5
   187e8:	e28d000c 	add	r0, sp, #12
   187ec:	eb000239 	bl	190d8 <DWHCIRegisterOr>
   187f0:	eaffffab 	b	186a4 <DWHCIDeviceInitHost+0x84>
   187f4:	e28d0054 	add	r0, sp, #84	; 0x54
   187f8:	e3a01a01 	mov	r1, #4096	; 0x1000
   187fc:	eb000235 	bl	190d8 <DWHCIRegisterOr>
   18800:	e28d0054 	add	r0, sp, #84	; 0x54
   18804:	eb0001c6 	bl	18f24 <DWHCIRegisterWrite>
   18808:	eaffffd6 	b	18768 <DWHCIDeviceInitHost+0x148>
   1880c:	e59f202c 	ldr	r2, [pc, #44]	; 18840 <DWHCIDeviceInitHost+0x220>
   18810:	e59f102c 	ldr	r1, [pc, #44]	; 18844 <DWHCIDeviceInitHost+0x224>
   18814:	e59f002c 	ldr	r0, [pc, #44]	; 18848 <DWHCIDeviceInitHost+0x228>
   18818:	eb0039db 	bl	26f8c <uspi_assertion_failed>
   1881c:	eaffff83 	b	18630 <DWHCIDeviceInitHost+0x10>
   18820:	20980e00 	addscs	r0, r8, r0, lsl #28
   18824:	20980400 	addscs	r0, r8, r0, lsl #8
   18828:	20980048 	addscs	r0, r8, r8, asr #32
   1882c:	2098000c 	addscs	r0, r8, ip
   18830:	20980024 	addscs	r0, r8, r4, lsr #32
   18834:	20980028 	addscs	r0, r8, r8, lsr #32
   18838:	20980100 	addscs	r0, r8, r0, lsl #2
   1883c:	20980440 	addscs	r0, r8, r0, asr #8
   18840:	000001ad 	andeq	r0, r0, sp, lsr #3
   18844:	00029a58 	andeq	r9, r2, r8, asr sl
   18848:	00029a68 	andeq	r9, r2, r8, ror #20

0001884c <DWHCIDeviceInitialize>:
   1884c:	e92d4070 	push	{r4, r5, r6, lr}
   18850:	e2506000 	subs	r6, r0, #0
   18854:	e24dd018 	sub	sp, sp, #24
   18858:	0a000050 	beq	189a0 <DWHCIDeviceInitialize+0x154>
   1885c:	e3a05000 	mov	r5, #0
   18860:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   18864:	e59f1194 	ldr	r1, [pc, #404]	; 18a00 <DWHCIDeviceInitialize+0x1b4>
   18868:	e1a0000d 	mov	r0, sp
   1886c:	eb000170 	bl	18e34 <DWHCIRegister>
   18870:	e1a0000d 	mov	r0, sp
   18874:	eb00019a 	bl	18ee4 <DWHCIRegisterRead>
   18878:	e59f3184 	ldr	r3, [pc, #388]	; 18a04 <DWHCIDeviceInitialize+0x1b8>
   1887c:	e1500003 	cmp	r0, r3
   18880:	1a00002e 	bne	18940 <DWHCIDeviceInitialize+0xf4>
   18884:	e3a00003 	mov	r0, #3
   18888:	eb003970 	bl	26e50 <SetPowerStateOn>
   1888c:	e2504000 	subs	r4, r0, #0
   18890:	0a000047 	beq	189b4 <DWHCIDeviceInitialize+0x168>
   18894:	e59f116c 	ldr	r1, [pc, #364]	; 18a08 <DWHCIDeviceInitialize+0x1bc>
   18898:	e28d000c 	add	r0, sp, #12
   1889c:	eb000164 	bl	18e34 <DWHCIRegister>
   188a0:	e28d000c 	add	r0, sp, #12
   188a4:	eb00018e 	bl	18ee4 <DWHCIRegisterRead>
   188a8:	e3e01001 	mvn	r1, #1
   188ac:	e28d000c 	add	r0, sp, #12
   188b0:	eb0001f0 	bl	19078 <DWHCIRegisterAnd>
   188b4:	e28d000c 	add	r0, sp, #12
   188b8:	eb000199 	bl	18f24 <DWHCIRegisterWrite>
   188bc:	e1a02006 	mov	r2, r6
   188c0:	e59f1144 	ldr	r1, [pc, #324]	; 18a0c <DWHCIDeviceInitialize+0x1c0>
   188c4:	e3a00009 	mov	r0, #9
   188c8:	eb003956 	bl	26e28 <ConnectInterrupt>
   188cc:	e1a00006 	mov	r0, r6
   188d0:	ebfffe59 	bl	1823c <DWHCIDeviceInitCore>
   188d4:	e2504000 	subs	r4, r0, #0
   188d8:	059f2130 	ldreq	r2, [pc, #304]	; 18a10 <DWHCIDeviceInitialize+0x1c4>
   188dc:	0a000025 	beq	18978 <DWHCIDeviceInitialize+0x12c>
   188e0:	e1a00006 	mov	r0, r6
   188e4:	ebfff7af 	bl	167a8 <DWHCIDeviceEnableGlobalInterrupts>
   188e8:	e1a00006 	mov	r0, r6
   188ec:	ebffff4b 	bl	18620 <DWHCIDeviceInitHost>
   188f0:	e2504000 	subs	r4, r0, #0
   188f4:	0a00001e 	beq	18974 <DWHCIDeviceInitialize+0x128>
   188f8:	e1a00006 	mov	r0, r6
   188fc:	ebfffddc 	bl	18074 <DWHCIDeviceEnableRootPort>
   18900:	e3500000 	cmp	r0, #0
   18904:	0a000033 	beq	189d8 <DWHCIDeviceInitialize+0x18c>
   18908:	e2860d1e 	add	r0, r6, #1920	; 0x780
   1890c:	e280000c 	add	r0, r0, #12
   18910:	eb00262a 	bl	221c0 <DWHCIRootPortInitialize>
   18914:	e3500000 	cmp	r0, #0
   18918:	0a000033 	beq	189ec <DWHCIDeviceInitialize+0x1a0>
   1891c:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   18920:	e3a04001 	mov	r4, #1
   18924:	e28d000c 	add	r0, sp, #12
   18928:	eb000160 	bl	18eb0 <_DWHCIRegister>
   1892c:	e1a0000d 	mov	r0, sp
   18930:	eb00015e 	bl	18eb0 <_DWHCIRegister>
   18934:	e1a00004 	mov	r0, r4
   18938:	e28dd018 	add	sp, sp, #24
   1893c:	e8bd8070 	pop	{r4, r5, r6, pc}
   18940:	e1a0000d 	mov	r0, sp
   18944:	eb00018d 	bl	18f80 <DWHCIRegisterGet>
   18948:	e1a04005 	mov	r4, r5
   1894c:	e1a03000 	mov	r3, r0
   18950:	e59f20bc 	ldr	r2, [pc, #188]	; 18a14 <DWHCIDeviceInitialize+0x1c8>
   18954:	e3a01001 	mov	r1, #1
   18958:	e59f00b8 	ldr	r0, [pc, #184]	; 18a18 <DWHCIDeviceInitialize+0x1cc>
   1895c:	eb003978 	bl	26f44 <LogWrite>
   18960:	e1a0000d 	mov	r0, sp
   18964:	eb000151 	bl	18eb0 <_DWHCIRegister>
   18968:	e1a00004 	mov	r0, r4
   1896c:	e28dd018 	add	sp, sp, #24
   18970:	e8bd8070 	pop	{r4, r5, r6, pc}
   18974:	e59f20a0 	ldr	r2, [pc, #160]	; 18a1c <DWHCIDeviceInitialize+0x1d0>
   18978:	e3a01001 	mov	r1, #1
   1897c:	e59f0094 	ldr	r0, [pc, #148]	; 18a18 <DWHCIDeviceInitialize+0x1cc>
   18980:	eb00396f 	bl	26f44 <LogWrite>
   18984:	e28d000c 	add	r0, sp, #12
   18988:	eb000148 	bl	18eb0 <_DWHCIRegister>
   1898c:	e1a0000d 	mov	r0, sp
   18990:	eb000146 	bl	18eb0 <_DWHCIRegister>
   18994:	e1a00004 	mov	r0, r4
   18998:	e28dd018 	add	sp, sp, #24
   1899c:	e8bd8070 	pop	{r4, r5, r6, pc}
   189a0:	e3a0206e 	mov	r2, #110	; 0x6e
   189a4:	e59f1074 	ldr	r1, [pc, #116]	; 18a20 <DWHCIDeviceInitialize+0x1d4>
   189a8:	e59f0074 	ldr	r0, [pc, #116]	; 18a24 <DWHCIDeviceInitialize+0x1d8>
   189ac:	eb003976 	bl	26f8c <uspi_assertion_failed>
   189b0:	eaffffa9 	b	1885c <DWHCIDeviceInitialize+0x10>
   189b4:	e59f206c 	ldr	r2, [pc, #108]	; 18a28 <DWHCIDeviceInitialize+0x1dc>
   189b8:	e3a01001 	mov	r1, #1
   189bc:	e59f0054 	ldr	r0, [pc, #84]	; 18a18 <DWHCIDeviceInitialize+0x1cc>
   189c0:	eb00395f 	bl	26f44 <LogWrite>
   189c4:	e1a0000d 	mov	r0, sp
   189c8:	eb000138 	bl	18eb0 <_DWHCIRegister>
   189cc:	e1a00004 	mov	r0, r4
   189d0:	e28dd018 	add	sp, sp, #24
   189d4:	e8bd8070 	pop	{r4, r5, r6, pc}
   189d8:	e59f204c 	ldr	r2, [pc, #76]	; 18a2c <DWHCIDeviceInitialize+0x1e0>
   189dc:	e3a01002 	mov	r1, #2
   189e0:	e59f0030 	ldr	r0, [pc, #48]	; 18a18 <DWHCIDeviceInitialize+0x1cc>
   189e4:	eb003956 	bl	26f44 <LogWrite>
   189e8:	eaffffcc 	b	18920 <DWHCIDeviceInitialize+0xd4>
   189ec:	e59f203c 	ldr	r2, [pc, #60]	; 18a30 <DWHCIDeviceInitialize+0x1e4>
   189f0:	e3a01002 	mov	r1, #2
   189f4:	e59f001c 	ldr	r0, [pc, #28]	; 18a18 <DWHCIDeviceInitialize+0x1cc>
   189f8:	eb003951 	bl	26f44 <LogWrite>
   189fc:	eaffffc7 	b	18920 <DWHCIDeviceInitialize+0xd4>
   18a00:	20980040 	addscs	r0, r8, r0, asr #32
   18a04:	4f54280a 	svcmi	0x0054280a
   18a08:	20980008 	addscs	r0, r8, r8
   18a0c:	00017e74 	andeq	r7, r1, r4, ror lr
   18a10:	00029dd4 	ldrdeq	r9, [r2], -r4
   18a14:	00029dac 	andeq	r9, r2, ip, lsr #27
   18a18:	00028548 	andeq	r8, r2, r8, asr #10
   18a1c:	00029dec 	andeq	r9, r2, ip, ror #27
   18a20:	00029a58 	andeq	r9, r2, r8, asr sl
   18a24:	00029a68 	andeq	r9, r2, r8, ror #20
   18a28:	00029dc4 	andeq	r9, r2, r4, asr #27
   18a2c:	00029e04 	andeq	r9, r2, r4, lsl #28
   18a30:	00029e28 	andeq	r9, r2, r8, lsr #28

00018a34 <DWHCIDeviceGetPortSpeed>:
   18a34:	e92d4010 	push	{r4, lr}
   18a38:	e3500000 	cmp	r0, #0
   18a3c:	e24dd010 	sub	sp, sp, #16
   18a40:	0a000010 	beq	18a88 <DWHCIDeviceGetPortSpeed+0x54>
   18a44:	e59f1050 	ldr	r1, [pc, #80]	; 18a9c <DWHCIDeviceGetPortSpeed+0x68>
   18a48:	e28d0004 	add	r0, sp, #4
   18a4c:	eb0000f8 	bl	18e34 <DWHCIRegister>
   18a50:	e28d0004 	add	r0, sp, #4
   18a54:	eb000122 	bl	18ee4 <DWHCIRegisterRead>
   18a58:	e1a008a0 	lsr	r0, r0, #17
   18a5c:	e2000003 	and	r0, r0, #3
   18a60:	e3500003 	cmp	r0, #3
   18a64:	01a04000 	moveq	r4, r0
   18a68:	159f3030 	ldrne	r3, [pc, #48]	; 18aa0 <DWHCIDeviceGetPortSpeed+0x6c>
   18a6c:	10830000 	addne	r0, r3, r0
   18a70:	15d04008 	ldrbne	r4, [r0, #8]
   18a74:	e28d0004 	add	r0, sp, #4
   18a78:	eb00010c 	bl	18eb0 <_DWHCIRegister>
   18a7c:	e1a00004 	mov	r0, r4
   18a80:	e28dd010 	add	sp, sp, #16
   18a84:	e8bd8010 	pop	{r4, pc}
   18a88:	e59f2014 	ldr	r2, [pc, #20]	; 18aa4 <DWHCIDeviceGetPortSpeed+0x70>
   18a8c:	e59f1014 	ldr	r1, [pc, #20]	; 18aa8 <DWHCIDeviceGetPortSpeed+0x74>
   18a90:	e59f0014 	ldr	r0, [pc, #20]	; 18aac <DWHCIDeviceGetPortSpeed+0x78>
   18a94:	eb00393c 	bl	26f8c <uspi_assertion_failed>
   18a98:	eaffffe9 	b	18a44 <DWHCIDeviceGetPortSpeed+0x10>
   18a9c:	20980440 	addscs	r0, r8, r0, asr #8
   18aa0:	00028548 	andeq	r8, r2, r8, asr #10
   18aa4:	0000051f 	andeq	r0, r0, pc, lsl r5
   18aa8:	00029a58 	andeq	r9, r2, r8, asr sl
   18aac:	00029a68 	andeq	r9, r2, r8, ror #20

00018ab0 <DWHCIDeviceOvercurrentDetected>:
   18ab0:	e92d4010 	push	{r4, lr}
   18ab4:	e3500000 	cmp	r0, #0
   18ab8:	e24dd010 	sub	sp, sp, #16
   18abc:	0a00000f 	beq	18b00 <DWHCIDeviceOvercurrentDetected+0x50>
   18ac0:	e28d0004 	add	r0, sp, #4
   18ac4:	e59f1048 	ldr	r1, [pc, #72]	; 18b14 <DWHCIDeviceOvercurrentDetected+0x64>
   18ac8:	eb0000d9 	bl	18e34 <DWHCIRegister>
   18acc:	e28d0004 	add	r0, sp, #4
   18ad0:	eb000103 	bl	18ee4 <DWHCIRegisterRead>
   18ad4:	e2104010 	ands	r4, r0, #16
   18ad8:	e28d0004 	add	r0, sp, #4
   18adc:	1a000003 	bne	18af0 <DWHCIDeviceOvercurrentDetected+0x40>
   18ae0:	eb0000f2 	bl	18eb0 <_DWHCIRegister>
   18ae4:	e1a00004 	mov	r0, r4
   18ae8:	e28dd010 	add	sp, sp, #16
   18aec:	e8bd8010 	pop	{r4, pc}
   18af0:	eb0000ee 	bl	18eb0 <_DWHCIRegister>
   18af4:	e3a00001 	mov	r0, #1
   18af8:	e28dd010 	add	sp, sp, #16
   18afc:	e8bd8010 	pop	{r4, pc}
   18b00:	e59f2010 	ldr	r2, [pc, #16]	; 18b18 <DWHCIDeviceOvercurrentDetected+0x68>
   18b04:	e59f1010 	ldr	r1, [pc, #16]	; 18b1c <DWHCIDeviceOvercurrentDetected+0x6c>
   18b08:	e59f0010 	ldr	r0, [pc, #16]	; 18b20 <DWHCIDeviceOvercurrentDetected+0x70>
   18b0c:	eb00391e 	bl	26f8c <uspi_assertion_failed>
   18b10:	eaffffea 	b	18ac0 <DWHCIDeviceOvercurrentDetected+0x10>
   18b14:	20980440 	addscs	r0, r8, r0, asr #8
   18b18:	0000053f 	andeq	r0, r0, pc, lsr r5
   18b1c:	00029a58 	andeq	r9, r2, r8, asr sl
   18b20:	00029a68 	andeq	r9, r2, r8, ror #20

00018b24 <DWHCIDeviceDisableRootPort>:
   18b24:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   18b28:	e3500000 	cmp	r0, #0
   18b2c:	e24dd014 	sub	sp, sp, #20
   18b30:	0a00000d 	beq	18b6c <DWHCIDeviceDisableRootPort+0x48>
   18b34:	e28d0004 	add	r0, sp, #4
   18b38:	e59f1040 	ldr	r1, [pc, #64]	; 18b80 <DWHCIDeviceDisableRootPort+0x5c>
   18b3c:	eb0000bc 	bl	18e34 <DWHCIRegister>
   18b40:	e28d0004 	add	r0, sp, #4
   18b44:	eb0000e6 	bl	18ee4 <DWHCIRegisterRead>
   18b48:	e3e01a01 	mvn	r1, #4096	; 0x1000
   18b4c:	e28d0004 	add	r0, sp, #4
   18b50:	eb000148 	bl	19078 <DWHCIRegisterAnd>
   18b54:	e28d0004 	add	r0, sp, #4
   18b58:	eb0000f1 	bl	18f24 <DWHCIRegisterWrite>
   18b5c:	e28d0004 	add	r0, sp, #4
   18b60:	eb0000d2 	bl	18eb0 <_DWHCIRegister>
   18b64:	e28dd014 	add	sp, sp, #20
   18b68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   18b6c:	e59f2010 	ldr	r2, [pc, #16]	; 18b84 <DWHCIDeviceDisableRootPort+0x60>
   18b70:	e59f1010 	ldr	r1, [pc, #16]	; 18b88 <DWHCIDeviceDisableRootPort+0x64>
   18b74:	e59f0010 	ldr	r0, [pc, #16]	; 18b8c <DWHCIDeviceDisableRootPort+0x68>
   18b78:	eb003903 	bl	26f8c <uspi_assertion_failed>
   18b7c:	eaffffec 	b	18b34 <DWHCIDeviceDisableRootPort+0x10>
   18b80:	20980440 	addscs	r0, r8, r0, asr #8
   18b84:	00000552 	andeq	r0, r0, r2, asr r5
   18b88:	00029a58 	andeq	r9, r2, r8, asr sl
   18b8c:	00029a68 	andeq	r9, r2, r8, ror #20

00018b90 <DWHCIDeviceDumpRegister>:
   18b90:	e92d4030 	push	{r4, r5, lr}
   18b94:	e3500000 	cmp	r0, #0
   18b98:	e24dd01c 	sub	sp, sp, #28
   18b9c:	e1a04001 	mov	r4, r1
   18ba0:	e1a05002 	mov	r5, r2
   18ba4:	0a000010 	beq	18bec <DWHCIDeviceDumpRegister+0x5c>
   18ba8:	e1a01005 	mov	r1, r5
   18bac:	e28d000c 	add	r0, sp, #12
   18bb0:	eb00009f 	bl	18e34 <DWHCIRegister>
   18bb4:	e3a03000 	mov	r3, #0
   18bb8:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   18bbc:	e28d000c 	add	r0, sp, #12
   18bc0:	eb0000c7 	bl	18ee4 <DWHCIRegisterRead>
   18bc4:	e59f2034 	ldr	r2, [pc, #52]	; 18c00 <DWHCIDeviceDumpRegister+0x70>
   18bc8:	e1a03000 	mov	r3, r0
   18bcc:	e3a01004 	mov	r1, #4
   18bd0:	e58d4000 	str	r4, [sp]
   18bd4:	e59f0028 	ldr	r0, [pc, #40]	; 18c04 <DWHCIDeviceDumpRegister+0x74>
   18bd8:	eb0038d9 	bl	26f44 <LogWrite>
   18bdc:	e28d000c 	add	r0, sp, #12
   18be0:	eb0000b2 	bl	18eb0 <_DWHCIRegister>
   18be4:	e28dd01c 	add	sp, sp, #28
   18be8:	e8bd8030 	pop	{r4, r5, pc}
   18bec:	e59f2014 	ldr	r2, [pc, #20]	; 18c08 <DWHCIDeviceDumpRegister+0x78>
   18bf0:	e59f1014 	ldr	r1, [pc, #20]	; 18c0c <DWHCIDeviceDumpRegister+0x7c>
   18bf4:	e59f0014 	ldr	r0, [pc, #20]	; 18c10 <DWHCIDeviceDumpRegister+0x80>
   18bf8:	eb0038e3 	bl	26f8c <uspi_assertion_failed>
   18bfc:	eaffffe9 	b	18ba8 <DWHCIDeviceDumpRegister+0x18>
   18c00:	00029e44 	andeq	r9, r2, r4, asr #28
   18c04:	00028548 	andeq	r8, r2, r8, asr #10
   18c08:	00000562 	andeq	r0, r0, r2, ror #10
   18c0c:	00029a58 	andeq	r9, r2, r8, asr sl
   18c10:	00029a68 	andeq	r9, r2, r8, ror #20

00018c14 <DWHCIDeviceDumpStatus>:
   18c14:	e92d4070 	push	{r4, r5, r6, lr}
   18c18:	e2504000 	subs	r4, r0, #0
   18c1c:	e1a06001 	mov	r6, r1
   18c20:	0a000057 	beq	18d84 <DWHCIDeviceDumpStatus+0x170>
   18c24:	e1a00004 	mov	r0, r4
   18c28:	e59f2168 	ldr	r2, [pc, #360]	; 18d98 <DWHCIDeviceDumpStatus+0x184>
   18c2c:	e59f1168 	ldr	r1, [pc, #360]	; 18d9c <DWHCIDeviceDumpStatus+0x188>
   18c30:	ebffffd6 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c34:	e1a00004 	mov	r0, r4
   18c38:	e59f2160 	ldr	r2, [pc, #352]	; 18da0 <DWHCIDeviceDumpStatus+0x18c>
   18c3c:	e59f1160 	ldr	r1, [pc, #352]	; 18da4 <DWHCIDeviceDumpStatus+0x190>
   18c40:	ebffffd2 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c44:	e1a00004 	mov	r0, r4
   18c48:	e59f2158 	ldr	r2, [pc, #344]	; 18da8 <DWHCIDeviceDumpStatus+0x194>
   18c4c:	e59f1158 	ldr	r1, [pc, #344]	; 18dac <DWHCIDeviceDumpStatus+0x198>
   18c50:	ebffffce 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c54:	e1a00004 	mov	r0, r4
   18c58:	e59f2150 	ldr	r2, [pc, #336]	; 18db0 <DWHCIDeviceDumpStatus+0x19c>
   18c5c:	e59f1150 	ldr	r1, [pc, #336]	; 18db4 <DWHCIDeviceDumpStatus+0x1a0>
   18c60:	ebffffca 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c64:	e1a00004 	mov	r0, r4
   18c68:	e59f2148 	ldr	r2, [pc, #328]	; 18db8 <DWHCIDeviceDumpStatus+0x1a4>
   18c6c:	e59f1148 	ldr	r1, [pc, #328]	; 18dbc <DWHCIDeviceDumpStatus+0x1a8>
   18c70:	ebffffc6 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c74:	e1a00004 	mov	r0, r4
   18c78:	e59f2140 	ldr	r2, [pc, #320]	; 18dc0 <DWHCIDeviceDumpStatus+0x1ac>
   18c7c:	e59f1140 	ldr	r1, [pc, #320]	; 18dc4 <DWHCIDeviceDumpStatus+0x1b0>
   18c80:	ebffffc2 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c84:	e1a00004 	mov	r0, r4
   18c88:	e59f2138 	ldr	r2, [pc, #312]	; 18dc8 <DWHCIDeviceDumpStatus+0x1b4>
   18c8c:	e59f1138 	ldr	r1, [pc, #312]	; 18dcc <DWHCIDeviceDumpStatus+0x1b8>
   18c90:	ebffffbe 	bl	18b90 <DWHCIDeviceDumpRegister>
   18c94:	e1a00004 	mov	r0, r4
   18c98:	e59f2130 	ldr	r2, [pc, #304]	; 18dd0 <DWHCIDeviceDumpStatus+0x1bc>
   18c9c:	e59f1130 	ldr	r1, [pc, #304]	; 18dd4 <DWHCIDeviceDumpStatus+0x1c0>
   18ca0:	ebffffba 	bl	18b90 <DWHCIDeviceDumpRegister>
   18ca4:	e1a00004 	mov	r0, r4
   18ca8:	e59f2128 	ldr	r2, [pc, #296]	; 18dd8 <DWHCIDeviceDumpStatus+0x1c4>
   18cac:	e59f1128 	ldr	r1, [pc, #296]	; 18ddc <DWHCIDeviceDumpStatus+0x1c8>
   18cb0:	ebffffb6 	bl	18b90 <DWHCIDeviceDumpRegister>
   18cb4:	e1a00004 	mov	r0, r4
   18cb8:	e59f2120 	ldr	r2, [pc, #288]	; 18de0 <DWHCIDeviceDumpStatus+0x1cc>
   18cbc:	e59f1120 	ldr	r1, [pc, #288]	; 18de4 <DWHCIDeviceDumpStatus+0x1d0>
   18cc0:	ebffffb2 	bl	18b90 <DWHCIDeviceDumpRegister>
   18cc4:	e1a00004 	mov	r0, r4
   18cc8:	e59f2118 	ldr	r2, [pc, #280]	; 18de8 <DWHCIDeviceDumpStatus+0x1d4>
   18ccc:	e59f1118 	ldr	r1, [pc, #280]	; 18dec <DWHCIDeviceDumpStatus+0x1d8>
   18cd0:	ebffffae 	bl	18b90 <DWHCIDeviceDumpRegister>
   18cd4:	e59f5114 	ldr	r5, [pc, #276]	; 18df0 <DWHCIDeviceDumpStatus+0x1dc>
   18cd8:	e1a00004 	mov	r0, r4
   18cdc:	e59f2110 	ldr	r2, [pc, #272]	; 18df4 <DWHCIDeviceDumpStatus+0x1e0>
   18ce0:	e59f1110 	ldr	r1, [pc, #272]	; 18df8 <DWHCIDeviceDumpStatus+0x1e4>
   18ce4:	ebffffa9 	bl	18b90 <DWHCIDeviceDumpRegister>
   18ce8:	e1a00004 	mov	r0, r4
   18cec:	e59f2108 	ldr	r2, [pc, #264]	; 18dfc <DWHCIDeviceDumpStatus+0x1e8>
   18cf0:	e59f1108 	ldr	r1, [pc, #264]	; 18e00 <DWHCIDeviceDumpStatus+0x1ec>
   18cf4:	ebffffa5 	bl	18b90 <DWHCIDeviceDumpRegister>
   18cf8:	e0865005 	add	r5, r6, r5
   18cfc:	e1a00004 	mov	r0, r4
   18d00:	e59f20fc 	ldr	r2, [pc, #252]	; 18e04 <DWHCIDeviceDumpStatus+0x1f0>
   18d04:	e59f10fc 	ldr	r1, [pc, #252]	; 18e08 <DWHCIDeviceDumpStatus+0x1f4>
   18d08:	e1a05285 	lsl	r5, r5, #5
   18d0c:	ebffff9f 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d10:	e1a00004 	mov	r0, r4
   18d14:	e59f20f0 	ldr	r2, [pc, #240]	; 18e0c <DWHCIDeviceDumpStatus+0x1f8>
   18d18:	e59f10f0 	ldr	r1, [pc, #240]	; 18e10 <DWHCIDeviceDumpStatus+0x1fc>
   18d1c:	ebffff9b 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d20:	e1a02005 	mov	r2, r5
   18d24:	e1a00004 	mov	r0, r4
   18d28:	e59f10e4 	ldr	r1, [pc, #228]	; 18e14 <DWHCIDeviceDumpStatus+0x200>
   18d2c:	ebffff97 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d30:	e2852004 	add	r2, r5, #4
   18d34:	e1a00004 	mov	r0, r4
   18d38:	e59f10d8 	ldr	r1, [pc, #216]	; 18e18 <DWHCIDeviceDumpStatus+0x204>
   18d3c:	ebffff93 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d40:	e2852008 	add	r2, r5, #8
   18d44:	e1a00004 	mov	r0, r4
   18d48:	e59f10cc 	ldr	r1, [pc, #204]	; 18e1c <DWHCIDeviceDumpStatus+0x208>
   18d4c:	ebffff8f 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d50:	e285200c 	add	r2, r5, #12
   18d54:	e1a00004 	mov	r0, r4
   18d58:	e59f10c0 	ldr	r1, [pc, #192]	; 18e20 <DWHCIDeviceDumpStatus+0x20c>
   18d5c:	ebffff8b 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d60:	e2852010 	add	r2, r5, #16
   18d64:	e1a00004 	mov	r0, r4
   18d68:	e59f10b4 	ldr	r1, [pc, #180]	; 18e24 <DWHCIDeviceDumpStatus+0x210>
   18d6c:	ebffff87 	bl	18b90 <DWHCIDeviceDumpRegister>
   18d70:	e2852014 	add	r2, r5, #20
   18d74:	e1a00004 	mov	r0, r4
   18d78:	e8bd4070 	pop	{r4, r5, r6, lr}
   18d7c:	e59f10a4 	ldr	r1, [pc, #164]	; 18e28 <DWHCIDeviceDumpStatus+0x214>
   18d80:	eaffff82 	b	18b90 <DWHCIDeviceDumpRegister>
   18d84:	e3a02e57 	mov	r2, #1392	; 0x570
   18d88:	e59f109c 	ldr	r1, [pc, #156]	; 18e2c <DWHCIDeviceDumpStatus+0x218>
   18d8c:	e59f009c 	ldr	r0, [pc, #156]	; 18e30 <DWHCIDeviceDumpStatus+0x21c>
   18d90:	eb00387d 	bl	26f8c <uspi_assertion_failed>
   18d94:	eaffffa2 	b	18c24 <DWHCIDeviceDumpStatus+0x10>
   18d98:	20980000 	addscs	r0, r8, r0
   18d9c:	00029e50 	andeq	r9, r2, r0, asr lr
   18da0:	20980008 	addscs	r0, r8, r8
   18da4:	00029e5c 	andeq	r9, r2, ip, asr lr
   18da8:	2098000c 	addscs	r0, r8, ip
   18dac:	00029e64 	andeq	r9, r2, r4, ror #28
   18db0:	20980010 	addscs	r0, r8, r0, lsl r0
   18db4:	00029e6c 	andeq	r9, r2, ip, ror #28
   18db8:	20980014 	addscs	r0, r8, r4, lsl r0
   18dbc:	00029e74 	andeq	r9, r2, r4, ror lr
   18dc0:	20980018 	addscs	r0, r8, r8, lsl r0
   18dc4:	00029e80 	andeq	r9, r2, r0, lsl #29
   18dc8:	20980024 	addscs	r0, r8, r4, lsr #32
   18dcc:	00029e8c 	andeq	r9, r2, ip, lsl #29
   18dd0:	20980028 	addscs	r0, r8, r8, lsr #32
   18dd4:	00029e98 	muleq	r2, r8, lr
   18dd8:	2098002c 	addscs	r0, r8, ip, lsr #32
   18ddc:	00029eac 	andeq	r9, r2, ip, lsr #29
   18de0:	20980100 	addscs	r0, r8, r0, lsl #2
   18de4:	00029ebc 			; <UNDEFINED> instruction: 0x00029ebc
   18de8:	20980400 	addscs	r0, r8, r0, lsl #8
   18dec:	00029ed4 	ldrdeq	r9, [r2], -r4
   18df0:	0104c028 	tsteq	r4, r8, lsr #32
   18df4:	20980410 	addscs	r0, r8, r0, lsl r4
   18df8:	00029ee0 	andeq	r9, r2, r0, ror #29
   18dfc:	20980414 	addscs	r0, r8, r4, lsl r4
   18e00:	00029ef8 	strdeq	r9, [r2], -r8
   18e04:	20980418 	addscs	r0, r8, r8, lsl r4
   18e08:	00029f0c 	andeq	r9, r2, ip, lsl #30
   18e0c:	20980440 	addscs	r0, r8, r0, asr #8
   18e10:	00029f24 	andeq	r9, r2, r4, lsr #30
   18e14:	00029f30 	andeq	r9, r2, r0, lsr pc
   18e18:	00029f48 	andeq	r9, r2, r8, asr #30
   18e1c:	00029f60 	andeq	r9, r2, r0, ror #30
   18e20:	00029f74 	andeq	r9, r2, r4, ror pc
   18e24:	00029f8c 	andeq	r9, r2, ip, lsl #31
   18e28:	00029fa4 	andeq	r9, r2, r4, lsr #31
   18e2c:	00029a58 	andeq	r9, r2, r8, asr sl
   18e30:	00029a68 	andeq	r9, r2, r8, ror #20

00018e34 <DWHCIRegister>:
   18e34:	e92d4070 	push	{r4, r5, r6, lr}
   18e38:	e2504000 	subs	r4, r0, #0
   18e3c:	e1a05001 	mov	r5, r1
   18e40:	0a000002 	beq	18e50 <DWHCIRegister+0x1c>
   18e44:	e3a03000 	mov	r3, #0
   18e48:	e8840028 	stm	r4, {r3, r5}
   18e4c:	e8bd8070 	pop	{r4, r5, r6, pc}
   18e50:	e3a0201a 	mov	r2, #26
   18e54:	e59f1008 	ldr	r1, [pc, #8]	; 18e64 <DWHCIRegister+0x30>
   18e58:	e59f0008 	ldr	r0, [pc, #8]	; 18e68 <DWHCIRegister+0x34>
   18e5c:	eb00384a 	bl	26f8c <uspi_assertion_failed>
   18e60:	eafffff7 	b	18e44 <DWHCIRegister+0x10>
   18e64:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   18e68:	00029a68 	andeq	r9, r2, r8, ror #20

00018e6c <DWHCIRegister2>:
   18e6c:	e92d4070 	push	{r4, r5, r6, lr}
   18e70:	e2504000 	subs	r4, r0, #0
   18e74:	e1a06001 	mov	r6, r1
   18e78:	e1a05002 	mov	r5, r2
   18e7c:	0a000004 	beq	18e94 <DWHCIRegister2+0x28>
   18e80:	e3a03001 	mov	r3, #1
   18e84:	e5846004 	str	r6, [r4, #4]
   18e88:	e5845008 	str	r5, [r4, #8]
   18e8c:	e5843000 	str	r3, [r4]
   18e90:	e8bd8070 	pop	{r4, r5, r6, pc}
   18e94:	e3a02021 	mov	r2, #33	; 0x21
   18e98:	e59f1008 	ldr	r1, [pc, #8]	; 18ea8 <DWHCIRegister2+0x3c>
   18e9c:	e59f0008 	ldr	r0, [pc, #8]	; 18eac <DWHCIRegister2+0x40>
   18ea0:	eb003839 	bl	26f8c <uspi_assertion_failed>
   18ea4:	eafffff5 	b	18e80 <DWHCIRegister2+0x14>
   18ea8:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   18eac:	00029a68 	andeq	r9, r2, r8, ror #20

00018eb0 <_DWHCIRegister>:
   18eb0:	e92d4010 	push	{r4, lr}
   18eb4:	e2504000 	subs	r4, r0, #0
   18eb8:	0a000002 	beq	18ec8 <_DWHCIRegister+0x18>
   18ebc:	e3a03000 	mov	r3, #0
   18ec0:	e5843000 	str	r3, [r4]
   18ec4:	e8bd8010 	pop	{r4, pc}
   18ec8:	e3a02029 	mov	r2, #41	; 0x29
   18ecc:	e59f1008 	ldr	r1, [pc, #8]	; 18edc <_DWHCIRegister+0x2c>
   18ed0:	e59f0008 	ldr	r0, [pc, #8]	; 18ee0 <_DWHCIRegister+0x30>
   18ed4:	eb00382c 	bl	26f8c <uspi_assertion_failed>
   18ed8:	eafffff7 	b	18ebc <_DWHCIRegister+0xc>
   18edc:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   18ee0:	00029a68 	andeq	r9, r2, r8, ror #20

00018ee4 <DWHCIRegisterRead>:
   18ee4:	e92d4010 	push	{r4, lr}
   18ee8:	e2504000 	subs	r4, r0, #0
   18eec:	0a000005 	beq	18f08 <DWHCIRegisterRead+0x24>
   18ef0:	e3a03001 	mov	r3, #1
   18ef4:	e5942004 	ldr	r2, [r4, #4]
   18ef8:	e5920000 	ldr	r0, [r2]
   18efc:	e5843000 	str	r3, [r4]
   18f00:	e5840008 	str	r0, [r4, #8]
   18f04:	e8bd8010 	pop	{r4, pc}
   18f08:	e3a0202f 	mov	r2, #47	; 0x2f
   18f0c:	e59f1008 	ldr	r1, [pc, #8]	; 18f1c <DWHCIRegisterRead+0x38>
   18f10:	e59f0008 	ldr	r0, [pc, #8]	; 18f20 <DWHCIRegisterRead+0x3c>
   18f14:	eb00381c 	bl	26f8c <uspi_assertion_failed>
   18f18:	eafffff4 	b	18ef0 <DWHCIRegisterRead+0xc>
   18f1c:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   18f20:	00029a68 	andeq	r9, r2, r8, ror #20

00018f24 <DWHCIRegisterWrite>:
   18f24:	e92d4010 	push	{r4, lr}
   18f28:	e2504000 	subs	r4, r0, #0
   18f2c:	0a00000b 	beq	18f60 <DWHCIRegisterWrite+0x3c>
   18f30:	e5943000 	ldr	r3, [r4]
   18f34:	e3530000 	cmp	r3, #0
   18f38:	0a000003 	beq	18f4c <DWHCIRegisterWrite+0x28>
   18f3c:	e5943004 	ldr	r3, [r4, #4]
   18f40:	e5942008 	ldr	r2, [r4, #8]
   18f44:	e5832000 	str	r2, [r3]
   18f48:	e8bd8010 	pop	{r4, pc}
   18f4c:	e3a02039 	mov	r2, #57	; 0x39
   18f50:	e59f101c 	ldr	r1, [pc, #28]	; 18f74 <DWHCIRegisterWrite+0x50>
   18f54:	e59f001c 	ldr	r0, [pc, #28]	; 18f78 <DWHCIRegisterWrite+0x54>
   18f58:	eb00380b 	bl	26f8c <uspi_assertion_failed>
   18f5c:	eafffff6 	b	18f3c <DWHCIRegisterWrite+0x18>
   18f60:	e3a02038 	mov	r2, #56	; 0x38
   18f64:	e59f1008 	ldr	r1, [pc, #8]	; 18f74 <DWHCIRegisterWrite+0x50>
   18f68:	e59f000c 	ldr	r0, [pc, #12]	; 18f7c <DWHCIRegisterWrite+0x58>
   18f6c:	eb003806 	bl	26f8c <uspi_assertion_failed>
   18f70:	eaffffee 	b	18f30 <DWHCIRegisterWrite+0xc>
   18f74:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   18f78:	00029fcc 	andeq	r9, r2, ip, asr #31
   18f7c:	00029a68 	andeq	r9, r2, r8, ror #20

00018f80 <DWHCIRegisterGet>:
   18f80:	e92d4010 	push	{r4, lr}
   18f84:	e2504000 	subs	r4, r0, #0
   18f88:	0a00000a 	beq	18fb8 <DWHCIRegisterGet+0x38>
   18f8c:	e5943000 	ldr	r3, [r4]
   18f90:	e3530000 	cmp	r3, #0
   18f94:	0a000001 	beq	18fa0 <DWHCIRegisterGet+0x20>
   18f98:	e5940008 	ldr	r0, [r4, #8]
   18f9c:	e8bd8010 	pop	{r4, pc}
   18fa0:	e3a02040 	mov	r2, #64	; 0x40
   18fa4:	e59f1020 	ldr	r1, [pc, #32]	; 18fcc <DWHCIRegisterGet+0x4c>
   18fa8:	e59f0020 	ldr	r0, [pc, #32]	; 18fd0 <DWHCIRegisterGet+0x50>
   18fac:	eb0037f6 	bl	26f8c <uspi_assertion_failed>
   18fb0:	e5940008 	ldr	r0, [r4, #8]
   18fb4:	e8bd8010 	pop	{r4, pc}
   18fb8:	e3a0203f 	mov	r2, #63	; 0x3f
   18fbc:	e59f1008 	ldr	r1, [pc, #8]	; 18fcc <DWHCIRegisterGet+0x4c>
   18fc0:	e59f000c 	ldr	r0, [pc, #12]	; 18fd4 <DWHCIRegisterGet+0x54>
   18fc4:	eb0037f0 	bl	26f8c <uspi_assertion_failed>
   18fc8:	eaffffef 	b	18f8c <DWHCIRegisterGet+0xc>
   18fcc:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   18fd0:	00029fcc 	andeq	r9, r2, ip, asr #31
   18fd4:	00029a68 	andeq	r9, r2, r8, ror #20

00018fd8 <DWHCIRegisterSet>:
   18fd8:	e92d4070 	push	{r4, r5, r6, lr}
   18fdc:	e2504000 	subs	r4, r0, #0
   18fe0:	e1a05001 	mov	r5, r1
   18fe4:	0a000003 	beq	18ff8 <DWHCIRegisterSet+0x20>
   18fe8:	e3a03001 	mov	r3, #1
   18fec:	e5845008 	str	r5, [r4, #8]
   18ff0:	e5843000 	str	r3, [r4]
   18ff4:	e8bd8070 	pop	{r4, r5, r6, pc}
   18ff8:	e3a02046 	mov	r2, #70	; 0x46
   18ffc:	e59f1008 	ldr	r1, [pc, #8]	; 1900c <DWHCIRegisterSet+0x34>
   19000:	e59f0008 	ldr	r0, [pc, #8]	; 19010 <DWHCIRegisterSet+0x38>
   19004:	eb0037e0 	bl	26f8c <uspi_assertion_failed>
   19008:	eafffff6 	b	18fe8 <DWHCIRegisterSet+0x10>
   1900c:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   19010:	00029a68 	andeq	r9, r2, r8, ror #20

00019014 <DWHCIRegisterIsSet>:
   19014:	e92d4070 	push	{r4, r5, r6, lr}
   19018:	e2504000 	subs	r4, r0, #0
   1901c:	e1a05001 	mov	r5, r1
   19020:	0a00000c 	beq	19058 <DWHCIRegisterIsSet+0x44>
   19024:	e5943000 	ldr	r3, [r4]
   19028:	e3530000 	cmp	r3, #0
   1902c:	0a000004 	beq	19044 <DWHCIRegisterIsSet+0x30>
   19030:	e5943008 	ldr	r3, [r4, #8]
   19034:	e1150003 	tst	r5, r3
   19038:	13a00001 	movne	r0, #1
   1903c:	03a00000 	moveq	r0, #0
   19040:	e8bd8070 	pop	{r4, r5, r6, pc}
   19044:	e3a0204e 	mov	r2, #78	; 0x4e
   19048:	e59f101c 	ldr	r1, [pc, #28]	; 1906c <DWHCIRegisterIsSet+0x58>
   1904c:	e59f001c 	ldr	r0, [pc, #28]	; 19070 <DWHCIRegisterIsSet+0x5c>
   19050:	eb0037cd 	bl	26f8c <uspi_assertion_failed>
   19054:	eafffff5 	b	19030 <DWHCIRegisterIsSet+0x1c>
   19058:	e3a0204d 	mov	r2, #77	; 0x4d
   1905c:	e59f1008 	ldr	r1, [pc, #8]	; 1906c <DWHCIRegisterIsSet+0x58>
   19060:	e59f000c 	ldr	r0, [pc, #12]	; 19074 <DWHCIRegisterIsSet+0x60>
   19064:	eb0037c8 	bl	26f8c <uspi_assertion_failed>
   19068:	eaffffed 	b	19024 <DWHCIRegisterIsSet+0x10>
   1906c:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   19070:	00029fcc 	andeq	r9, r2, ip, asr #31
   19074:	00029a68 	andeq	r9, r2, r8, ror #20

00019078 <DWHCIRegisterAnd>:
   19078:	e92d4070 	push	{r4, r5, r6, lr}
   1907c:	e2504000 	subs	r4, r0, #0
   19080:	e1a05001 	mov	r5, r1
   19084:	0a00000b 	beq	190b8 <DWHCIRegisterAnd+0x40>
   19088:	e5943000 	ldr	r3, [r4]
   1908c:	e3530000 	cmp	r3, #0
   19090:	0a000003 	beq	190a4 <DWHCIRegisterAnd+0x2c>
   19094:	e5941008 	ldr	r1, [r4, #8]
   19098:	e0011005 	and	r1, r1, r5
   1909c:	e5841008 	str	r1, [r4, #8]
   190a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   190a4:	e3a02055 	mov	r2, #85	; 0x55
   190a8:	e59f101c 	ldr	r1, [pc, #28]	; 190cc <DWHCIRegisterAnd+0x54>
   190ac:	e59f001c 	ldr	r0, [pc, #28]	; 190d0 <DWHCIRegisterAnd+0x58>
   190b0:	eb0037b5 	bl	26f8c <uspi_assertion_failed>
   190b4:	eafffff6 	b	19094 <DWHCIRegisterAnd+0x1c>
   190b8:	e3a02054 	mov	r2, #84	; 0x54
   190bc:	e59f1008 	ldr	r1, [pc, #8]	; 190cc <DWHCIRegisterAnd+0x54>
   190c0:	e59f000c 	ldr	r0, [pc, #12]	; 190d4 <DWHCIRegisterAnd+0x5c>
   190c4:	eb0037b0 	bl	26f8c <uspi_assertion_failed>
   190c8:	eaffffee 	b	19088 <DWHCIRegisterAnd+0x10>
   190cc:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   190d0:	00029fcc 	andeq	r9, r2, ip, asr #31
   190d4:	00029a68 	andeq	r9, r2, r8, ror #20

000190d8 <DWHCIRegisterOr>:
   190d8:	e92d4070 	push	{r4, r5, r6, lr}
   190dc:	e2504000 	subs	r4, r0, #0
   190e0:	e1a05001 	mov	r5, r1
   190e4:	0a00000b 	beq	19118 <DWHCIRegisterOr+0x40>
   190e8:	e5943000 	ldr	r3, [r4]
   190ec:	e3530000 	cmp	r3, #0
   190f0:	0a000003 	beq	19104 <DWHCIRegisterOr+0x2c>
   190f4:	e5941008 	ldr	r1, [r4, #8]
   190f8:	e1811005 	orr	r1, r1, r5
   190fc:	e5841008 	str	r1, [r4, #8]
   19100:	e8bd8070 	pop	{r4, r5, r6, pc}
   19104:	e3a0205c 	mov	r2, #92	; 0x5c
   19108:	e59f101c 	ldr	r1, [pc, #28]	; 1912c <DWHCIRegisterOr+0x54>
   1910c:	e59f001c 	ldr	r0, [pc, #28]	; 19130 <DWHCIRegisterOr+0x58>
   19110:	eb00379d 	bl	26f8c <uspi_assertion_failed>
   19114:	eafffff6 	b	190f4 <DWHCIRegisterOr+0x1c>
   19118:	e3a0205b 	mov	r2, #91	; 0x5b
   1911c:	e59f1008 	ldr	r1, [pc, #8]	; 1912c <DWHCIRegisterOr+0x54>
   19120:	e59f000c 	ldr	r0, [pc, #12]	; 19134 <DWHCIRegisterOr+0x5c>
   19124:	eb003798 	bl	26f8c <uspi_assertion_failed>
   19128:	eaffffee 	b	190e8 <DWHCIRegisterOr+0x10>
   1912c:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   19130:	00029fcc 	andeq	r9, r2, ip, asr #31
   19134:	00029a68 	andeq	r9, r2, r8, ror #20

00019138 <DWHCIRegisterClearBit>:
   19138:	e92d4070 	push	{r4, r5, r6, lr}
   1913c:	e2504000 	subs	r4, r0, #0
   19140:	e1a05001 	mov	r5, r1
   19144:	0a000014 	beq	1919c <DWHCIRegisterClearBit+0x64>
   19148:	e5943000 	ldr	r3, [r4]
   1914c:	e3530000 	cmp	r3, #0
   19150:	0a000006 	beq	19170 <DWHCIRegisterClearBit+0x38>
   19154:	e355001f 	cmp	r5, #31
   19158:	8a00000a 	bhi	19188 <DWHCIRegisterClearBit+0x50>
   1915c:	e3a03001 	mov	r3, #1
   19160:	e5941008 	ldr	r1, [r4, #8]
   19164:	e1c11513 	bic	r1, r1, r3, lsl r5
   19168:	e5841008 	str	r1, [r4, #8]
   1916c:	e8bd8070 	pop	{r4, r5, r6, pc}
   19170:	e3a02063 	mov	r2, #99	; 0x63
   19174:	e59f1034 	ldr	r1, [pc, #52]	; 191b0 <DWHCIRegisterClearBit+0x78>
   19178:	e59f0034 	ldr	r0, [pc, #52]	; 191b4 <DWHCIRegisterClearBit+0x7c>
   1917c:	eb003782 	bl	26f8c <uspi_assertion_failed>
   19180:	e355001f 	cmp	r5, #31
   19184:	9afffff4 	bls	1915c <DWHCIRegisterClearBit+0x24>
   19188:	e3a02064 	mov	r2, #100	; 0x64
   1918c:	e59f101c 	ldr	r1, [pc, #28]	; 191b0 <DWHCIRegisterClearBit+0x78>
   19190:	e59f0020 	ldr	r0, [pc, #32]	; 191b8 <DWHCIRegisterClearBit+0x80>
   19194:	eb00377c 	bl	26f8c <uspi_assertion_failed>
   19198:	eaffffef 	b	1915c <DWHCIRegisterClearBit+0x24>
   1919c:	e3a02062 	mov	r2, #98	; 0x62
   191a0:	e59f1008 	ldr	r1, [pc, #8]	; 191b0 <DWHCIRegisterClearBit+0x78>
   191a4:	e59f0010 	ldr	r0, [pc, #16]	; 191bc <DWHCIRegisterClearBit+0x84>
   191a8:	eb003777 	bl	26f8c <uspi_assertion_failed>
   191ac:	eaffffe5 	b	19148 <DWHCIRegisterClearBit+0x10>
   191b0:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   191b4:	00029fcc 	andeq	r9, r2, ip, asr #31
   191b8:	00029fdc 	ldrdeq	r9, [r2], -ip
   191bc:	00029a68 	andeq	r9, r2, r8, ror #20

000191c0 <DWHCIRegisterSetBit>:
   191c0:	e92d4070 	push	{r4, r5, r6, lr}
   191c4:	e2504000 	subs	r4, r0, #0
   191c8:	e1a05001 	mov	r5, r1
   191cc:	0a000014 	beq	19224 <DWHCIRegisterSetBit+0x64>
   191d0:	e5943000 	ldr	r3, [r4]
   191d4:	e3530000 	cmp	r3, #0
   191d8:	0a000006 	beq	191f8 <DWHCIRegisterSetBit+0x38>
   191dc:	e355001f 	cmp	r5, #31
   191e0:	8a00000a 	bhi	19210 <DWHCIRegisterSetBit+0x50>
   191e4:	e3a03001 	mov	r3, #1
   191e8:	e5941008 	ldr	r1, [r4, #8]
   191ec:	e1811513 	orr	r1, r1, r3, lsl r5
   191f0:	e5841008 	str	r1, [r4, #8]
   191f4:	e8bd8070 	pop	{r4, r5, r6, pc}
   191f8:	e3a0206b 	mov	r2, #107	; 0x6b
   191fc:	e59f1034 	ldr	r1, [pc, #52]	; 19238 <DWHCIRegisterSetBit+0x78>
   19200:	e59f0034 	ldr	r0, [pc, #52]	; 1923c <DWHCIRegisterSetBit+0x7c>
   19204:	eb003760 	bl	26f8c <uspi_assertion_failed>
   19208:	e355001f 	cmp	r5, #31
   1920c:	9afffff4 	bls	191e4 <DWHCIRegisterSetBit+0x24>
   19210:	e3a0206c 	mov	r2, #108	; 0x6c
   19214:	e59f101c 	ldr	r1, [pc, #28]	; 19238 <DWHCIRegisterSetBit+0x78>
   19218:	e59f0020 	ldr	r0, [pc, #32]	; 19240 <DWHCIRegisterSetBit+0x80>
   1921c:	eb00375a 	bl	26f8c <uspi_assertion_failed>
   19220:	eaffffef 	b	191e4 <DWHCIRegisterSetBit+0x24>
   19224:	e3a0206a 	mov	r2, #106	; 0x6a
   19228:	e59f1008 	ldr	r1, [pc, #8]	; 19238 <DWHCIRegisterSetBit+0x78>
   1922c:	e59f0010 	ldr	r0, [pc, #16]	; 19244 <DWHCIRegisterSetBit+0x84>
   19230:	eb003755 	bl	26f8c <uspi_assertion_failed>
   19234:	eaffffe5 	b	191d0 <DWHCIRegisterSetBit+0x10>
   19238:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   1923c:	00029fcc 	andeq	r9, r2, ip, asr #31
   19240:	00029fdc 	ldrdeq	r9, [r2], -ip
   19244:	00029a68 	andeq	r9, r2, r8, ror #20

00019248 <DWHCIRegisterClearAll>:
   19248:	e92d4010 	push	{r4, lr}
   1924c:	e2504000 	subs	r4, r0, #0
   19250:	0a000004 	beq	19268 <DWHCIRegisterClearAll+0x20>
   19254:	e3a02000 	mov	r2, #0
   19258:	e3a03001 	mov	r3, #1
   1925c:	e5842008 	str	r2, [r4, #8]
   19260:	e5843000 	str	r3, [r4]
   19264:	e8bd8010 	pop	{r4, pc}
   19268:	e3a02072 	mov	r2, #114	; 0x72
   1926c:	e59f1008 	ldr	r1, [pc, #8]	; 1927c <DWHCIRegisterClearAll+0x34>
   19270:	e59f0008 	ldr	r0, [pc, #8]	; 19280 <DWHCIRegisterClearAll+0x38>
   19274:	eb003744 	bl	26f8c <uspi_assertion_failed>
   19278:	eafffff5 	b	19254 <DWHCIRegisterClearAll+0xc>
   1927c:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   19280:	00029a68 	andeq	r9, r2, r8, ror #20

00019284 <DWHCIRegisterSetAll>:
   19284:	e92d4010 	push	{r4, lr}
   19288:	e2504000 	subs	r4, r0, #0
   1928c:	0a000004 	beq	192a4 <DWHCIRegisterSetAll+0x20>
   19290:	e3e02000 	mvn	r2, #0
   19294:	e3a03001 	mov	r3, #1
   19298:	e5842008 	str	r2, [r4, #8]
   1929c:	e5843000 	str	r3, [r4]
   192a0:	e8bd8010 	pop	{r4, pc}
   192a4:	e3a02079 	mov	r2, #121	; 0x79
   192a8:	e59f1008 	ldr	r1, [pc, #8]	; 192b8 <DWHCIRegisterSetAll+0x34>
   192ac:	e59f0008 	ldr	r0, [pc, #8]	; 192bc <DWHCIRegisterSetAll+0x38>
   192b0:	eb003735 	bl	26f8c <uspi_assertion_failed>
   192b4:	eafffff5 	b	19290 <DWHCIRegisterSetAll+0xc>
   192b8:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   192bc:	00029a68 	andeq	r9, r2, r8, ror #20

000192c0 <DWHCIRegisterDump>:
   192c0:	e92d4010 	push	{r4, lr}
   192c4:	e2504000 	subs	r4, r0, #0
   192c8:	e24dd008 	sub	sp, sp, #8
   192cc:	0a000012 	beq	1931c <DWHCIRegisterDump+0x5c>
   192d0:	e1c420d0 	ldrd	r2, [r4]
   192d4:	e1a03a03 	lsl	r3, r3, #20
   192d8:	e3520000 	cmp	r2, #0
   192dc:	e1a03a23 	lsr	r3, r3, #20
   192e0:	0a000007 	beq	19304 <DWHCIRegisterDump+0x44>
   192e4:	e5942008 	ldr	r2, [r4, #8]
   192e8:	e3a01004 	mov	r1, #4
   192ec:	e58d2000 	str	r2, [sp]
   192f0:	e59f0038 	ldr	r0, [pc, #56]	; 19330 <DWHCIRegisterDump+0x70>
   192f4:	e59f2038 	ldr	r2, [pc, #56]	; 19334 <DWHCIRegisterDump+0x74>
   192f8:	eb003711 	bl	26f44 <LogWrite>
   192fc:	e28dd008 	add	sp, sp, #8
   19300:	e8bd8010 	pop	{r4, pc}
   19304:	e3a01004 	mov	r1, #4
   19308:	e59f2028 	ldr	r2, [pc, #40]	; 19338 <DWHCIRegisterDump+0x78>
   1930c:	e59f001c 	ldr	r0, [pc, #28]	; 19330 <DWHCIRegisterDump+0x70>
   19310:	e28dd008 	add	sp, sp, #8
   19314:	e8bd4010 	pop	{r4, lr}
   19318:	ea003709 	b	26f44 <LogWrite>
   1931c:	e3a02082 	mov	r2, #130	; 0x82
   19320:	e59f1014 	ldr	r1, [pc, #20]	; 1933c <DWHCIRegisterDump+0x7c>
   19324:	e59f0014 	ldr	r0, [pc, #20]	; 19340 <DWHCIRegisterDump+0x80>
   19328:	eb003717 	bl	26f8c <uspi_assertion_failed>
   1932c:	eaffffe7 	b	192d0 <DWHCIRegisterDump+0x10>
   19330:	0002a01c 	andeq	sl, r2, ip, lsl r0
   19334:	0002a000 	andeq	sl, r2, r0
   19338:	0002a024 	andeq	sl, r2, r4, lsr #32
   1933c:	00029fbc 			; <UNDEFINED> instruction: 0x00029fbc
   19340:	00029a68 	andeq	r9, r2, r8, ror #20

00019344 <_DWHCITransferStageData>:
   19344:	e92d4010 	push	{r4, lr}
   19348:	e2504000 	subs	r4, r0, #0
   1934c:	0a00000b 	beq	19380 <_DWHCITransferStageData+0x3c>
   19350:	e5943050 	ldr	r3, [r4, #80]	; 0x50
   19354:	e3530000 	cmp	r3, #0
   19358:	0a000002 	beq	19368 <_DWHCITransferStageData+0x24>
   1935c:	e5943054 	ldr	r3, [r4, #84]	; 0x54
   19360:	e2840054 	add	r0, r4, #84	; 0x54
   19364:	e12fff33 	blx	r3
   19368:	e3a03000 	mov	r3, #0
   1936c:	e584304c 	str	r3, [r4, #76]	; 0x4c
   19370:	e584301c 	str	r3, [r4, #28]
   19374:	e5843018 	str	r3, [r4, #24]
   19378:	e5843004 	str	r3, [r4, #4]
   1937c:	e8bd8010 	pop	{r4, pc}
   19380:	e3a02080 	mov	r2, #128	; 0x80
   19384:	e59f1008 	ldr	r1, [pc, #8]	; 19394 <_DWHCITransferStageData+0x50>
   19388:	e59f0008 	ldr	r0, [pc, #8]	; 19398 <_DWHCITransferStageData+0x54>
   1938c:	eb0036fe 	bl	26f8c <uspi_assertion_failed>
   19390:	eaffffee 	b	19350 <_DWHCITransferStageData+0xc>
   19394:	0002a044 	andeq	sl, r2, r4, asr #32
   19398:	00029a68 	andeq	r9, r2, r8, ror #20

0001939c <DWHCITransferStageDataTransactionComplete>:
   1939c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   193a0:	e2504000 	subs	r4, r0, #0
   193a4:	e24dd00c 	sub	sp, sp, #12
   193a8:	e1a05001 	mov	r5, r1
   193ac:	e1a06002 	mov	r6, r2
   193b0:	0a00003c 	beq	194a8 <DWHCITransferStageDataTransactionComplete+0x10c>
   193b4:	e59f2148 	ldr	r2, [pc, #328]	; 19504 <DWHCITransferStageDataTransactionComplete+0x168>
   193b8:	e5845044 	str	r5, [r4, #68]	; 0x44
   193bc:	e0022005 	and	r2, r2, r5
   193c0:	e3520000 	cmp	r2, #0
   193c4:	1a000024 	bne	1945c <DWHCITransferStageDataTransactionComplete+0xc0>
   193c8:	e5942010 	ldr	r2, [r4, #16]
   193cc:	e5945034 	ldr	r5, [r4, #52]	; 0x34
   193d0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   193d4:	e3520000 	cmp	r2, #0
   193d8:	e0457006 	sub	r7, r5, r6
   193dc:	e0403003 	sub	r3, r0, r3
   193e0:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   193e4:	e594c04c 	ldr	ip, [r4, #76]	; 0x4c
   193e8:	0a00001d 	beq	19464 <DWHCITransferStageDataTransactionComplete+0xc8>
   193ec:	e16f1f13 	clz	r1, r3
   193f0:	e594e014 	ldr	lr, [r4, #20]
   193f4:	e1a012a1 	lsr	r1, r1, #5
   193f8:	e35e0000 	cmp	lr, #0
   193fc:	03a01000 	moveq	r1, #0
   19400:	e3510000 	cmp	r1, #0
   19404:	1a000036 	bne	194e4 <DWHCITransferStageDataTransactionComplete+0x148>
   19408:	e0832002 	add	r2, r3, r2
   1940c:	e35e0000 	cmp	lr, #0
   19410:	e08c3003 	add	r3, ip, r3
   19414:	e5842038 	str	r2, [r4, #56]	; 0x38
   19418:	e584304c 	str	r3, [r4, #76]	; 0x4c
   1941c:	1a000014 	bne	19474 <DWHCITransferStageDataTransactionComplete+0xd8>
   19420:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   19424:	e1530007 	cmp	r3, r7
   19428:	3a000018 	bcc	19490 <DWHCITransferStageDataTransactionComplete+0xf4>
   1942c:	e5941028 	ldr	r1, [r4, #40]	; 0x28
   19430:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   19434:	e0465005 	sub	r5, r6, r5
   19438:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   1943c:	e0855003 	add	r5, r5, r3
   19440:	e0413002 	sub	r3, r1, r2
   19444:	e1530000 	cmp	r3, r0
   19448:	e584502c 	str	r5, [r4, #44]	; 0x2c
   1944c:	2a000002 	bcs	1945c <DWHCITransferStageDataTransactionComplete+0xc0>
   19450:	e1510002 	cmp	r1, r2
   19454:	3a00001a 	bcc	194c4 <DWHCITransferStageDataTransactionComplete+0x128>
   19458:	e5843030 	str	r3, [r4, #48]	; 0x30
   1945c:	e28dd00c 	add	sp, sp, #12
   19460:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   19464:	e0832002 	add	r2, r3, r2
   19468:	e08c3003 	add	r3, ip, r3
   1946c:	e5842038 	str	r2, [r4, #56]	; 0x38
   19470:	e584304c 	str	r3, [r4, #76]	; 0x4c
   19474:	e594200c 	ldr	r2, [r4, #12]
   19478:	e1a01007 	mov	r1, r7
   1947c:	e594001c 	ldr	r0, [r4, #28]
   19480:	eb00098e 	bl	1bac0 <USBEndpointSkipPID>
   19484:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   19488:	e1530007 	cmp	r3, r7
   1948c:	2affffe6 	bcs	1942c <DWHCITransferStageDataTransactionComplete+0x90>
   19490:	e3a020b9 	mov	r2, #185	; 0xb9
   19494:	e59f106c 	ldr	r1, [pc, #108]	; 19508 <DWHCITransferStageDataTransactionComplete+0x16c>
   19498:	e59f006c 	ldr	r0, [pc, #108]	; 1950c <DWHCITransferStageDataTransactionComplete+0x170>
   1949c:	eb0036ba 	bl	26f8c <uspi_assertion_failed>
   194a0:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   194a4:	eaffffe0 	b	1942c <DWHCITransferStageDataTransactionComplete+0x90>
   194a8:	e3a02090 	mov	r2, #144	; 0x90
   194ac:	e59f1054 	ldr	r1, [pc, #84]	; 19508 <DWHCITransferStageDataTransactionComplete+0x16c>
   194b0:	e59f0058 	ldr	r0, [pc, #88]	; 19510 <DWHCITransferStageDataTransactionComplete+0x174>
   194b4:	e58d3004 	str	r3, [sp, #4]
   194b8:	eb0036b3 	bl	26f8c <uspi_assertion_failed>
   194bc:	e59d3004 	ldr	r3, [sp, #4]
   194c0:	eaffffbb 	b	193b4 <DWHCITransferStageDataTransactionComplete+0x18>
   194c4:	e3a020bf 	mov	r2, #191	; 0xbf
   194c8:	e59f1038 	ldr	r1, [pc, #56]	; 19508 <DWHCITransferStageDataTransactionComplete+0x16c>
   194cc:	e59f0040 	ldr	r0, [pc, #64]	; 19514 <DWHCITransferStageDataTransactionComplete+0x178>
   194d0:	eb0036ad 	bl	26f8c <uspi_assertion_failed>
   194d4:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   194d8:	e5942038 	ldr	r2, [r4, #56]	; 0x38
   194dc:	e0433002 	sub	r3, r3, r2
   194e0:	eaffffdc 	b	19458 <DWHCITransferStageDataTransactionComplete+0xbc>
   194e4:	e3500000 	cmp	r0, #0
   194e8:	15940024 	ldrne	r0, [r4, #36]	; 0x24
   194ec:	10000790 	mulne	r0, r0, r7
   194f0:	e0802002 	add	r2, r0, r2
   194f4:	e08c3000 	add	r3, ip, r0
   194f8:	e5842038 	str	r2, [r4, #56]	; 0x38
   194fc:	e584304c 	str	r3, [r4, #76]	; 0x4c
   19500:	eaffffdb 	b	19474 <DWHCITransferStageDataTransactionComplete+0xd8>
   19504:	000007dc 	ldrdeq	r0, [r0], -ip
   19508:	0002a044 	andeq	sl, r2, r4, asr #32
   1950c:	0002a05c 	andeq	sl, r2, ip, asr r0
   19510:	00029a68 	andeq	r9, r2, r8, ror #20
   19514:	0002a084 	andeq	sl, r2, r4, lsl #1

00019518 <DWHCITransferStageDataSetSplitComplete>:
   19518:	e92d4070 	push	{r4, r5, r6, lr}
   1951c:	e2504000 	subs	r4, r0, #0
   19520:	e1a05001 	mov	r5, r1
   19524:	0a00000a 	beq	19554 <DWHCITransferStageDataSetSplitComplete+0x3c>
   19528:	e5943010 	ldr	r3, [r4, #16]
   1952c:	e3530000 	cmp	r3, #0
   19530:	0a000001 	beq	1953c <DWHCITransferStageDataSetSplitComplete+0x24>
   19534:	e5845014 	str	r5, [r4, #20]
   19538:	e8bd8070 	pop	{r4, r5, r6, pc}
   1953c:	e3a020c7 	mov	r2, #199	; 0xc7
   19540:	e59f1020 	ldr	r1, [pc, #32]	; 19568 <DWHCITransferStageDataSetSplitComplete+0x50>
   19544:	e59f0020 	ldr	r0, [pc, #32]	; 1956c <DWHCITransferStageDataSetSplitComplete+0x54>
   19548:	eb00368f 	bl	26f8c <uspi_assertion_failed>
   1954c:	e5845014 	str	r5, [r4, #20]
   19550:	e8bd8070 	pop	{r4, r5, r6, pc}
   19554:	e3a020c6 	mov	r2, #198	; 0xc6
   19558:	e59f1008 	ldr	r1, [pc, #8]	; 19568 <DWHCITransferStageDataSetSplitComplete+0x50>
   1955c:	e59f000c 	ldr	r0, [pc, #12]	; 19570 <DWHCITransferStageDataSetSplitComplete+0x58>
   19560:	eb003689 	bl	26f8c <uspi_assertion_failed>
   19564:	eaffffef 	b	19528 <DWHCITransferStageDataSetSplitComplete+0x10>
   19568:	0002a044 	andeq	sl, r2, r4, asr #32
   1956c:	0002a0c0 	andeq	sl, r2, r0, asr #1
   19570:	00029a68 	andeq	r9, r2, r8, ror #20

00019574 <DWHCITransferStageDataSetState>:
   19574:	e92d4070 	push	{r4, r5, r6, lr}
   19578:	e2504000 	subs	r4, r0, #0
   1957c:	e1a05001 	mov	r5, r1
   19580:	0a000001 	beq	1958c <DWHCITransferStageDataSetState+0x18>
   19584:	e584503c 	str	r5, [r4, #60]	; 0x3c
   19588:	e8bd8070 	pop	{r4, r5, r6, pc}
   1958c:	e3a020ce 	mov	r2, #206	; 0xce
   19590:	e59f100c 	ldr	r1, [pc, #12]	; 195a4 <DWHCITransferStageDataSetState+0x30>
   19594:	e59f000c 	ldr	r0, [pc, #12]	; 195a8 <DWHCITransferStageDataSetState+0x34>
   19598:	eb00367b 	bl	26f8c <uspi_assertion_failed>
   1959c:	e584503c 	str	r5, [r4, #60]	; 0x3c
   195a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   195a4:	0002a044 	andeq	sl, r2, r4, asr #32
   195a8:	00029a68 	andeq	r9, r2, r8, ror #20

000195ac <DWHCITransferStageDataGetState>:
   195ac:	e92d4010 	push	{r4, lr}
   195b0:	e2504000 	subs	r4, r0, #0
   195b4:	0a000001 	beq	195c0 <DWHCITransferStageDataGetState+0x14>
   195b8:	e594003c 	ldr	r0, [r4, #60]	; 0x3c
   195bc:	e8bd8010 	pop	{r4, pc}
   195c0:	e3a020d4 	mov	r2, #212	; 0xd4
   195c4:	e59f100c 	ldr	r1, [pc, #12]	; 195d8 <DWHCITransferStageDataGetState+0x2c>
   195c8:	e59f000c 	ldr	r0, [pc, #12]	; 195dc <DWHCITransferStageDataGetState+0x30>
   195cc:	eb00366e 	bl	26f8c <uspi_assertion_failed>
   195d0:	e594003c 	ldr	r0, [r4, #60]	; 0x3c
   195d4:	e8bd8010 	pop	{r4, pc}
   195d8:	0002a044 	andeq	sl, r2, r4, asr #32
   195dc:	00029a68 	andeq	r9, r2, r8, ror #20

000195e0 <DWHCITransferStageDataSetSubState>:
   195e0:	e92d4070 	push	{r4, r5, r6, lr}
   195e4:	e2504000 	subs	r4, r0, #0
   195e8:	e1a05001 	mov	r5, r1
   195ec:	0a000001 	beq	195f8 <DWHCITransferStageDataSetSubState+0x18>
   195f0:	e5845040 	str	r5, [r4, #64]	; 0x40
   195f4:	e8bd8070 	pop	{r4, r5, r6, pc}
   195f8:	e3a020da 	mov	r2, #218	; 0xda
   195fc:	e59f100c 	ldr	r1, [pc, #12]	; 19610 <DWHCITransferStageDataSetSubState+0x30>
   19600:	e59f000c 	ldr	r0, [pc, #12]	; 19614 <DWHCITransferStageDataSetSubState+0x34>
   19604:	eb003660 	bl	26f8c <uspi_assertion_failed>
   19608:	e5845040 	str	r5, [r4, #64]	; 0x40
   1960c:	e8bd8070 	pop	{r4, r5, r6, pc}
   19610:	0002a044 	andeq	sl, r2, r4, asr #32
   19614:	00029a68 	andeq	r9, r2, r8, ror #20

00019618 <DWHCITransferStageDataGetSubState>:
   19618:	e92d4010 	push	{r4, lr}
   1961c:	e2504000 	subs	r4, r0, #0
   19620:	0a000001 	beq	1962c <DWHCITransferStageDataGetSubState+0x14>
   19624:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   19628:	e8bd8010 	pop	{r4, pc}
   1962c:	e3a020e0 	mov	r2, #224	; 0xe0
   19630:	e59f100c 	ldr	r1, [pc, #12]	; 19644 <DWHCITransferStageDataGetSubState+0x2c>
   19634:	e59f000c 	ldr	r0, [pc, #12]	; 19648 <DWHCITransferStageDataGetSubState+0x30>
   19638:	eb003653 	bl	26f8c <uspi_assertion_failed>
   1963c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   19640:	e8bd8010 	pop	{r4, pc}
   19644:	0002a044 	andeq	sl, r2, r4, asr #32
   19648:	00029a68 	andeq	r9, r2, r8, ror #20

0001964c <DWHCITransferStageDataBeginSplitCycle>:
   1964c:	e3a00001 	mov	r0, #1
   19650:	e12fff1e 	bx	lr

00019654 <DWHCITransferStageDataGetChannelNumber>:
   19654:	e92d4010 	push	{r4, lr}
   19658:	e2504000 	subs	r4, r0, #0
   1965c:	0a000001 	beq	19668 <DWHCITransferStageDataGetChannelNumber+0x14>
   19660:	e5940000 	ldr	r0, [r4]
   19664:	e8bd8010 	pop	{r4, pc}
   19668:	e3a020eb 	mov	r2, #235	; 0xeb
   1966c:	e59f100c 	ldr	r1, [pc, #12]	; 19680 <DWHCITransferStageDataGetChannelNumber+0x2c>
   19670:	e59f000c 	ldr	r0, [pc, #12]	; 19684 <DWHCITransferStageDataGetChannelNumber+0x30>
   19674:	eb003644 	bl	26f8c <uspi_assertion_failed>
   19678:	e5940000 	ldr	r0, [r4]
   1967c:	e8bd8010 	pop	{r4, pc}
   19680:	0002a044 	andeq	sl, r2, r4, asr #32
   19684:	00029a68 	andeq	r9, r2, r8, ror #20

00019688 <DWHCITransferStageDataIsPeriodic>:
   19688:	e92d4010 	push	{r4, lr}
   1968c:	e2504000 	subs	r4, r0, #0
   19690:	0a000009 	beq	196bc <DWHCITransferStageDataIsPeriodic+0x34>
   19694:	e594001c 	ldr	r0, [r4, #28]
   19698:	e3500000 	cmp	r0, #0
   1969c:	0a00000d 	beq	196d8 <DWHCITransferStageDataIsPeriodic+0x50>
   196a0:	eb0008a2 	bl	1b930 <USBEndpointGetType>
   196a4:	e2400002 	sub	r0, r0, #2
   196a8:	e6ef0070 	uxtb	r0, r0
   196ac:	e3500001 	cmp	r0, #1
   196b0:	83a00000 	movhi	r0, #0
   196b4:	93a00001 	movls	r0, #1
   196b8:	e8bd8010 	pop	{r4, pc}
   196bc:	e59f002c 	ldr	r0, [pc, #44]	; 196f0 <DWHCITransferStageDataIsPeriodic+0x68>
   196c0:	e3a020f1 	mov	r2, #241	; 0xf1
   196c4:	e59f1028 	ldr	r1, [pc, #40]	; 196f4 <DWHCITransferStageDataIsPeriodic+0x6c>
   196c8:	eb00362f 	bl	26f8c <uspi_assertion_failed>
   196cc:	e594001c 	ldr	r0, [r4, #28]
   196d0:	e3500000 	cmp	r0, #0
   196d4:	1afffff1 	bne	196a0 <DWHCITransferStageDataIsPeriodic+0x18>
   196d8:	e59f0018 	ldr	r0, [pc, #24]	; 196f8 <DWHCITransferStageDataIsPeriodic+0x70>
   196dc:	e3a020f2 	mov	r2, #242	; 0xf2
   196e0:	e59f100c 	ldr	r1, [pc, #12]	; 196f4 <DWHCITransferStageDataIsPeriodic+0x6c>
   196e4:	eb003628 	bl	26f8c <uspi_assertion_failed>
   196e8:	e594001c 	ldr	r0, [r4, #28]
   196ec:	eaffffeb 	b	196a0 <DWHCITransferStageDataIsPeriodic+0x18>
   196f0:	00029a68 	andeq	r9, r2, r8, ror #20
   196f4:	0002a044 	andeq	sl, r2, r4, asr #32
   196f8:	0002a0dc 	ldrdeq	sl, [r2], -ip

000196fc <DWHCITransferStageData>:
   196fc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   19700:	e2504000 	subs	r4, r0, #0
   19704:	e24dd00c 	sub	sp, sp, #12
   19708:	e1a07001 	mov	r7, r1
   1970c:	e1a05002 	mov	r5, r2
   19710:	e59d6020 	ldr	r6, [sp, #32]
   19714:	0a00007e 	beq	19914 <DWHCITransferStageData+0x218>
   19718:	e3a02000 	mov	r2, #0
   1971c:	e1550002 	cmp	r5, r2
   19720:	e5847000 	str	r7, [r4]
   19724:	e5845004 	str	r5, [r4, #4]
   19728:	e5843008 	str	r3, [r4, #8]
   1972c:	e584600c 	str	r6, [r4, #12]
   19730:	e5842014 	str	r2, [r4, #20]
   19734:	e5842038 	str	r2, [r4, #56]	; 0x38
   19738:	e584203c 	str	r2, [r4, #60]	; 0x3c
   1973c:	e5842040 	str	r2, [r4, #64]	; 0x40
   19740:	e5842044 	str	r2, [r4, #68]	; 0x44
   19744:	e5842050 	str	r2, [r4, #80]	; 0x50
   19748:	0a000078 	beq	19930 <DWHCITransferStageData+0x234>
   1974c:	e1a00005 	mov	r0, r5
   19750:	eb000968 	bl	1bcf8 <USBRequestGetEndpoint>
   19754:	e3500000 	cmp	r0, #0
   19758:	e584001c 	str	r0, [r4, #28]
   1975c:	0a000078 	beq	19944 <DWHCITransferStageData+0x248>
   19760:	eb000851 	bl	1b8ac <USBEndpointGetDevice>
   19764:	e3500000 	cmp	r0, #0
   19768:	e5840018 	str	r0, [r4, #24]
   1976c:	0a00007d 	beq	19968 <DWHCITransferStageData+0x26c>
   19770:	eb000394 	bl	1a5c8 <USBDeviceGetSpeed>
   19774:	e5c40020 	strb	r0, [r4, #32]
   19778:	e594001c 	ldr	r0, [r4, #28]
   1977c:	eb000893 	bl	1b9d0 <USBEndpointGetMaxPacketSize>
   19780:	e5840024 	str	r0, [r4, #36]	; 0x24
   19784:	e5940018 	ldr	r0, [r4, #24]
   19788:	eb0003a9 	bl	1a634 <USBDeviceGetHubAddress>
   1978c:	e3500000 	cmp	r0, #0
   19790:	1a000026 	bne	19830 <DWHCITransferStageData+0x134>
   19794:	e3560000 	cmp	r6, #0
   19798:	e5840010 	str	r0, [r4, #16]
   1979c:	0a000029 	beq	19848 <DWHCITransferStageData+0x14c>
   197a0:	e3a02000 	mov	r2, #0
   197a4:	e3a03001 	mov	r3, #1
   197a8:	e2845048 	add	r5, r4, #72	; 0x48
   197ac:	e5842028 	str	r2, [r4, #40]	; 0x28
   197b0:	e5842030 	str	r2, [r4, #48]	; 0x30
   197b4:	e584302c 	str	r3, [r4, #44]	; 0x2c
   197b8:	e5843034 	str	r3, [r4, #52]	; 0x34
   197bc:	e584504c 	str	r5, [r4, #76]	; 0x4c
   197c0:	e3150003 	tst	r5, #3
   197c4:	1a000045 	bne	198e0 <DWHCITransferStageData+0x1e4>
   197c8:	e5943010 	ldr	r3, [r4, #16]
   197cc:	e3530000 	cmp	r3, #0
   197d0:	0a000009 	beq	197fc <DWHCITransferStageData+0x100>
   197d4:	e1a00004 	mov	r0, r4
   197d8:	ebffffaa 	bl	19688 <DWHCITransferStageDataIsPeriodic>
   197dc:	e3500000 	cmp	r0, #0
   197e0:	e2840054 	add	r0, r4, #84	; 0x54
   197e4:	0a000042 	beq	198f4 <DWHCITransferStageData+0x1f8>
   197e8:	eb002005 	bl	21804 <DWHCIFrameSchedulerPeriodic>
   197ec:	e3a03001 	mov	r3, #1
   197f0:	e5843050 	str	r3, [r4, #80]	; 0x50
   197f4:	e28dd00c 	add	sp, sp, #12
   197f8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   197fc:	e5940018 	ldr	r0, [r4, #24]
   19800:	eb00038b 	bl	1a634 <USBDeviceGetHubAddress>
   19804:	e3500000 	cmp	r0, #0
   19808:	1afffff9 	bne	197f4 <DWHCITransferStageData+0xf8>
   1980c:	e5d43020 	ldrb	r3, [r4, #32]
   19810:	e3530002 	cmp	r3, #2
   19814:	0afffff6 	beq	197f4 <DWHCITransferStageData+0xf8>
   19818:	e1a00004 	mov	r0, r4
   1981c:	ebffff99 	bl	19688 <DWHCITransferStageDataIsPeriodic>
   19820:	e1a01000 	mov	r1, r0
   19824:	e2840054 	add	r0, r4, #84	; 0x54
   19828:	eb0024b0 	bl	22af0 <DWHCIFrameSchedulerNoSplit>
   1982c:	eaffffee 	b	197ec <DWHCITransferStageData+0xf0>
   19830:	e5d40020 	ldrb	r0, [r4, #32]
   19834:	e2500002 	subs	r0, r0, #2
   19838:	13a00001 	movne	r0, #1
   1983c:	e3560000 	cmp	r6, #0
   19840:	e5840010 	str	r0, [r4, #16]
   19844:	1affffd5 	bne	197a0 <DWHCITransferStageData+0xa4>
   19848:	e1a01006 	mov	r1, r6
   1984c:	e594001c 	ldr	r0, [r4, #28]
   19850:	eb00087f 	bl	1ba54 <USBEndpointGetNextPID>
   19854:	e3500000 	cmp	r0, #0
   19858:	e1a00005 	mov	r0, r5
   1985c:	0a000026 	beq	198fc <DWHCITransferStageData+0x200>
   19860:	eb000995 	bl	1bebc <USBRequestGetBuffer>
   19864:	e584004c 	str	r0, [r4, #76]	; 0x4c
   19868:	e1a00005 	mov	r0, r5
   1986c:	eb0009a9 	bl	1bf18 <USBRequestGetBufLen>
   19870:	e1a06000 	mov	r6, r0
   19874:	e594504c 	ldr	r5, [r4, #76]	; 0x4c
   19878:	e5840028 	str	r0, [r4, #40]	; 0x28
   1987c:	e5947024 	ldr	r7, [r4, #36]	; 0x24
   19880:	e2470001 	sub	r0, r7, #1
   19884:	e0800006 	add	r0, r0, r6
   19888:	e1a01007 	mov	r1, r7
   1988c:	eb002f12 	bl	254dc <__aeabi_uidiv>
   19890:	e5943010 	ldr	r3, [r4, #16]
   19894:	e584002c 	str	r0, [r4, #44]	; 0x2c
   19898:	e3530000 	cmp	r3, #0
   1989c:	05846030 	streq	r6, [r4, #48]	; 0x30
   198a0:	05840034 	streq	r0, [r4, #52]	; 0x34
   198a4:	0a000004 	beq	198bc <DWHCITransferStageData+0x1c0>
   198a8:	e1570006 	cmp	r7, r6
   198ac:	31a06007 	movcc	r6, r7
   198b0:	e3a03001 	mov	r3, #1
   198b4:	e5846030 	str	r6, [r4, #48]	; 0x30
   198b8:	e5843034 	str	r3, [r4, #52]	; 0x34
   198bc:	e3550000 	cmp	r5, #0
   198c0:	1affffbe 	bne	197c0 <DWHCITransferStageData+0xc4>
   198c4:	e3a02061 	mov	r2, #97	; 0x61
   198c8:	e59f10b0 	ldr	r1, [pc, #176]	; 19980 <DWHCITransferStageData+0x284>
   198cc:	e59f00b0 	ldr	r0, [pc, #176]	; 19984 <DWHCITransferStageData+0x288>
   198d0:	eb0035ad 	bl	26f8c <uspi_assertion_failed>
   198d4:	e594504c 	ldr	r5, [r4, #76]	; 0x4c
   198d8:	e3150003 	tst	r5, #3
   198dc:	0affffb9 	beq	197c8 <DWHCITransferStageData+0xcc>
   198e0:	e3a02062 	mov	r2, #98	; 0x62
   198e4:	e59f1094 	ldr	r1, [pc, #148]	; 19980 <DWHCITransferStageData+0x284>
   198e8:	e59f0098 	ldr	r0, [pc, #152]	; 19988 <DWHCITransferStageData+0x28c>
   198ec:	eb0035a6 	bl	26f8c <uspi_assertion_failed>
   198f0:	eaffffb4 	b	197c8 <DWHCITransferStageData+0xcc>
   198f4:	eb001ede 	bl	21474 <DWHCIFrameSchedulerNonPeriodic>
   198f8:	eaffffbb 	b	197ec <DWHCITransferStageData+0xf0>
   198fc:	eb000950 	bl	1be44 <USBRequestGetSetupData>
   19900:	e3a06008 	mov	r6, #8
   19904:	e1a05000 	mov	r5, r0
   19908:	e584004c 	str	r0, [r4, #76]	; 0x4c
   1990c:	e5846028 	str	r6, [r4, #40]	; 0x28
   19910:	eaffffd9 	b	1987c <DWHCITransferStageData+0x180>
   19914:	e3a0201b 	mov	r2, #27
   19918:	e59f1060 	ldr	r1, [pc, #96]	; 19980 <DWHCITransferStageData+0x284>
   1991c:	e59f0068 	ldr	r0, [pc, #104]	; 1998c <DWHCITransferStageData+0x290>
   19920:	e58d3004 	str	r3, [sp, #4]
   19924:	eb003598 	bl	26f8c <uspi_assertion_failed>
   19928:	e59d3004 	ldr	r3, [sp, #4]
   1992c:	eaffff79 	b	19718 <DWHCITransferStageData+0x1c>
   19930:	e3a02028 	mov	r2, #40	; 0x28
   19934:	e59f1044 	ldr	r1, [pc, #68]	; 19980 <DWHCITransferStageData+0x284>
   19938:	e59f0050 	ldr	r0, [pc, #80]	; 19990 <DWHCITransferStageData+0x294>
   1993c:	eb003592 	bl	26f8c <uspi_assertion_failed>
   19940:	eaffff81 	b	1974c <DWHCITransferStageData+0x50>
   19944:	e3a0202b 	mov	r2, #43	; 0x2b
   19948:	e59f1030 	ldr	r1, [pc, #48]	; 19980 <DWHCITransferStageData+0x284>
   1994c:	e59f0040 	ldr	r0, [pc, #64]	; 19994 <DWHCITransferStageData+0x298>
   19950:	eb00358d 	bl	26f8c <uspi_assertion_failed>
   19954:	e594001c 	ldr	r0, [r4, #28]
   19958:	eb0007d3 	bl	1b8ac <USBEndpointGetDevice>
   1995c:	e3500000 	cmp	r0, #0
   19960:	e5840018 	str	r0, [r4, #24]
   19964:	1affff81 	bne	19770 <DWHCITransferStageData+0x74>
   19968:	e59f0028 	ldr	r0, [pc, #40]	; 19998 <DWHCITransferStageData+0x29c>
   1996c:	e3a0202d 	mov	r2, #45	; 0x2d
   19970:	e59f1008 	ldr	r1, [pc, #8]	; 19980 <DWHCITransferStageData+0x284>
   19974:	eb003584 	bl	26f8c <uspi_assertion_failed>
   19978:	e5940018 	ldr	r0, [r4, #24]
   1997c:	eaffff7b 	b	19770 <DWHCITransferStageData+0x74>
   19980:	0002a044 	andeq	sl, r2, r4, asr #32
   19984:	0002a120 	andeq	sl, r2, r0, lsr #2
   19988:	0002a140 	andeq	sl, r2, r0, asr #2
   1998c:	00029a68 	andeq	r9, r2, r8, ror #20
   19990:	0002a0f4 	strdeq	sl, [r2], -r4
   19994:	0002a0dc 	ldrdeq	sl, [r2], -ip
   19998:	0002a108 	andeq	sl, r2, r8, lsl #2

0001999c <DWHCITransferStageDataGetDeviceAddress>:
   1999c:	e92d4010 	push	{r4, lr}
   199a0:	e2504000 	subs	r4, r0, #0
   199a4:	0a000004 	beq	199bc <DWHCITransferStageDataGetDeviceAddress+0x20>
   199a8:	e5940018 	ldr	r0, [r4, #24]
   199ac:	e3500000 	cmp	r0, #0
   199b0:	0a000008 	beq	199d8 <DWHCITransferStageDataGetDeviceAddress+0x3c>
   199b4:	e8bd4010 	pop	{r4, lr}
   199b8:	ea0002f5 	b	1a594 <USBDeviceGetAddress>
   199bc:	e59f0030 	ldr	r0, [pc, #48]	; 199f4 <DWHCITransferStageDataGetDeviceAddress+0x58>
   199c0:	e3a020fb 	mov	r2, #251	; 0xfb
   199c4:	e59f102c 	ldr	r1, [pc, #44]	; 199f8 <DWHCITransferStageDataGetDeviceAddress+0x5c>
   199c8:	eb00356f 	bl	26f8c <uspi_assertion_failed>
   199cc:	e5940018 	ldr	r0, [r4, #24]
   199d0:	e3500000 	cmp	r0, #0
   199d4:	1afffff6 	bne	199b4 <DWHCITransferStageDataGetDeviceAddress+0x18>
   199d8:	e59f001c 	ldr	r0, [pc, #28]	; 199fc <DWHCITransferStageDataGetDeviceAddress+0x60>
   199dc:	e3a020fc 	mov	r2, #252	; 0xfc
   199e0:	e59f1010 	ldr	r1, [pc, #16]	; 199f8 <DWHCITransferStageDataGetDeviceAddress+0x5c>
   199e4:	eb003568 	bl	26f8c <uspi_assertion_failed>
   199e8:	e5940018 	ldr	r0, [r4, #24]
   199ec:	e8bd4010 	pop	{r4, lr}
   199f0:	ea0002e7 	b	1a594 <USBDeviceGetAddress>
   199f4:	00029a68 	andeq	r9, r2, r8, ror #20
   199f8:	0002a044 	andeq	sl, r2, r4, asr #32
   199fc:	0002a108 	andeq	sl, r2, r8, lsl #2

00019a00 <DWHCITransferStageDataGetEndpointType>:
   19a00:	e92d4010 	push	{r4, lr}
   19a04:	e2504000 	subs	r4, r0, #0
   19a08:	0a000014 	beq	19a60 <DWHCITransferStageDataGetEndpointType+0x60>
   19a0c:	e594001c 	ldr	r0, [r4, #28]
   19a10:	e3500000 	cmp	r0, #0
   19a14:	0a00000b 	beq	19a48 <DWHCITransferStageDataGetEndpointType+0x48>
   19a18:	eb0007c4 	bl	1b930 <USBEndpointGetType>
   19a1c:	e3500002 	cmp	r0, #2
   19a20:	8a000002 	bhi	19a30 <DWHCITransferStageDataGetEndpointType+0x30>
   19a24:	e59f3048 	ldr	r3, [pc, #72]	; 19a74 <DWHCITransferStageDataGetEndpointType+0x74>
   19a28:	e7d30100 	ldrb	r0, [r3, r0, lsl #2]
   19a2c:	e8bd8010 	pop	{r4, pc}
   19a30:	e59f2040 	ldr	r2, [pc, #64]	; 19a78 <DWHCITransferStageDataGetEndpointType+0x78>
   19a34:	e59f1040 	ldr	r1, [pc, #64]	; 19a7c <DWHCITransferStageDataGetEndpointType+0x7c>
   19a38:	e59f0040 	ldr	r0, [pc, #64]	; 19a80 <DWHCITransferStageDataGetEndpointType+0x80>
   19a3c:	eb003552 	bl	26f8c <uspi_assertion_failed>
   19a40:	e3a00000 	mov	r0, #0
   19a44:	e8bd8010 	pop	{r4, pc}
   19a48:	e59f0034 	ldr	r0, [pc, #52]	; 19a84 <DWHCITransferStageDataGetEndpointType+0x84>
   19a4c:	e59f2034 	ldr	r2, [pc, #52]	; 19a88 <DWHCITransferStageDataGetEndpointType+0x88>
   19a50:	e59f1024 	ldr	r1, [pc, #36]	; 19a7c <DWHCITransferStageDataGetEndpointType+0x7c>
   19a54:	eb00354c 	bl	26f8c <uspi_assertion_failed>
   19a58:	e594001c 	ldr	r0, [r4, #28]
   19a5c:	eaffffed 	b	19a18 <DWHCITransferStageDataGetEndpointType+0x18>
   19a60:	e59f2024 	ldr	r2, [pc, #36]	; 19a8c <DWHCITransferStageDataGetEndpointType+0x8c>
   19a64:	e59f1010 	ldr	r1, [pc, #16]	; 19a7c <DWHCITransferStageDataGetEndpointType+0x7c>
   19a68:	e59f0020 	ldr	r0, [pc, #32]	; 19a90 <DWHCITransferStageDataGetEndpointType+0x90>
   19a6c:	eb003546 	bl	26f8c <uspi_assertion_failed>
   19a70:	eaffffe5 	b	19a0c <DWHCITransferStageDataGetEndpointType+0xc>
   19a74:	00028554 	andeq	r8, r2, r4, asr r5
   19a78:	00000116 	andeq	r0, r0, r6, lsl r1
   19a7c:	0002a044 	andeq	sl, r2, r4, asr #32
   19a80:	000299fc 	strdeq	r9, [r2], -ip
   19a84:	0002a0dc 	ldrdeq	sl, [r2], -ip
   19a88:	00000103 	andeq	r0, r0, r3, lsl #2
   19a8c:	00000102 	andeq	r0, r0, r2, lsl #2
   19a90:	00029a68 	andeq	r9, r2, r8, ror #20

00019a94 <DWHCITransferStageDataGetEndpointNumber>:
   19a94:	e92d4010 	push	{r4, lr}
   19a98:	e2504000 	subs	r4, r0, #0
   19a9c:	0a000004 	beq	19ab4 <DWHCITransferStageDataGetEndpointNumber+0x20>
   19aa0:	e594001c 	ldr	r0, [r4, #28]
   19aa4:	e3500000 	cmp	r0, #0
   19aa8:	0a000008 	beq	19ad0 <DWHCITransferStageDataGetEndpointNumber+0x3c>
   19aac:	e8bd4010 	pop	{r4, lr}
   19ab0:	ea000791 	b	1b8fc <USBEndpointGetNumber>
   19ab4:	e59f0030 	ldr	r0, [pc, #48]	; 19aec <DWHCITransferStageDataGetEndpointNumber+0x58>
   19ab8:	e59f2030 	ldr	r2, [pc, #48]	; 19af0 <DWHCITransferStageDataGetEndpointNumber+0x5c>
   19abc:	e59f1030 	ldr	r1, [pc, #48]	; 19af4 <DWHCITransferStageDataGetEndpointNumber+0x60>
   19ac0:	eb003531 	bl	26f8c <uspi_assertion_failed>
   19ac4:	e594001c 	ldr	r0, [r4, #28]
   19ac8:	e3500000 	cmp	r0, #0
   19acc:	1afffff6 	bne	19aac <DWHCITransferStageDataGetEndpointNumber+0x18>
   19ad0:	e59f0020 	ldr	r0, [pc, #32]	; 19af8 <DWHCITransferStageDataGetEndpointNumber+0x64>
   19ad4:	e3a02e12 	mov	r2, #288	; 0x120
   19ad8:	e59f1014 	ldr	r1, [pc, #20]	; 19af4 <DWHCITransferStageDataGetEndpointNumber+0x60>
   19adc:	eb00352a 	bl	26f8c <uspi_assertion_failed>
   19ae0:	e594001c 	ldr	r0, [r4, #28]
   19ae4:	e8bd4010 	pop	{r4, lr}
   19ae8:	ea000783 	b	1b8fc <USBEndpointGetNumber>
   19aec:	00029a68 	andeq	r9, r2, r8, ror #20
   19af0:	0000011f 	andeq	r0, r0, pc, lsl r1
   19af4:	0002a044 	andeq	sl, r2, r4, asr #32
   19af8:	0002a0dc 	ldrdeq	sl, [r2], -ip

00019afc <DWHCITransferStageDataGetMaxPacketSize>:
   19afc:	e92d4010 	push	{r4, lr}
   19b00:	e2504000 	subs	r4, r0, #0
   19b04:	0a000001 	beq	19b10 <DWHCITransferStageDataGetMaxPacketSize+0x14>
   19b08:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   19b0c:	e8bd8010 	pop	{r4, pc}
   19b10:	e59f2010 	ldr	r2, [pc, #16]	; 19b28 <DWHCITransferStageDataGetMaxPacketSize+0x2c>
   19b14:	e59f1010 	ldr	r1, [pc, #16]	; 19b2c <DWHCITransferStageDataGetMaxPacketSize+0x30>
   19b18:	e59f0010 	ldr	r0, [pc, #16]	; 19b30 <DWHCITransferStageDataGetMaxPacketSize+0x34>
   19b1c:	eb00351a 	bl	26f8c <uspi_assertion_failed>
   19b20:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   19b24:	e8bd8010 	pop	{r4, pc}
   19b28:	00000126 	andeq	r0, r0, r6, lsr #2
   19b2c:	0002a044 	andeq	sl, r2, r4, asr #32
   19b30:	00029a68 	andeq	r9, r2, r8, ror #20

00019b34 <DWHCITransferStageDataGetSpeed>:
   19b34:	e92d4010 	push	{r4, lr}
   19b38:	e2504000 	subs	r4, r0, #0
   19b3c:	0a000001 	beq	19b48 <DWHCITransferStageDataGetSpeed+0x14>
   19b40:	e5d40020 	ldrb	r0, [r4, #32]
   19b44:	e8bd8010 	pop	{r4, pc}
   19b48:	e3a02f4b 	mov	r2, #300	; 0x12c
   19b4c:	e59f100c 	ldr	r1, [pc, #12]	; 19b60 <DWHCITransferStageDataGetSpeed+0x2c>
   19b50:	e59f000c 	ldr	r0, [pc, #12]	; 19b64 <DWHCITransferStageDataGetSpeed+0x30>
   19b54:	eb00350c 	bl	26f8c <uspi_assertion_failed>
   19b58:	e5d40020 	ldrb	r0, [r4, #32]
   19b5c:	e8bd8010 	pop	{r4, pc}
   19b60:	0002a044 	andeq	sl, r2, r4, asr #32
   19b64:	00029a68 	andeq	r9, r2, r8, ror #20

00019b68 <DWHCITransferStageDataGetPID>:
   19b68:	e92d4010 	push	{r4, lr}
   19b6c:	e2504000 	subs	r4, r0, #0
   19b70:	0a000016 	beq	19bd0 <DWHCITransferStageDataGetPID+0x68>
   19b74:	e594001c 	ldr	r0, [r4, #28]
   19b78:	e3500000 	cmp	r0, #0
   19b7c:	0a00000d 	beq	19bb8 <DWHCITransferStageDataGetPID+0x50>
   19b80:	e594100c 	ldr	r1, [r4, #12]
   19b84:	eb0007b2 	bl	1ba54 <USBEndpointGetNextPID>
   19b88:	e3500002 	cmp	r0, #2
   19b8c:	8a000003 	bhi	19ba0 <DWHCITransferStageDataGetPID+0x38>
   19b90:	e59f304c 	ldr	r3, [pc, #76]	; 19be4 <DWHCITransferStageDataGetPID+0x7c>
   19b94:	e0833000 	add	r3, r3, r0
   19b98:	e5d3000c 	ldrb	r0, [r3, #12]
   19b9c:	e8bd8010 	pop	{r4, pc}
   19ba0:	e59f2040 	ldr	r2, [pc, #64]	; 19be8 <DWHCITransferStageDataGetPID+0x80>
   19ba4:	e59f1040 	ldr	r1, [pc, #64]	; 19bec <DWHCITransferStageDataGetPID+0x84>
   19ba8:	e59f0040 	ldr	r0, [pc, #64]	; 19bf0 <DWHCITransferStageDataGetPID+0x88>
   19bac:	eb0034f6 	bl	26f8c <uspi_assertion_failed>
   19bb0:	e3a00000 	mov	r0, #0
   19bb4:	e8bd8010 	pop	{r4, pc}
   19bb8:	e59f0034 	ldr	r0, [pc, #52]	; 19bf4 <DWHCITransferStageDataGetPID+0x8c>
   19bbc:	e59f2034 	ldr	r2, [pc, #52]	; 19bf8 <DWHCITransferStageDataGetPID+0x90>
   19bc0:	e59f1024 	ldr	r1, [pc, #36]	; 19bec <DWHCITransferStageDataGetPID+0x84>
   19bc4:	eb0034f0 	bl	26f8c <uspi_assertion_failed>
   19bc8:	e594001c 	ldr	r0, [r4, #28]
   19bcc:	eaffffeb 	b	19b80 <DWHCITransferStageDataGetPID+0x18>
   19bd0:	e59f2024 	ldr	r2, [pc, #36]	; 19bfc <DWHCITransferStageDataGetPID+0x94>
   19bd4:	e59f1010 	ldr	r1, [pc, #16]	; 19bec <DWHCITransferStageDataGetPID+0x84>
   19bd8:	e59f0020 	ldr	r0, [pc, #32]	; 19c00 <DWHCITransferStageDataGetPID+0x98>
   19bdc:	eb0034ea 	bl	26f8c <uspi_assertion_failed>
   19be0:	eaffffe3 	b	19b74 <DWHCITransferStageDataGetPID+0xc>
   19be4:	00028554 	andeq	r8, r2, r4, asr r5
   19be8:	00000146 	andeq	r0, r0, r6, asr #2
   19bec:	0002a044 	andeq	sl, r2, r4, asr #32
   19bf0:	000299fc 	strdeq	r9, [r2], -ip
   19bf4:	0002a0dc 	ldrdeq	sl, [r2], -ip
   19bf8:	00000133 	andeq	r0, r0, r3, lsr r1
   19bfc:	00000132 	andeq	r0, r0, r2, lsr r1
   19c00:	00029a68 	andeq	r9, r2, r8, ror #20

00019c04 <DWHCITransferStageDataIsDirectionIn>:
   19c04:	e92d4010 	push	{r4, lr}
   19c08:	e2504000 	subs	r4, r0, #0
   19c0c:	0a000001 	beq	19c18 <DWHCITransferStageDataIsDirectionIn+0x14>
   19c10:	e5940008 	ldr	r0, [r4, #8]
   19c14:	e8bd8010 	pop	{r4, pc}
   19c18:	e59f2010 	ldr	r2, [pc, #16]	; 19c30 <DWHCITransferStageDataIsDirectionIn+0x2c>
   19c1c:	e59f1010 	ldr	r1, [pc, #16]	; 19c34 <DWHCITransferStageDataIsDirectionIn+0x30>
   19c20:	e59f0010 	ldr	r0, [pc, #16]	; 19c38 <DWHCITransferStageDataIsDirectionIn+0x34>
   19c24:	eb0034d8 	bl	26f8c <uspi_assertion_failed>
   19c28:	e5940008 	ldr	r0, [r4, #8]
   19c2c:	e8bd8010 	pop	{r4, pc}
   19c30:	0000014f 	andeq	r0, r0, pc, asr #2
   19c34:	0002a044 	andeq	sl, r2, r4, asr #32
   19c38:	00029a68 	andeq	r9, r2, r8, ror #20

00019c3c <DWHCITransferStageDataIsStatusStage>:
   19c3c:	e92d4010 	push	{r4, lr}
   19c40:	e2504000 	subs	r4, r0, #0
   19c44:	0a000001 	beq	19c50 <DWHCITransferStageDataIsStatusStage+0x14>
   19c48:	e594000c 	ldr	r0, [r4, #12]
   19c4c:	e8bd8010 	pop	{r4, pc}
   19c50:	e59f2010 	ldr	r2, [pc, #16]	; 19c68 <DWHCITransferStageDataIsStatusStage+0x2c>
   19c54:	e59f1010 	ldr	r1, [pc, #16]	; 19c6c <DWHCITransferStageDataIsStatusStage+0x30>
   19c58:	e59f0010 	ldr	r0, [pc, #16]	; 19c70 <DWHCITransferStageDataIsStatusStage+0x34>
   19c5c:	eb0034ca 	bl	26f8c <uspi_assertion_failed>
   19c60:	e594000c 	ldr	r0, [r4, #12]
   19c64:	e8bd8010 	pop	{r4, pc}
   19c68:	00000155 	andeq	r0, r0, r5, asr r1
   19c6c:	0002a044 	andeq	sl, r2, r4, asr #32
   19c70:	00029a68 	andeq	r9, r2, r8, ror #20

00019c74 <DWHCITransferStageDataGetDMAAddress>:
   19c74:	e92d4010 	push	{r4, lr}
   19c78:	e2504000 	subs	r4, r0, #0
   19c7c:	0a000008 	beq	19ca4 <DWHCITransferStageDataGetDMAAddress+0x30>
   19c80:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   19c84:	e3500000 	cmp	r0, #0
   19c88:	18bd8010 	popne	{r4, pc}
   19c8c:	e3a02f57 	mov	r2, #348	; 0x15c
   19c90:	e59f1020 	ldr	r1, [pc, #32]	; 19cb8 <DWHCITransferStageDataGetDMAAddress+0x44>
   19c94:	e59f0020 	ldr	r0, [pc, #32]	; 19cbc <DWHCITransferStageDataGetDMAAddress+0x48>
   19c98:	eb0034bb 	bl	26f8c <uspi_assertion_failed>
   19c9c:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
   19ca0:	e8bd8010 	pop	{r4, pc}
   19ca4:	e59f2014 	ldr	r2, [pc, #20]	; 19cc0 <DWHCITransferStageDataGetDMAAddress+0x4c>
   19ca8:	e59f1008 	ldr	r1, [pc, #8]	; 19cb8 <DWHCITransferStageDataGetDMAAddress+0x44>
   19cac:	e59f0010 	ldr	r0, [pc, #16]	; 19cc4 <DWHCITransferStageDataGetDMAAddress+0x50>
   19cb0:	eb0034b5 	bl	26f8c <uspi_assertion_failed>
   19cb4:	eafffff1 	b	19c80 <DWHCITransferStageDataGetDMAAddress+0xc>
   19cb8:	0002a044 	andeq	sl, r2, r4, asr #32
   19cbc:	0002a120 	andeq	sl, r2, r0, lsr #2
   19cc0:	0000015b 	andeq	r0, r0, fp, asr r1
   19cc4:	00029a68 	andeq	r9, r2, r8, ror #20

00019cc8 <DWHCITransferStageDataGetBytesToTransfer>:
   19cc8:	e92d4010 	push	{r4, lr}
   19ccc:	e2504000 	subs	r4, r0, #0
   19cd0:	0a000001 	beq	19cdc <DWHCITransferStageDataGetBytesToTransfer+0x14>
   19cd4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   19cd8:	e8bd8010 	pop	{r4, pc}
   19cdc:	e59f2010 	ldr	r2, [pc, #16]	; 19cf4 <DWHCITransferStageDataGetBytesToTransfer+0x2c>
   19ce0:	e59f1010 	ldr	r1, [pc, #16]	; 19cf8 <DWHCITransferStageDataGetBytesToTransfer+0x30>
   19ce4:	e59f0010 	ldr	r0, [pc, #16]	; 19cfc <DWHCITransferStageDataGetBytesToTransfer+0x34>
   19ce8:	eb0034a7 	bl	26f8c <uspi_assertion_failed>
   19cec:	e5940030 	ldr	r0, [r4, #48]	; 0x30
   19cf0:	e8bd8010 	pop	{r4, pc}
   19cf4:	00000163 	andeq	r0, r0, r3, ror #2
   19cf8:	0002a044 	andeq	sl, r2, r4, asr #32
   19cfc:	00029a68 	andeq	r9, r2, r8, ror #20

00019d00 <DWHCITransferStageDataGetPacketsToTransfer>:
   19d00:	e92d4010 	push	{r4, lr}
   19d04:	e2504000 	subs	r4, r0, #0
   19d08:	0a000001 	beq	19d14 <DWHCITransferStageDataGetPacketsToTransfer+0x14>
   19d0c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
   19d10:	e8bd8010 	pop	{r4, pc}
   19d14:	e59f2010 	ldr	r2, [pc, #16]	; 19d2c <DWHCITransferStageDataGetPacketsToTransfer+0x2c>
   19d18:	e59f1010 	ldr	r1, [pc, #16]	; 19d30 <DWHCITransferStageDataGetPacketsToTransfer+0x30>
   19d1c:	e59f0010 	ldr	r0, [pc, #16]	; 19d34 <DWHCITransferStageDataGetPacketsToTransfer+0x34>
   19d20:	eb003499 	bl	26f8c <uspi_assertion_failed>
   19d24:	e5940034 	ldr	r0, [r4, #52]	; 0x34
   19d28:	e8bd8010 	pop	{r4, pc}
   19d2c:	00000169 	andeq	r0, r0, r9, ror #2
   19d30:	0002a044 	andeq	sl, r2, r4, asr #32
   19d34:	00029a68 	andeq	r9, r2, r8, ror #20

00019d38 <DWHCITransferStageDataIsSplit>:
   19d38:	e92d4010 	push	{r4, lr}
   19d3c:	e2504000 	subs	r4, r0, #0
   19d40:	0a000001 	beq	19d4c <DWHCITransferStageDataIsSplit+0x14>
   19d44:	e5940010 	ldr	r0, [r4, #16]
   19d48:	e8bd8010 	pop	{r4, pc}
   19d4c:	e59f2010 	ldr	r2, [pc, #16]	; 19d64 <DWHCITransferStageDataIsSplit+0x2c>
   19d50:	e59f1010 	ldr	r1, [pc, #16]	; 19d68 <DWHCITransferStageDataIsSplit+0x30>
   19d54:	e59f0010 	ldr	r0, [pc, #16]	; 19d6c <DWHCITransferStageDataIsSplit+0x34>
   19d58:	eb00348b 	bl	26f8c <uspi_assertion_failed>
   19d5c:	e5940010 	ldr	r0, [r4, #16]
   19d60:	e8bd8010 	pop	{r4, pc}
   19d64:	0000016f 	andeq	r0, r0, pc, ror #2
   19d68:	0002a044 	andeq	sl, r2, r4, asr #32
   19d6c:	00029a68 	andeq	r9, r2, r8, ror #20

00019d70 <DWHCITransferStageDataIsSplitComplete>:
   19d70:	e92d4010 	push	{r4, lr}
   19d74:	e2504000 	subs	r4, r0, #0
   19d78:	0a00000a 	beq	19da8 <DWHCITransferStageDataIsSplitComplete+0x38>
   19d7c:	e5943010 	ldr	r3, [r4, #16]
   19d80:	e3530000 	cmp	r3, #0
   19d84:	0a000001 	beq	19d90 <DWHCITransferStageDataIsSplitComplete+0x20>
   19d88:	e5940014 	ldr	r0, [r4, #20]
   19d8c:	e8bd8010 	pop	{r4, pc}
   19d90:	e59f2024 	ldr	r2, [pc, #36]	; 19dbc <DWHCITransferStageDataIsSplitComplete+0x4c>
   19d94:	e59f1024 	ldr	r1, [pc, #36]	; 19dc0 <DWHCITransferStageDataIsSplitComplete+0x50>
   19d98:	e59f0024 	ldr	r0, [pc, #36]	; 19dc4 <DWHCITransferStageDataIsSplitComplete+0x54>
   19d9c:	eb00347a 	bl	26f8c <uspi_assertion_failed>
   19da0:	e5940014 	ldr	r0, [r4, #20]
   19da4:	e8bd8010 	pop	{r4, pc}
   19da8:	e59f2018 	ldr	r2, [pc, #24]	; 19dc8 <DWHCITransferStageDataIsSplitComplete+0x58>
   19dac:	e59f100c 	ldr	r1, [pc, #12]	; 19dc0 <DWHCITransferStageDataIsSplitComplete+0x50>
   19db0:	e59f0014 	ldr	r0, [pc, #20]	; 19dcc <DWHCITransferStageDataIsSplitComplete+0x5c>
   19db4:	eb003474 	bl	26f8c <uspi_assertion_failed>
   19db8:	eaffffef 	b	19d7c <DWHCITransferStageDataIsSplitComplete+0xc>
   19dbc:	00000176 	andeq	r0, r0, r6, ror r1
   19dc0:	0002a044 	andeq	sl, r2, r4, asr #32
   19dc4:	0002a0c0 	andeq	sl, r2, r0, asr #1
   19dc8:	00000175 	andeq	r0, r0, r5, ror r1
   19dcc:	00029a68 	andeq	r9, r2, r8, ror #20

00019dd0 <DWHCITransferStageDataGetHubAddress>:
   19dd0:	e92d4010 	push	{r4, lr}
   19dd4:	e2504000 	subs	r4, r0, #0
   19dd8:	0a000015 	beq	19e34 <DWHCITransferStageDataGetHubAddress+0x64>
   19ddc:	e5943010 	ldr	r3, [r4, #16]
   19de0:	e3530000 	cmp	r3, #0
   19de4:	0a000004 	beq	19dfc <DWHCITransferStageDataGetHubAddress+0x2c>
   19de8:	e5940018 	ldr	r0, [r4, #24]
   19dec:	e3500000 	cmp	r0, #0
   19df0:	0a000008 	beq	19e18 <DWHCITransferStageDataGetHubAddress+0x48>
   19df4:	e8bd4010 	pop	{r4, lr}
   19df8:	ea00020d 	b	1a634 <USBDeviceGetHubAddress>
   19dfc:	e59f0044 	ldr	r0, [pc, #68]	; 19e48 <DWHCITransferStageDataGetHubAddress+0x78>
   19e00:	e59f2044 	ldr	r2, [pc, #68]	; 19e4c <DWHCITransferStageDataGetHubAddress+0x7c>
   19e04:	e59f1044 	ldr	r1, [pc, #68]	; 19e50 <DWHCITransferStageDataGetHubAddress+0x80>
   19e08:	eb00345f 	bl	26f8c <uspi_assertion_failed>
   19e0c:	e5940018 	ldr	r0, [r4, #24]
   19e10:	e3500000 	cmp	r0, #0
   19e14:	1afffff6 	bne	19df4 <DWHCITransferStageDataGetHubAddress+0x24>
   19e18:	e59f0034 	ldr	r0, [pc, #52]	; 19e54 <DWHCITransferStageDataGetHubAddress+0x84>
   19e1c:	e3a02d06 	mov	r2, #384	; 0x180
   19e20:	e59f1028 	ldr	r1, [pc, #40]	; 19e50 <DWHCITransferStageDataGetHubAddress+0x80>
   19e24:	eb003458 	bl	26f8c <uspi_assertion_failed>
   19e28:	e5940018 	ldr	r0, [r4, #24]
   19e2c:	e8bd4010 	pop	{r4, lr}
   19e30:	ea0001ff 	b	1a634 <USBDeviceGetHubAddress>
   19e34:	e59f201c 	ldr	r2, [pc, #28]	; 19e58 <DWHCITransferStageDataGetHubAddress+0x88>
   19e38:	e59f1010 	ldr	r1, [pc, #16]	; 19e50 <DWHCITransferStageDataGetHubAddress+0x80>
   19e3c:	e59f0018 	ldr	r0, [pc, #24]	; 19e5c <DWHCITransferStageDataGetHubAddress+0x8c>
   19e40:	eb003451 	bl	26f8c <uspi_assertion_failed>
   19e44:	eaffffe4 	b	19ddc <DWHCITransferStageDataGetHubAddress+0xc>
   19e48:	0002a0c0 	andeq	sl, r2, r0, asr #1
   19e4c:	0000017e 	andeq	r0, r0, lr, ror r1
   19e50:	0002a044 	andeq	sl, r2, r4, asr #32
   19e54:	0002a108 	andeq	sl, r2, r8, lsl #2
   19e58:	0000017d 	andeq	r0, r0, sp, ror r1
   19e5c:	00029a68 	andeq	r9, r2, r8, ror #20

00019e60 <DWHCITransferStageDataGetHubPortAddress>:
   19e60:	e92d4010 	push	{r4, lr}
   19e64:	e2504000 	subs	r4, r0, #0
   19e68:	0a000015 	beq	19ec4 <DWHCITransferStageDataGetHubPortAddress+0x64>
   19e6c:	e5943010 	ldr	r3, [r4, #16]
   19e70:	e3530000 	cmp	r3, #0
   19e74:	0a000004 	beq	19e8c <DWHCITransferStageDataGetHubPortAddress+0x2c>
   19e78:	e5940018 	ldr	r0, [r4, #24]
   19e7c:	e3500000 	cmp	r0, #0
   19e80:	0a000008 	beq	19ea8 <DWHCITransferStageDataGetHubPortAddress+0x48>
   19e84:	e8bd4010 	pop	{r4, lr}
   19e88:	ea0001f7 	b	1a66c <USBDeviceGetHubPortNumber>
   19e8c:	e59f0044 	ldr	r0, [pc, #68]	; 19ed8 <DWHCITransferStageDataGetHubPortAddress+0x78>
   19e90:	e59f2044 	ldr	r2, [pc, #68]	; 19edc <DWHCITransferStageDataGetHubPortAddress+0x7c>
   19e94:	e59f1044 	ldr	r1, [pc, #68]	; 19ee0 <DWHCITransferStageDataGetHubPortAddress+0x80>
   19e98:	eb00343b 	bl	26f8c <uspi_assertion_failed>
   19e9c:	e5940018 	ldr	r0, [r4, #24]
   19ea0:	e3500000 	cmp	r0, #0
   19ea4:	1afffff6 	bne	19e84 <DWHCITransferStageDataGetHubPortAddress+0x24>
   19ea8:	e59f0034 	ldr	r0, [pc, #52]	; 19ee4 <DWHCITransferStageDataGetHubPortAddress+0x84>
   19eac:	e59f2034 	ldr	r2, [pc, #52]	; 19ee8 <DWHCITransferStageDataGetHubPortAddress+0x88>
   19eb0:	e59f1028 	ldr	r1, [pc, #40]	; 19ee0 <DWHCITransferStageDataGetHubPortAddress+0x80>
   19eb4:	eb003434 	bl	26f8c <uspi_assertion_failed>
   19eb8:	e5940018 	ldr	r0, [r4, #24]
   19ebc:	e8bd4010 	pop	{r4, lr}
   19ec0:	ea0001e9 	b	1a66c <USBDeviceGetHubPortNumber>
   19ec4:	e59f2020 	ldr	r2, [pc, #32]	; 19eec <DWHCITransferStageDataGetHubPortAddress+0x8c>
   19ec8:	e59f1010 	ldr	r1, [pc, #16]	; 19ee0 <DWHCITransferStageDataGetHubPortAddress+0x80>
   19ecc:	e59f001c 	ldr	r0, [pc, #28]	; 19ef0 <DWHCITransferStageDataGetHubPortAddress+0x90>
   19ed0:	eb00342d 	bl	26f8c <uspi_assertion_failed>
   19ed4:	eaffffe4 	b	19e6c <DWHCITransferStageDataGetHubPortAddress+0xc>
   19ed8:	0002a0c0 	andeq	sl, r2, r0, asr #1
   19edc:	00000187 	andeq	r0, r0, r7, lsl #3
   19ee0:	0002a044 	andeq	sl, r2, r4, asr #32
   19ee4:	0002a108 	andeq	sl, r2, r8, lsl #2
   19ee8:	00000189 	andeq	r0, r0, r9, lsl #3
   19eec:	00000186 	andeq	r0, r0, r6, lsl #3
   19ef0:	00029a68 	andeq	r9, r2, r8, ror #20

00019ef4 <DWHCITransferStageDataGetSplitPosition>:
   19ef4:	e3a00003 	mov	r0, #3
   19ef8:	e12fff1e 	bx	lr

00019efc <DWHCITransferStageDataGetStatusMask>:
   19efc:	e92d4010 	push	{r4, lr}
   19f00:	e2504000 	subs	r4, r0, #0
   19f04:	0a00000a 	beq	19f34 <DWHCITransferStageDataGetStatusMask+0x38>
   19f08:	e5943010 	ldr	r3, [r4, #16]
   19f0c:	e3530000 	cmp	r3, #0
   19f10:	0a000001 	beq	19f1c <DWHCITransferStageDataGetStatusMask+0x20>
   19f14:	e59f002c 	ldr	r0, [pc, #44]	; 19f48 <DWHCITransferStageDataGetStatusMask+0x4c>
   19f18:	e8bd8010 	pop	{r4, pc}
   19f1c:	e1a00004 	mov	r0, r4
   19f20:	ebfffdd8 	bl	19688 <DWHCITransferStageDataIsPeriodic>
   19f24:	e3500000 	cmp	r0, #0
   19f28:	1afffff9 	bne	19f14 <DWHCITransferStageDataGetStatusMask+0x18>
   19f2c:	e59f0018 	ldr	r0, [pc, #24]	; 19f4c <DWHCITransferStageDataGetStatusMask+0x50>
   19f30:	e8bd8010 	pop	{r4, pc}
   19f34:	e59f2014 	ldr	r2, [pc, #20]	; 19f50 <DWHCITransferStageDataGetStatusMask+0x54>
   19f38:	e59f1014 	ldr	r1, [pc, #20]	; 19f54 <DWHCITransferStageDataGetStatusMask+0x58>
   19f3c:	e59f0014 	ldr	r0, [pc, #20]	; 19f58 <DWHCITransferStageDataGetStatusMask+0x5c>
   19f40:	eb003411 	bl	26f8c <uspi_assertion_failed>
   19f44:	eaffffef 	b	19f08 <DWHCITransferStageDataGetStatusMask+0xc>
   19f48:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   19f4c:	0000078f 	andeq	r0, r0, pc, lsl #15
   19f50:	00000195 	muleq	r0, r5, r1
   19f54:	0002a044 	andeq	sl, r2, r4, asr #32
   19f58:	00029a68 	andeq	r9, r2, r8, ror #20

00019f5c <DWHCITransferStageDataGetTransactionStatus>:
   19f5c:	e92d4010 	push	{r4, lr}
   19f60:	e2504000 	subs	r4, r0, #0
   19f64:	0a000008 	beq	19f8c <DWHCITransferStageDataGetTransactionStatus+0x30>
   19f68:	e5940044 	ldr	r0, [r4, #68]	; 0x44
   19f6c:	e3500000 	cmp	r0, #0
   19f70:	18bd8010 	popne	{r4, pc}
   19f74:	e3a02f6a 	mov	r2, #424	; 0x1a8
   19f78:	e59f1020 	ldr	r1, [pc, #32]	; 19fa0 <DWHCITransferStageDataGetTransactionStatus+0x44>
   19f7c:	e59f0020 	ldr	r0, [pc, #32]	; 19fa4 <DWHCITransferStageDataGetTransactionStatus+0x48>
   19f80:	eb003401 	bl	26f8c <uspi_assertion_failed>
   19f84:	e5940044 	ldr	r0, [r4, #68]	; 0x44
   19f88:	e8bd8010 	pop	{r4, pc}
   19f8c:	e59f2014 	ldr	r2, [pc, #20]	; 19fa8 <DWHCITransferStageDataGetTransactionStatus+0x4c>
   19f90:	e59f1008 	ldr	r1, [pc, #8]	; 19fa0 <DWHCITransferStageDataGetTransactionStatus+0x44>
   19f94:	e59f0010 	ldr	r0, [pc, #16]	; 19fac <DWHCITransferStageDataGetTransactionStatus+0x50>
   19f98:	eb0033fb 	bl	26f8c <uspi_assertion_failed>
   19f9c:	eafffff1 	b	19f68 <DWHCITransferStageDataGetTransactionStatus+0xc>
   19fa0:	0002a044 	andeq	sl, r2, r4, asr #32
   19fa4:	0002a170 	andeq	sl, r2, r0, ror r1
   19fa8:	000001a7 	andeq	r0, r0, r7, lsr #3
   19fac:	00029a68 	andeq	r9, r2, r8, ror #20

00019fb0 <DWHCITransferStageDataIsStageComplete>:
   19fb0:	e92d4010 	push	{r4, lr}
   19fb4:	e2504000 	subs	r4, r0, #0
   19fb8:	0a000003 	beq	19fcc <DWHCITransferStageDataIsStageComplete+0x1c>
   19fbc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
   19fc0:	e16f0f10 	clz	r0, r0
   19fc4:	e1a002a0 	lsr	r0, r0, #5
   19fc8:	e8bd8010 	pop	{r4, pc}
   19fcc:	e59f200c 	ldr	r2, [pc, #12]	; 19fe0 <DWHCITransferStageDataIsStageComplete+0x30>
   19fd0:	e59f100c 	ldr	r1, [pc, #12]	; 19fe4 <DWHCITransferStageDataIsStageComplete+0x34>
   19fd4:	e59f000c 	ldr	r0, [pc, #12]	; 19fe8 <DWHCITransferStageDataIsStageComplete+0x38>
   19fd8:	eb0033eb 	bl	26f8c <uspi_assertion_failed>
   19fdc:	eafffff6 	b	19fbc <DWHCITransferStageDataIsStageComplete+0xc>
   19fe0:	000001ae 	andeq	r0, r0, lr, lsr #3
   19fe4:	0002a044 	andeq	sl, r2, r4, asr #32
   19fe8:	00029a68 	andeq	r9, r2, r8, ror #20

00019fec <DWHCITransferStageDataGetResultLen>:
   19fec:	e92d4010 	push	{r4, lr}
   19ff0:	e2504000 	subs	r4, r0, #0
   19ff4:	0a000004 	beq	1a00c <DWHCITransferStageDataGetResultLen+0x20>
   19ff8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
   19ffc:	e5943028 	ldr	r3, [r4, #40]	; 0x28
   1a000:	e1500003 	cmp	r0, r3
   1a004:	21a00003 	movcs	r0, r3
   1a008:	e8bd8010 	pop	{r4, pc}
   1a00c:	e3a02f6d 	mov	r2, #436	; 0x1b4
   1a010:	e59f1008 	ldr	r1, [pc, #8]	; 1a020 <DWHCITransferStageDataGetResultLen+0x34>
   1a014:	e59f0008 	ldr	r0, [pc, #8]	; 1a024 <DWHCITransferStageDataGetResultLen+0x38>
   1a018:	eb0033db 	bl	26f8c <uspi_assertion_failed>
   1a01c:	eafffff5 	b	19ff8 <DWHCITransferStageDataGetResultLen+0xc>
   1a020:	0002a044 	andeq	sl, r2, r4, asr #32
   1a024:	00029a68 	andeq	r9, r2, r8, ror #20

0001a028 <DWHCITransferStageDataGetURB>:
   1a028:	e92d4010 	push	{r4, lr}
   1a02c:	e2504000 	subs	r4, r0, #0
   1a030:	0a000008 	beq	1a058 <DWHCITransferStageDataGetURB+0x30>
   1a034:	e5940004 	ldr	r0, [r4, #4]
   1a038:	e3500000 	cmp	r0, #0
   1a03c:	18bd8010 	popne	{r4, pc}
   1a040:	e3a02d07 	mov	r2, #448	; 0x1c0
   1a044:	e59f1020 	ldr	r1, [pc, #32]	; 1a06c <DWHCITransferStageDataGetURB+0x44>
   1a048:	e59f0020 	ldr	r0, [pc, #32]	; 1a070 <DWHCITransferStageDataGetURB+0x48>
   1a04c:	eb0033ce 	bl	26f8c <uspi_assertion_failed>
   1a050:	e5940004 	ldr	r0, [r4, #4]
   1a054:	e8bd8010 	pop	{r4, pc}
   1a058:	e59f2014 	ldr	r2, [pc, #20]	; 1a074 <DWHCITransferStageDataGetURB+0x4c>
   1a05c:	e59f1008 	ldr	r1, [pc, #8]	; 1a06c <DWHCITransferStageDataGetURB+0x44>
   1a060:	e59f0010 	ldr	r0, [pc, #16]	; 1a078 <DWHCITransferStageDataGetURB+0x50>
   1a064:	eb0033c8 	bl	26f8c <uspi_assertion_failed>
   1a068:	eafffff1 	b	1a034 <DWHCITransferStageDataGetURB+0xc>
   1a06c:	0002a044 	andeq	sl, r2, r4, asr #32
   1a070:	0002a0f4 	strdeq	sl, [r2], -r4
   1a074:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
   1a078:	00029a68 	andeq	r9, r2, r8, ror #20

0001a07c <DWHCITransferStageDataGetFrameScheduler>:
   1a07c:	e92d4010 	push	{r4, lr}
   1a080:	e2504000 	subs	r4, r0, #0
   1a084:	0a000003 	beq	1a098 <DWHCITransferStageDataGetFrameScheduler+0x1c>
   1a088:	e5940050 	ldr	r0, [r4, #80]	; 0x50
   1a08c:	e3500000 	cmp	r0, #0
   1a090:	12840054 	addne	r0, r4, #84	; 0x54
   1a094:	e8bd8010 	pop	{r4, pc}
   1a098:	e59f200c 	ldr	r2, [pc, #12]	; 1a0ac <DWHCITransferStageDataGetFrameScheduler+0x30>
   1a09c:	e59f100c 	ldr	r1, [pc, #12]	; 1a0b0 <DWHCITransferStageDataGetFrameScheduler+0x34>
   1a0a0:	e59f000c 	ldr	r0, [pc, #12]	; 1a0b4 <DWHCITransferStageDataGetFrameScheduler+0x38>
   1a0a4:	eb0033b8 	bl	26f8c <uspi_assertion_failed>
   1a0a8:	eafffff6 	b	1a088 <DWHCITransferStageDataGetFrameScheduler+0xc>
   1a0ac:	000001c6 	andeq	r0, r0, r6, asr #3
   1a0b0:	0002a044 	andeq	sl, r2, r4, asr #32
   1a0b4:	00029a68 	andeq	r9, r2, r8, ror #20

0001a0b8 <USBDevice>:
   1a0b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1a0bc:	e2504000 	subs	r4, r0, #0
   1a0c0:	e24dd008 	sub	sp, sp, #8
   1a0c4:	e1a06001 	mov	r6, r1
   1a0c8:	e1a08002 	mov	r8, r2
   1a0cc:	e5dd7020 	ldrb	r7, [sp, #32]
   1a0d0:	e5dd5024 	ldrb	r5, [sp, #36]	; 0x24
   1a0d4:	0a00003a 	beq	1a1c4 <USBDevice+0x10c>
   1a0d8:	e3a02000 	mov	r2, #0
   1a0dc:	e1560002 	cmp	r6, r2
   1a0e0:	e5846000 	str	r6, [r4]
   1a0e4:	e5c48005 	strb	r8, [r4, #5]
   1a0e8:	e584300c 	str	r3, [r4, #12]
   1a0ec:	e5c47010 	strb	r7, [r4, #16]
   1a0f0:	e5c45011 	strb	r5, [r4, #17]
   1a0f4:	e5c42004 	strb	r2, [r4, #4]
   1a0f8:	e5842008 	str	r2, [r4, #8]
   1a0fc:	e5842014 	str	r2, [r4, #20]
   1a100:	e5842018 	str	r2, [r4, #24]
   1a104:	e584201c 	str	r2, [r4, #28]
   1a108:	0a000016 	beq	1a168 <USBDevice+0xb0>
   1a10c:	e3a00018 	mov	r0, #24
   1a110:	eb002b86 	bl	24f30 <malloc>
   1a114:	e3500000 	cmp	r0, #0
   1a118:	e5840008 	str	r0, [r4, #8]
   1a11c:	0a000022 	beq	1a1ac <USBDevice+0xf4>
   1a120:	e1a01004 	mov	r1, r4
   1a124:	eb000518 	bl	1b58c <USBEndpoint>
   1a128:	e3550000 	cmp	r5, #0
   1a12c:	0a000019 	beq	1a198 <USBDevice+0xe0>
   1a130:	e1a01004 	mov	r1, r4
   1a134:	e2840020 	add	r0, r4, #32
   1a138:	eb002637 	bl	23a1c <USBString>
   1a13c:	e1a01004 	mov	r1, r4
   1a140:	e284002c 	add	r0, r4, #44	; 0x2c
   1a144:	eb002634 	bl	23a1c <USBString>
   1a148:	e3a02000 	mov	r2, #0
   1a14c:	e2843034 	add	r3, r4, #52	; 0x34
   1a150:	e284405c 	add	r4, r4, #92	; 0x5c
   1a154:	e5a32004 	str	r2, [r3, #4]!
   1a158:	e1530004 	cmp	r3, r4
   1a15c:	1afffffc 	bne	1a154 <USBDevice+0x9c>
   1a160:	e28dd008 	add	sp, sp, #8
   1a164:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1a168:	e3a0203c 	mov	r2, #60	; 0x3c
   1a16c:	e59f106c 	ldr	r1, [pc, #108]	; 1a1e0 <USBDevice+0x128>
   1a170:	e59f006c 	ldr	r0, [pc, #108]	; 1a1e4 <USBDevice+0x12c>
   1a174:	eb003384 	bl	26f8c <uspi_assertion_failed>
   1a178:	e5943008 	ldr	r3, [r4, #8]
   1a17c:	e3530000 	cmp	r3, #0
   1a180:	0affffe1 	beq	1a10c <USBDevice+0x54>
   1a184:	e3a0203e 	mov	r2, #62	; 0x3e
   1a188:	e59f1050 	ldr	r1, [pc, #80]	; 1a1e0 <USBDevice+0x128>
   1a18c:	e59f0054 	ldr	r0, [pc, #84]	; 1a1e8 <USBDevice+0x130>
   1a190:	eb00337d 	bl	26f8c <uspi_assertion_failed>
   1a194:	eaffffdc 	b	1a10c <USBDevice+0x54>
   1a198:	e3a02043 	mov	r2, #67	; 0x43
   1a19c:	e59f103c 	ldr	r1, [pc, #60]	; 1a1e0 <USBDevice+0x128>
   1a1a0:	e59f0044 	ldr	r0, [pc, #68]	; 1a1ec <USBDevice+0x134>
   1a1a4:	eb003378 	bl	26f8c <uspi_assertion_failed>
   1a1a8:	eaffffe0 	b	1a130 <USBDevice+0x78>
   1a1ac:	e59f003c 	ldr	r0, [pc, #60]	; 1a1f0 <USBDevice+0x138>
   1a1b0:	e3a02040 	mov	r2, #64	; 0x40
   1a1b4:	e59f1024 	ldr	r1, [pc, #36]	; 1a1e0 <USBDevice+0x128>
   1a1b8:	eb003373 	bl	26f8c <uspi_assertion_failed>
   1a1bc:	e5940008 	ldr	r0, [r4, #8]
   1a1c0:	eaffffd6 	b	1a120 <USBDevice+0x68>
   1a1c4:	e3a0202f 	mov	r2, #47	; 0x2f
   1a1c8:	e59f1010 	ldr	r1, [pc, #16]	; 1a1e0 <USBDevice+0x128>
   1a1cc:	e59f0020 	ldr	r0, [pc, #32]	; 1a1f4 <USBDevice+0x13c>
   1a1d0:	e58d3004 	str	r3, [sp, #4]
   1a1d4:	eb00336c 	bl	26f8c <uspi_assertion_failed>
   1a1d8:	e59d3004 	ldr	r3, [sp, #4]
   1a1dc:	eaffffbd 	b	1a0d8 <USBDevice+0x20>
   1a1e0:	0002a194 	muleq	r2, r4, r1
   1a1e4:	0002a1a0 	andeq	sl, r2, r0, lsr #3
   1a1e8:	0002a1b4 			; <UNDEFINED> instruction: 0x0002a1b4
   1a1ec:	0002a1ec 	andeq	sl, r2, ip, ror #3
   1a1f0:	0002a1d0 	ldrdeq	sl, [r2], -r0
   1a1f4:	00029a68 	andeq	r9, r2, r8, ror #20

0001a1f8 <_USBDevice>:
   1a1f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1a1fc:	e2505000 	subs	r5, r0, #0
   1a200:	0a00002e 	beq	1a2c0 <_USBDevice+0xc8>
   1a204:	e3a07000 	mov	r7, #0
   1a208:	e2854034 	add	r4, r5, #52	; 0x34
   1a20c:	e285605c 	add	r6, r5, #92	; 0x5c
   1a210:	e5b40004 	ldr	r0, [r4, #4]!
   1a214:	e3500000 	cmp	r0, #0
   1a218:	0a000003 	beq	1a22c <_USBDevice+0x34>
   1a21c:	eb000c56 	bl	1d37c <_USBFunction>
   1a220:	e5940000 	ldr	r0, [r4]
   1a224:	eb002ba7 	bl	250c8 <free>
   1a228:	e5847000 	str	r7, [r4]
   1a22c:	e1540006 	cmp	r4, r6
   1a230:	1afffff6 	bne	1a210 <_USBDevice+0x18>
   1a234:	e595001c 	ldr	r0, [r5, #28]
   1a238:	e3500000 	cmp	r0, #0
   1a23c:	0a000004 	beq	1a254 <_USBDevice+0x5c>
   1a240:	eb002999 	bl	248ac <_USBConfigurationParser>
   1a244:	e595001c 	ldr	r0, [r5, #28]
   1a248:	eb002b9e 	bl	250c8 <free>
   1a24c:	e3a03000 	mov	r3, #0
   1a250:	e585301c 	str	r3, [r5, #28]
   1a254:	e5950018 	ldr	r0, [r5, #24]
   1a258:	e3500000 	cmp	r0, #0
   1a25c:	0a000002 	beq	1a26c <_USBDevice+0x74>
   1a260:	eb002b98 	bl	250c8 <free>
   1a264:	e3a03000 	mov	r3, #0
   1a268:	e5853018 	str	r3, [r5, #24]
   1a26c:	e5950014 	ldr	r0, [r5, #20]
   1a270:	e3500000 	cmp	r0, #0
   1a274:	0a000002 	beq	1a284 <_USBDevice+0x8c>
   1a278:	eb002b92 	bl	250c8 <free>
   1a27c:	e3a03000 	mov	r3, #0
   1a280:	e5853014 	str	r3, [r5, #20]
   1a284:	e5950008 	ldr	r0, [r5, #8]
   1a288:	e3500000 	cmp	r0, #0
   1a28c:	0a000004 	beq	1a2a4 <_USBDevice+0xac>
   1a290:	eb000578 	bl	1b878 <_USBEndpoint>
   1a294:	e5950008 	ldr	r0, [r5, #8]
   1a298:	eb002b8a 	bl	250c8 <free>
   1a29c:	e3a03000 	mov	r3, #0
   1a2a0:	e5853008 	str	r3, [r5, #8]
   1a2a4:	e1a00005 	mov	r0, r5
   1a2a8:	e3a03000 	mov	r3, #0
   1a2ac:	e480302c 	str	r3, [r0], #44	; 0x2c
   1a2b0:	eb002646 	bl	23bd0 <_USBString>
   1a2b4:	e2850020 	add	r0, r5, #32
   1a2b8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1a2bc:	ea002643 	b	23bd0 <_USBString>
   1a2c0:	e3a02050 	mov	r2, #80	; 0x50
   1a2c4:	e59f1008 	ldr	r1, [pc, #8]	; 1a2d4 <_USBDevice+0xdc>
   1a2c8:	e59f0008 	ldr	r0, [pc, #8]	; 1a2d8 <_USBDevice+0xe0>
   1a2cc:	eb00332e 	bl	26f8c <uspi_assertion_failed>
   1a2d0:	eaffffcb 	b	1a204 <_USBDevice+0xc>
   1a2d4:	0002a194 	muleq	r2, r4, r1
   1a2d8:	00029a68 	andeq	r9, r2, r8, ror #20

0001a2dc <USBDeviceGetName>:
   1a2dc:	e92d4070 	push	{r4, r5, r6, lr}
   1a2e0:	e2506000 	subs	r6, r0, #0
   1a2e4:	e24dd008 	sub	sp, sp, #8
   1a2e8:	e1a05001 	mov	r5, r1
   1a2ec:	0a000033 	beq	1a3c0 <USBDeviceGetName+0xe4>
   1a2f0:	e3a0000c 	mov	r0, #12
   1a2f4:	eb002b0d 	bl	24f30 <malloc>
   1a2f8:	e2504000 	subs	r4, r0, #0
   1a2fc:	0a000037 	beq	1a3e0 <USBDeviceGetName+0x104>
   1a300:	e1a00004 	mov	r0, r4
   1a304:	eb0014ff 	bl	1f708 <String>
   1a308:	e3550000 	cmp	r5, #0
   1a30c:	0a00001c 	beq	1a384 <USBDeviceGetName+0xa8>
   1a310:	e3550001 	cmp	r5, #1
   1a314:	0a000009 	beq	1a340 <USBDeviceGetName+0x64>
   1a318:	e59f2104 	ldr	r2, [pc, #260]	; 1a424 <USBDeviceGetName+0x148>
   1a31c:	e59f1104 	ldr	r1, [pc, #260]	; 1a428 <USBDeviceGetName+0x14c>
   1a320:	e59f0104 	ldr	r0, [pc, #260]	; 1a42c <USBDeviceGetName+0x150>
   1a324:	eb003318 	bl	26f8c <uspi_assertion_failed>
   1a328:	e59f1100 	ldr	r1, [pc, #256]	; 1a430 <USBDeviceGetName+0x154>
   1a32c:	e1a00004 	mov	r0, r4
   1a330:	eb001537 	bl	1f814 <StringSet>
   1a334:	e1a00004 	mov	r0, r4
   1a338:	e28dd008 	add	sp, sp, #8
   1a33c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a340:	e5961014 	ldr	r1, [r6, #20]
   1a344:	e3510000 	cmp	r1, #0
   1a348:	0a000029 	beq	1a3f4 <USBDeviceGetName+0x118>
   1a34c:	e5d12004 	ldrb	r2, [r1, #4]
   1a350:	e2423001 	sub	r3, r2, #1
   1a354:	e6ef3073 	uxtb	r3, r3
   1a358:	e35300fd 	cmp	r3, #253	; 0xfd
   1a35c:	8afffff1 	bhi	1a328 <USBDeviceGetName+0x4c>
   1a360:	e5d13005 	ldrb	r3, [r1, #5]
   1a364:	e5d11006 	ldrb	r1, [r1, #6]
   1a368:	e1a00004 	mov	r0, r4
   1a36c:	e58d1000 	str	r1, [sp]
   1a370:	e59f10bc 	ldr	r1, [pc, #188]	; 1a434 <USBDeviceGetName+0x158>
   1a374:	eb0017a2 	bl	20204 <StringFormat>
   1a378:	e1a00004 	mov	r0, r4
   1a37c:	e28dd008 	add	sp, sp, #8
   1a380:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a384:	e5961014 	ldr	r1, [r6, #20]
   1a388:	e3510000 	cmp	r1, #0
   1a38c:	0a00001e 	beq	1a40c <USBDeviceGetName+0x130>
   1a390:	e5d1000b 	ldrb	r0, [r1, #11]
   1a394:	e5d1300a 	ldrb	r3, [r1, #10]
   1a398:	e5d12008 	ldrb	r2, [r1, #8]
   1a39c:	e5d11009 	ldrb	r1, [r1, #9]
   1a3a0:	e1833400 	orr	r3, r3, r0, lsl #8
   1a3a4:	e1822401 	orr	r2, r2, r1, lsl #8
   1a3a8:	e1a00004 	mov	r0, r4
   1a3ac:	e59f1084 	ldr	r1, [pc, #132]	; 1a438 <USBDeviceGetName+0x15c>
   1a3b0:	eb001793 	bl	20204 <StringFormat>
   1a3b4:	e1a00004 	mov	r0, r4
   1a3b8:	e28dd008 	add	sp, sp, #8
   1a3bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a3c0:	e59f2074 	ldr	r2, [pc, #116]	; 1a43c <USBDeviceGetName+0x160>
   1a3c4:	e59f105c 	ldr	r1, [pc, #92]	; 1a428 <USBDeviceGetName+0x14c>
   1a3c8:	e59f0070 	ldr	r0, [pc, #112]	; 1a440 <USBDeviceGetName+0x164>
   1a3cc:	eb0032ee 	bl	26f8c <uspi_assertion_failed>
   1a3d0:	e3a0000c 	mov	r0, #12
   1a3d4:	eb002ad5 	bl	24f30 <malloc>
   1a3d8:	e2504000 	subs	r4, r0, #0
   1a3dc:	1affffc7 	bne	1a300 <USBDeviceGetName+0x24>
   1a3e0:	e3a02f69 	mov	r2, #420	; 0x1a4
   1a3e4:	e59f103c 	ldr	r1, [pc, #60]	; 1a428 <USBDeviceGetName+0x14c>
   1a3e8:	e59f0054 	ldr	r0, [pc, #84]	; 1a444 <USBDeviceGetName+0x168>
   1a3ec:	eb0032e6 	bl	26f8c <uspi_assertion_failed>
   1a3f0:	eaffffc2 	b	1a300 <USBDeviceGetName+0x24>
   1a3f4:	e59f102c 	ldr	r1, [pc, #44]	; 1a428 <USBDeviceGetName+0x14c>
   1a3f8:	e59f2048 	ldr	r2, [pc, #72]	; 1a448 <USBDeviceGetName+0x16c>
   1a3fc:	e59f0048 	ldr	r0, [pc, #72]	; 1a44c <USBDeviceGetName+0x170>
   1a400:	eb0032e1 	bl	26f8c <uspi_assertion_failed>
   1a404:	e5961014 	ldr	r1, [r6, #20]
   1a408:	eaffffcf 	b	1a34c <USBDeviceGetName+0x70>
   1a40c:	e59f1014 	ldr	r1, [pc, #20]	; 1a428 <USBDeviceGetName+0x14c>
   1a410:	e59f2038 	ldr	r2, [pc, #56]	; 1a450 <USBDeviceGetName+0x174>
   1a414:	e59f0030 	ldr	r0, [pc, #48]	; 1a44c <USBDeviceGetName+0x170>
   1a418:	eb0032db 	bl	26f8c <uspi_assertion_failed>
   1a41c:	e5961014 	ldr	r1, [r6, #20]
   1a420:	eaffffda 	b	1a390 <USBDeviceGetName+0xb4>
   1a424:	000001be 			; <UNDEFINED> instruction: 0x000001be
   1a428:	0002a194 	muleq	r2, r4, r1
   1a42c:	000299fc 	strdeq	r9, [r2], -ip
   1a430:	0002a248 	andeq	sl, r2, r8, asr #4
   1a434:	0002a23c 	andeq	sl, r2, ip, lsr r2
   1a438:	0002a230 	andeq	sl, r2, r0, lsr r2
   1a43c:	000001a1 	andeq	r0, r0, r1, lsr #3
   1a440:	00029a68 	andeq	r9, r2, r8, ror #20
   1a444:	0002a204 	andeq	sl, r2, r4, lsl #4
   1a448:	000001b1 			; <UNDEFINED> instruction: 0x000001b1
   1a44c:	0002a214 	andeq	sl, r2, r4, lsl r2
   1a450:	000001aa 	andeq	r0, r0, sl, lsr #3

0001a454 <USBDeviceGetNames>:
   1a454:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a458:	e2508000 	subs	r8, r0, #0
   1a45c:	0a00003f 	beq	1a560 <USBDeviceGetNames+0x10c>
   1a460:	e3a0000c 	mov	r0, #12
   1a464:	eb002ab1 	bl	24f30 <malloc>
   1a468:	e2506000 	subs	r6, r0, #0
   1a46c:	0a000036 	beq	1a54c <USBDeviceGetNames+0xf8>
   1a470:	e1a00006 	mov	r0, r6
   1a474:	eb0014a3 	bl	1f708 <String>
   1a478:	e3a05000 	mov	r5, #0
   1a47c:	e59fb0f0 	ldr	fp, [pc, #240]	; 1a574 <USBDeviceGetNames+0x120>
   1a480:	e59fa0f0 	ldr	sl, [pc, #240]	; 1a578 <USBDeviceGetNames+0x124>
   1a484:	e59f90f0 	ldr	r9, [pc, #240]	; 1a57c <USBDeviceGetNames+0x128>
   1a488:	e59f70f0 	ldr	r7, [pc, #240]	; 1a580 <USBDeviceGetNames+0x12c>
   1a48c:	e1a01005 	mov	r1, r5
   1a490:	e1a00008 	mov	r0, r8
   1a494:	ebffff90 	bl	1a2dc <USBDeviceGetName>
   1a498:	e2504000 	subs	r4, r0, #0
   1a49c:	0a000020 	beq	1a524 <USBDeviceGetNames+0xd0>
   1a4a0:	e1a01007 	mov	r1, r7
   1a4a4:	e1a00004 	mov	r0, r4
   1a4a8:	eb001528 	bl	1f950 <StringCompare>
   1a4ac:	e3500000 	cmp	r0, #0
   1a4b0:	1a00000d 	bne	1a4ec <USBDeviceGetNames+0x98>
   1a4b4:	e1a00004 	mov	r0, r4
   1a4b8:	eb0014b4 	bl	1f790 <_String>
   1a4bc:	e1a00004 	mov	r0, r4
   1a4c0:	eb002b00 	bl	250c8 <free>
   1a4c4:	e3550001 	cmp	r5, #1
   1a4c8:	1a000005 	bne	1a4e4 <USBDeviceGetNames+0x90>
   1a4cc:	e1a00006 	mov	r0, r6
   1a4d0:	eb0014e8 	bl	1f878 <StringGetLength>
   1a4d4:	e3500000 	cmp	r0, #0
   1a4d8:	0a000016 	beq	1a538 <USBDeviceGetNames+0xe4>
   1a4dc:	e1a00006 	mov	r0, r6
   1a4e0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4e4:	e3a05001 	mov	r5, #1
   1a4e8:	eaffffe7 	b	1a48c <USBDeviceGetNames+0x38>
   1a4ec:	e1a00006 	mov	r0, r6
   1a4f0:	eb0014e0 	bl	1f878 <StringGetLength>
   1a4f4:	e3500000 	cmp	r0, #0
   1a4f8:	1a000005 	bne	1a514 <USBDeviceGetNames+0xc0>
   1a4fc:	e1a00004 	mov	r0, r4
   1a500:	eb0014b3 	bl	1f7d4 <StringGet>
   1a504:	e1a01000 	mov	r1, r0
   1a508:	e1a00006 	mov	r0, r6
   1a50c:	eb0014e8 	bl	1f8b4 <StringAppend>
   1a510:	eaffffe7 	b	1a4b4 <USBDeviceGetNames+0x60>
   1a514:	e59f1068 	ldr	r1, [pc, #104]	; 1a584 <USBDeviceGetNames+0x130>
   1a518:	e1a00006 	mov	r0, r6
   1a51c:	eb0014e4 	bl	1f8b4 <StringAppend>
   1a520:	eafffff5 	b	1a4fc <USBDeviceGetNames+0xa8>
   1a524:	e1a0200b 	mov	r2, fp
   1a528:	e1a0100a 	mov	r1, sl
   1a52c:	e1a00009 	mov	r0, r9
   1a530:	eb003295 	bl	26f8c <uspi_assertion_failed>
   1a534:	eaffffd9 	b	1a4a0 <USBDeviceGetNames+0x4c>
   1a538:	e59f1040 	ldr	r1, [pc, #64]	; 1a580 <USBDeviceGetNames+0x12c>
   1a53c:	e1a00006 	mov	r0, r6
   1a540:	eb0014b3 	bl	1f814 <StringSet>
   1a544:	e1a00006 	mov	r0, r6
   1a548:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a54c:	e3a02f73 	mov	r2, #460	; 0x1cc
   1a550:	e59f1020 	ldr	r1, [pc, #32]	; 1a578 <USBDeviceGetNames+0x124>
   1a554:	e59f002c 	ldr	r0, [pc, #44]	; 1a588 <USBDeviceGetNames+0x134>
   1a558:	eb00328b 	bl	26f8c <uspi_assertion_failed>
   1a55c:	eaffffc3 	b	1a470 <USBDeviceGetNames+0x1c>
   1a560:	e59f2024 	ldr	r2, [pc, #36]	; 1a58c <USBDeviceGetNames+0x138>
   1a564:	e59f100c 	ldr	r1, [pc, #12]	; 1a578 <USBDeviceGetNames+0x124>
   1a568:	e59f0020 	ldr	r0, [pc, #32]	; 1a590 <USBDeviceGetNames+0x13c>
   1a56c:	eb003286 	bl	26f8c <uspi_assertion_failed>
   1a570:	eaffffba 	b	1a460 <USBDeviceGetNames+0xc>
   1a574:	000001d2 	ldrdeq	r0, [r0], -r2
   1a578:	0002a194 	muleq	r2, r4, r1
   1a57c:	0002ab50 	andeq	sl, r2, r0, asr fp
   1a580:	0002a248 	andeq	sl, r2, r8, asr #4
   1a584:	0002a260 	andeq	sl, r2, r0, ror #4
   1a588:	0002a250 	andeq	sl, r2, r0, asr r2
   1a58c:	000001c9 	andeq	r0, r0, r9, asr #3
   1a590:	00029a68 	andeq	r9, r2, r8, ror #20

0001a594 <USBDeviceGetAddress>:
   1a594:	e92d4010 	push	{r4, lr}
   1a598:	e2504000 	subs	r4, r0, #0
   1a59c:	0a000001 	beq	1a5a8 <USBDeviceGetAddress+0x14>
   1a5a0:	e5d40004 	ldrb	r0, [r4, #4]
   1a5a4:	e8bd8010 	pop	{r4, pc}
   1a5a8:	e3a02f7b 	mov	r2, #492	; 0x1ec
   1a5ac:	e59f100c 	ldr	r1, [pc, #12]	; 1a5c0 <USBDeviceGetAddress+0x2c>
   1a5b0:	e59f000c 	ldr	r0, [pc, #12]	; 1a5c4 <USBDeviceGetAddress+0x30>
   1a5b4:	eb003274 	bl	26f8c <uspi_assertion_failed>
   1a5b8:	e5d40004 	ldrb	r0, [r4, #4]
   1a5bc:	e8bd8010 	pop	{r4, pc}
   1a5c0:	0002a194 	muleq	r2, r4, r1
   1a5c4:	00029a68 	andeq	r9, r2, r8, ror #20

0001a5c8 <USBDeviceGetSpeed>:
   1a5c8:	e92d4010 	push	{r4, lr}
   1a5cc:	e2504000 	subs	r4, r0, #0
   1a5d0:	0a000001 	beq	1a5dc <USBDeviceGetSpeed+0x14>
   1a5d4:	e5d40005 	ldrb	r0, [r4, #5]
   1a5d8:	e8bd8010 	pop	{r4, pc}
   1a5dc:	e59f2010 	ldr	r2, [pc, #16]	; 1a5f4 <USBDeviceGetSpeed+0x2c>
   1a5e0:	e59f1010 	ldr	r1, [pc, #16]	; 1a5f8 <USBDeviceGetSpeed+0x30>
   1a5e4:	e59f0010 	ldr	r0, [pc, #16]	; 1a5fc <USBDeviceGetSpeed+0x34>
   1a5e8:	eb003267 	bl	26f8c <uspi_assertion_failed>
   1a5ec:	e5d40005 	ldrb	r0, [r4, #5]
   1a5f0:	e8bd8010 	pop	{r4, pc}
   1a5f4:	000001f2 	strdeq	r0, [r0], -r2
   1a5f8:	0002a194 	muleq	r2, r4, r1
   1a5fc:	00029a68 	andeq	r9, r2, r8, ror #20

0001a600 <USBDeviceIsSplit>:
   1a600:	e92d4010 	push	{r4, lr}
   1a604:	e2504000 	subs	r4, r0, #0
   1a608:	0a000001 	beq	1a614 <USBDeviceIsSplit+0x14>
   1a60c:	e594000c 	ldr	r0, [r4, #12]
   1a610:	e8bd8010 	pop	{r4, pc}
   1a614:	e3a02f7e 	mov	r2, #504	; 0x1f8
   1a618:	e59f100c 	ldr	r1, [pc, #12]	; 1a62c <USBDeviceIsSplit+0x2c>
   1a61c:	e59f000c 	ldr	r0, [pc, #12]	; 1a630 <USBDeviceIsSplit+0x30>
   1a620:	eb003259 	bl	26f8c <uspi_assertion_failed>
   1a624:	e594000c 	ldr	r0, [r4, #12]
   1a628:	e8bd8010 	pop	{r4, pc}
   1a62c:	0002a194 	muleq	r2, r4, r1
   1a630:	00029a68 	andeq	r9, r2, r8, ror #20

0001a634 <USBDeviceGetHubAddress>:
   1a634:	e92d4010 	push	{r4, lr}
   1a638:	e2504000 	subs	r4, r0, #0
   1a63c:	0a000001 	beq	1a648 <USBDeviceGetHubAddress+0x14>
   1a640:	e5d40010 	ldrb	r0, [r4, #16]
   1a644:	e8bd8010 	pop	{r4, pc}
   1a648:	e59f2010 	ldr	r2, [pc, #16]	; 1a660 <USBDeviceGetHubAddress+0x2c>
   1a64c:	e59f1010 	ldr	r1, [pc, #16]	; 1a664 <USBDeviceGetHubAddress+0x30>
   1a650:	e59f0010 	ldr	r0, [pc, #16]	; 1a668 <USBDeviceGetHubAddress+0x34>
   1a654:	eb00324c 	bl	26f8c <uspi_assertion_failed>
   1a658:	e5d40010 	ldrb	r0, [r4, #16]
   1a65c:	e8bd8010 	pop	{r4, pc}
   1a660:	000001fe 	strdeq	r0, [r0], -lr
   1a664:	0002a194 	muleq	r2, r4, r1
   1a668:	00029a68 	andeq	r9, r2, r8, ror #20

0001a66c <USBDeviceGetHubPortNumber>:
   1a66c:	e92d4010 	push	{r4, lr}
   1a670:	e2504000 	subs	r4, r0, #0
   1a674:	0a000001 	beq	1a680 <USBDeviceGetHubPortNumber+0x14>
   1a678:	e5d40011 	ldrb	r0, [r4, #17]
   1a67c:	e8bd8010 	pop	{r4, pc}
   1a680:	e3a02f81 	mov	r2, #516	; 0x204
   1a684:	e59f100c 	ldr	r1, [pc, #12]	; 1a698 <USBDeviceGetHubPortNumber+0x2c>
   1a688:	e59f000c 	ldr	r0, [pc, #12]	; 1a69c <USBDeviceGetHubPortNumber+0x30>
   1a68c:	eb00323e 	bl	26f8c <uspi_assertion_failed>
   1a690:	e5d40011 	ldrb	r0, [r4, #17]
   1a694:	e8bd8010 	pop	{r4, pc}
   1a698:	0002a194 	muleq	r2, r4, r1
   1a69c:	00029a68 	andeq	r9, r2, r8, ror #20

0001a6a0 <USBDeviceGetEndpoint0>:
   1a6a0:	e92d4010 	push	{r4, lr}
   1a6a4:	e2504000 	subs	r4, r0, #0
   1a6a8:	0a000008 	beq	1a6d0 <USBDeviceGetEndpoint0+0x30>
   1a6ac:	e5940008 	ldr	r0, [r4, #8]
   1a6b0:	e3500000 	cmp	r0, #0
   1a6b4:	18bd8010 	popne	{r4, pc}
   1a6b8:	e59f2024 	ldr	r2, [pc, #36]	; 1a6e4 <USBDeviceGetEndpoint0+0x44>
   1a6bc:	e59f1024 	ldr	r1, [pc, #36]	; 1a6e8 <USBDeviceGetEndpoint0+0x48>
   1a6c0:	e59f0024 	ldr	r0, [pc, #36]	; 1a6ec <USBDeviceGetEndpoint0+0x4c>
   1a6c4:	eb003230 	bl	26f8c <uspi_assertion_failed>
   1a6c8:	e5940008 	ldr	r0, [r4, #8]
   1a6cc:	e8bd8010 	pop	{r4, pc}
   1a6d0:	e59f2018 	ldr	r2, [pc, #24]	; 1a6f0 <USBDeviceGetEndpoint0+0x50>
   1a6d4:	e59f100c 	ldr	r1, [pc, #12]	; 1a6e8 <USBDeviceGetEndpoint0+0x48>
   1a6d8:	e59f0014 	ldr	r0, [pc, #20]	; 1a6f4 <USBDeviceGetEndpoint0+0x54>
   1a6dc:	eb00322a 	bl	26f8c <uspi_assertion_failed>
   1a6e0:	eafffff1 	b	1a6ac <USBDeviceGetEndpoint0+0xc>
   1a6e4:	0000020b 	andeq	r0, r0, fp, lsl #4
   1a6e8:	0002a194 	muleq	r2, r4, r1
   1a6ec:	0002a1d0 	ldrdeq	sl, [r2], -r0
   1a6f0:	0000020a 	andeq	r0, r0, sl, lsl #4
   1a6f4:	00029a68 	andeq	r9, r2, r8, ror #20

0001a6f8 <USBDeviceGetHost>:
   1a6f8:	e92d4010 	push	{r4, lr}
   1a6fc:	e2504000 	subs	r4, r0, #0
   1a700:	0a000008 	beq	1a728 <USBDeviceGetHost+0x30>
   1a704:	e5940000 	ldr	r0, [r4]
   1a708:	e3500000 	cmp	r0, #0
   1a70c:	18bd8010 	popne	{r4, pc}
   1a710:	e59f2024 	ldr	r2, [pc, #36]	; 1a73c <USBDeviceGetHost+0x44>
   1a714:	e59f1024 	ldr	r1, [pc, #36]	; 1a740 <USBDeviceGetHost+0x48>
   1a718:	e59f0024 	ldr	r0, [pc, #36]	; 1a744 <USBDeviceGetHost+0x4c>
   1a71c:	eb00321a 	bl	26f8c <uspi_assertion_failed>
   1a720:	e5940000 	ldr	r0, [r4]
   1a724:	e8bd8010 	pop	{r4, pc}
   1a728:	e59f2018 	ldr	r2, [pc, #24]	; 1a748 <USBDeviceGetHost+0x50>
   1a72c:	e59f100c 	ldr	r1, [pc, #12]	; 1a740 <USBDeviceGetHost+0x48>
   1a730:	e59f0014 	ldr	r0, [pc, #20]	; 1a74c <USBDeviceGetHost+0x54>
   1a734:	eb003214 	bl	26f8c <uspi_assertion_failed>
   1a738:	eafffff1 	b	1a704 <USBDeviceGetHost+0xc>
   1a73c:	00000212 	andeq	r0, r0, r2, lsl r2
   1a740:	0002a194 	muleq	r2, r4, r1
   1a744:	0002a1a0 	andeq	sl, r2, r0, lsr #3
   1a748:	00000211 	andeq	r0, r0, r1, lsl r2
   1a74c:	00029a68 	andeq	r9, r2, r8, ror #20

0001a750 <USBDeviceGetDeviceDescriptor>:
   1a750:	e92d4010 	push	{r4, lr}
   1a754:	e2504000 	subs	r4, r0, #0
   1a758:	0a000008 	beq	1a780 <USBDeviceGetDeviceDescriptor+0x30>
   1a75c:	e5940014 	ldr	r0, [r4, #20]
   1a760:	e3500000 	cmp	r0, #0
   1a764:	18bd8010 	popne	{r4, pc}
   1a768:	e59f2024 	ldr	r2, [pc, #36]	; 1a794 <USBDeviceGetDeviceDescriptor+0x44>
   1a76c:	e59f1024 	ldr	r1, [pc, #36]	; 1a798 <USBDeviceGetDeviceDescriptor+0x48>
   1a770:	e59f0024 	ldr	r0, [pc, #36]	; 1a79c <USBDeviceGetDeviceDescriptor+0x4c>
   1a774:	eb003204 	bl	26f8c <uspi_assertion_failed>
   1a778:	e5940014 	ldr	r0, [r4, #20]
   1a77c:	e8bd8010 	pop	{r4, pc}
   1a780:	e3a02f86 	mov	r2, #536	; 0x218
   1a784:	e59f100c 	ldr	r1, [pc, #12]	; 1a798 <USBDeviceGetDeviceDescriptor+0x48>
   1a788:	e59f0010 	ldr	r0, [pc, #16]	; 1a7a0 <USBDeviceGetDeviceDescriptor+0x50>
   1a78c:	eb0031fe 	bl	26f8c <uspi_assertion_failed>
   1a790:	eafffff1 	b	1a75c <USBDeviceGetDeviceDescriptor+0xc>
   1a794:	00000219 	andeq	r0, r0, r9, lsl r2
   1a798:	0002a194 	muleq	r2, r4, r1
   1a79c:	0002a214 	andeq	sl, r2, r4, lsl r2
   1a7a0:	00029a68 	andeq	r9, r2, r8, ror #20

0001a7a4 <USBDeviceGetConfigurationDescriptor>:
   1a7a4:	e92d4010 	push	{r4, lr}
   1a7a8:	e2504000 	subs	r4, r0, #0
   1a7ac:	0a000008 	beq	1a7d4 <USBDeviceGetConfigurationDescriptor+0x30>
   1a7b0:	e5940018 	ldr	r0, [r4, #24]
   1a7b4:	e3500000 	cmp	r0, #0
   1a7b8:	18bd8010 	popne	{r4, pc}
   1a7bc:	e3a02e22 	mov	r2, #544	; 0x220
   1a7c0:	e59f1020 	ldr	r1, [pc, #32]	; 1a7e8 <USBDeviceGetConfigurationDescriptor+0x44>
   1a7c4:	e59f0020 	ldr	r0, [pc, #32]	; 1a7ec <USBDeviceGetConfigurationDescriptor+0x48>
   1a7c8:	eb0031ef 	bl	26f8c <uspi_assertion_failed>
   1a7cc:	e5940018 	ldr	r0, [r4, #24]
   1a7d0:	e8bd8010 	pop	{r4, pc}
   1a7d4:	e59f2014 	ldr	r2, [pc, #20]	; 1a7f0 <USBDeviceGetConfigurationDescriptor+0x4c>
   1a7d8:	e59f1008 	ldr	r1, [pc, #8]	; 1a7e8 <USBDeviceGetConfigurationDescriptor+0x44>
   1a7dc:	e59f0010 	ldr	r0, [pc, #16]	; 1a7f4 <USBDeviceGetConfigurationDescriptor+0x50>
   1a7e0:	eb0031e9 	bl	26f8c <uspi_assertion_failed>
   1a7e4:	eafffff1 	b	1a7b0 <USBDeviceGetConfigurationDescriptor+0xc>
   1a7e8:	0002a194 	muleq	r2, r4, r1
   1a7ec:	0002a264 	andeq	sl, r2, r4, ror #4
   1a7f0:	0000021f 	andeq	r0, r0, pc, lsl r2
   1a7f4:	00029a68 	andeq	r9, r2, r8, ror #20

0001a7f8 <USBDeviceGetDescriptor>:
   1a7f8:	e92d4070 	push	{r4, r5, r6, lr}
   1a7fc:	e2504000 	subs	r4, r0, #0
   1a800:	e1a05001 	mov	r5, r1
   1a804:	0a000005 	beq	1a820 <USBDeviceGetDescriptor+0x28>
   1a808:	e594001c 	ldr	r0, [r4, #28]
   1a80c:	e3500000 	cmp	r0, #0
   1a810:	0a000009 	beq	1a83c <USBDeviceGetDescriptor+0x44>
   1a814:	e1a01005 	mov	r1, r5
   1a818:	e8bd4070 	pop	{r4, r5, r6, lr}
   1a81c:	ea00283c 	b	24914 <USBConfigurationParserGetDescriptor>
   1a820:	e59f0034 	ldr	r0, [pc, #52]	; 1a85c <USBDeviceGetDescriptor+0x64>
   1a824:	e59f2034 	ldr	r2, [pc, #52]	; 1a860 <USBDeviceGetDescriptor+0x68>
   1a828:	e59f1034 	ldr	r1, [pc, #52]	; 1a864 <USBDeviceGetDescriptor+0x6c>
   1a82c:	eb0031d6 	bl	26f8c <uspi_assertion_failed>
   1a830:	e594001c 	ldr	r0, [r4, #28]
   1a834:	e3500000 	cmp	r0, #0
   1a838:	1afffff5 	bne	1a814 <USBDeviceGetDescriptor+0x1c>
   1a83c:	e59f1020 	ldr	r1, [pc, #32]	; 1a864 <USBDeviceGetDescriptor+0x6c>
   1a840:	e59f0020 	ldr	r0, [pc, #32]	; 1a868 <USBDeviceGetDescriptor+0x70>
   1a844:	e59f2020 	ldr	r2, [pc, #32]	; 1a86c <USBDeviceGetDescriptor+0x74>
   1a848:	eb0031cf 	bl	26f8c <uspi_assertion_failed>
   1a84c:	e594001c 	ldr	r0, [r4, #28]
   1a850:	e1a01005 	mov	r1, r5
   1a854:	e8bd4070 	pop	{r4, r5, r6, lr}
   1a858:	ea00282d 	b	24914 <USBConfigurationParserGetDescriptor>
   1a85c:	00029a68 	andeq	r9, r2, r8, ror #20
   1a860:	00000226 	andeq	r0, r0, r6, lsr #4
   1a864:	0002a194 	muleq	r2, r4, r1
   1a868:	0002a280 	andeq	sl, r2, r0, lsl #5
   1a86c:	00000227 	andeq	r0, r0, r7, lsr #4

0001a870 <USBDeviceConfigurationError>:
   1a870:	e92d4070 	push	{r4, r5, r6, lr}
   1a874:	e2504000 	subs	r4, r0, #0
   1a878:	e1a05001 	mov	r5, r1
   1a87c:	0a000005 	beq	1a898 <USBDeviceConfigurationError+0x28>
   1a880:	e594001c 	ldr	r0, [r4, #28]
   1a884:	e3500000 	cmp	r0, #0
   1a888:	0a000009 	beq	1a8b4 <USBDeviceConfigurationError+0x44>
   1a88c:	e1a01005 	mov	r1, r5
   1a890:	e8bd4070 	pop	{r4, r5, r6, lr}
   1a894:	ea002871 	b	24a60 <USBConfigurationParserError>
   1a898:	e59f0034 	ldr	r0, [pc, #52]	; 1a8d4 <USBDeviceConfigurationError+0x64>
   1a89c:	e59f2034 	ldr	r2, [pc, #52]	; 1a8d8 <USBDeviceConfigurationError+0x68>
   1a8a0:	e59f1034 	ldr	r1, [pc, #52]	; 1a8dc <USBDeviceConfigurationError+0x6c>
   1a8a4:	eb0031b8 	bl	26f8c <uspi_assertion_failed>
   1a8a8:	e594001c 	ldr	r0, [r4, #28]
   1a8ac:	e3500000 	cmp	r0, #0
   1a8b0:	1afffff5 	bne	1a88c <USBDeviceConfigurationError+0x1c>
   1a8b4:	e59f1020 	ldr	r1, [pc, #32]	; 1a8dc <USBDeviceConfigurationError+0x6c>
   1a8b8:	e59f0020 	ldr	r0, [pc, #32]	; 1a8e0 <USBDeviceConfigurationError+0x70>
   1a8bc:	e59f2020 	ldr	r2, [pc, #32]	; 1a8e4 <USBDeviceConfigurationError+0x74>
   1a8c0:	eb0031b1 	bl	26f8c <uspi_assertion_failed>
   1a8c4:	e594001c 	ldr	r0, [r4, #28]
   1a8c8:	e1a01005 	mov	r1, r5
   1a8cc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1a8d0:	ea002862 	b	24a60 <USBConfigurationParserError>
   1a8d4:	00029a68 	andeq	r9, r2, r8, ror #20
   1a8d8:	0000022d 	andeq	r0, r0, sp, lsr #4
   1a8dc:	0002a194 	muleq	r2, r4, r1
   1a8e0:	0002a280 	andeq	sl, r2, r0, lsl #5
   1a8e4:	0000022e 	andeq	r0, r0, lr, lsr #4

0001a8e8 <USBDeviceSetAddress>:
   1a8e8:	e92d4070 	push	{r4, r5, r6, lr}
   1a8ec:	e2505000 	subs	r5, r0, #0
   1a8f0:	e1a04001 	mov	r4, r1
   1a8f4:	0a000009 	beq	1a920 <USBDeviceSetAddress+0x38>
   1a8f8:	e3140080 	tst	r4, #128	; 0x80
   1a8fc:	1a000001 	bne	1a908 <USBDeviceSetAddress+0x20>
   1a900:	e5c54004 	strb	r4, [r5, #4]
   1a904:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a908:	e59f2024 	ldr	r2, [pc, #36]	; 1a934 <USBDeviceSetAddress+0x4c>
   1a90c:	e59f1024 	ldr	r1, [pc, #36]	; 1a938 <USBDeviceSetAddress+0x50>
   1a910:	e59f0024 	ldr	r0, [pc, #36]	; 1a93c <USBDeviceSetAddress+0x54>
   1a914:	eb00319c 	bl	26f8c <uspi_assertion_failed>
   1a918:	e5c54004 	strb	r4, [r5, #4]
   1a91c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1a920:	e3a02f8d 	mov	r2, #564	; 0x234
   1a924:	e59f100c 	ldr	r1, [pc, #12]	; 1a938 <USBDeviceSetAddress+0x50>
   1a928:	e59f0010 	ldr	r0, [pc, #16]	; 1a940 <USBDeviceSetAddress+0x58>
   1a92c:	eb003196 	bl	26f8c <uspi_assertion_failed>
   1a930:	eafffff0 	b	1a8f8 <USBDeviceSetAddress+0x10>
   1a934:	00000236 	andeq	r0, r0, r6, lsr r2
   1a938:	0002a194 	muleq	r2, r4, r1
   1a93c:	0002a29c 	muleq	r2, ip, r2
   1a940:	00029a68 	andeq	r9, r2, r8, ror #20

0001a944 <USBDeviceLogWrite>:
   1a944:	e92d000c 	push	{r2, r3}
   1a948:	e92d4070 	push	{r4, r5, r6, lr}
   1a94c:	e2505000 	subs	r5, r0, #0
   1a950:	e24dd028 	sub	sp, sp, #40	; 0x28
   1a954:	e1a06001 	mov	r6, r1
   1a958:	e59d4038 	ldr	r4, [sp, #56]	; 0x38
   1a95c:	0a000023 	beq	1a9f0 <USBDeviceLogWrite+0xac>
   1a960:	e3540000 	cmp	r4, #0
   1a964:	0a000027 	beq	1aa08 <USBDeviceLogWrite+0xc4>
   1a968:	e28d0010 	add	r0, sp, #16
   1a96c:	eb001365 	bl	1f708 <String>
   1a970:	e5d53011 	ldrb	r3, [r5, #17]
   1a974:	e28d0010 	add	r0, sp, #16
   1a978:	e58d3000 	str	r3, [sp]
   1a97c:	e5d53010 	ldrb	r3, [r5, #16]
   1a980:	e59f2094 	ldr	r2, [pc, #148]	; 1aa1c <USBDeviceLogWrite+0xd8>
   1a984:	e59f1094 	ldr	r1, [pc, #148]	; 1aa20 <USBDeviceLogWrite+0xdc>
   1a988:	eb00161d 	bl	20204 <StringFormat>
   1a98c:	e28d303c 	add	r3, sp, #60	; 0x3c
   1a990:	e28d001c 	add	r0, sp, #28
   1a994:	e58d300c 	str	r3, [sp, #12]
   1a998:	eb00135a 	bl	1f708 <String>
   1a99c:	e1a01004 	mov	r1, r4
   1a9a0:	e59d200c 	ldr	r2, [sp, #12]
   1a9a4:	e28d001c 	add	r0, sp, #28
   1a9a8:	eb00146e 	bl	1fb68 <StringFormatV>
   1a9ac:	e28d0010 	add	r0, sp, #16
   1a9b0:	eb001387 	bl	1f7d4 <StringGet>
   1a9b4:	e1a04000 	mov	r4, r0
   1a9b8:	e28d001c 	add	r0, sp, #28
   1a9bc:	eb001384 	bl	1f7d4 <StringGet>
   1a9c0:	e1a01006 	mov	r1, r6
   1a9c4:	e1a02000 	mov	r2, r0
   1a9c8:	e1a00004 	mov	r0, r4
   1a9cc:	eb00315c 	bl	26f44 <LogWrite>
   1a9d0:	e28d001c 	add	r0, sp, #28
   1a9d4:	eb00136d 	bl	1f790 <_String>
   1a9d8:	e28d0010 	add	r0, sp, #16
   1a9dc:	eb00136b 	bl	1f790 <_String>
   1a9e0:	e28dd028 	add	sp, sp, #40	; 0x28
   1a9e4:	e8bd4070 	pop	{r4, r5, r6, lr}
   1a9e8:	e28dd008 	add	sp, sp, #8
   1a9ec:	e12fff1e 	bx	lr
   1a9f0:	e59f202c 	ldr	r2, [pc, #44]	; 1aa24 <USBDeviceLogWrite+0xe0>
   1a9f4:	e59f102c 	ldr	r1, [pc, #44]	; 1aa28 <USBDeviceLogWrite+0xe4>
   1a9f8:	e59f002c 	ldr	r0, [pc, #44]	; 1aa2c <USBDeviceLogWrite+0xe8>
   1a9fc:	eb003162 	bl	26f8c <uspi_assertion_failed>
   1aa00:	e3540000 	cmp	r4, #0
   1aa04:	1affffd7 	bne	1a968 <USBDeviceLogWrite+0x24>
   1aa08:	e59f2020 	ldr	r2, [pc, #32]	; 1aa30 <USBDeviceLogWrite+0xec>
   1aa0c:	e59f1014 	ldr	r1, [pc, #20]	; 1aa28 <USBDeviceLogWrite+0xe4>
   1aa10:	e59f001c 	ldr	r0, [pc, #28]	; 1aa34 <USBDeviceLogWrite+0xf0>
   1aa14:	eb00315c 	bl	26f8c <uspi_assertion_failed>
   1aa18:	eaffffd2 	b	1a968 <USBDeviceLogWrite+0x24>
   1aa1c:	00028564 	andeq	r8, r2, r4, ror #10
   1aa20:	0002a2cc 	andeq	sl, r2, ip, asr #5
   1aa24:	0000023e 	andeq	r0, r0, lr, lsr r2
   1aa28:	0002a194 	muleq	r2, r4, r1
   1aa2c:	00029a68 	andeq	r9, r2, r8, ror #20
   1aa30:	0000023f 	andeq	r0, r0, pc, lsr r2
   1aa34:	0002a2bc 			; <UNDEFINED> instruction: 0x0002a2bc

0001aa38 <USBDeviceInitialize>:
   1aa38:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa3c:	e2504000 	subs	r4, r0, #0
   1aa40:	e24dd01c 	sub	sp, sp, #28
   1aa44:	0a0000ca 	beq	1ad74 <USBDeviceInitialize+0x33c>
   1aa48:	e5943014 	ldr	r3, [r4, #20]
   1aa4c:	e3530000 	cmp	r3, #0
   1aa50:	0a000003 	beq	1aa64 <USBDeviceInitialize+0x2c>
   1aa54:	e3a02080 	mov	r2, #128	; 0x80
   1aa58:	e59f1660 	ldr	r1, [pc, #1632]	; 1b0c0 <USBDeviceInitialize+0x688>
   1aa5c:	e59f0660 	ldr	r0, [pc, #1632]	; 1b0c4 <USBDeviceInitialize+0x68c>
   1aa60:	eb003149 	bl	26f8c <uspi_assertion_failed>
   1aa64:	e3a00012 	mov	r0, #18
   1aa68:	eb002930 	bl	24f30 <malloc>
   1aa6c:	e3500000 	cmp	r0, #0
   1aa70:	e5840014 	str	r0, [r4, #20]
   1aa74:	0a0000c3 	beq	1ad88 <USBDeviceInitialize+0x350>
   1aa78:	e5943000 	ldr	r3, [r4]
   1aa7c:	e3530000 	cmp	r3, #0
   1aa80:	0a0000c7 	beq	1ada4 <USBDeviceInitialize+0x36c>
   1aa84:	e5941008 	ldr	r1, [r4, #8]
   1aa88:	e3510000 	cmp	r1, #0
   1aa8c:	0a0000cb 	beq	1adc0 <USBDeviceInitialize+0x388>
   1aa90:	e3a03008 	mov	r3, #8
   1aa94:	e3a05080 	mov	r5, #128	; 0x80
   1aa98:	e98d0028 	stmib	sp, {r3, r5}
   1aa9c:	e5943014 	ldr	r3, [r4, #20]
   1aaa0:	e3a02001 	mov	r2, #1
   1aaa4:	e58d3000 	str	r3, [sp]
   1aaa8:	e5940000 	ldr	r0, [r4]
   1aaac:	e3a03000 	mov	r3, #0
   1aab0:	ebfff350 	bl	177f8 <DWHCIDeviceGetDescriptor>
   1aab4:	e3500008 	cmp	r0, #8
   1aab8:	159f2608 	ldrne	r2, [pc, #1544]	; 1b0c8 <USBDeviceInitialize+0x690>
   1aabc:	1a000007 	bne	1aae0 <USBDeviceInitialize+0xa8>
   1aac0:	e5943014 	ldr	r3, [r4, #20]
   1aac4:	e5d36000 	ldrb	r6, [r3]
   1aac8:	e3560012 	cmp	r6, #18
   1aacc:	1a000002 	bne	1aadc <USBDeviceInitialize+0xa4>
   1aad0:	e5d37001 	ldrb	r7, [r3, #1]
   1aad4:	e3570001 	cmp	r7, #1
   1aad8:	0a00000a 	beq	1ab08 <USBDeviceInitialize+0xd0>
   1aadc:	e59f25e8 	ldr	r2, [pc, #1512]	; 1b0cc <USBDeviceInitialize+0x694>
   1aae0:	e3a01001 	mov	r1, #1
   1aae4:	e3a05000 	mov	r5, #0
   1aae8:	e1a00004 	mov	r0, r4
   1aaec:	ebffff94 	bl	1a944 <USBDeviceLogWrite>
   1aaf0:	e5940014 	ldr	r0, [r4, #20]
   1aaf4:	eb002973 	bl	250c8 <free>
   1aaf8:	e5845014 	str	r5, [r4, #20]
   1aafc:	e1a00005 	mov	r0, r5
   1ab00:	e28dd01c 	add	sp, sp, #28
   1ab04:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab08:	e5d31007 	ldrb	r1, [r3, #7]
   1ab0c:	e5940008 	ldr	r0, [r4, #8]
   1ab10:	eb0003a0 	bl	1b998 <USBEndpointSetMaxPacketSize>
   1ab14:	e58d5008 	str	r5, [sp, #8]
   1ab18:	e58d6004 	str	r6, [sp, #4]
   1ab1c:	e5942014 	ldr	r2, [r4, #20]
   1ab20:	e3a03000 	mov	r3, #0
   1ab24:	e58d2000 	str	r2, [sp]
   1ab28:	e5941008 	ldr	r1, [r4, #8]
   1ab2c:	e5940000 	ldr	r0, [r4]
   1ab30:	e1a02007 	mov	r2, r7
   1ab34:	ebfff32f 	bl	177f8 <DWHCIDeviceGetDescriptor>
   1ab38:	e3500012 	cmp	r0, #18
   1ab3c:	1a0000ab 	bne	1adf0 <USBDeviceInitialize+0x3b8>
   1ab40:	e59f3588 	ldr	r3, [pc, #1416]	; 1b0d0 <USBDeviceInitialize+0x698>
   1ab44:	e5d36000 	ldrb	r6, [r3]
   1ab48:	e2862001 	add	r2, r6, #1
   1ab4c:	e3160080 	tst	r6, #128	; 0x80
   1ab50:	e5c32000 	strb	r2, [r3]
   1ab54:	1a0000b1 	bne	1ae20 <USBDeviceInitialize+0x3e8>
   1ab58:	e1a02006 	mov	r2, r6
   1ab5c:	e5941008 	ldr	r1, [r4, #8]
   1ab60:	e5940000 	ldr	r0, [r4]
   1ab64:	ebfff343 	bl	17878 <DWHCIDeviceSetAddress>
   1ab68:	e2505000 	subs	r5, r0, #0
   1ab6c:	0a000099 	beq	1add8 <USBDeviceInitialize+0x3a0>
   1ab70:	e1a01006 	mov	r1, r6
   1ab74:	e1a00004 	mov	r0, r4
   1ab78:	ebffff5a 	bl	1a8e8 <USBDeviceSetAddress>
   1ab7c:	e5943014 	ldr	r3, [r4, #20]
   1ab80:	e5d3200e 	ldrb	r2, [r3, #14]
   1ab84:	e3520000 	cmp	r2, #0
   1ab88:	1a000002 	bne	1ab98 <USBDeviceInitialize+0x160>
   1ab8c:	e5d3300f 	ldrb	r3, [r3, #15]
   1ab90:	e3530000 	cmp	r3, #0
   1ab94:	0a00000a 	beq	1abc4 <USBDeviceInitialize+0x18c>
   1ab98:	e2845020 	add	r5, r4, #32
   1ab9c:	e1a00005 	mov	r0, r5
   1aba0:	eb0024e3 	bl	23f34 <USBStringGetLanguageID>
   1aba4:	e5943014 	ldr	r3, [r4, #20]
   1aba8:	e1a06000 	mov	r6, r0
   1abac:	e5d3100e 	ldrb	r1, [r3, #14]
   1abb0:	e3510000 	cmp	r1, #0
   1abb4:	1a0000ee 	bne	1af74 <USBDeviceInitialize+0x53c>
   1abb8:	e5d3100f 	ldrb	r1, [r3, #15]
   1abbc:	e3510000 	cmp	r1, #0
   1abc0:	1a0000e7 	bne	1af64 <USBDeviceInitialize+0x52c>
   1abc4:	e5943018 	ldr	r3, [r4, #24]
   1abc8:	e3530000 	cmp	r3, #0
   1abcc:	0a000003 	beq	1abe0 <USBDeviceInitialize+0x1a8>
   1abd0:	e3a020d6 	mov	r2, #214	; 0xd6
   1abd4:	e59f14e4 	ldr	r1, [pc, #1252]	; 1b0c0 <USBDeviceInitialize+0x688>
   1abd8:	e59f04f4 	ldr	r0, [pc, #1268]	; 1b0d4 <USBDeviceInitialize+0x69c>
   1abdc:	eb0030ea 	bl	26f8c <uspi_assertion_failed>
   1abe0:	e3a00009 	mov	r0, #9
   1abe4:	eb0028d1 	bl	24f30 <malloc>
   1abe8:	e3500000 	cmp	r0, #0
   1abec:	e5840018 	str	r0, [r4, #24]
   1abf0:	0a000100 	beq	1aff8 <USBDeviceInitialize+0x5c0>
   1abf4:	e3a02080 	mov	r2, #128	; 0x80
   1abf8:	e3a03009 	mov	r3, #9
   1abfc:	e58d2008 	str	r2, [sp, #8]
   1ac00:	e58d3004 	str	r3, [sp, #4]
   1ac04:	e58d0000 	str	r0, [sp]
   1ac08:	e3a02002 	mov	r2, #2
   1ac0c:	e5941008 	ldr	r1, [r4, #8]
   1ac10:	e5940000 	ldr	r0, [r4]
   1ac14:	e3a03000 	mov	r3, #0
   1ac18:	ebfff2f6 	bl	177f8 <DWHCIDeviceGetDescriptor>
   1ac1c:	e3500009 	cmp	r0, #9
   1ac20:	159f24b0 	ldrne	r2, [pc, #1200]	; 1b0d8 <USBDeviceInitialize+0x6a0>
   1ac24:	1a000075 	bne	1ae00 <USBDeviceInitialize+0x3c8>
   1ac28:	e5940018 	ldr	r0, [r4, #24]
   1ac2c:	e5d03000 	ldrb	r3, [r0]
   1ac30:	e3530009 	cmp	r3, #9
   1ac34:	1a000070 	bne	1adfc <USBDeviceInitialize+0x3c4>
   1ac38:	e5d03001 	ldrb	r3, [r0, #1]
   1ac3c:	e3530002 	cmp	r3, #2
   1ac40:	1a00006d 	bne	1adfc <USBDeviceInitialize+0x3c4>
   1ac44:	e5d05002 	ldrb	r5, [r0, #2]
   1ac48:	e5d03003 	ldrb	r3, [r0, #3]
   1ac4c:	e1855403 	orr	r5, r5, r3, lsl #8
   1ac50:	e3550c02 	cmp	r5, #512	; 0x200
   1ac54:	8a000068 	bhi	1adfc <USBDeviceInitialize+0x3c4>
   1ac58:	eb00291a 	bl	250c8 <free>
   1ac5c:	e1a00005 	mov	r0, r5
   1ac60:	eb0028b2 	bl	24f30 <malloc>
   1ac64:	e3500000 	cmp	r0, #0
   1ac68:	e5840018 	str	r0, [r4, #24]
   1ac6c:	0a000102 	beq	1b07c <USBDeviceInitialize+0x644>
   1ac70:	e3a03080 	mov	r3, #128	; 0x80
   1ac74:	e88d0021 	stm	sp, {r0, r5}
   1ac78:	e58d3008 	str	r3, [sp, #8]
   1ac7c:	e3a02002 	mov	r2, #2
   1ac80:	e5941008 	ldr	r1, [r4, #8]
   1ac84:	e5940000 	ldr	r0, [r4]
   1ac88:	e3a03000 	mov	r3, #0
   1ac8c:	ebfff2d9 	bl	177f8 <DWHCIDeviceGetDescriptor>
   1ac90:	e1500005 	cmp	r0, r5
   1ac94:	159f2440 	ldrne	r2, [pc, #1088]	; 1b0dc <USBDeviceInitialize+0x6a4>
   1ac98:	1a000058 	bne	1ae00 <USBDeviceInitialize+0x3c8>
   1ac9c:	e594301c 	ldr	r3, [r4, #28]
   1aca0:	e3530000 	cmp	r3, #0
   1aca4:	0a000003 	beq	1acb8 <USBDeviceInitialize+0x280>
   1aca8:	e59f2430 	ldr	r2, [pc, #1072]	; 1b0e0 <USBDeviceInitialize+0x6a8>
   1acac:	e59f140c 	ldr	r1, [pc, #1036]	; 1b0c0 <USBDeviceInitialize+0x688>
   1acb0:	e59f042c 	ldr	r0, [pc, #1068]	; 1b0e4 <USBDeviceInitialize+0x6ac>
   1acb4:	eb0030b4 	bl	26f8c <uspi_assertion_failed>
   1acb8:	e3a0001c 	mov	r0, #28
   1acbc:	eb00289b 	bl	24f30 <malloc>
   1acc0:	e3500000 	cmp	r0, #0
   1acc4:	e584001c 	str	r0, [r4, #28]
   1acc8:	0a0000f1 	beq	1b094 <USBDeviceInitialize+0x65c>
   1accc:	e1a02005 	mov	r2, r5
   1acd0:	e5941018 	ldr	r1, [r4, #24]
   1acd4:	eb002678 	bl	246bc <USBConfigurationParser>
   1acd8:	e594001c 	ldr	r0, [r4, #28]
   1acdc:	eb0026ff 	bl	248e0 <USBConfigurationParserIsValid>
   1ace0:	e2505000 	subs	r5, r0, #0
   1ace4:	e1a00004 	mov	r0, r4
   1ace8:	0a0000e0 	beq	1b070 <USBDeviceInitialize+0x638>
   1acec:	ebfffdd8 	bl	1a454 <USBDeviceGetNames>
   1acf0:	e2505000 	subs	r5, r0, #0
   1acf4:	0a0000ec 	beq	1b0ac <USBDeviceInitialize+0x674>
   1acf8:	e1a00005 	mov	r0, r5
   1acfc:	eb0012b4 	bl	1f7d4 <StringGet>
   1ad00:	e3a07000 	mov	r7, #0
   1ad04:	e1a03000 	mov	r3, r0
   1ad08:	e59f23d8 	ldr	r2, [pc, #984]	; 1b0e8 <USBDeviceInitialize+0x6b0>
   1ad0c:	e3a01003 	mov	r1, #3
   1ad10:	e1a00004 	mov	r0, r4
   1ad14:	ebffff0a 	bl	1a944 <USBDeviceLogWrite>
   1ad18:	e1a00005 	mov	r0, r5
   1ad1c:	eb00129b 	bl	1f790 <_String>
   1ad20:	e1a00005 	mov	r0, r5
   1ad24:	eb0028e7 	bl	250c8 <free>
   1ad28:	e1a05007 	mov	r5, r7
   1ad2c:	e59fa3b8 	ldr	sl, [pc, #952]	; 1b0ec <USBDeviceInitialize+0x6b4>
   1ad30:	e59fb3b8 	ldr	fp, [pc, #952]	; 1b0f0 <USBDeviceInitialize+0x6b8>
   1ad34:	e59f9384 	ldr	r9, [pc, #900]	; 1b0c0 <USBDeviceInitialize+0x688>
   1ad38:	e3a01004 	mov	r1, #4
   1ad3c:	e594001c 	ldr	r0, [r4, #28]
   1ad40:	eb0026f3 	bl	24914 <USBConfigurationParserGetDescriptor>
   1ad44:	e3500000 	cmp	r0, #0
   1ad48:	0a0000c0 	beq	1b050 <USBDeviceInitialize+0x618>
   1ad4c:	e5d08002 	ldrb	r8, [r0, #2]
   1ad50:	e1580007 	cmp	r8, r7
   1ad54:	8a000038 	bhi	1ae3c <USBDeviceInitialize+0x404>
   1ad58:	0a000036 	beq	1ae38 <USBDeviceInitialize+0x400>
   1ad5c:	e5d03003 	ldrb	r3, [r0, #3]
   1ad60:	e59f238c 	ldr	r2, [pc, #908]	; 1b0f4 <USBDeviceInitialize+0x6bc>
   1ad64:	e3a01004 	mov	r1, #4
   1ad68:	e1a00004 	mov	r0, r4
   1ad6c:	ebfffef4 	bl	1a944 <USBDeviceLogWrite>
   1ad70:	eafffff0 	b	1ad38 <USBDeviceInitialize+0x300>
   1ad74:	e3a0207e 	mov	r2, #126	; 0x7e
   1ad78:	e59f1340 	ldr	r1, [pc, #832]	; 1b0c0 <USBDeviceInitialize+0x688>
   1ad7c:	e59f0374 	ldr	r0, [pc, #884]	; 1b0f8 <USBDeviceInitialize+0x6c0>
   1ad80:	eb003081 	bl	26f8c <uspi_assertion_failed>
   1ad84:	eaffff2f 	b	1aa48 <USBDeviceInitialize+0x10>
   1ad88:	e3a02082 	mov	r2, #130	; 0x82
   1ad8c:	e59f132c 	ldr	r1, [pc, #812]	; 1b0c0 <USBDeviceInitialize+0x688>
   1ad90:	e59f0364 	ldr	r0, [pc, #868]	; 1b0fc <USBDeviceInitialize+0x6c4>
   1ad94:	eb00307c 	bl	26f8c <uspi_assertion_failed>
   1ad98:	e5943000 	ldr	r3, [r4]
   1ad9c:	e3530000 	cmp	r3, #0
   1ada0:	1affff37 	bne	1aa84 <USBDeviceInitialize+0x4c>
   1ada4:	e59f1314 	ldr	r1, [pc, #788]	; 1b0c0 <USBDeviceInitialize+0x688>
   1ada8:	e3a02084 	mov	r2, #132	; 0x84
   1adac:	e59f034c 	ldr	r0, [pc, #844]	; 1b100 <USBDeviceInitialize+0x6c8>
   1adb0:	eb003075 	bl	26f8c <uspi_assertion_failed>
   1adb4:	e5941008 	ldr	r1, [r4, #8]
   1adb8:	e3510000 	cmp	r1, #0
   1adbc:	1affff33 	bne	1aa90 <USBDeviceInitialize+0x58>
   1adc0:	e59f12f8 	ldr	r1, [pc, #760]	; 1b0c0 <USBDeviceInitialize+0x688>
   1adc4:	e3a02085 	mov	r2, #133	; 0x85
   1adc8:	e59f0334 	ldr	r0, [pc, #820]	; 1b104 <USBDeviceInitialize+0x6cc>
   1adcc:	eb00306e 	bl	26f8c <uspi_assertion_failed>
   1add0:	e5941008 	ldr	r1, [r4, #8]
   1add4:	eaffff2d 	b	1aa90 <USBDeviceInitialize+0x58>
   1add8:	e1a03006 	mov	r3, r6
   1addc:	e1a01007 	mov	r1, r7
   1ade0:	e1a00004 	mov	r0, r4
   1ade4:	e59f231c 	ldr	r2, [pc, #796]	; 1b108 <USBDeviceInitialize+0x6d0>
   1ade8:	ebfffed5 	bl	1a944 <USBDeviceLogWrite>
   1adec:	eaffff42 	b	1aafc <USBDeviceInitialize+0xc4>
   1adf0:	e1a01007 	mov	r1, r7
   1adf4:	e59f2310 	ldr	r2, [pc, #784]	; 1b10c <USBDeviceInitialize+0x6d4>
   1adf8:	eaffff39 	b	1aae4 <USBDeviceInitialize+0xac>
   1adfc:	e59f230c 	ldr	r2, [pc, #780]	; 1b110 <USBDeviceInitialize+0x6d8>
   1ae00:	e3a05000 	mov	r5, #0
   1ae04:	e3a01001 	mov	r1, #1
   1ae08:	e1a00004 	mov	r0, r4
   1ae0c:	ebfffecc 	bl	1a944 <USBDeviceLogWrite>
   1ae10:	e5940018 	ldr	r0, [r4, #24]
   1ae14:	eb0028ab 	bl	250c8 <free>
   1ae18:	e5845018 	str	r5, [r4, #24]
   1ae1c:	eaffff36 	b	1aafc <USBDeviceInitialize+0xc4>
   1ae20:	e1a01007 	mov	r1, r7
   1ae24:	e1a00004 	mov	r0, r4
   1ae28:	e59f22e4 	ldr	r2, [pc, #740]	; 1b114 <USBDeviceInitialize+0x6dc>
   1ae2c:	ebfffec4 	bl	1a944 <USBDeviceLogWrite>
   1ae30:	e3a05000 	mov	r5, #0
   1ae34:	eaffff30 	b	1aafc <USBDeviceInitialize+0xc4>
   1ae38:	e1a08007 	mov	r8, r7
   1ae3c:	e594301c 	ldr	r3, [r4, #28]
   1ae40:	e3530000 	cmp	r3, #0
   1ae44:	0a000071 	beq	1b010 <USBDeviceInitialize+0x5d8>
   1ae48:	e0846105 	add	r6, r4, r5, lsl #2
   1ae4c:	e5963038 	ldr	r3, [r6, #56]	; 0x38
   1ae50:	e3530000 	cmp	r3, #0
   1ae54:	0a000003 	beq	1ae68 <USBDeviceInitialize+0x430>
   1ae58:	e59f22b8 	ldr	r2, [pc, #696]	; 1b118 <USBDeviceInitialize+0x6e0>
   1ae5c:	e1a01009 	mov	r1, r9
   1ae60:	e59f02b4 	ldr	r0, [pc, #692]	; 1b11c <USBDeviceInitialize+0x6e4>
   1ae64:	eb003048 	bl	26f8c <uspi_assertion_failed>
   1ae68:	e3a00010 	mov	r0, #16
   1ae6c:	eb00282f 	bl	24f30 <malloc>
   1ae70:	e3500000 	cmp	r0, #0
   1ae74:	e5860038 	str	r0, [r6, #56]	; 0x38
   1ae78:	0a000069 	beq	1b024 <USBDeviceInitialize+0x5ec>
   1ae7c:	e594201c 	ldr	r2, [r4, #28]
   1ae80:	e1a01004 	mov	r1, r4
   1ae84:	eb0008bf 	bl	1d188 <USBFunction>
   1ae88:	e3550000 	cmp	r5, #0
   1ae8c:	1a00001a 	bne	1aefc <USBDeviceInitialize+0x4c4>
   1ae90:	e1a01005 	mov	r1, r5
   1ae94:	e1a00004 	mov	r0, r4
   1ae98:	e5947038 	ldr	r7, [r4, #56]	; 0x38
   1ae9c:	ebfffd0e 	bl	1a2dc <USBDeviceGetName>
   1aea0:	e1a01000 	mov	r1, r0
   1aea4:	e1a00007 	mov	r0, r7
   1aea8:	eb0000f2 	bl	1b278 <USBDeviceFactoryGetDevice>
   1aeac:	e2507000 	subs	r7, r0, #0
   1aeb0:	0a000008 	beq	1aed8 <USBDeviceInitialize+0x4a0>
   1aeb4:	e3a05001 	mov	r5, #1
   1aeb8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
   1aebc:	eb00092e 	bl	1d37c <_USBFunction>
   1aec0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
   1aec4:	eb00287f 	bl	250c8 <free>
   1aec8:	e5847038 	str	r7, [r4, #56]	; 0x38
   1aecc:	e2887001 	add	r7, r8, #1
   1aed0:	e6ef7077 	uxtb	r7, r7
   1aed4:	eaffff97 	b	1ad38 <USBDeviceInitialize+0x300>
   1aed8:	e3a01001 	mov	r1, #1
   1aedc:	e1a00004 	mov	r0, r4
   1aee0:	e5947038 	ldr	r7, [r4, #56]	; 0x38
   1aee4:	ebfffcfc 	bl	1a2dc <USBDeviceGetName>
   1aee8:	e1a01000 	mov	r1, r0
   1aeec:	e1a00007 	mov	r0, r7
   1aef0:	eb0000e0 	bl	1b278 <USBDeviceFactoryGetDevice>
   1aef4:	e2507000 	subs	r7, r0, #0
   1aef8:	1affffed 	bne	1aeb4 <USBDeviceInitialize+0x47c>
   1aefc:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1af00:	eb000931 	bl	1d3cc <USBFunctionGetInterfaceName>
   1af04:	e2507000 	subs	r7, r0, #0
   1af08:	0a00004b 	beq	1b03c <USBDeviceInitialize+0x604>
   1af0c:	e1a0100a 	mov	r1, sl
   1af10:	e1a00007 	mov	r0, r7
   1af14:	eb00128d 	bl	1f950 <StringCompare>
   1af18:	e2503000 	subs	r3, r0, #0
   1af1c:	1a000019 	bne	1af88 <USBDeviceInitialize+0x550>
   1af20:	e1a00007 	mov	r0, r7
   1af24:	e58d3014 	str	r3, [sp, #20]
   1af28:	eb001218 	bl	1f790 <_String>
   1af2c:	e1a00007 	mov	r0, r7
   1af30:	eb002864 	bl	250c8 <free>
   1af34:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1af38:	eb00090f 	bl	1d37c <_USBFunction>
   1af3c:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1af40:	eb002860 	bl	250c8 <free>
   1af44:	e59d3014 	ldr	r3, [sp, #20]
   1af48:	e5863038 	str	r3, [r6, #56]	; 0x38
   1af4c:	e59f21cc 	ldr	r2, [pc, #460]	; 1b120 <USBDeviceInitialize+0x6e8>
   1af50:	e3a01002 	mov	r1, #2
   1af54:	e1a00004 	mov	r0, r4
   1af58:	e1a07008 	mov	r7, r8
   1af5c:	ebfffe78 	bl	1a944 <USBDeviceLogWrite>
   1af60:	eaffff74 	b	1ad38 <USBDeviceInitialize+0x300>
   1af64:	e1a02006 	mov	r2, r6
   1af68:	e284002c 	add	r0, r4, #44	; 0x2c
   1af6c:	eb00233a 	bl	23c5c <USBStringGetFromDescriptor>
   1af70:	eaffff13 	b	1abc4 <USBDeviceInitialize+0x18c>
   1af74:	e1a00005 	mov	r0, r5
   1af78:	e1a02006 	mov	r2, r6
   1af7c:	eb002336 	bl	23c5c <USBStringGetFromDescriptor>
   1af80:	e5943014 	ldr	r3, [r4, #20]
   1af84:	eaffff0b 	b	1abb8 <USBDeviceInitialize+0x180>
   1af88:	e1a00007 	mov	r0, r7
   1af8c:	eb001210 	bl	1f7d4 <StringGet>
   1af90:	e1a0200b 	mov	r2, fp
   1af94:	e1a03000 	mov	r3, r0
   1af98:	e3a01003 	mov	r1, #3
   1af9c:	e1a00004 	mov	r0, r4
   1afa0:	ebfffe67 	bl	1a944 <USBDeviceLogWrite>
   1afa4:	e1a01007 	mov	r1, r7
   1afa8:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1afac:	eb0000b1 	bl	1b278 <USBDeviceFactoryGetDevice>
   1afb0:	e1a07000 	mov	r7, r0
   1afb4:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1afb8:	eb0008ef 	bl	1d37c <_USBFunction>
   1afbc:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1afc0:	eb002840 	bl	250c8 <free>
   1afc4:	e3570000 	cmp	r7, #0
   1afc8:	05867038 	streq	r7, [r6, #56]	; 0x38
   1afcc:	0affffde 	beq	1af4c <USBDeviceInitialize+0x514>
   1afd0:	e2855001 	add	r5, r5, #1
   1afd4:	e355000a 	cmp	r5, #10
   1afd8:	e5867038 	str	r7, [r6, #56]	; 0x38
   1afdc:	1affffba 	bne	1aecc <USBDeviceInitialize+0x494>
   1afe0:	e1a00004 	mov	r0, r4
   1afe4:	e59f2138 	ldr	r2, [pc, #312]	; 1b124 <USBDeviceInitialize+0x6ec>
   1afe8:	e3a01002 	mov	r1, #2
   1afec:	ebfffe54 	bl	1a944 <USBDeviceLogWrite>
   1aff0:	e3a05001 	mov	r5, #1
   1aff4:	eafffec0 	b	1aafc <USBDeviceInitialize+0xc4>
   1aff8:	e59f0128 	ldr	r0, [pc, #296]	; 1b128 <USBDeviceInitialize+0x6f0>
   1affc:	e3a020d8 	mov	r2, #216	; 0xd8
   1b000:	e59f10b8 	ldr	r1, [pc, #184]	; 1b0c0 <USBDeviceInitialize+0x688>
   1b004:	eb002fe0 	bl	26f8c <uspi_assertion_failed>
   1b008:	e5940018 	ldr	r0, [r4, #24]
   1b00c:	eafffef8 	b	1abf4 <USBDeviceInitialize+0x1bc>
   1b010:	e3a02e13 	mov	r2, #304	; 0x130
   1b014:	e1a01009 	mov	r1, r9
   1b018:	e59f010c 	ldr	r0, [pc, #268]	; 1b12c <USBDeviceInitialize+0x6f4>
   1b01c:	eb002fda 	bl	26f8c <uspi_assertion_failed>
   1b020:	eaffff88 	b	1ae48 <USBDeviceInitialize+0x410>
   1b024:	e59f0104 	ldr	r0, [pc, #260]	; 1b130 <USBDeviceInitialize+0x6f8>
   1b028:	e59f2104 	ldr	r2, [pc, #260]	; 1b134 <USBDeviceInitialize+0x6fc>
   1b02c:	e1a01009 	mov	r1, r9
   1b030:	eb002fd5 	bl	26f8c <uspi_assertion_failed>
   1b034:	e5960038 	ldr	r0, [r6, #56]	; 0x38
   1b038:	eaffff8f 	b	1ae7c <USBDeviceInitialize+0x444>
   1b03c:	e3a02f51 	mov	r2, #324	; 0x144
   1b040:	e1a01009 	mov	r1, r9
   1b044:	e59f00ec 	ldr	r0, [pc, #236]	; 1b138 <USBDeviceInitialize+0x700>
   1b048:	eb002fcf 	bl	26f8c <uspi_assertion_failed>
   1b04c:	eaffffae 	b	1af0c <USBDeviceInitialize+0x4d4>
   1b050:	e3550000 	cmp	r5, #0
   1b054:	13a05001 	movne	r5, #1
   1b058:	1afffea7 	bne	1aafc <USBDeviceInitialize+0xc4>
   1b05c:	e1a00004 	mov	r0, r4
   1b060:	e59f20d4 	ldr	r2, [pc, #212]	; 1b13c <USBDeviceInitialize+0x704>
   1b064:	e3a01002 	mov	r1, #2
   1b068:	ebfffe35 	bl	1a944 <USBDeviceLogWrite>
   1b06c:	eafffea2 	b	1aafc <USBDeviceInitialize+0xc4>
   1b070:	e59f10c8 	ldr	r1, [pc, #200]	; 1b140 <USBDeviceInitialize+0x708>
   1b074:	ebfffdfd 	bl	1a870 <USBDeviceConfigurationError>
   1b078:	eafffe9f 	b	1aafc <USBDeviceInitialize+0xc4>
   1b07c:	e59f00a4 	ldr	r0, [pc, #164]	; 1b128 <USBDeviceInitialize+0x6f0>
   1b080:	e3a020f8 	mov	r2, #248	; 0xf8
   1b084:	e59f1034 	ldr	r1, [pc, #52]	; 1b0c0 <USBDeviceInitialize+0x688>
   1b088:	eb002fbf 	bl	26f8c <uspi_assertion_failed>
   1b08c:	e5940018 	ldr	r0, [r4, #24]
   1b090:	eafffef6 	b	1ac70 <USBDeviceInitialize+0x238>
   1b094:	e59f0090 	ldr	r0, [pc, #144]	; 1b12c <USBDeviceInitialize+0x6f4>
   1b098:	e59f20a4 	ldr	r2, [pc, #164]	; 1b144 <USBDeviceInitialize+0x70c>
   1b09c:	e59f101c 	ldr	r1, [pc, #28]	; 1b0c0 <USBDeviceInitialize+0x688>
   1b0a0:	eb002fb9 	bl	26f8c <uspi_assertion_failed>
   1b0a4:	e594001c 	ldr	r0, [r4, #28]
   1b0a8:	eaffff07 	b	1accc <USBDeviceInitialize+0x294>
   1b0ac:	e3a02f46 	mov	r2, #280	; 0x118
   1b0b0:	e59f1008 	ldr	r1, [pc, #8]	; 1b0c0 <USBDeviceInitialize+0x688>
   1b0b4:	e59f008c 	ldr	r0, [pc, #140]	; 1b148 <USBDeviceInitialize+0x710>
   1b0b8:	eb002fb3 	bl	26f8c <uspi_assertion_failed>
   1b0bc:	eaffff0d 	b	1acf8 <USBDeviceInitialize+0x2c0>
   1b0c0:	0002a194 	muleq	r2, r4, r1
   1b0c4:	0002a2d4 	ldrdeq	sl, [r2], -r4
   1b0c8:	0002a2f0 	strdeq	sl, [r2], -r0
   1b0cc:	0002a318 	andeq	sl, r2, r8, lsl r3
   1b0d0:	0002bcd0 	ldrdeq	fp, [r2], -r0
   1b0d4:	0002a380 	andeq	sl, r2, r0, lsl #7
   1b0d8:	0002a39c 	muleq	r2, ip, r3
   1b0dc:	0002a3ec 	andeq	sl, r2, ip, ror #7
   1b0e0:	0000010b 	andeq	r0, r0, fp, lsl #2
   1b0e4:	0002a410 	andeq	sl, r2, r0, lsl r4
   1b0e8:	0002a438 	andeq	sl, r2, r8, lsr r4
   1b0ec:	0002a248 	andeq	sl, r2, r8, asr #4
   1b0f0:	0002a4b0 			; <UNDEFINED> instruction: 0x0002a4b0
   1b0f4:	0002a448 	andeq	sl, r2, r8, asr #8
   1b0f8:	00029a68 	andeq	r9, r2, r8, ror #20
   1b0fc:	0002a214 	andeq	sl, r2, r4, lsl r2
   1b100:	0002a1a0 	andeq	sl, r2, r0, lsr #3
   1b104:	0002a1d0 	ldrdeq	sl, [r2], -r0
   1b108:	0002a368 	andeq	sl, r2, r8, ror #6
   1b10c:	0002a334 	andeq	sl, r2, r4, lsr r3
   1b110:	0002a3c8 	andeq	sl, r2, r8, asr #7
   1b114:	0002a354 	andeq	sl, r2, r4, asr r3
   1b118:	00000131 	andeq	r0, r0, r1, lsr r1
   1b11c:	0002a468 	andeq	sl, r2, r8, ror #8
   1b120:	0002a4c4 	andeq	sl, r2, r4, asr #9
   1b124:	0002a4e0 	andeq	sl, r2, r0, ror #9
   1b128:	0002a264 	andeq	sl, r2, r4, ror #4
   1b12c:	0002a280 	andeq	sl, r2, r0, lsl #5
   1b130:	0002a48c 	andeq	sl, r2, ip, lsl #9
   1b134:	00000133 	andeq	r0, r0, r3, lsr r1
   1b138:	0002ab50 	andeq	sl, r2, r0, asr fp
   1b13c:	0002a500 	andeq	sl, r2, r0, lsl #10
   1b140:	00028564 	andeq	r8, r2, r4, ror #10
   1b144:	0000010d 	andeq	r0, r0, sp, lsl #2
   1b148:	0002a42c 	andeq	sl, r2, ip, lsr #8

0001b14c <USBDeviceConfigure>:
   1b14c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1b150:	e2505000 	subs	r5, r0, #0
   1b154:	0a000025 	beq	1b1f0 <USBDeviceConfigure+0xa4>
   1b158:	e5953000 	ldr	r3, [r5]
   1b15c:	e3530000 	cmp	r3, #0
   1b160:	0a000029 	beq	1b20c <USBDeviceConfigure+0xc0>
   1b164:	e5953008 	ldr	r3, [r5, #8]
   1b168:	e3530000 	cmp	r3, #0
   1b16c:	0a00002d 	beq	1b228 <USBDeviceConfigure+0xdc>
   1b170:	e5956018 	ldr	r6, [r5, #24]
   1b174:	e3560000 	cmp	r6, #0
   1b178:	0a00001a 	beq	1b1e8 <USBDeviceConfigure+0x9c>
   1b17c:	e5d62005 	ldrb	r2, [r6, #5]
   1b180:	e5951008 	ldr	r1, [r5, #8]
   1b184:	e5950000 	ldr	r0, [r5]
   1b188:	ebfff1d9 	bl	178f4 <DWHCIDeviceSetConfiguration>
   1b18c:	e2506000 	subs	r6, r0, #0
   1b190:	12854034 	addne	r4, r5, #52	; 0x34
   1b194:	13a06000 	movne	r6, #0
   1b198:	1285505c 	addne	r5, r5, #92	; 0x5c
   1b19c:	1a000002 	bne	1b1ac <USBDeviceConfigure+0x60>
   1b1a0:	ea000025 	b	1b23c <USBDeviceConfigure+0xf0>
   1b1a4:	e1540005 	cmp	r4, r5
   1b1a8:	0a00000e 	beq	1b1e8 <USBDeviceConfigure+0x9c>
   1b1ac:	e5b40004 	ldr	r0, [r4, #4]!
   1b1b0:	e3500000 	cmp	r0, #0
   1b1b4:	0afffffa 	beq	1b1a4 <USBDeviceConfigure+0x58>
   1b1b8:	e5903000 	ldr	r3, [r0]
   1b1bc:	e12fff33 	blx	r3
   1b1c0:	e2507000 	subs	r7, r0, #0
   1b1c4:	13a06001 	movne	r6, #1
   1b1c8:	1afffff5 	bne	1b1a4 <USBDeviceConfigure+0x58>
   1b1cc:	e5940000 	ldr	r0, [r4]
   1b1d0:	eb000869 	bl	1d37c <_USBFunction>
   1b1d4:	e5940000 	ldr	r0, [r4]
   1b1d8:	eb0027ba 	bl	250c8 <free>
   1b1dc:	e1540005 	cmp	r4, r5
   1b1e0:	e5847000 	str	r7, [r4]
   1b1e4:	1afffff0 	bne	1b1ac <USBDeviceConfigure+0x60>
   1b1e8:	e1a00006 	mov	r0, r6
   1b1ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1b1f0:	e59f2064 	ldr	r2, [pc, #100]	; 1b25c <USBDeviceConfigure+0x110>
   1b1f4:	e59f1064 	ldr	r1, [pc, #100]	; 1b260 <USBDeviceConfigure+0x114>
   1b1f8:	e59f0064 	ldr	r0, [pc, #100]	; 1b264 <USBDeviceConfigure+0x118>
   1b1fc:	eb002f62 	bl	26f8c <uspi_assertion_failed>
   1b200:	e5953000 	ldr	r3, [r5]
   1b204:	e3530000 	cmp	r3, #0
   1b208:	1affffd5 	bne	1b164 <USBDeviceConfigure+0x18>
   1b20c:	e59f2054 	ldr	r2, [pc, #84]	; 1b268 <USBDeviceConfigure+0x11c>
   1b210:	e59f1048 	ldr	r1, [pc, #72]	; 1b260 <USBDeviceConfigure+0x114>
   1b214:	e59f0050 	ldr	r0, [pc, #80]	; 1b26c <USBDeviceConfigure+0x120>
   1b218:	eb002f5b 	bl	26f8c <uspi_assertion_failed>
   1b21c:	e5953008 	ldr	r3, [r5, #8]
   1b220:	e3530000 	cmp	r3, #0
   1b224:	1affffd1 	bne	1b170 <USBDeviceConfigure+0x24>
   1b228:	e3a02f5e 	mov	r2, #376	; 0x178
   1b22c:	e59f102c 	ldr	r1, [pc, #44]	; 1b260 <USBDeviceConfigure+0x114>
   1b230:	e59f0038 	ldr	r0, [pc, #56]	; 1b270 <USBDeviceConfigure+0x124>
   1b234:	eb002f54 	bl	26f8c <uspi_assertion_failed>
   1b238:	eaffffcc 	b	1b170 <USBDeviceConfigure+0x24>
   1b23c:	e5953018 	ldr	r3, [r5, #24]
   1b240:	e1a00005 	mov	r0, r5
   1b244:	e5d33005 	ldrb	r3, [r3, #5]
   1b248:	e59f2024 	ldr	r2, [pc, #36]	; 1b274 <USBDeviceConfigure+0x128>
   1b24c:	e3a01001 	mov	r1, #1
   1b250:	ebfffdbb 	bl	1a944 <USBDeviceLogWrite>
   1b254:	e1a00006 	mov	r0, r6
   1b258:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1b25c:	00000175 	andeq	r0, r0, r5, ror r1
   1b260:	0002a194 	muleq	r2, r4, r1
   1b264:	00029a68 	andeq	r9, r2, r8, ror #20
   1b268:	00000177 	andeq	r0, r0, r7, ror r1
   1b26c:	0002a1a0 	andeq	sl, r2, r0, lsr #3
   1b270:	0002a1d0 	ldrdeq	sl, [r2], -r0
   1b274:	0002a524 	andeq	sl, r2, r4, lsr #10

0001b278 <USBDeviceFactoryGetDevice>:
   1b278:	e92d4070 	push	{r4, r5, r6, lr}
   1b27c:	e2506000 	subs	r6, r0, #0
   1b280:	e1a04001 	mov	r4, r1
   1b284:	0a00002e 	beq	1b344 <USBDeviceFactoryGetDevice+0xcc>
   1b288:	e3540000 	cmp	r4, #0
   1b28c:	0a000032 	beq	1b35c <USBDeviceFactoryGetDevice+0xe4>
   1b290:	e59f12b4 	ldr	r1, [pc, #692]	; 1b54c <USBDeviceFactoryGetDevice+0x2d4>
   1b294:	e1a00004 	mov	r0, r4
   1b298:	eb0011ac 	bl	1f950 <StringCompare>
   1b29c:	e3500000 	cmp	r0, #0
   1b2a0:	1a000015 	bne	1b2fc <USBDeviceFactoryGetDevice+0x84>
   1b2a4:	e3a00058 	mov	r0, #88	; 0x58
   1b2a8:	eb002720 	bl	24f30 <malloc>
   1b2ac:	e2505000 	subs	r5, r0, #0
   1b2b0:	0a00002e 	beq	1b370 <USBDeviceFactoryGetDevice+0xf8>
   1b2b4:	e1a01006 	mov	r1, r6
   1b2b8:	e1a00005 	mov	r0, r5
   1b2bc:	eb00035a 	bl	1c02c <USBStandardHub>
   1b2c0:	e3550000 	cmp	r5, #0
   1b2c4:	0a000006 	beq	1b2e4 <USBDeviceFactoryGetDevice+0x6c>
   1b2c8:	e1a00004 	mov	r0, r4
   1b2cc:	eb001140 	bl	1f7d4 <StringGet>
   1b2d0:	e59f2278 	ldr	r2, [pc, #632]	; 1b550 <USBDeviceFactoryGetDevice+0x2d8>
   1b2d4:	e1a03000 	mov	r3, r0
   1b2d8:	e3a01003 	mov	r1, #3
   1b2dc:	e59f0270 	ldr	r0, [pc, #624]	; 1b554 <USBDeviceFactoryGetDevice+0x2dc>
   1b2e0:	eb002f17 	bl	26f44 <LogWrite>
   1b2e4:	e1a00004 	mov	r0, r4
   1b2e8:	eb001128 	bl	1f790 <_String>
   1b2ec:	e1a00004 	mov	r0, r4
   1b2f0:	eb002774 	bl	250c8 <free>
   1b2f4:	e1a00005 	mov	r0, r5
   1b2f8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b2fc:	e59f1254 	ldr	r1, [pc, #596]	; 1b558 <USBDeviceFactoryGetDevice+0x2e0>
   1b300:	e1a00004 	mov	r0, r4
   1b304:	eb001191 	bl	1f950 <StringCompare>
   1b308:	e3500000 	cmp	r0, #0
   1b30c:	0affffe4 	beq	1b2a4 <USBDeviceFactoryGetDevice+0x2c>
   1b310:	e59f1244 	ldr	r1, [pc, #580]	; 1b55c <USBDeviceFactoryGetDevice+0x2e4>
   1b314:	e1a00004 	mov	r0, r4
   1b318:	eb00118c 	bl	1f950 <StringCompare>
   1b31c:	e3500000 	cmp	r0, #0
   1b320:	1a000017 	bne	1b384 <USBDeviceFactoryGetDevice+0x10c>
   1b324:	e3a00028 	mov	r0, #40	; 0x28
   1b328:	eb002700 	bl	24f30 <malloc>
   1b32c:	e2505000 	subs	r5, r0, #0
   1b330:	0a00003a 	beq	1b420 <USBDeviceFactoryGetDevice+0x1a8>
   1b334:	e1a01006 	mov	r1, r6
   1b338:	e1a00005 	mov	r0, r5
   1b33c:	eb001479 	bl	20528 <USBBulkOnlyMassStorageDevice>
   1b340:	eaffffde 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b344:	e3a02024 	mov	r2, #36	; 0x24
   1b348:	e59f1210 	ldr	r1, [pc, #528]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b34c:	e59f0210 	ldr	r0, [pc, #528]	; 1b564 <USBDeviceFactoryGetDevice+0x2ec>
   1b350:	eb002f0d 	bl	26f8c <uspi_assertion_failed>
   1b354:	e3540000 	cmp	r4, #0
   1b358:	1affffcc 	bne	1b290 <USBDeviceFactoryGetDevice+0x18>
   1b35c:	e3a02025 	mov	r2, #37	; 0x25
   1b360:	e59f11f8 	ldr	r1, [pc, #504]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b364:	e59f01fc 	ldr	r0, [pc, #508]	; 1b568 <USBDeviceFactoryGetDevice+0x2f0>
   1b368:	eb002f07 	bl	26f8c <uspi_assertion_failed>
   1b36c:	eaffffc7 	b	1b290 <USBDeviceFactoryGetDevice+0x18>
   1b370:	e3a0202d 	mov	r2, #45	; 0x2d
   1b374:	e59f11e4 	ldr	r1, [pc, #484]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b378:	e59f01ec 	ldr	r0, [pc, #492]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b37c:	eb002f02 	bl	26f8c <uspi_assertion_failed>
   1b380:	eaffffcb 	b	1b2b4 <USBDeviceFactoryGetDevice+0x3c>
   1b384:	e59f11e4 	ldr	r1, [pc, #484]	; 1b570 <USBDeviceFactoryGetDevice+0x2f8>
   1b388:	e1a00004 	mov	r0, r4
   1b38c:	eb00116f 	bl	1f950 <StringCompare>
   1b390:	e3500000 	cmp	r0, #0
   1b394:	0a00000c 	beq	1b3cc <USBDeviceFactoryGetDevice+0x154>
   1b398:	e59f11d4 	ldr	r1, [pc, #468]	; 1b574 <USBDeviceFactoryGetDevice+0x2fc>
   1b39c:	e1a00004 	mov	r0, r4
   1b3a0:	eb00116a 	bl	1f950 <StringCompare>
   1b3a4:	e3500000 	cmp	r0, #0
   1b3a8:	1a00000f 	bne	1b3ec <USBDeviceFactoryGetDevice+0x174>
   1b3ac:	e3a00048 	mov	r0, #72	; 0x48
   1b3b0:	eb0026de 	bl	24f30 <malloc>
   1b3b4:	e2505000 	subs	r5, r0, #0
   1b3b8:	0a00003c 	beq	1b4b0 <USBDeviceFactoryGetDevice+0x238>
   1b3bc:	e1a01006 	mov	r1, r6
   1b3c0:	e1a00005 	mov	r0, r5
   1b3c4:	eb001d27 	bl	22868 <USBMouseDevice>
   1b3c8:	eaffffbc 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b3cc:	e59f01a4 	ldr	r0, [pc, #420]	; 1b578 <USBDeviceFactoryGetDevice+0x300>
   1b3d0:	eb0026d6 	bl	24f30 <malloc>
   1b3d4:	e2505000 	subs	r5, r0, #0
   1b3d8:	0a000022 	beq	1b468 <USBDeviceFactoryGetDevice+0x1f0>
   1b3dc:	e1a01006 	mov	r1, r6
   1b3e0:	e1a00005 	mov	r0, r5
   1b3e4:	eb0019d9 	bl	21b50 <USBKeyboardDevice>
   1b3e8:	eaffffb4 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b3ec:	e59f1188 	ldr	r1, [pc, #392]	; 1b57c <USBDeviceFactoryGetDevice+0x304>
   1b3f0:	e1a00004 	mov	r0, r4
   1b3f4:	eb001155 	bl	1f950 <StringCompare>
   1b3f8:	e3500000 	cmp	r0, #0
   1b3fc:	1a00000c 	bne	1b434 <USBDeviceFactoryGetDevice+0x1bc>
   1b400:	e3a00028 	mov	r0, #40	; 0x28
   1b404:	eb0026c9 	bl	24f30 <malloc>
   1b408:	e2505000 	subs	r5, r0, #0
   1b40c:	0a00003a 	beq	1b4fc <USBDeviceFactoryGetDevice+0x284>
   1b410:	e1a01006 	mov	r1, r6
   1b414:	e1a00005 	mov	r0, r5
   1b418:	eb00099e 	bl	1da98 <SMSC951xDevice>
   1b41c:	eaffffa7 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b420:	e3a02034 	mov	r2, #52	; 0x34
   1b424:	e59f1134 	ldr	r1, [pc, #308]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b428:	e59f013c 	ldr	r0, [pc, #316]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b42c:	eb002ed6 	bl	26f8c <uspi_assertion_failed>
   1b430:	eaffffbf 	b	1b334 <USBDeviceFactoryGetDevice+0xbc>
   1b434:	e59f1144 	ldr	r1, [pc, #324]	; 1b580 <USBDeviceFactoryGetDevice+0x308>
   1b438:	e1a00004 	mov	r0, r4
   1b43c:	eb001143 	bl	1f950 <StringCompare>
   1b440:	e3500000 	cmp	r0, #0
   1b444:	1a00000c 	bne	1b47c <USBDeviceFactoryGetDevice+0x204>
   1b448:	e3a00028 	mov	r0, #40	; 0x28
   1b44c:	eb0026b7 	bl	24f30 <malloc>
   1b450:	e2505000 	subs	r5, r0, #0
   1b454:	0a00002d 	beq	1b510 <USBDeviceFactoryGetDevice+0x298>
   1b458:	e1a01006 	mov	r1, r6
   1b45c:	e1a00005 	mov	r0, r5
   1b460:	eb000cd9 	bl	1e7cc <LAN7800Device>
   1b464:	eaffff95 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b468:	e3a0203b 	mov	r2, #59	; 0x3b
   1b46c:	e59f10ec 	ldr	r1, [pc, #236]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b470:	e59f00f4 	ldr	r0, [pc, #244]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b474:	eb002ec4 	bl	26f8c <uspi_assertion_failed>
   1b478:	eaffffd7 	b	1b3dc <USBDeviceFactoryGetDevice+0x164>
   1b47c:	e59f1100 	ldr	r1, [pc, #256]	; 1b584 <USBDeviceFactoryGetDevice+0x30c>
   1b480:	e1a00004 	mov	r0, r4
   1b484:	eb001131 	bl	1f950 <StringCompare>
   1b488:	e3500000 	cmp	r0, #0
   1b48c:	1a00000c 	bne	1b4c4 <USBDeviceFactoryGetDevice+0x24c>
   1b490:	e3a000c4 	mov	r0, #196	; 0xc4
   1b494:	eb0026a5 	bl	24f30 <malloc>
   1b498:	e2505000 	subs	r5, r0, #0
   1b49c:	0a000020 	beq	1b524 <USBDeviceFactoryGetDevice+0x2ac>
   1b4a0:	e1a01006 	mov	r1, r6
   1b4a4:	e1a00005 	mov	r0, r5
   1b4a8:	eb002090 	bl	236f0 <USBGamePadDevice>
   1b4ac:	eaffff83 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b4b0:	e3a02042 	mov	r2, #66	; 0x42
   1b4b4:	e59f10a4 	ldr	r1, [pc, #164]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b4b8:	e59f00ac 	ldr	r0, [pc, #172]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b4bc:	eb002eb2 	bl	26f8c <uspi_assertion_failed>
   1b4c0:	eaffffbd 	b	1b3bc <USBDeviceFactoryGetDevice+0x144>
   1b4c4:	e59f10bc 	ldr	r1, [pc, #188]	; 1b588 <USBDeviceFactoryGetDevice+0x310>
   1b4c8:	e1a00004 	mov	r0, r4
   1b4cc:	eb00111f 	bl	1f950 <StringCompare>
   1b4d0:	e3500000 	cmp	r0, #0
   1b4d4:	13a05000 	movne	r5, #0
   1b4d8:	1affff81 	bne	1b2e4 <USBDeviceFactoryGetDevice+0x6c>
   1b4dc:	e3a00044 	mov	r0, #68	; 0x44
   1b4e0:	eb002692 	bl	24f30 <malloc>
   1b4e4:	e2505000 	subs	r5, r0, #0
   1b4e8:	0a000012 	beq	1b538 <USBDeviceFactoryGetDevice+0x2c0>
   1b4ec:	e1a01006 	mov	r1, r6
   1b4f0:	e1a00005 	mov	r0, r5
   1b4f4:	eb002428 	bl	2459c <USBMIDIDevice>
   1b4f8:	eaffff70 	b	1b2c0 <USBDeviceFactoryGetDevice+0x48>
   1b4fc:	e3a02049 	mov	r2, #73	; 0x49
   1b500:	e59f1058 	ldr	r1, [pc, #88]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b504:	e59f0060 	ldr	r0, [pc, #96]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b508:	eb002e9f 	bl	26f8c <uspi_assertion_failed>
   1b50c:	eaffffbf 	b	1b410 <USBDeviceFactoryGetDevice+0x198>
   1b510:	e3a02050 	mov	r2, #80	; 0x50
   1b514:	e59f1044 	ldr	r1, [pc, #68]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b518:	e59f004c 	ldr	r0, [pc, #76]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b51c:	eb002e9a 	bl	26f8c <uspi_assertion_failed>
   1b520:	eaffffcc 	b	1b458 <USBDeviceFactoryGetDevice+0x1e0>
   1b524:	e3a02057 	mov	r2, #87	; 0x57
   1b528:	e59f1030 	ldr	r1, [pc, #48]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b52c:	e59f0038 	ldr	r0, [pc, #56]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b530:	eb002e95 	bl	26f8c <uspi_assertion_failed>
   1b534:	eaffffd9 	b	1b4a0 <USBDeviceFactoryGetDevice+0x228>
   1b538:	e3a0205e 	mov	r2, #94	; 0x5e
   1b53c:	e59f101c 	ldr	r1, [pc, #28]	; 1b560 <USBDeviceFactoryGetDevice+0x2e8>
   1b540:	e59f0024 	ldr	r0, [pc, #36]	; 1b56c <USBDeviceFactoryGetDevice+0x2f4>
   1b544:	eb002e90 	bl	26f8c <uspi_assertion_failed>
   1b548:	eaffffe7 	b	1b4ec <USBDeviceFactoryGetDevice+0x274>
   1b54c:	0002a568 	andeq	sl, r2, r8, ror #10
   1b550:	0002a5e4 	andeq	sl, r2, r4, ror #11
   1b554:	0002a600 	andeq	sl, r2, r0, lsl #12
   1b558:	0002a574 	andeq	sl, r2, r4, ror r5
   1b55c:	0002a590 	muleq	r2, r0, r5
   1b560:	0002a544 	andeq	sl, r2, r4, asr #10
   1b564:	0002a558 	andeq	sl, r2, r8, asr r5
   1b568:	0002ab50 	andeq	sl, r2, r0, asr fp
   1b56c:	0002a580 	andeq	sl, r2, r0, lsl #11
   1b570:	0002a59c 	muleq	r2, ip, r5
   1b574:	0002a5a8 	andeq	sl, r2, r8, lsr #11
   1b578:	00000464 	andeq	r0, r0, r4, ror #8
   1b57c:	0002a5b4 			; <UNDEFINED> instruction: 0x0002a5b4
   1b580:	0002a5c0 	andeq	sl, r2, r0, asr #11
   1b584:	0002a5cc 	andeq	sl, r2, ip, asr #11
   1b588:	0002a5d8 	ldrdeq	sl, [r2], -r8

0001b58c <USBEndpoint>:
   1b58c:	e92d4070 	push	{r4, r5, r6, lr}
   1b590:	e2504000 	subs	r4, r0, #0
   1b594:	e1a05001 	mov	r5, r1
   1b598:	0a00000f 	beq	1b5dc <USBEndpoint+0x50>
   1b59c:	e3a03000 	mov	r3, #0
   1b5a0:	e3a01008 	mov	r1, #8
   1b5a4:	e3a02001 	mov	r2, #1
   1b5a8:	e1550003 	cmp	r5, r3
   1b5ac:	e5845000 	str	r5, [r4]
   1b5b0:	e1c430b4 	strh	r3, [r4, #4]
   1b5b4:	e5843008 	str	r3, [r4, #8]
   1b5b8:	e5c43014 	strb	r3, [r4, #20]
   1b5bc:	e584100c 	str	r1, [r4, #12]
   1b5c0:	e5842010 	str	r2, [r4, #16]
   1b5c4:	18bd8070 	popne	{r4, r5, r6, pc}
   1b5c8:	e3a02022 	mov	r2, #34	; 0x22
   1b5cc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1b5d0:	e59f1018 	ldr	r1, [pc, #24]	; 1b5f0 <USBEndpoint+0x64>
   1b5d4:	e59f0018 	ldr	r0, [pc, #24]	; 1b5f4 <USBEndpoint+0x68>
   1b5d8:	ea002e6b 	b	26f8c <uspi_assertion_failed>
   1b5dc:	e3a02019 	mov	r2, #25
   1b5e0:	e59f1008 	ldr	r1, [pc, #8]	; 1b5f0 <USBEndpoint+0x64>
   1b5e4:	e59f000c 	ldr	r0, [pc, #12]	; 1b5f8 <USBEndpoint+0x6c>
   1b5e8:	eb002e67 	bl	26f8c <uspi_assertion_failed>
   1b5ec:	eaffffea 	b	1b59c <USBEndpoint+0x10>
   1b5f0:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b5f4:	0002a108 	andeq	sl, r2, r8, lsl #2
   1b5f8:	00029a68 	andeq	r9, r2, r8, ror #20

0001b5fc <USBEndpoint2>:
   1b5fc:	e92d4070 	push	{r4, r5, r6, lr}
   1b600:	e2505000 	subs	r5, r0, #0
   1b604:	e1a06001 	mov	r6, r1
   1b608:	e1a04002 	mov	r4, r2
   1b60c:	0a00004b 	beq	1b740 <USBEndpoint2+0x144>
   1b610:	e3a03001 	mov	r3, #1
   1b614:	e3560000 	cmp	r6, #0
   1b618:	e5856000 	str	r6, [r5]
   1b61c:	e5853010 	str	r3, [r5, #16]
   1b620:	0a00004b 	beq	1b754 <USBEndpoint2+0x158>
   1b624:	e3540000 	cmp	r4, #0
   1b628:	0a00004f 	beq	1b76c <USBEndpoint2+0x170>
   1b62c:	e5d43000 	ldrb	r3, [r4]
   1b630:	e2433007 	sub	r3, r3, #7
   1b634:	e31300fd 	tst	r3, #253	; 0xfd
   1b638:	1a000034 	bne	1b710 <USBEndpoint2+0x114>
   1b63c:	e5d43001 	ldrb	r3, [r4, #1]
   1b640:	e3530005 	cmp	r3, #5
   1b644:	0a000003 	beq	1b658 <USBEndpoint2+0x5c>
   1b648:	e3a0202f 	mov	r2, #47	; 0x2f
   1b64c:	e59f115c 	ldr	r1, [pc, #348]	; 1b7b0 <USBEndpoint2+0x1b4>
   1b650:	e59f015c 	ldr	r0, [pc, #348]	; 1b7b4 <USBEndpoint2+0x1b8>
   1b654:	eb002e4c 	bl	26f8c <uspi_assertion_failed>
   1b658:	e5d43003 	ldrb	r3, [r4, #3]
   1b65c:	e2033003 	and	r3, r3, #3
   1b660:	e3530002 	cmp	r3, #2
   1b664:	0a00001c 	beq	1b6dc <USBEndpoint2+0xe0>
   1b668:	e3530003 	cmp	r3, #3
   1b66c:	0a000004 	beq	1b684 <USBEndpoint2+0x88>
   1b670:	e8bd4070 	pop	{r4, r5, r6, lr}
   1b674:	e3a0203e 	mov	r2, #62	; 0x3e
   1b678:	e59f1130 	ldr	r1, [pc, #304]	; 1b7b0 <USBEndpoint2+0x1b4>
   1b67c:	e59f0134 	ldr	r0, [pc, #308]	; 1b7b8 <USBEndpoint2+0x1bc>
   1b680:	ea002e41 	b	26f8c <uspi_assertion_failed>
   1b684:	e3a03002 	mov	r3, #2
   1b688:	e3a06001 	mov	r6, #1
   1b68c:	e5c53005 	strb	r3, [r5, #5]
   1b690:	e5c56014 	strb	r6, [r5, #20]
   1b694:	e5d43002 	ldrb	r3, [r4, #2]
   1b698:	e5950000 	ldr	r0, [r5]
   1b69c:	e203200f 	and	r2, r3, #15
   1b6a0:	e1a033a3 	lsr	r3, r3, #7
   1b6a4:	e5c52004 	strb	r2, [r5, #4]
   1b6a8:	e5853008 	str	r3, [r5, #8]
   1b6ac:	e5d43004 	ldrb	r3, [r4, #4]
   1b6b0:	e5d42005 	ldrb	r2, [r4, #5]
   1b6b4:	e1833402 	orr	r3, r3, r2, lsl #8
   1b6b8:	e585300c 	str	r3, [r5, #12]
   1b6bc:	e5d44006 	ldrb	r4, [r4, #6]
   1b6c0:	e3540000 	cmp	r4, #0
   1b6c4:	0a000016 	beq	1b724 <USBEndpoint2+0x128>
   1b6c8:	ebfffbbe 	bl	1a5c8 <USBDeviceGetSpeed>
   1b6cc:	e3500002 	cmp	r0, #2
   1b6d0:	0a00002a 	beq	1b780 <USBEndpoint2+0x184>
   1b6d4:	e5854010 	str	r4, [r5, #16]
   1b6d8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b6dc:	e3a03001 	mov	r3, #1
   1b6e0:	e5c53005 	strb	r3, [r5, #5]
   1b6e4:	e5c53014 	strb	r3, [r5, #20]
   1b6e8:	e5d43002 	ldrb	r3, [r4, #2]
   1b6ec:	e203200f 	and	r2, r3, #15
   1b6f0:	e1a033a3 	lsr	r3, r3, #7
   1b6f4:	e5c52004 	strb	r2, [r5, #4]
   1b6f8:	e5853008 	str	r3, [r5, #8]
   1b6fc:	e5d43004 	ldrb	r3, [r4, #4]
   1b700:	e5d42005 	ldrb	r2, [r4, #5]
   1b704:	e1833402 	orr	r3, r3, r2, lsl #8
   1b708:	e585300c 	str	r3, [r5, #12]
   1b70c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b710:	e3a0202e 	mov	r2, #46	; 0x2e
   1b714:	e59f1094 	ldr	r1, [pc, #148]	; 1b7b0 <USBEndpoint2+0x1b4>
   1b718:	e59f009c 	ldr	r0, [pc, #156]	; 1b7bc <USBEndpoint2+0x1c0>
   1b71c:	eb002e1a 	bl	26f8c <uspi_assertion_failed>
   1b720:	eaffffc5 	b	1b63c <USBEndpoint2+0x40>
   1b724:	ebfffba7 	bl	1a5c8 <USBDeviceGetSpeed>
   1b728:	e3500002 	cmp	r0, #2
   1b72c:	11a04006 	movne	r4, r6
   1b730:	1affffe7 	bne	1b6d4 <USBEndpoint2+0xd8>
   1b734:	e3a03001 	mov	r3, #1
   1b738:	e5853010 	str	r3, [r5, #16]
   1b73c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b740:	e3a02027 	mov	r2, #39	; 0x27
   1b744:	e59f1064 	ldr	r1, [pc, #100]	; 1b7b0 <USBEndpoint2+0x1b4>
   1b748:	e59f0070 	ldr	r0, [pc, #112]	; 1b7c0 <USBEndpoint2+0x1c4>
   1b74c:	eb002e0e 	bl	26f8c <uspi_assertion_failed>
   1b750:	eaffffae 	b	1b610 <USBEndpoint2+0x14>
   1b754:	e3a0202b 	mov	r2, #43	; 0x2b
   1b758:	e59f1050 	ldr	r1, [pc, #80]	; 1b7b0 <USBEndpoint2+0x1b4>
   1b75c:	e59f0060 	ldr	r0, [pc, #96]	; 1b7c4 <USBEndpoint2+0x1c8>
   1b760:	eb002e09 	bl	26f8c <uspi_assertion_failed>
   1b764:	e3540000 	cmp	r4, #0
   1b768:	1affffaf 	bne	1b62c <USBEndpoint2+0x30>
   1b76c:	e3a0202d 	mov	r2, #45	; 0x2d
   1b770:	e59f1038 	ldr	r1, [pc, #56]	; 1b7b0 <USBEndpoint2+0x1b4>
   1b774:	e59f004c 	ldr	r0, [pc, #76]	; 1b7c8 <USBEndpoint2+0x1cc>
   1b778:	eb002e03 	bl	26f8c <uspi_assertion_failed>
   1b77c:	eaffffaa 	b	1b62c <USBEndpoint2+0x30>
   1b780:	e3540010 	cmp	r4, #16
   1b784:	9a000002 	bls	1b794 <USBEndpoint2+0x198>
   1b788:	e3a03a01 	mov	r3, #4096	; 0x1000
   1b78c:	e5853010 	str	r3, [r5, #16]
   1b790:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b794:	e2443001 	sub	r3, r4, #1
   1b798:	e1a04316 	lsl	r4, r6, r3
   1b79c:	e1a031a4 	lsr	r3, r4, #3
   1b7a0:	e3540007 	cmp	r4, #7
   1b7a4:	e5853010 	str	r3, [r5, #16]
   1b7a8:	daffffe1 	ble	1b734 <USBEndpoint2+0x138>
   1b7ac:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b7b0:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b7b4:	0002a674 	andeq	sl, r2, r4, ror r6
   1b7b8:	000299fc 	strdeq	r9, [r2], -ip
   1b7bc:	0002a618 	andeq	sl, r2, r8, lsl r6
   1b7c0:	00029a68 	andeq	r9, r2, r8, ror #20
   1b7c4:	0002a108 	andeq	sl, r2, r8, lsl #2
   1b7c8:	00029a40 	andeq	r9, r2, r0, asr #20

0001b7cc <USBEndpointCopy>:
   1b7cc:	e92d4070 	push	{r4, r5, r6, lr}
   1b7d0:	e2504000 	subs	r4, r0, #0
   1b7d4:	e1a05001 	mov	r5, r1
   1b7d8:	e1a06002 	mov	r6, r2
   1b7dc:	0a00000f 	beq	1b820 <USBEndpointCopy+0x54>
   1b7e0:	e3550000 	cmp	r5, #0
   1b7e4:	0a000013 	beq	1b838 <USBEndpointCopy+0x6c>
   1b7e8:	e3560000 	cmp	r6, #0
   1b7ec:	e5846000 	str	r6, [r4]
   1b7f0:	0a000017 	beq	1b854 <USBEndpointCopy+0x88>
   1b7f4:	e5d53004 	ldrb	r3, [r5, #4]
   1b7f8:	e5c43004 	strb	r3, [r4, #4]
   1b7fc:	e5d5c005 	ldrb	ip, [r5, #5]
   1b800:	e5952010 	ldr	r2, [r5, #16]
   1b804:	e5d53014 	ldrb	r3, [r5, #20]
   1b808:	e1c500d8 	ldrd	r0, [r5, #8]
   1b80c:	e5c4c005 	strb	ip, [r4, #5]
   1b810:	e1c400f8 	strd	r0, [r4, #8]
   1b814:	e5842010 	str	r2, [r4, #16]
   1b818:	e5c43014 	strb	r3, [r4, #20]
   1b81c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b820:	e3a02068 	mov	r2, #104	; 0x68
   1b824:	e59f103c 	ldr	r1, [pc, #60]	; 1b868 <USBEndpointCopy+0x9c>
   1b828:	e59f003c 	ldr	r0, [pc, #60]	; 1b86c <USBEndpointCopy+0xa0>
   1b82c:	eb002dd6 	bl	26f8c <uspi_assertion_failed>
   1b830:	e3550000 	cmp	r5, #0
   1b834:	1affffeb 	bne	1b7e8 <USBEndpointCopy+0x1c>
   1b838:	e3a0206a 	mov	r2, #106	; 0x6a
   1b83c:	e59f1024 	ldr	r1, [pc, #36]	; 1b868 <USBEndpointCopy+0x9c>
   1b840:	e59f0028 	ldr	r0, [pc, #40]	; 1b870 <USBEndpointCopy+0xa4>
   1b844:	eb002dd0 	bl	26f8c <uspi_assertion_failed>
   1b848:	e3560000 	cmp	r6, #0
   1b84c:	e5846000 	str	r6, [r4]
   1b850:	1affffe7 	bne	1b7f4 <USBEndpointCopy+0x28>
   1b854:	e3a0206d 	mov	r2, #109	; 0x6d
   1b858:	e59f1008 	ldr	r1, [pc, #8]	; 1b868 <USBEndpointCopy+0x9c>
   1b85c:	e59f0010 	ldr	r0, [pc, #16]	; 1b874 <USBEndpointCopy+0xa8>
   1b860:	eb002dc9 	bl	26f8c <uspi_assertion_failed>
   1b864:	eaffffe2 	b	1b7f4 <USBEndpointCopy+0x28>
   1b868:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b86c:	00029a68 	andeq	r9, r2, r8, ror #20
   1b870:	0002a6a4 	andeq	sl, r2, r4, lsr #13
   1b874:	0002a108 	andeq	sl, r2, r8, lsl #2

0001b878 <_USBEndpoint>:
   1b878:	e92d4010 	push	{r4, lr}
   1b87c:	e2504000 	subs	r4, r0, #0
   1b880:	0a000002 	beq	1b890 <_USBEndpoint+0x18>
   1b884:	e3a03000 	mov	r3, #0
   1b888:	e5843000 	str	r3, [r4]
   1b88c:	e8bd8010 	pop	{r4, pc}
   1b890:	e3a02079 	mov	r2, #121	; 0x79
   1b894:	e59f1008 	ldr	r1, [pc, #8]	; 1b8a4 <_USBEndpoint+0x2c>
   1b898:	e59f0008 	ldr	r0, [pc, #8]	; 1b8a8 <_USBEndpoint+0x30>
   1b89c:	eb002dba 	bl	26f8c <uspi_assertion_failed>
   1b8a0:	eafffff7 	b	1b884 <_USBEndpoint+0xc>
   1b8a4:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b8a8:	00029a68 	andeq	r9, r2, r8, ror #20

0001b8ac <USBEndpointGetDevice>:
   1b8ac:	e92d4010 	push	{r4, lr}
   1b8b0:	e2504000 	subs	r4, r0, #0
   1b8b4:	0a000008 	beq	1b8dc <USBEndpointGetDevice+0x30>
   1b8b8:	e5940000 	ldr	r0, [r4]
   1b8bc:	e3500000 	cmp	r0, #0
   1b8c0:	18bd8010 	popne	{r4, pc}
   1b8c4:	e3a02080 	mov	r2, #128	; 0x80
   1b8c8:	e59f1020 	ldr	r1, [pc, #32]	; 1b8f0 <USBEndpointGetDevice+0x44>
   1b8cc:	e59f0020 	ldr	r0, [pc, #32]	; 1b8f4 <USBEndpointGetDevice+0x48>
   1b8d0:	eb002dad 	bl	26f8c <uspi_assertion_failed>
   1b8d4:	e5940000 	ldr	r0, [r4]
   1b8d8:	e8bd8010 	pop	{r4, pc}
   1b8dc:	e3a0207f 	mov	r2, #127	; 0x7f
   1b8e0:	e59f1008 	ldr	r1, [pc, #8]	; 1b8f0 <USBEndpointGetDevice+0x44>
   1b8e4:	e59f000c 	ldr	r0, [pc, #12]	; 1b8f8 <USBEndpointGetDevice+0x4c>
   1b8e8:	eb002da7 	bl	26f8c <uspi_assertion_failed>
   1b8ec:	eafffff1 	b	1b8b8 <USBEndpointGetDevice+0xc>
   1b8f0:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b8f4:	0002a108 	andeq	sl, r2, r8, lsl #2
   1b8f8:	00029a68 	andeq	r9, r2, r8, ror #20

0001b8fc <USBEndpointGetNumber>:
   1b8fc:	e92d4010 	push	{r4, lr}
   1b900:	e2504000 	subs	r4, r0, #0
   1b904:	0a000001 	beq	1b910 <USBEndpointGetNumber+0x14>
   1b908:	e5d40004 	ldrb	r0, [r4, #4]
   1b90c:	e8bd8010 	pop	{r4, pc}
   1b910:	e3a02086 	mov	r2, #134	; 0x86
   1b914:	e59f100c 	ldr	r1, [pc, #12]	; 1b928 <USBEndpointGetNumber+0x2c>
   1b918:	e59f000c 	ldr	r0, [pc, #12]	; 1b92c <USBEndpointGetNumber+0x30>
   1b91c:	eb002d9a 	bl	26f8c <uspi_assertion_failed>
   1b920:	e5d40004 	ldrb	r0, [r4, #4]
   1b924:	e8bd8010 	pop	{r4, pc}
   1b928:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b92c:	00029a68 	andeq	r9, r2, r8, ror #20

0001b930 <USBEndpointGetType>:
   1b930:	e92d4010 	push	{r4, lr}
   1b934:	e2504000 	subs	r4, r0, #0
   1b938:	0a000001 	beq	1b944 <USBEndpointGetType+0x14>
   1b93c:	e5d40005 	ldrb	r0, [r4, #5]
   1b940:	e8bd8010 	pop	{r4, pc}
   1b944:	e3a0208c 	mov	r2, #140	; 0x8c
   1b948:	e59f100c 	ldr	r1, [pc, #12]	; 1b95c <USBEndpointGetType+0x2c>
   1b94c:	e59f000c 	ldr	r0, [pc, #12]	; 1b960 <USBEndpointGetType+0x30>
   1b950:	eb002d8d 	bl	26f8c <uspi_assertion_failed>
   1b954:	e5d40005 	ldrb	r0, [r4, #5]
   1b958:	e8bd8010 	pop	{r4, pc}
   1b95c:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b960:	00029a68 	andeq	r9, r2, r8, ror #20

0001b964 <USBEndpointIsDirectionIn>:
   1b964:	e92d4010 	push	{r4, lr}
   1b968:	e2504000 	subs	r4, r0, #0
   1b96c:	0a000001 	beq	1b978 <USBEndpointIsDirectionIn+0x14>
   1b970:	e5940008 	ldr	r0, [r4, #8]
   1b974:	e8bd8010 	pop	{r4, pc}
   1b978:	e3a02092 	mov	r2, #146	; 0x92
   1b97c:	e59f100c 	ldr	r1, [pc, #12]	; 1b990 <USBEndpointIsDirectionIn+0x2c>
   1b980:	e59f000c 	ldr	r0, [pc, #12]	; 1b994 <USBEndpointIsDirectionIn+0x30>
   1b984:	eb002d80 	bl	26f8c <uspi_assertion_failed>
   1b988:	e5940008 	ldr	r0, [r4, #8]
   1b98c:	e8bd8010 	pop	{r4, pc}
   1b990:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b994:	00029a68 	andeq	r9, r2, r8, ror #20

0001b998 <USBEndpointSetMaxPacketSize>:
   1b998:	e92d4070 	push	{r4, r5, r6, lr}
   1b99c:	e2504000 	subs	r4, r0, #0
   1b9a0:	e1a05001 	mov	r5, r1
   1b9a4:	0a000001 	beq	1b9b0 <USBEndpointSetMaxPacketSize+0x18>
   1b9a8:	e584500c 	str	r5, [r4, #12]
   1b9ac:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b9b0:	e3a02098 	mov	r2, #152	; 0x98
   1b9b4:	e59f100c 	ldr	r1, [pc, #12]	; 1b9c8 <USBEndpointSetMaxPacketSize+0x30>
   1b9b8:	e59f000c 	ldr	r0, [pc, #12]	; 1b9cc <USBEndpointSetMaxPacketSize+0x34>
   1b9bc:	eb002d72 	bl	26f8c <uspi_assertion_failed>
   1b9c0:	e584500c 	str	r5, [r4, #12]
   1b9c4:	e8bd8070 	pop	{r4, r5, r6, pc}
   1b9c8:	0002a608 	andeq	sl, r2, r8, lsl #12
   1b9cc:	00029a68 	andeq	r9, r2, r8, ror #20

0001b9d0 <USBEndpointGetMaxPacketSize>:
   1b9d0:	e92d4010 	push	{r4, lr}
   1b9d4:	e2504000 	subs	r4, r0, #0
   1b9d8:	0a000001 	beq	1b9e4 <USBEndpointGetMaxPacketSize+0x14>
   1b9dc:	e594000c 	ldr	r0, [r4, #12]
   1b9e0:	e8bd8010 	pop	{r4, pc}
   1b9e4:	e3a0209e 	mov	r2, #158	; 0x9e
   1b9e8:	e59f100c 	ldr	r1, [pc, #12]	; 1b9fc <USBEndpointGetMaxPacketSize+0x2c>
   1b9ec:	e59f000c 	ldr	r0, [pc, #12]	; 1ba00 <USBEndpointGetMaxPacketSize+0x30>
   1b9f0:	eb002d65 	bl	26f8c <uspi_assertion_failed>
   1b9f4:	e594000c 	ldr	r0, [r4, #12]
   1b9f8:	e8bd8010 	pop	{r4, pc}
   1b9fc:	0002a608 	andeq	sl, r2, r8, lsl #12
   1ba00:	00029a68 	andeq	r9, r2, r8, ror #20

0001ba04 <USBEndpointGetInterval>:
   1ba04:	e92d4010 	push	{r4, lr}
   1ba08:	e2504000 	subs	r4, r0, #0
   1ba0c:	0a000008 	beq	1ba34 <USBEndpointGetInterval+0x30>
   1ba10:	e5d43005 	ldrb	r3, [r4, #5]
   1ba14:	e3530002 	cmp	r3, #2
   1ba18:	0a000003 	beq	1ba2c <USBEndpointGetInterval+0x28>
   1ba1c:	e3a020a5 	mov	r2, #165	; 0xa5
   1ba20:	e59f1020 	ldr	r1, [pc, #32]	; 1ba48 <USBEndpointGetInterval+0x44>
   1ba24:	e59f0020 	ldr	r0, [pc, #32]	; 1ba4c <USBEndpointGetInterval+0x48>
   1ba28:	eb002d57 	bl	26f8c <uspi_assertion_failed>
   1ba2c:	e5940010 	ldr	r0, [r4, #16]
   1ba30:	e8bd8010 	pop	{r4, pc}
   1ba34:	e3a020a4 	mov	r2, #164	; 0xa4
   1ba38:	e59f1008 	ldr	r1, [pc, #8]	; 1ba48 <USBEndpointGetInterval+0x44>
   1ba3c:	e59f000c 	ldr	r0, [pc, #12]	; 1ba50 <USBEndpointGetInterval+0x4c>
   1ba40:	eb002d51 	bl	26f8c <uspi_assertion_failed>
   1ba44:	eafffff1 	b	1ba10 <USBEndpointGetInterval+0xc>
   1ba48:	0002a608 	andeq	sl, r2, r8, lsl #12
   1ba4c:	0002a6b4 			; <UNDEFINED> instruction: 0x0002a6b4
   1ba50:	00029a68 	andeq	r9, r2, r8, ror #20

0001ba54 <USBEndpointGetNextPID>:
   1ba54:	e92d4070 	push	{r4, r5, r6, lr}
   1ba58:	e2505000 	subs	r5, r0, #0
   1ba5c:	e1a04001 	mov	r4, r1
   1ba60:	0a00000e 	beq	1baa0 <USBEndpointGetNextPID+0x4c>
   1ba64:	e3540000 	cmp	r4, #0
   1ba68:	1a000001 	bne	1ba74 <USBEndpointGetNextPID+0x20>
   1ba6c:	e5d50014 	ldrb	r0, [r5, #20]
   1ba70:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ba74:	e5d53005 	ldrb	r3, [r5, #5]
   1ba78:	e3530000 	cmp	r3, #0
   1ba7c:	1a000001 	bne	1ba88 <USBEndpointGetNextPID+0x34>
   1ba80:	e3a00002 	mov	r0, #2
   1ba84:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ba88:	e3a020af 	mov	r2, #175	; 0xaf
   1ba8c:	e59f1020 	ldr	r1, [pc, #32]	; 1bab4 <USBEndpointGetNextPID+0x60>
   1ba90:	e59f0020 	ldr	r0, [pc, #32]	; 1bab8 <USBEndpointGetNextPID+0x64>
   1ba94:	eb002d3c 	bl	26f8c <uspi_assertion_failed>
   1ba98:	e3a00002 	mov	r0, #2
   1ba9c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1baa0:	e3a020ac 	mov	r2, #172	; 0xac
   1baa4:	e59f1008 	ldr	r1, [pc, #8]	; 1bab4 <USBEndpointGetNextPID+0x60>
   1baa8:	e59f000c 	ldr	r0, [pc, #12]	; 1babc <USBEndpointGetNextPID+0x68>
   1baac:	eb002d36 	bl	26f8c <uspi_assertion_failed>
   1bab0:	eaffffeb 	b	1ba64 <USBEndpointGetNextPID+0x10>
   1bab4:	0002a608 	andeq	sl, r2, r8, lsl #12
   1bab8:	0002a6dc 	ldrdeq	sl, [r2], -ip
   1babc:	00029a68 	andeq	r9, r2, r8, ror #20

0001bac0 <USBEndpointSkipPID>:
   1bac0:	e92d4070 	push	{r4, r5, r6, lr}
   1bac4:	e2504000 	subs	r4, r0, #0
   1bac8:	e1a06001 	mov	r6, r1
   1bacc:	e1a05002 	mov	r5, r2
   1bad0:	0a000020 	beq	1bb58 <USBEndpointSkipPID+0x98>
   1bad4:	e5d43005 	ldrb	r3, [r4, #5]
   1bad8:	e3530002 	cmp	r3, #2
   1badc:	8a000013 	bhi	1bb30 <USBEndpointSkipPID+0x70>
   1bae0:	e3550000 	cmp	r5, #0
   1bae4:	1a00000b 	bne	1bb18 <USBEndpointSkipPID+0x58>
   1bae8:	e5d43014 	ldrb	r3, [r4, #20]
   1baec:	e3530001 	cmp	r3, #1
   1baf0:	0a000013 	beq	1bb44 <USBEndpointSkipPID+0x84>
   1baf4:	e3530000 	cmp	r3, #0
   1baf8:	0a000013 	beq	1bb4c <USBEndpointSkipPID+0x8c>
   1bafc:	e3530002 	cmp	r3, #2
   1bb00:	0a00001e 	beq	1bb80 <USBEndpointSkipPID+0xc0>
   1bb04:	e8bd4070 	pop	{r4, r5, r6, lr}
   1bb08:	e3a020d5 	mov	r2, #213	; 0xd5
   1bb0c:	e59f107c 	ldr	r1, [pc, #124]	; 1bb90 <USBEndpointSkipPID+0xd0>
   1bb10:	e59f007c 	ldr	r0, [pc, #124]	; 1bb94 <USBEndpointSkipPID+0xd4>
   1bb14:	ea002d1c 	b	26f8c <uspi_assertion_failed>
   1bb18:	e5d43005 	ldrb	r3, [r4, #5]
   1bb1c:	e3530000 	cmp	r3, #0
   1bb20:	1a000011 	bne	1bb6c <USBEndpointSkipPID+0xac>
   1bb24:	e3a03000 	mov	r3, #0
   1bb28:	e5c43014 	strb	r3, [r4, #20]
   1bb2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bb30:	e3a020bc 	mov	r2, #188	; 0xbc
   1bb34:	e59f1054 	ldr	r1, [pc, #84]	; 1bb90 <USBEndpointSkipPID+0xd0>
   1bb38:	e59f0058 	ldr	r0, [pc, #88]	; 1bb98 <USBEndpointSkipPID+0xd8>
   1bb3c:	eb002d12 	bl	26f8c <uspi_assertion_failed>
   1bb40:	eaffffe6 	b	1bae0 <USBEndpointSkipPID+0x20>
   1bb44:	e3160001 	tst	r6, #1
   1bb48:	08bd8070 	popeq	{r4, r5, r6, pc}
   1bb4c:	e3a03002 	mov	r3, #2
   1bb50:	e5c43014 	strb	r3, [r4, #20]
   1bb54:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bb58:	e3a020b9 	mov	r2, #185	; 0xb9
   1bb5c:	e59f102c 	ldr	r1, [pc, #44]	; 1bb90 <USBEndpointSkipPID+0xd0>
   1bb60:	e59f0034 	ldr	r0, [pc, #52]	; 1bb9c <USBEndpointSkipPID+0xdc>
   1bb64:	eb002d08 	bl	26f8c <uspi_assertion_failed>
   1bb68:	eaffffd9 	b	1bad4 <USBEndpointSkipPID+0x14>
   1bb6c:	e3a020db 	mov	r2, #219	; 0xdb
   1bb70:	e59f1018 	ldr	r1, [pc, #24]	; 1bb90 <USBEndpointSkipPID+0xd0>
   1bb74:	e59f0024 	ldr	r0, [pc, #36]	; 1bba0 <USBEndpointSkipPID+0xe0>
   1bb78:	eb002d03 	bl	26f8c <uspi_assertion_failed>
   1bb7c:	eaffffe8 	b	1bb24 <USBEndpointSkipPID+0x64>
   1bb80:	e3160001 	tst	r6, #1
   1bb84:	13a03001 	movne	r3, #1
   1bb88:	15c43014 	strbne	r3, [r4, #20]
   1bb8c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bb90:	0002a608 	andeq	sl, r2, r8, lsl #12
   1bb94:	000299fc 	strdeq	r9, [r2], -ip
   1bb98:	0002a704 	andeq	sl, r2, r4, lsl #14
   1bb9c:	00029a68 	andeq	r9, r2, r8, ror #20
   1bba0:	0002a6dc 	ldrdeq	sl, [r2], -ip

0001bba4 <USBEndpointResetPID>:
   1bba4:	e92d4010 	push	{r4, lr}
   1bba8:	e2504000 	subs	r4, r0, #0
   1bbac:	0a000009 	beq	1bbd8 <USBEndpointResetPID+0x34>
   1bbb0:	e5d43005 	ldrb	r3, [r4, #5]
   1bbb4:	e3530001 	cmp	r3, #1
   1bbb8:	0a000003 	beq	1bbcc <USBEndpointResetPID+0x28>
   1bbbc:	e3a020e4 	mov	r2, #228	; 0xe4
   1bbc0:	e59f1024 	ldr	r1, [pc, #36]	; 1bbec <USBEndpointResetPID+0x48>
   1bbc4:	e59f0024 	ldr	r0, [pc, #36]	; 1bbf0 <USBEndpointResetPID+0x4c>
   1bbc8:	eb002cef 	bl	26f8c <uspi_assertion_failed>
   1bbcc:	e3a03001 	mov	r3, #1
   1bbd0:	e5c43014 	strb	r3, [r4, #20]
   1bbd4:	e8bd8010 	pop	{r4, pc}
   1bbd8:	e3a020e3 	mov	r2, #227	; 0xe3
   1bbdc:	e59f1008 	ldr	r1, [pc, #8]	; 1bbec <USBEndpointResetPID+0x48>
   1bbe0:	e59f000c 	ldr	r0, [pc, #12]	; 1bbf4 <USBEndpointResetPID+0x50>
   1bbe4:	eb002ce8 	bl	26f8c <uspi_assertion_failed>
   1bbe8:	eafffff0 	b	1bbb0 <USBEndpointResetPID+0xc>
   1bbec:	0002a608 	andeq	sl, r2, r8, lsl #12
   1bbf0:	0002a778 	andeq	sl, r2, r8, ror r7
   1bbf4:	00029a68 	andeq	r9, r2, r8, ror #20

0001bbf8 <USBRequest>:
   1bbf8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1bbfc:	e2504000 	subs	r4, r0, #0
   1bc00:	e24dd00c 	sub	sp, sp, #12
   1bc04:	e1a06001 	mov	r6, r1
   1bc08:	e1a05002 	mov	r5, r2
   1bc0c:	e59d7020 	ldr	r7, [sp, #32]
   1bc10:	0a000017 	beq	1bc74 <USBRequest+0x7c>
   1bc14:	e3a02000 	mov	r2, #0
   1bc18:	e1560002 	cmp	r6, r2
   1bc1c:	e1c460f0 	strd	r6, [r4]
   1bc20:	e5845008 	str	r5, [r4, #8]
   1bc24:	e584300c 	str	r3, [r4, #12]
   1bc28:	e5842010 	str	r2, [r4, #16]
   1bc2c:	e5842014 	str	r2, [r4, #20]
   1bc30:	e5842018 	str	r2, [r4, #24]
   1bc34:	e584201c 	str	r2, [r4, #28]
   1bc38:	e5842020 	str	r2, [r4, #32]
   1bc3c:	0a000013 	beq	1bc90 <USBRequest+0x98>
   1bc40:	e3550000 	cmp	r5, #0
   1bc44:	0a000001 	beq	1bc50 <USBRequest+0x58>
   1bc48:	e28dd00c 	add	sp, sp, #12
   1bc4c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1bc50:	e594300c 	ldr	r3, [r4, #12]
   1bc54:	e3530000 	cmp	r3, #0
   1bc58:	0afffffa 	beq	1bc48 <USBRequest+0x50>
   1bc5c:	e3a02026 	mov	r2, #38	; 0x26
   1bc60:	e59f1040 	ldr	r1, [pc, #64]	; 1bca8 <USBRequest+0xb0>
   1bc64:	e59f0040 	ldr	r0, [pc, #64]	; 1bcac <USBRequest+0xb4>
   1bc68:	e28dd00c 	add	sp, sp, #12
   1bc6c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
   1bc70:	ea002cc5 	b	26f8c <uspi_assertion_failed>
   1bc74:	e3a02019 	mov	r2, #25
   1bc78:	e59f1028 	ldr	r1, [pc, #40]	; 1bca8 <USBRequest+0xb0>
   1bc7c:	e59f002c 	ldr	r0, [pc, #44]	; 1bcb0 <USBRequest+0xb8>
   1bc80:	e58d3004 	str	r3, [sp, #4]
   1bc84:	eb002cc0 	bl	26f8c <uspi_assertion_failed>
   1bc88:	e59d3004 	ldr	r3, [sp, #4]
   1bc8c:	eaffffe0 	b	1bc14 <USBRequest+0x1c>
   1bc90:	e3a02025 	mov	r2, #37	; 0x25
   1bc94:	e59f100c 	ldr	r1, [pc, #12]	; 1bca8 <USBRequest+0xb0>
   1bc98:	e59f0014 	ldr	r0, [pc, #20]	; 1bcb4 <USBRequest+0xbc>
   1bc9c:	eb002cba 	bl	26f8c <uspi_assertion_failed>
   1bca0:	e5945008 	ldr	r5, [r4, #8]
   1bca4:	eaffffe5 	b	1bc40 <USBRequest+0x48>
   1bca8:	0002a79c 	muleq	r2, ip, r7
   1bcac:	0002a7ac 	andeq	sl, r2, ip, lsr #15
   1bcb0:	00029a68 	andeq	r9, r2, r8, ror #20
   1bcb4:	0002a0dc 	ldrdeq	sl, [r2], -ip

0001bcb8 <_USBRequest>:
   1bcb8:	e92d4010 	push	{r4, lr}
   1bcbc:	e2504000 	subs	r4, r0, #0
   1bcc0:	0a000005 	beq	1bcdc <_USBRequest+0x24>
   1bcc4:	e3a03000 	mov	r3, #0
   1bcc8:	e5843000 	str	r3, [r4]
   1bccc:	e5843004 	str	r3, [r4, #4]
   1bcd0:	e5843008 	str	r3, [r4, #8]
   1bcd4:	e5843018 	str	r3, [r4, #24]
   1bcd8:	e8bd8010 	pop	{r4, pc}
   1bcdc:	e3a0202b 	mov	r2, #43	; 0x2b
   1bce0:	e59f1008 	ldr	r1, [pc, #8]	; 1bcf0 <_USBRequest+0x38>
   1bce4:	e59f0008 	ldr	r0, [pc, #8]	; 1bcf4 <_USBRequest+0x3c>
   1bce8:	eb002ca7 	bl	26f8c <uspi_assertion_failed>
   1bcec:	eafffff4 	b	1bcc4 <_USBRequest+0xc>
   1bcf0:	0002a79c 	muleq	r2, ip, r7
   1bcf4:	00029a68 	andeq	r9, r2, r8, ror #20

0001bcf8 <USBRequestGetEndpoint>:
   1bcf8:	e92d4010 	push	{r4, lr}
   1bcfc:	e2504000 	subs	r4, r0, #0
   1bd00:	0a000008 	beq	1bd28 <USBRequestGetEndpoint+0x30>
   1bd04:	e5940000 	ldr	r0, [r4]
   1bd08:	e3500000 	cmp	r0, #0
   1bd0c:	18bd8010 	popne	{r4, pc}
   1bd10:	e3a02035 	mov	r2, #53	; 0x35
   1bd14:	e59f1020 	ldr	r1, [pc, #32]	; 1bd3c <USBRequestGetEndpoint+0x44>
   1bd18:	e59f0020 	ldr	r0, [pc, #32]	; 1bd40 <USBRequestGetEndpoint+0x48>
   1bd1c:	eb002c9a 	bl	26f8c <uspi_assertion_failed>
   1bd20:	e5940000 	ldr	r0, [r4]
   1bd24:	e8bd8010 	pop	{r4, pc}
   1bd28:	e3a02034 	mov	r2, #52	; 0x34
   1bd2c:	e59f1008 	ldr	r1, [pc, #8]	; 1bd3c <USBRequestGetEndpoint+0x44>
   1bd30:	e59f000c 	ldr	r0, [pc, #12]	; 1bd44 <USBRequestGetEndpoint+0x4c>
   1bd34:	eb002c94 	bl	26f8c <uspi_assertion_failed>
   1bd38:	eafffff1 	b	1bd04 <USBRequestGetEndpoint+0xc>
   1bd3c:	0002a79c 	muleq	r2, ip, r7
   1bd40:	0002a0dc 	ldrdeq	sl, [r2], -ip
   1bd44:	00029a68 	andeq	r9, r2, r8, ror #20

0001bd48 <USBRequestSetStatus>:
   1bd48:	e92d4070 	push	{r4, r5, r6, lr}
   1bd4c:	e2504000 	subs	r4, r0, #0
   1bd50:	e1a05001 	mov	r5, r1
   1bd54:	0a000001 	beq	1bd60 <USBRequestSetStatus+0x18>
   1bd58:	e5845010 	str	r5, [r4, #16]
   1bd5c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bd60:	e3a0203b 	mov	r2, #59	; 0x3b
   1bd64:	e59f100c 	ldr	r1, [pc, #12]	; 1bd78 <USBRequestSetStatus+0x30>
   1bd68:	e59f000c 	ldr	r0, [pc, #12]	; 1bd7c <USBRequestSetStatus+0x34>
   1bd6c:	eb002c86 	bl	26f8c <uspi_assertion_failed>
   1bd70:	e5845010 	str	r5, [r4, #16]
   1bd74:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bd78:	0002a79c 	muleq	r2, ip, r7
   1bd7c:	00029a68 	andeq	r9, r2, r8, ror #20

0001bd80 <USBRequestSetResultLen>:
   1bd80:	e92d4070 	push	{r4, r5, r6, lr}
   1bd84:	e2504000 	subs	r4, r0, #0
   1bd88:	e1a05001 	mov	r5, r1
   1bd8c:	0a000001 	beq	1bd98 <USBRequestSetResultLen+0x18>
   1bd90:	e5845014 	str	r5, [r4, #20]
   1bd94:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bd98:	e3a02041 	mov	r2, #65	; 0x41
   1bd9c:	e59f100c 	ldr	r1, [pc, #12]	; 1bdb0 <USBRequestSetResultLen+0x30>
   1bda0:	e59f000c 	ldr	r0, [pc, #12]	; 1bdb4 <USBRequestSetResultLen+0x34>
   1bda4:	eb002c78 	bl	26f8c <uspi_assertion_failed>
   1bda8:	e5845014 	str	r5, [r4, #20]
   1bdac:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bdb0:	0002a79c 	muleq	r2, ip, r7
   1bdb4:	00029a68 	andeq	r9, r2, r8, ror #20

0001bdb8 <USBRequestGetStatus>:
   1bdb8:	e92d4010 	push	{r4, lr}
   1bdbc:	e2504000 	subs	r4, r0, #0
   1bdc0:	0a000001 	beq	1bdcc <USBRequestGetStatus+0x14>
   1bdc4:	e5940010 	ldr	r0, [r4, #16]
   1bdc8:	e8bd8010 	pop	{r4, pc}
   1bdcc:	e3a02047 	mov	r2, #71	; 0x47
   1bdd0:	e59f100c 	ldr	r1, [pc, #12]	; 1bde4 <USBRequestGetStatus+0x2c>
   1bdd4:	e59f000c 	ldr	r0, [pc, #12]	; 1bde8 <USBRequestGetStatus+0x30>
   1bdd8:	eb002c6b 	bl	26f8c <uspi_assertion_failed>
   1bddc:	e5940010 	ldr	r0, [r4, #16]
   1bde0:	e8bd8010 	pop	{r4, pc}
   1bde4:	0002a79c 	muleq	r2, ip, r7
   1bde8:	00029a68 	andeq	r9, r2, r8, ror #20

0001bdec <USBRequestGetResultLength>:
   1bdec:	e92d4010 	push	{r4, lr}
   1bdf0:	e2504000 	subs	r4, r0, #0
   1bdf4:	0a00000a 	beq	1be24 <USBRequestGetResultLength+0x38>
   1bdf8:	e5943010 	ldr	r3, [r4, #16]
   1bdfc:	e3530000 	cmp	r3, #0
   1be00:	0a000001 	beq	1be0c <USBRequestGetResultLength+0x20>
   1be04:	e5940014 	ldr	r0, [r4, #20]
   1be08:	e8bd8010 	pop	{r4, pc}
   1be0c:	e3a0204e 	mov	r2, #78	; 0x4e
   1be10:	e59f1020 	ldr	r1, [pc, #32]	; 1be38 <USBRequestGetResultLength+0x4c>
   1be14:	e59f0020 	ldr	r0, [pc, #32]	; 1be3c <USBRequestGetResultLength+0x50>
   1be18:	eb002c5b 	bl	26f8c <uspi_assertion_failed>
   1be1c:	e5940014 	ldr	r0, [r4, #20]
   1be20:	e8bd8010 	pop	{r4, pc}
   1be24:	e3a0204d 	mov	r2, #77	; 0x4d
   1be28:	e59f1008 	ldr	r1, [pc, #8]	; 1be38 <USBRequestGetResultLength+0x4c>
   1be2c:	e59f000c 	ldr	r0, [pc, #12]	; 1be40 <USBRequestGetResultLength+0x54>
   1be30:	eb002c55 	bl	26f8c <uspi_assertion_failed>
   1be34:	eaffffef 	b	1bdf8 <USBRequestGetResultLength+0xc>
   1be38:	0002a79c 	muleq	r2, ip, r7
   1be3c:	0002a7dc 	ldrdeq	sl, [r2], -ip
   1be40:	00029a68 	andeq	r9, r2, r8, ror #20

0001be44 <USBRequestGetSetupData>:
   1be44:	e92d4010 	push	{r4, lr}
   1be48:	e2504000 	subs	r4, r0, #0
   1be4c:	0a000011 	beq	1be98 <USBRequestGetSetupData+0x54>
   1be50:	e5940000 	ldr	r0, [r4]
   1be54:	ebfffeb5 	bl	1b930 <USBEndpointGetType>
   1be58:	e3500000 	cmp	r0, #0
   1be5c:	1a000008 	bne	1be84 <USBRequestGetSetupData+0x40>
   1be60:	e5940004 	ldr	r0, [r4, #4]
   1be64:	e3500000 	cmp	r0, #0
   1be68:	18bd8010 	popne	{r4, pc}
   1be6c:	e3a02057 	mov	r2, #87	; 0x57
   1be70:	e59f1034 	ldr	r1, [pc, #52]	; 1beac <USBRequestGetSetupData+0x68>
   1be74:	e59f0034 	ldr	r0, [pc, #52]	; 1beb0 <USBRequestGetSetupData+0x6c>
   1be78:	eb002c43 	bl	26f8c <uspi_assertion_failed>
   1be7c:	e5940004 	ldr	r0, [r4, #4]
   1be80:	e8bd8010 	pop	{r4, pc}
   1be84:	e3a02056 	mov	r2, #86	; 0x56
   1be88:	e59f101c 	ldr	r1, [pc, #28]	; 1beac <USBRequestGetSetupData+0x68>
   1be8c:	e59f0020 	ldr	r0, [pc, #32]	; 1beb4 <USBRequestGetSetupData+0x70>
   1be90:	eb002c3d 	bl	26f8c <uspi_assertion_failed>
   1be94:	eafffff1 	b	1be60 <USBRequestGetSetupData+0x1c>
   1be98:	e3a02055 	mov	r2, #85	; 0x55
   1be9c:	e59f1008 	ldr	r1, [pc, #8]	; 1beac <USBRequestGetSetupData+0x68>
   1bea0:	e59f0010 	ldr	r0, [pc, #16]	; 1beb8 <USBRequestGetSetupData+0x74>
   1bea4:	eb002c38 	bl	26f8c <uspi_assertion_failed>
   1bea8:	eaffffe8 	b	1be50 <USBRequestGetSetupData+0xc>
   1beac:	0002a79c 	muleq	r2, ip, r7
   1beb0:	0002a830 	andeq	sl, r2, r0, lsr r8
   1beb4:	0002a7f0 	strdeq	sl, [r2], -r0
   1beb8:	00029a68 	andeq	r9, r2, r8, ror #20

0001bebc <USBRequestGetBuffer>:
   1bebc:	e92d4010 	push	{r4, lr}
   1bec0:	e2504000 	subs	r4, r0, #0
   1bec4:	0a00000b 	beq	1bef8 <USBRequestGetBuffer+0x3c>
   1bec8:	e5940008 	ldr	r0, [r4, #8]
   1becc:	e3500000 	cmp	r0, #0
   1bed0:	18bd8010 	popne	{r4, pc}
   1bed4:	e594300c 	ldr	r3, [r4, #12]
   1bed8:	e3530000 	cmp	r3, #0
   1bedc:	08bd8010 	popeq	{r4, pc}
   1bee0:	e3a02060 	mov	r2, #96	; 0x60
   1bee4:	e59f1020 	ldr	r1, [pc, #32]	; 1bf0c <USBRequestGetBuffer+0x50>
   1bee8:	e59f0020 	ldr	r0, [pc, #32]	; 1bf10 <USBRequestGetBuffer+0x54>
   1beec:	eb002c26 	bl	26f8c <uspi_assertion_failed>
   1bef0:	e5940008 	ldr	r0, [r4, #8]
   1bef4:	e8bd8010 	pop	{r4, pc}
   1bef8:	e3a0205e 	mov	r2, #94	; 0x5e
   1befc:	e59f1008 	ldr	r1, [pc, #8]	; 1bf0c <USBRequestGetBuffer+0x50>
   1bf00:	e59f000c 	ldr	r0, [pc, #12]	; 1bf14 <USBRequestGetBuffer+0x58>
   1bf04:	eb002c20 	bl	26f8c <uspi_assertion_failed>
   1bf08:	eaffffee 	b	1bec8 <USBRequestGetBuffer+0xc>
   1bf0c:	0002a79c 	muleq	r2, ip, r7
   1bf10:	0002a7ac 	andeq	sl, r2, ip, lsr #15
   1bf14:	00029a68 	andeq	r9, r2, r8, ror #20

0001bf18 <USBRequestGetBufLen>:
   1bf18:	e92d4010 	push	{r4, lr}
   1bf1c:	e2504000 	subs	r4, r0, #0
   1bf20:	0a000001 	beq	1bf2c <USBRequestGetBufLen+0x14>
   1bf24:	e594000c 	ldr	r0, [r4, #12]
   1bf28:	e8bd8010 	pop	{r4, pc}
   1bf2c:	e3a02067 	mov	r2, #103	; 0x67
   1bf30:	e59f100c 	ldr	r1, [pc, #12]	; 1bf44 <USBRequestGetBufLen+0x2c>
   1bf34:	e59f000c 	ldr	r0, [pc, #12]	; 1bf48 <USBRequestGetBufLen+0x30>
   1bf38:	eb002c13 	bl	26f8c <uspi_assertion_failed>
   1bf3c:	e594000c 	ldr	r0, [r4, #12]
   1bf40:	e8bd8010 	pop	{r4, pc}
   1bf44:	0002a79c 	muleq	r2, ip, r7
   1bf48:	00029a68 	andeq	r9, r2, r8, ror #20

0001bf4c <USBRequestSetCompletionRoutine>:
   1bf4c:	e92d4070 	push	{r4, r5, r6, lr}
   1bf50:	e2504000 	subs	r4, r0, #0
   1bf54:	e24dd008 	sub	sp, sp, #8
   1bf58:	e1a05001 	mov	r5, r1
   1bf5c:	e1a06002 	mov	r6, r2
   1bf60:	0a000006 	beq	1bf80 <USBRequestSetCompletionRoutine+0x34>
   1bf64:	e3550000 	cmp	r5, #0
   1bf68:	e5845018 	str	r5, [r4, #24]
   1bf6c:	e584601c 	str	r6, [r4, #28]
   1bf70:	e5843020 	str	r3, [r4, #32]
   1bf74:	0a000008 	beq	1bf9c <USBRequestSetCompletionRoutine+0x50>
   1bf78:	e28dd008 	add	sp, sp, #8
   1bf7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1bf80:	e3a0206d 	mov	r2, #109	; 0x6d
   1bf84:	e59f1028 	ldr	r1, [pc, #40]	; 1bfb4 <USBRequestSetCompletionRoutine+0x68>
   1bf88:	e59f0028 	ldr	r0, [pc, #40]	; 1bfb8 <USBRequestSetCompletionRoutine+0x6c>
   1bf8c:	e58d3004 	str	r3, [sp, #4]
   1bf90:	eb002bfd 	bl	26f8c <uspi_assertion_failed>
   1bf94:	e59d3004 	ldr	r3, [sp, #4]
   1bf98:	eafffff1 	b	1bf64 <USBRequestSetCompletionRoutine+0x18>
   1bf9c:	e3a02072 	mov	r2, #114	; 0x72
   1bfa0:	e59f100c 	ldr	r1, [pc, #12]	; 1bfb4 <USBRequestSetCompletionRoutine+0x68>
   1bfa4:	e59f0010 	ldr	r0, [pc, #16]	; 1bfbc <USBRequestSetCompletionRoutine+0x70>
   1bfa8:	e28dd008 	add	sp, sp, #8
   1bfac:	e8bd4070 	pop	{r4, r5, r6, lr}
   1bfb0:	ea002bf5 	b	26f8c <uspi_assertion_failed>
   1bfb4:	0002a79c 	muleq	r2, ip, r7
   1bfb8:	00029a68 	andeq	r9, r2, r8, ror #20
   1bfbc:	0002a84c 	andeq	sl, r2, ip, asr #16

0001bfc0 <USBRequestCallCompletionRoutine>:
   1bfc0:	e92d4010 	push	{r4, lr}
   1bfc4:	e2504000 	subs	r4, r0, #0
   1bfc8:	0a000007 	beq	1bfec <USBRequestCallCompletionRoutine+0x2c>
   1bfcc:	e5943018 	ldr	r3, [r4, #24]
   1bfd0:	e3530000 	cmp	r3, #0
   1bfd4:	0a00000b 	beq	1c008 <USBRequestCallCompletionRoutine+0x48>
   1bfd8:	e5942020 	ldr	r2, [r4, #32]
   1bfdc:	e594101c 	ldr	r1, [r4, #28]
   1bfe0:	e1a00004 	mov	r0, r4
   1bfe4:	e8bd4010 	pop	{r4, lr}
   1bfe8:	e12fff13 	bx	r3
   1bfec:	e3a02077 	mov	r2, #119	; 0x77
   1bff0:	e59f1028 	ldr	r1, [pc, #40]	; 1c020 <USBRequestCallCompletionRoutine+0x60>
   1bff4:	e59f0028 	ldr	r0, [pc, #40]	; 1c024 <USBRequestCallCompletionRoutine+0x64>
   1bff8:	eb002be3 	bl	26f8c <uspi_assertion_failed>
   1bffc:	e5943018 	ldr	r3, [r4, #24]
   1c000:	e3530000 	cmp	r3, #0
   1c004:	1afffff3 	bne	1bfd8 <USBRequestCallCompletionRoutine+0x18>
   1c008:	e3a02078 	mov	r2, #120	; 0x78
   1c00c:	e59f100c 	ldr	r1, [pc, #12]	; 1c020 <USBRequestCallCompletionRoutine+0x60>
   1c010:	e59f0010 	ldr	r0, [pc, #16]	; 1c028 <USBRequestCallCompletionRoutine+0x68>
   1c014:	eb002bdc 	bl	26f8c <uspi_assertion_failed>
   1c018:	e5943018 	ldr	r3, [r4, #24]
   1c01c:	eaffffed 	b	1bfd8 <USBRequestCallCompletionRoutine+0x18>
   1c020:	0002a79c 	muleq	r2, ip, r7
   1c024:	00029a68 	andeq	r9, r2, r8, ror #20
   1c028:	0002a84c 	andeq	sl, r2, ip, asr #16

0001c02c <USBStandardHub>:
   1c02c:	e92d4070 	push	{r4, r5, r6, lr}
   1c030:	e2504000 	subs	r4, r0, #0
   1c034:	e1a05001 	mov	r5, r1
   1c038:	0a00000f 	beq	1c07c <USBStandardHub+0x50>
   1c03c:	e1a01005 	mov	r1, r5
   1c040:	e1a00004 	mov	r0, r4
   1c044:	eb00048a 	bl	1d274 <USBFunctionCopy>
   1c048:	e3a03000 	mov	r3, #0
   1c04c:	e59f103c 	ldr	r1, [pc, #60]	; 1c090 <USBStandardHub+0x64>
   1c050:	e1a02003 	mov	r2, r3
   1c054:	e5843010 	str	r3, [r4, #16]
   1c058:	e5843014 	str	r3, [r4, #20]
   1c05c:	e5841000 	str	r1, [r4]
   1c060:	e2843018 	add	r3, r4, #24
   1c064:	e2840038 	add	r0, r4, #56	; 0x38
   1c068:	e4832004 	str	r2, [r3], #4
   1c06c:	e1530000 	cmp	r3, r0
   1c070:	e583201c 	str	r2, [r3, #28]
   1c074:	1afffffb 	bne	1c068 <USBStandardHub+0x3c>
   1c078:	e8bd8070 	pop	{r4, r5, r6, pc}
   1c07c:	e3a02020 	mov	r2, #32
   1c080:	e59f100c 	ldr	r1, [pc, #12]	; 1c094 <USBStandardHub+0x68>
   1c084:	e59f000c 	ldr	r0, [pc, #12]	; 1c098 <USBStandardHub+0x6c>
   1c088:	eb002bbf 	bl	26f8c <uspi_assertion_failed>
   1c08c:	eaffffea 	b	1c03c <USBStandardHub+0x10>
   1c090:	0001c86c 	andeq	ip, r1, ip, ror #16
   1c094:	0002a870 	andeq	sl, r2, r0, ror r8
   1c098:	00029a68 	andeq	r9, r2, r8, ror #20

0001c09c <_USBStandardHub>:
   1c09c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1c0a0:	e2506000 	subs	r6, r0, #0
   1c0a4:	0a00001f 	beq	1c128 <_USBStandardHub+0x8c>
   1c0a8:	e5963014 	ldr	r3, [r6, #20]
   1c0ac:	e3530000 	cmp	r3, #0
   1c0b0:	0a000012 	beq	1c100 <_USBStandardHub+0x64>
   1c0b4:	e3a05000 	mov	r5, #0
   1c0b8:	e1a07005 	mov	r7, r5
   1c0bc:	e2864034 	add	r4, r6, #52	; 0x34
   1c0c0:	e5b40004 	ldr	r0, [r4, #4]!
   1c0c4:	e2855001 	add	r5, r5, #1
   1c0c8:	e3500000 	cmp	r0, #0
   1c0cc:	0a000001 	beq	1c0d8 <_USBStandardHub+0x3c>
   1c0d0:	eb0023fc 	bl	250c8 <free>
   1c0d4:	e5847000 	str	r7, [r4]
   1c0d8:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   1c0dc:	e3500000 	cmp	r0, #0
   1c0e0:	0a000003 	beq	1c0f4 <_USBStandardHub+0x58>
   1c0e4:	ebfff843 	bl	1a1f8 <_USBDevice>
   1c0e8:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   1c0ec:	eb0023f5 	bl	250c8 <free>
   1c0f0:	e5047020 	str	r7, [r4, #-32]	; 0xffffffe0
   1c0f4:	e5963014 	ldr	r3, [r6, #20]
   1c0f8:	e1530005 	cmp	r3, r5
   1c0fc:	8affffef 	bhi	1c0c0 <_USBStandardHub+0x24>
   1c100:	e3a04000 	mov	r4, #0
   1c104:	e5960010 	ldr	r0, [r6, #16]
   1c108:	e5864014 	str	r4, [r6, #20]
   1c10c:	e1500004 	cmp	r0, r4
   1c110:	0a000001 	beq	1c11c <_USBStandardHub+0x80>
   1c114:	eb0023eb 	bl	250c8 <free>
   1c118:	e5864010 	str	r4, [r6, #16]
   1c11c:	e1a00006 	mov	r0, r6
   1c120:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1c124:	ea000494 	b	1d37c <_USBFunction>
   1c128:	e3a02031 	mov	r2, #49	; 0x31
   1c12c:	e59f1008 	ldr	r1, [pc, #8]	; 1c13c <_USBStandardHub+0xa0>
   1c130:	e59f0008 	ldr	r0, [pc, #8]	; 1c140 <_USBStandardHub+0xa4>
   1c134:	eb002b94 	bl	26f8c <uspi_assertion_failed>
   1c138:	eaffffda 	b	1c0a8 <_USBStandardHub+0xc>
   1c13c:	0002a870 	andeq	sl, r2, r0, ror r8
   1c140:	00029a68 	andeq	r9, r2, r8, ror #20

0001c144 <USBStandardHubEnumeratePorts>:
   1c144:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c148:	e2506000 	subs	r6, r0, #0
   1c14c:	e24dd01c 	sub	sp, sp, #28
   1c150:	0a000176 	beq	1c730 <USBStandardHubEnumeratePorts+0x5ec>
   1c154:	e1a00006 	mov	r0, r6
   1c158:	eb000512 	bl	1d5a8 <USBFunctionGetHost>
   1c15c:	e250b000 	subs	fp, r0, #0
   1c160:	0a00017a 	beq	1c750 <USBStandardHubEnumeratePorts+0x60c>
   1c164:	e1a00006 	mov	r0, r6
   1c168:	eb0004f5 	bl	1d544 <USBFunctionGetEndpoint0>
   1c16c:	e250a000 	subs	sl, r0, #0
   1c170:	0a00017e 	beq	1c770 <USBStandardHubEnumeratePorts+0x62c>
   1c174:	e5963014 	ldr	r3, [r6, #20]
   1c178:	e3530000 	cmp	r3, #0
   1c17c:	0a00001d 	beq	1c1f8 <USBStandardHubEnumeratePorts+0xb4>
   1c180:	e3a04001 	mov	r4, #1
   1c184:	e3a05000 	mov	r5, #0
   1c188:	e3a07008 	mov	r7, #8
   1c18c:	ea000004 	b	1c1a4 <USBStandardHubEnumeratePorts+0x60>
   1c190:	e5963014 	ldr	r3, [r6, #20]
   1c194:	e2842001 	add	r2, r4, #1
   1c198:	e1530004 	cmp	r3, r4
   1c19c:	9a00001c 	bls	1c214 <USBStandardHubEnumeratePorts+0xd0>
   1c1a0:	e1a04002 	mov	r4, r2
   1c1a4:	e6ff3074 	uxth	r3, r4
   1c1a8:	e58d3004 	str	r3, [sp, #4]
   1c1ac:	e58d500c 	str	r5, [sp, #12]
   1c1b0:	e58d5008 	str	r5, [sp, #8]
   1c1b4:	e58d7000 	str	r7, [sp]
   1c1b8:	e3a03003 	mov	r3, #3
   1c1bc:	e3a02023 	mov	r2, #35	; 0x23
   1c1c0:	e1a0100a 	mov	r1, sl
   1c1c4:	e1a0000b 	mov	r0, fp
   1c1c8:	ebffed5e 	bl	17748 <DWHCIDeviceControlMessage>
   1c1cc:	e3500000 	cmp	r0, #0
   1c1d0:	aaffffee 	bge	1c190 <USBStandardHubEnumeratePorts+0x4c>
   1c1d4:	e1a03004 	mov	r3, r4
   1c1d8:	e59f2624 	ldr	r2, [pc, #1572]	; 1c804 <USBStandardHubEnumeratePorts+0x6c0>
   1c1dc:	e3a01001 	mov	r1, #1
   1c1e0:	e59f0620 	ldr	r0, [pc, #1568]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c1e4:	eb002b56 	bl	26f44 <LogWrite>
   1c1e8:	e3a04000 	mov	r4, #0
   1c1ec:	e1a00004 	mov	r0, r4
   1c1f0:	e28dd01c 	add	sp, sp, #28
   1c1f4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1f8:	e3a020a4 	mov	r2, #164	; 0xa4
   1c1fc:	e59f1608 	ldr	r1, [pc, #1544]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c200:	e59f0608 	ldr	r0, [pc, #1544]	; 1c810 <USBStandardHubEnumeratePorts+0x6cc>
   1c204:	eb002b60 	bl	26f8c <uspi_assertion_failed>
   1c208:	e5963014 	ldr	r3, [r6, #20]
   1c20c:	e3530000 	cmp	r3, #0
   1c210:	1affffda 	bne	1c180 <USBStandardHubEnumeratePorts+0x3c>
   1c214:	e59f05f8 	ldr	r0, [pc, #1528]	; 1c814 <USBStandardHubEnumeratePorts+0x6d0>
   1c218:	eb002ae2 	bl	26da8 <MsDelay>
   1c21c:	e5963014 	ldr	r3, [r6, #20]
   1c220:	e3530000 	cmp	r3, #0
   1c224:	12864034 	addne	r4, r6, #52	; 0x34
   1c228:	13a05001 	movne	r5, #1
   1c22c:	1a000090 	bne	1c474 <USBStandardHubEnumeratePorts+0x330>
   1c230:	e3a00004 	mov	r0, #4
   1c234:	eb00233d 	bl	24f30 <malloc>
   1c238:	e2507000 	subs	r7, r0, #0
   1c23c:	0a000169 	beq	1c7e8 <USBStandardHubEnumeratePorts+0x6a4>
   1c240:	e3a04000 	mov	r4, #0
   1c244:	e3a03004 	mov	r3, #4
   1c248:	e58d7008 	str	r7, [sp, #8]
   1c24c:	e58d300c 	str	r3, [sp, #12]
   1c250:	e58d4004 	str	r4, [sp, #4]
   1c254:	e58d4000 	str	r4, [sp]
   1c258:	e1a03004 	mov	r3, r4
   1c25c:	e3a020a0 	mov	r2, #160	; 0xa0
   1c260:	e1a0100a 	mov	r1, sl
   1c264:	e1a0000b 	mov	r0, fp
   1c268:	ebffed36 	bl	17748 <DWHCIDeviceControlMessage>
   1c26c:	e3500004 	cmp	r0, #4
   1c270:	e1a08000 	mov	r8, r0
   1c274:	1a000142 	bne	1c784 <USBStandardHubEnumeratePorts+0x640>
   1c278:	e5d73000 	ldrb	r3, [r7]
   1c27c:	e3130002 	tst	r3, #2
   1c280:	0a0000f8 	beq	1c668 <USBStandardHubEnumeratePorts+0x524>
   1c284:	e5963014 	ldr	r3, [r6, #20]
   1c288:	e3530000 	cmp	r3, #0
   1c28c:	13a05001 	movne	r5, #1
   1c290:	13a08008 	movne	r8, #8
   1c294:	1a000001 	bne	1c2a0 <USBStandardHubEnumeratePorts+0x15c>
   1c298:	ea00000e 	b	1c2d8 <USBStandardHubEnumeratePorts+0x194>
   1c29c:	e1a05002 	mov	r5, r2
   1c2a0:	e6ff3075 	uxth	r3, r5
   1c2a4:	e58d3004 	str	r3, [sp, #4]
   1c2a8:	e3a02023 	mov	r2, #35	; 0x23
   1c2ac:	e3a03001 	mov	r3, #1
   1c2b0:	e58d400c 	str	r4, [sp, #12]
   1c2b4:	e58d4008 	str	r4, [sp, #8]
   1c2b8:	e58d8000 	str	r8, [sp]
   1c2bc:	e1a0100a 	mov	r1, sl
   1c2c0:	e1a0000b 	mov	r0, fp
   1c2c4:	ebffed1f 	bl	17748 <DWHCIDeviceControlMessage>
   1c2c8:	e5963014 	ldr	r3, [r6, #20]
   1c2cc:	e2852001 	add	r2, r5, #1
   1c2d0:	e1530005 	cmp	r3, r5
   1c2d4:	8afffff0 	bhi	1c29c <USBStandardHubEnumeratePorts+0x158>
   1c2d8:	e3a04000 	mov	r4, #0
   1c2dc:	e59f2534 	ldr	r2, [pc, #1332]	; 1c818 <USBStandardHubEnumeratePorts+0x6d4>
   1c2e0:	e3a01001 	mov	r1, #1
   1c2e4:	e59f051c 	ldr	r0, [pc, #1308]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c2e8:	eb002b15 	bl	26f44 <LogWrite>
   1c2ec:	e1a00007 	mov	r0, r7
   1c2f0:	eb002374 	bl	250c8 <free>
   1c2f4:	e1a00004 	mov	r0, r4
   1c2f8:	e28dd01c 	add	sp, sp, #28
   1c2fc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c300:	e5942000 	ldr	r2, [r4]
   1c304:	e5d23000 	ldrb	r3, [r2]
   1c308:	e5d22001 	ldrb	r2, [r2, #1]
   1c30c:	e1833402 	orr	r3, r3, r2, lsl #8
   1c310:	e3130c01 	tst	r3, #256	; 0x100
   1c314:	0a000098 	beq	1c57c <USBStandardHubEnumeratePorts+0x438>
   1c318:	e3130001 	tst	r3, #1
   1c31c:	0a00004f 	beq	1c460 <USBStandardHubEnumeratePorts+0x31c>
   1c320:	e3a09000 	mov	r9, #0
   1c324:	e3a08004 	mov	r8, #4
   1c328:	e58d7004 	str	r7, [sp, #4]
   1c32c:	e58d900c 	str	r9, [sp, #12]
   1c330:	e58d9008 	str	r9, [sp, #8]
   1c334:	e58d8000 	str	r8, [sp]
   1c338:	e3a03003 	mov	r3, #3
   1c33c:	e3a02023 	mov	r2, #35	; 0x23
   1c340:	e1a0100a 	mov	r1, sl
   1c344:	e1a0000b 	mov	r0, fp
   1c348:	ebffecfe 	bl	17748 <DWHCIDeviceControlMessage>
   1c34c:	e1500009 	cmp	r0, r9
   1c350:	ba000098 	blt	1c5b8 <USBStandardHubEnumeratePorts+0x474>
   1c354:	e3a00064 	mov	r0, #100	; 0x64
   1c358:	eb002a92 	bl	26da8 <MsDelay>
   1c35c:	e58d800c 	str	r8, [sp, #12]
   1c360:	e5942000 	ldr	r2, [r4]
   1c364:	e1a03009 	mov	r3, r9
   1c368:	e58d2008 	str	r2, [sp, #8]
   1c36c:	e58d7004 	str	r7, [sp, #4]
   1c370:	e58d9000 	str	r9, [sp]
   1c374:	e3a020a3 	mov	r2, #163	; 0xa3
   1c378:	e1a0100a 	mov	r1, sl
   1c37c:	e1a0000b 	mov	r0, fp
   1c380:	ebffecf0 	bl	17748 <DWHCIDeviceControlMessage>
   1c384:	e3500004 	cmp	r0, #4
   1c388:	1affff96 	bne	1c1e8 <USBStandardHubEnumeratePorts+0xa4>
   1c38c:	e5942000 	ldr	r2, [r4]
   1c390:	e5d23000 	ldrb	r3, [r2]
   1c394:	e5d22001 	ldrb	r2, [r2, #1]
   1c398:	e1833402 	orr	r3, r3, r2, lsl #8
   1c39c:	e3130002 	tst	r3, #2
   1c3a0:	0a000099 	beq	1c60c <USBStandardHubEnumeratePorts+0x4c8>
   1c3a4:	e2132008 	ands	r2, r3, #8
   1c3a8:	1a0000fe 	bne	1c7a8 <USBStandardHubEnumeratePorts+0x664>
   1c3ac:	e3130c02 	tst	r3, #512	; 0x200
   1c3b0:	11a09002 	movne	r9, r2
   1c3b4:	1a000002 	bne	1c3c4 <USBStandardHubEnumeratePorts+0x280>
   1c3b8:	e3130b01 	tst	r3, #1024	; 0x400
   1c3bc:	13a09002 	movne	r9, #2
   1c3c0:	03a09001 	moveq	r9, #1
   1c3c4:	e1a00006 	mov	r0, r6
   1c3c8:	eb000449 	bl	1d4f4 <USBFunctionGetDevice>
   1c3cc:	e2507000 	subs	r7, r0, #0
   1c3d0:	0a000099 	beq	1c63c <USBStandardHubEnumeratePorts+0x4f8>
   1c3d4:	e1a00007 	mov	r0, r7
   1c3d8:	ebfff888 	bl	1a600 <USBDeviceIsSplit>
   1c3dc:	e1a08000 	mov	r8, r0
   1c3e0:	e1a00007 	mov	r0, r7
   1c3e4:	ebfff892 	bl	1a634 <USBDeviceGetHubAddress>
   1c3e8:	e58d0010 	str	r0, [sp, #16]
   1c3ec:	e1a00007 	mov	r0, r7
   1c3f0:	ebfff89d 	bl	1a66c <USBDeviceGetHubPortNumber>
   1c3f4:	e3580000 	cmp	r8, #0
   1c3f8:	e58d0014 	str	r0, [sp, #20]
   1c3fc:	0a000073 	beq	1c5d0 <USBStandardHubEnumeratePorts+0x48c>
   1c400:	e5143020 	ldr	r3, [r4, #-32]	; 0xffffffe0
   1c404:	e3530000 	cmp	r3, #0
   1c408:	0a000003 	beq	1c41c <USBStandardHubEnumeratePorts+0x2d8>
   1c40c:	e59f2408 	ldr	r2, [pc, #1032]	; 1c81c <USBStandardHubEnumeratePorts+0x6d8>
   1c410:	e59f13f4 	ldr	r1, [pc, #1012]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c414:	e59f0404 	ldr	r0, [pc, #1028]	; 1c820 <USBStandardHubEnumeratePorts+0x6dc>
   1c418:	eb002adb 	bl	26f8c <uspi_assertion_failed>
   1c41c:	e3a00060 	mov	r0, #96	; 0x60
   1c420:	eb0022c2 	bl	24f30 <malloc>
   1c424:	e3500000 	cmp	r0, #0
   1c428:	e5040020 	str	r0, [r4, #-32]	; 0xffffffe0
   1c42c:	0a000087 	beq	1c650 <USBStandardHubEnumeratePorts+0x50c>
   1c430:	e59d3014 	ldr	r3, [sp, #20]
   1c434:	e1a02009 	mov	r2, r9
   1c438:	e58d3004 	str	r3, [sp, #4]
   1c43c:	e59d3010 	ldr	r3, [sp, #16]
   1c440:	e1a0100b 	mov	r1, fp
   1c444:	e58d3000 	str	r3, [sp]
   1c448:	e1a03008 	mov	r3, r8
   1c44c:	ebfff719 	bl	1a0b8 <USBDevice>
   1c450:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   1c454:	ebfff977 	bl	1aa38 <USBDeviceInitialize>
   1c458:	e2507000 	subs	r7, r0, #0
   1c45c:	0a000070 	beq	1c624 <USBStandardHubEnumeratePorts+0x4e0>
   1c460:	e5963014 	ldr	r3, [r6, #20]
   1c464:	e2852001 	add	r2, r5, #1
   1c468:	e1550003 	cmp	r5, r3
   1c46c:	2a000021 	bcs	1c4f8 <USBStandardHubEnumeratePorts+0x3b4>
   1c470:	e1a05002 	mov	r5, r2
   1c474:	e5b43004 	ldr	r3, [r4, #4]!
   1c478:	e3530000 	cmp	r3, #0
   1c47c:	0a000003 	beq	1c490 <USBStandardHubEnumeratePorts+0x34c>
   1c480:	e3a020ba 	mov	r2, #186	; 0xba
   1c484:	e59f1380 	ldr	r1, [pc, #896]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c488:	e59f0394 	ldr	r0, [pc, #916]	; 1c824 <USBStandardHubEnumeratePorts+0x6e0>
   1c48c:	eb002abe 	bl	26f8c <uspi_assertion_failed>
   1c490:	e3a00004 	mov	r0, #4
   1c494:	eb0022a5 	bl	24f30 <malloc>
   1c498:	e3500000 	cmp	r0, #0
   1c49c:	e5840000 	str	r0, [r4]
   1c4a0:	0a00003e 	beq	1c5a0 <USBStandardHubEnumeratePorts+0x45c>
   1c4a4:	e3a02004 	mov	r2, #4
   1c4a8:	e3a03000 	mov	r3, #0
   1c4ac:	e6ff7075 	uxth	r7, r5
   1c4b0:	e58d0008 	str	r0, [sp, #8]
   1c4b4:	e58d200c 	str	r2, [sp, #12]
   1c4b8:	e88d0088 	stm	sp, {r3, r7}
   1c4bc:	e3a020a3 	mov	r2, #163	; 0xa3
   1c4c0:	e1a0100a 	mov	r1, sl
   1c4c4:	e1a0000b 	mov	r0, fp
   1c4c8:	ebffec9e 	bl	17748 <DWHCIDeviceControlMessage>
   1c4cc:	e3500004 	cmp	r0, #4
   1c4d0:	0affff8a 	beq	1c300 <USBStandardHubEnumeratePorts+0x1bc>
   1c4d4:	e1a03005 	mov	r3, r5
   1c4d8:	e59f2348 	ldr	r2, [pc, #840]	; 1c828 <USBStandardHubEnumeratePorts+0x6e4>
   1c4dc:	e3a01001 	mov	r1, #1
   1c4e0:	e59f0320 	ldr	r0, [pc, #800]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c4e4:	eb002a96 	bl	26f44 <LogWrite>
   1c4e8:	e5963014 	ldr	r3, [r6, #20]
   1c4ec:	e2852001 	add	r2, r5, #1
   1c4f0:	e1550003 	cmp	r5, r3
   1c4f4:	3affffdd 	bcc	1c470 <USBStandardHubEnumeratePorts+0x32c>
   1c4f8:	e3530000 	cmp	r3, #0
   1c4fc:	0affff4b 	beq	1c230 <USBStandardHubEnumeratePorts+0xec>
   1c500:	e3a04000 	mov	r4, #0
   1c504:	e59f9320 	ldr	r9, [pc, #800]	; 1c82c <USBStandardHubEnumeratePorts+0x6e8>
   1c508:	e59f82f8 	ldr	r8, [pc, #760]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c50c:	e2865018 	add	r5, r6, #24
   1c510:	ea000006 	b	1c530 <USBStandardHubEnumeratePorts+0x3ec>
   1c514:	e1a02009 	mov	r2, r9
   1c518:	e3a01004 	mov	r1, #4
   1c51c:	e1a00008 	mov	r0, r8
   1c520:	eb002a87 	bl	26f44 <LogWrite>
   1c524:	e5963014 	ldr	r3, [r6, #20]
   1c528:	e1530004 	cmp	r3, r4
   1c52c:	9affff3f 	bls	1c230 <USBStandardHubEnumeratePorts+0xec>
   1c530:	e4950004 	ldr	r0, [r5], #4
   1c534:	e2844001 	add	r4, r4, #1
   1c538:	e3500000 	cmp	r0, #0
   1c53c:	0afffff9 	beq	1c528 <USBStandardHubEnumeratePorts+0x3e4>
   1c540:	ebfffb01 	bl	1b14c <USBDeviceConfigure>
   1c544:	e2507000 	subs	r7, r0, #0
   1c548:	e1a03004 	mov	r3, r4
   1c54c:	1afffff0 	bne	1c514 <USBStandardHubEnumeratePorts+0x3d0>
   1c550:	e59f22d8 	ldr	r2, [pc, #728]	; 1c830 <USBStandardHubEnumeratePorts+0x6ec>
   1c554:	e3a01001 	mov	r1, #1
   1c558:	e1a00008 	mov	r0, r8
   1c55c:	eb002a78 	bl	26f44 <LogWrite>
   1c560:	e5150004 	ldr	r0, [r5, #-4]
   1c564:	ebfff723 	bl	1a1f8 <_USBDevice>
   1c568:	e5150004 	ldr	r0, [r5, #-4]
   1c56c:	eb0022d5 	bl	250c8 <free>
   1c570:	e5057004 	str	r7, [r5, #-4]
   1c574:	e5963014 	ldr	r3, [r6, #20]
   1c578:	eaffffea 	b	1c528 <USBStandardHubEnumeratePorts+0x3e4>
   1c57c:	e3a020c7 	mov	r2, #199	; 0xc7
   1c580:	e59f1284 	ldr	r1, [pc, #644]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c584:	e59f02a8 	ldr	r0, [pc, #680]	; 1c834 <USBStandardHubEnumeratePorts+0x6f0>
   1c588:	eb002a7f 	bl	26f8c <uspi_assertion_failed>
   1c58c:	e5942000 	ldr	r2, [r4]
   1c590:	e5d23000 	ldrb	r3, [r2]
   1c594:	e5d22001 	ldrb	r2, [r2, #1]
   1c598:	e1833402 	orr	r3, r3, r2, lsl #8
   1c59c:	eaffff5d 	b	1c318 <USBStandardHubEnumeratePorts+0x1d4>
   1c5a0:	e59f0290 	ldr	r0, [pc, #656]	; 1c838 <USBStandardHubEnumeratePorts+0x6f4>
   1c5a4:	e3a020bc 	mov	r2, #188	; 0xbc
   1c5a8:	e59f125c 	ldr	r1, [pc, #604]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c5ac:	eb002a76 	bl	26f8c <uspi_assertion_failed>
   1c5b0:	e5940000 	ldr	r0, [r4]
   1c5b4:	eaffffba 	b	1c4a4 <USBStandardHubEnumeratePorts+0x360>
   1c5b8:	e1a03005 	mov	r3, r5
   1c5bc:	e59f2278 	ldr	r2, [pc, #632]	; 1c83c <USBStandardHubEnumeratePorts+0x6f8>
   1c5c0:	e3a01001 	mov	r1, #1
   1c5c4:	e59f023c 	ldr	r0, [pc, #572]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c5c8:	eb002a5d 	bl	26f44 <LogWrite>
   1c5cc:	eaffffa3 	b	1c460 <USBStandardHubEnumeratePorts+0x31c>
   1c5d0:	e1a00007 	mov	r0, r7
   1c5d4:	ebfff7fb 	bl	1a5c8 <USBDeviceGetSpeed>
   1c5d8:	e2593002 	subs	r3, r9, #2
   1c5dc:	13a03001 	movne	r3, #1
   1c5e0:	e3500002 	cmp	r0, #2
   1c5e4:	13a03000 	movne	r3, #0
   1c5e8:	e3530000 	cmp	r3, #0
   1c5ec:	0affff83 	beq	1c400 <USBStandardHubEnumeratePorts+0x2bc>
   1c5f0:	e1a00007 	mov	r0, r7
   1c5f4:	ebfff7e6 	bl	1a594 <USBDeviceGetAddress>
   1c5f8:	e6ef3075 	uxtb	r3, r5
   1c5fc:	e58d0010 	str	r0, [sp, #16]
   1c600:	e3a08001 	mov	r8, #1
   1c604:	e58d3014 	str	r3, [sp, #20]
   1c608:	eaffff7c 	b	1c400 <USBStandardHubEnumeratePorts+0x2bc>
   1c60c:	e1a03005 	mov	r3, r5
   1c610:	e59f2228 	ldr	r2, [pc, #552]	; 1c840 <USBStandardHubEnumeratePorts+0x6fc>
   1c614:	e3a01001 	mov	r1, #1
   1c618:	e59f01e8 	ldr	r0, [pc, #488]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c61c:	eb002a48 	bl	26f44 <LogWrite>
   1c620:	eaffff8e 	b	1c460 <USBStandardHubEnumeratePorts+0x31c>
   1c624:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   1c628:	ebfff6f2 	bl	1a1f8 <_USBDevice>
   1c62c:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   1c630:	eb0022a4 	bl	250c8 <free>
   1c634:	e5047020 	str	r7, [r4, #-32]	; 0xffffffe0
   1c638:	eaffff88 	b	1c460 <USBStandardHubEnumeratePorts+0x31c>
   1c63c:	e59f2200 	ldr	r2, [pc, #512]	; 1c844 <USBStandardHubEnumeratePorts+0x700>
   1c640:	e59f11c4 	ldr	r1, [pc, #452]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c644:	e59f01fc 	ldr	r0, [pc, #508]	; 1c848 <USBStandardHubEnumeratePorts+0x704>
   1c648:	eb002a4f 	bl	26f8c <uspi_assertion_failed>
   1c64c:	eaffff60 	b	1c3d4 <USBStandardHubEnumeratePorts+0x290>
   1c650:	e59f01f4 	ldr	r0, [pc, #500]	; 1c84c <USBStandardHubEnumeratePorts+0x708>
   1c654:	e59f21f4 	ldr	r2, [pc, #500]	; 1c850 <USBStandardHubEnumeratePorts+0x70c>
   1c658:	e59f11ac 	ldr	r1, [pc, #428]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c65c:	eb002a4a 	bl	26f8c <uspi_assertion_failed>
   1c660:	e5140020 	ldr	r0, [r4, #-32]	; 0xffffffe0
   1c664:	eaffff71 	b	1c430 <USBStandardHubEnumeratePorts+0x2ec>
   1c668:	e1a00007 	mov	r0, r7
   1c66c:	eb002295 	bl	250c8 <free>
   1c670:	e5963014 	ldr	r3, [r6, #20]
   1c674:	e3530000 	cmp	r3, #0
   1c678:	0a00005f 	beq	1c7fc <USBStandardHubEnumeratePorts+0x6b8>
   1c67c:	e3a05001 	mov	r5, #1
   1c680:	e58d8010 	str	r8, [sp, #16]
   1c684:	e1a04005 	mov	r4, r5
   1c688:	e2868034 	add	r8, r6, #52	; 0x34
   1c68c:	ea000004 	b	1c6a4 <USBStandardHubEnumeratePorts+0x560>
   1c690:	e5963014 	ldr	r3, [r6, #20]
   1c694:	e2852001 	add	r2, r5, #1
   1c698:	e1550003 	cmp	r5, r3
   1c69c:	2afffed2 	bcs	1c1ec <USBStandardHubEnumeratePorts+0xa8>
   1c6a0:	e1a05002 	mov	r5, r2
   1c6a4:	e3a07000 	mov	r7, #0
   1c6a8:	e59d3010 	ldr	r3, [sp, #16]
   1c6ac:	e6ff9075 	uxth	r9, r5
   1c6b0:	e58d300c 	str	r3, [sp, #12]
   1c6b4:	e5b83004 	ldr	r3, [r8, #4]!
   1c6b8:	e3a020a3 	mov	r2, #163	; 0xa3
   1c6bc:	e58d3008 	str	r3, [sp, #8]
   1c6c0:	e58d7000 	str	r7, [sp]
   1c6c4:	e1a03007 	mov	r3, r7
   1c6c8:	e58d9004 	str	r9, [sp, #4]
   1c6cc:	e1a0100a 	mov	r1, sl
   1c6d0:	e1a0000b 	mov	r0, fp
   1c6d4:	ebffec1b 	bl	17748 <DWHCIDeviceControlMessage>
   1c6d8:	e3500004 	cmp	r0, #4
   1c6dc:	1affffeb 	bne	1c690 <USBStandardHubEnumeratePorts+0x54c>
   1c6e0:	e5983000 	ldr	r3, [r8]
   1c6e4:	e5d33000 	ldrb	r3, [r3]
   1c6e8:	e3130008 	tst	r3, #8
   1c6ec:	0affffe7 	beq	1c690 <USBStandardHubEnumeratePorts+0x54c>
   1c6f0:	e3a03008 	mov	r3, #8
   1c6f4:	e1a0100a 	mov	r1, sl
   1c6f8:	e88d0208 	stm	sp, {r3, r9}
   1c6fc:	e58d700c 	str	r7, [sp, #12]
   1c700:	e58d7008 	str	r7, [sp, #8]
   1c704:	e3a03001 	mov	r3, #1
   1c708:	e3a02023 	mov	r2, #35	; 0x23
   1c70c:	e1a0000b 	mov	r0, fp
   1c710:	ebffec0c 	bl	17748 <DWHCIDeviceControlMessage>
   1c714:	e1a03005 	mov	r3, r5
   1c718:	e59f2134 	ldr	r2, [pc, #308]	; 1c854 <USBStandardHubEnumeratePorts+0x710>
   1c71c:	e3a01001 	mov	r1, #1
   1c720:	e59f00e0 	ldr	r0, [pc, #224]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c724:	e1a04007 	mov	r4, r7
   1c728:	eb002a05 	bl	26f44 <LogWrite>
   1c72c:	eaffffd7 	b	1c690 <USBStandardHubEnumeratePorts+0x54c>
   1c730:	e3a0209c 	mov	r2, #156	; 0x9c
   1c734:	e59f10d0 	ldr	r1, [pc, #208]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c738:	e59f0118 	ldr	r0, [pc, #280]	; 1c858 <USBStandardHubEnumeratePorts+0x714>
   1c73c:	eb002a12 	bl	26f8c <uspi_assertion_failed>
   1c740:	e1a00006 	mov	r0, r6
   1c744:	eb000397 	bl	1d5a8 <USBFunctionGetHost>
   1c748:	e250b000 	subs	fp, r0, #0
   1c74c:	1afffe84 	bne	1c164 <USBStandardHubEnumeratePorts+0x20>
   1c750:	e3a0209f 	mov	r2, #159	; 0x9f
   1c754:	e59f10b0 	ldr	r1, [pc, #176]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c758:	e59f00fc 	ldr	r0, [pc, #252]	; 1c85c <USBStandardHubEnumeratePorts+0x718>
   1c75c:	eb002a0a 	bl	26f8c <uspi_assertion_failed>
   1c760:	e1a00006 	mov	r0, r6
   1c764:	eb000376 	bl	1d544 <USBFunctionGetEndpoint0>
   1c768:	e250a000 	subs	sl, r0, #0
   1c76c:	1afffe80 	bne	1c174 <USBStandardHubEnumeratePorts+0x30>
   1c770:	e3a020a2 	mov	r2, #162	; 0xa2
   1c774:	e59f1090 	ldr	r1, [pc, #144]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c778:	e59f00e0 	ldr	r0, [pc, #224]	; 1c860 <USBStandardHubEnumeratePorts+0x71c>
   1c77c:	eb002a02 	bl	26f8c <uspi_assertion_failed>
   1c780:	eafffe7b 	b	1c174 <USBStandardHubEnumeratePorts+0x30>
   1c784:	e59f20d8 	ldr	r2, [pc, #216]	; 1c864 <USBStandardHubEnumeratePorts+0x720>
   1c788:	e3a01001 	mov	r1, #1
   1c78c:	e59f0074 	ldr	r0, [pc, #116]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c790:	eb0029eb 	bl	26f44 <LogWrite>
   1c794:	e1a00007 	mov	r0, r7
   1c798:	eb00224a 	bl	250c8 <free>
   1c79c:	e1a00004 	mov	r0, r4
   1c7a0:	e28dd01c 	add	sp, sp, #28
   1c7a4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7a8:	e3a03008 	mov	r3, #8
   1c7ac:	e1a0100a 	mov	r1, sl
   1c7b0:	e58d3000 	str	r3, [sp]
   1c7b4:	e58d900c 	str	r9, [sp, #12]
   1c7b8:	e98d0280 	stmib	sp, {r7, r9}
   1c7bc:	e1a0000b 	mov	r0, fp
   1c7c0:	e3a03001 	mov	r3, #1
   1c7c4:	e3a02023 	mov	r2, #35	; 0x23
   1c7c8:	ebffebde 	bl	17748 <DWHCIDeviceControlMessage>
   1c7cc:	e1a03005 	mov	r3, r5
   1c7d0:	e59f207c 	ldr	r2, [pc, #124]	; 1c854 <USBStandardHubEnumeratePorts+0x710>
   1c7d4:	e3a01001 	mov	r1, #1
   1c7d8:	e59f0028 	ldr	r0, [pc, #40]	; 1c808 <USBStandardHubEnumeratePorts+0x6c4>
   1c7dc:	e1a04009 	mov	r4, r9
   1c7e0:	eb0029d7 	bl	26f44 <LogWrite>
   1c7e4:	eafffe80 	b	1c1ec <USBStandardHubEnumeratePorts+0xa8>
   1c7e8:	e3a02f4f 	mov	r2, #316	; 0x13c
   1c7ec:	e59f1018 	ldr	r1, [pc, #24]	; 1c80c <USBStandardHubEnumeratePorts+0x6c8>
   1c7f0:	e59f0070 	ldr	r0, [pc, #112]	; 1c868 <USBStandardHubEnumeratePorts+0x724>
   1c7f4:	eb0029e4 	bl	26f8c <uspi_assertion_failed>
   1c7f8:	eafffe90 	b	1c240 <USBStandardHubEnumeratePorts+0xfc>
   1c7fc:	e3a04001 	mov	r4, #1
   1c800:	eafffe79 	b	1c1ec <USBStandardHubEnumeratePorts+0xa8>
   1c804:	0002a8b4 			; <UNDEFINED> instruction: 0x0002a8b4
   1c808:	0002856c 	andeq	r8, r2, ip, ror #10
   1c80c:	0002a870 	andeq	sl, r2, r0, ror r8
   1c810:	0002a8a0 	andeq	sl, r2, r0, lsr #17
   1c814:	000001fe 	strdeq	r0, [r0], -lr
   1c818:	0002aa70 	andeq	sl, r2, r0, ror sl
   1c81c:	00000115 	andeq	r0, r0, r5, lsl r1
   1c820:	0002a9c8 	andeq	sl, r2, r8, asr #19
   1c824:	0002a8cc 	andeq	sl, r2, ip, asr #17
   1c828:	0002a90c 	andeq	sl, r2, ip, lsl #18
   1c82c:	0002aa2c 	andeq	sl, r2, ip, lsr #20
   1c830:	0002aa08 	andeq	sl, r2, r8, lsl #20
   1c834:	0002a92c 	andeq	sl, r2, ip, lsr #18
   1c838:	0002a8ec 	andeq	sl, r2, ip, ror #17
   1c83c:	0002a964 	andeq	sl, r2, r4, ror #18
   1c840:	0002a97c 	andeq	sl, r2, ip, ror r9
   1c844:	00000103 	andeq	r0, r0, r3, lsl #2
   1c848:	0002a9b8 			; <UNDEFINED> instruction: 0x0002a9b8
   1c84c:	0002a9e8 	andeq	sl, r2, r8, ror #19
   1c850:	00000117 	andeq	r0, r0, r7, lsl r1
   1c854:	0002a994 	muleq	r2, r4, r9
   1c858:	00029a68 	andeq	r9, r2, r8, ror #20
   1c85c:	0002a884 	andeq	sl, r2, r4, lsl #17
   1c860:	0002a890 	muleq	r2, r0, r8
   1c864:	0002aa58 	andeq	sl, r2, r8, asr sl
   1c868:	0002aa48 	andeq	sl, r2, r8, asr #20

0001c86c <USBStandardHubConfigure>:
   1c86c:	e92d4070 	push	{r4, r5, r6, lr}
   1c870:	e2504000 	subs	r4, r0, #0
   1c874:	e24dd010 	sub	sp, sp, #16
   1c878:	0a000048 	beq	1c9a0 <USBStandardHubConfigure+0x134>
   1c87c:	e1a00004 	mov	r0, r4
   1c880:	eb000302 	bl	1d490 <USBFunctionGetNumEndpoints>
   1c884:	e3500001 	cmp	r0, #1
   1c888:	e1a06000 	mov	r6, r0
   1c88c:	1a00000b 	bne	1c8c0 <USBStandardHubConfigure+0x54>
   1c890:	e3a01005 	mov	r1, #5
   1c894:	e1a00004 	mov	r0, r4
   1c898:	eb000394 	bl	1d6f0 <USBFunctionGetDescriptor>
   1c89c:	e3500000 	cmp	r0, #0
   1c8a0:	0a000006 	beq	1c8c0 <USBStandardHubConfigure+0x54>
   1c8a4:	e1d030d2 	ldrsb	r3, [r0, #2]
   1c8a8:	e3530000 	cmp	r3, #0
   1c8ac:	aa000003 	bge	1c8c0 <USBStandardHubConfigure+0x54>
   1c8b0:	e5d03003 	ldrb	r3, [r0, #3]
   1c8b4:	e203303f 	and	r3, r3, #63	; 0x3f
   1c8b8:	e3530003 	cmp	r3, #3
   1c8bc:	0a000006 	beq	1c8dc <USBStandardHubConfigure+0x70>
   1c8c0:	e1a00004 	mov	r0, r4
   1c8c4:	e59f116c 	ldr	r1, [pc, #364]	; 1ca38 <USBStandardHubConfigure+0x1cc>
   1c8c8:	eb0003a4 	bl	1d760 <USBFunctionConfigurationError>
   1c8cc:	e3a05000 	mov	r5, #0
   1c8d0:	e1a00005 	mov	r0, r5
   1c8d4:	e28dd010 	add	sp, sp, #16
   1c8d8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1c8dc:	e1a00004 	mov	r0, r4
   1c8e0:	eb000349 	bl	1d60c <USBFunctionConfigure>
   1c8e4:	e2505000 	subs	r5, r0, #0
   1c8e8:	0a000044 	beq	1ca00 <USBStandardHubConfigure+0x194>
   1c8ec:	e1a00004 	mov	r0, r4
   1c8f0:	eb00032c 	bl	1d5a8 <USBFunctionGetHost>
   1c8f4:	e2505000 	subs	r5, r0, #0
   1c8f8:	0a000036 	beq	1c9d8 <USBStandardHubConfigure+0x16c>
   1c8fc:	e5943010 	ldr	r3, [r4, #16]
   1c900:	e3530000 	cmp	r3, #0
   1c904:	0a000003 	beq	1c918 <USBStandardHubConfigure+0xac>
   1c908:	e3a0206f 	mov	r2, #111	; 0x6f
   1c90c:	e59f1128 	ldr	r1, [pc, #296]	; 1ca3c <USBStandardHubConfigure+0x1d0>
   1c910:	e59f0128 	ldr	r0, [pc, #296]	; 1ca40 <USBStandardHubConfigure+0x1d4>
   1c914:	eb00299c 	bl	26f8c <uspi_assertion_failed>
   1c918:	e3a00009 	mov	r0, #9
   1c91c:	eb002183 	bl	24f30 <malloc>
   1c920:	e3500000 	cmp	r0, #0
   1c924:	e5840010 	str	r0, [r4, #16]
   1c928:	0a00002f 	beq	1c9ec <USBStandardHubConfigure+0x180>
   1c92c:	e1a00004 	mov	r0, r4
   1c930:	eb000303 	bl	1d544 <USBFunctionGetEndpoint0>
   1c934:	e3a02009 	mov	r2, #9
   1c938:	e3a030a0 	mov	r3, #160	; 0xa0
   1c93c:	e1cd20f4 	strd	r2, [sp, #4]
   1c940:	e5943010 	ldr	r3, [r4, #16]
   1c944:	e1a01000 	mov	r1, r0
   1c948:	e58d3000 	str	r3, [sp]
   1c94c:	e1a00005 	mov	r0, r5
   1c950:	e3a03000 	mov	r3, #0
   1c954:	e3a02029 	mov	r2, #41	; 0x29
   1c958:	ebffeba6 	bl	177f8 <DWHCIDeviceGetDescriptor>
   1c95c:	e3500009 	cmp	r0, #9
   1c960:	1a000013 	bne	1c9b4 <USBStandardHubConfigure+0x148>
   1c964:	e5943010 	ldr	r3, [r4, #16]
   1c968:	e5d33002 	ldrb	r3, [r3, #2]
   1c96c:	e3530008 	cmp	r3, #8
   1c970:	e5843014 	str	r3, [r4, #20]
   1c974:	8a000026 	bhi	1ca14 <USBStandardHubConfigure+0x1a8>
   1c978:	e1a00004 	mov	r0, r4
   1c97c:	ebfffdf0 	bl	1c144 <USBStandardHubEnumeratePorts>
   1c980:	e2505000 	subs	r5, r0, #0
   1c984:	13a05001 	movne	r5, #1
   1c988:	1affffd0 	bne	1c8d0 <USBStandardHubConfigure+0x64>
   1c98c:	e59f20b0 	ldr	r2, [pc, #176]	; 1ca44 <USBStandardHubConfigure+0x1d8>
   1c990:	e3a01001 	mov	r1, #1
   1c994:	e59f009c 	ldr	r0, [pc, #156]	; 1ca38 <USBStandardHubConfigure+0x1cc>
   1c998:	eb002969 	bl	26f44 <LogWrite>
   1c99c:	eaffffcb 	b	1c8d0 <USBStandardHubConfigure+0x64>
   1c9a0:	e3a02051 	mov	r2, #81	; 0x51
   1c9a4:	e59f1090 	ldr	r1, [pc, #144]	; 1ca3c <USBStandardHubConfigure+0x1d0>
   1c9a8:	e59f0098 	ldr	r0, [pc, #152]	; 1ca48 <USBStandardHubConfigure+0x1dc>
   1c9ac:	eb002976 	bl	26f8c <uspi_assertion_failed>
   1c9b0:	eaffffb1 	b	1c87c <USBStandardHubConfigure+0x10>
   1c9b4:	e3a05000 	mov	r5, #0
   1c9b8:	e59f208c 	ldr	r2, [pc, #140]	; 1ca4c <USBStandardHubConfigure+0x1e0>
   1c9bc:	e3a01001 	mov	r1, #1
   1c9c0:	e59f0070 	ldr	r0, [pc, #112]	; 1ca38 <USBStandardHubConfigure+0x1cc>
   1c9c4:	eb00295e 	bl	26f44 <LogWrite>
   1c9c8:	e5940010 	ldr	r0, [r4, #16]
   1c9cc:	eb0021bd 	bl	250c8 <free>
   1c9d0:	e5845010 	str	r5, [r4, #16]
   1c9d4:	eaffffbd 	b	1c8d0 <USBStandardHubConfigure+0x64>
   1c9d8:	e3a0206d 	mov	r2, #109	; 0x6d
   1c9dc:	e59f1058 	ldr	r1, [pc, #88]	; 1ca3c <USBStandardHubConfigure+0x1d0>
   1c9e0:	e59f0068 	ldr	r0, [pc, #104]	; 1ca50 <USBStandardHubConfigure+0x1e4>
   1c9e4:	eb002968 	bl	26f8c <uspi_assertion_failed>
   1c9e8:	eaffffc3 	b	1c8fc <USBStandardHubConfigure+0x90>
   1c9ec:	e3a02071 	mov	r2, #113	; 0x71
   1c9f0:	e59f1044 	ldr	r1, [pc, #68]	; 1ca3c <USBStandardHubConfigure+0x1d0>
   1c9f4:	e59f0058 	ldr	r0, [pc, #88]	; 1ca54 <USBStandardHubConfigure+0x1e8>
   1c9f8:	eb002963 	bl	26f8c <uspi_assertion_failed>
   1c9fc:	eaffffca 	b	1c92c <USBStandardHubConfigure+0xc0>
   1ca00:	e1a01006 	mov	r1, r6
   1ca04:	e59f204c 	ldr	r2, [pc, #76]	; 1ca58 <USBStandardHubConfigure+0x1ec>
   1ca08:	e59f0028 	ldr	r0, [pc, #40]	; 1ca38 <USBStandardHubConfigure+0x1cc>
   1ca0c:	eb00294c 	bl	26f44 <LogWrite>
   1ca10:	eaffffae 	b	1c8d0 <USBStandardHubConfigure+0x64>
   1ca14:	e3a05000 	mov	r5, #0
   1ca18:	e59f203c 	ldr	r2, [pc, #60]	; 1ca5c <USBStandardHubConfigure+0x1f0>
   1ca1c:	e3a01001 	mov	r1, #1
   1ca20:	e59f0010 	ldr	r0, [pc, #16]	; 1ca38 <USBStandardHubConfigure+0x1cc>
   1ca24:	eb002946 	bl	26f44 <LogWrite>
   1ca28:	e5940010 	ldr	r0, [r4, #16]
   1ca2c:	eb0021a5 	bl	250c8 <free>
   1ca30:	e5845010 	str	r5, [r4, #16]
   1ca34:	eaffffa5 	b	1c8d0 <USBStandardHubConfigure+0x64>
   1ca38:	0002856c 	andeq	r8, r2, ip, ror #10
   1ca3c:	0002a870 	andeq	sl, r2, r0, ror r8
   1ca40:	0002aaa4 	andeq	sl, r2, r4, lsr #21
   1ca44:	0002ab04 	andeq	sl, r2, r4, lsl #22
   1ca48:	00029a68 	andeq	r9, r2, r8, ror #20
   1ca4c:	0002aad4 	ldrdeq	sl, [r2], -r4
   1ca50:	0002a884 	andeq	sl, r2, r4, lsl #17
   1ca54:	0002aabc 			; <UNDEFINED> instruction: 0x0002aabc
   1ca58:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   1ca5c:	0002aaf0 	strdeq	sl, [r2], -r0

0001ca60 <DeviceNameService>:
   1ca60:	e92d4070 	push	{r4, r5, r6, lr}
   1ca64:	e2505000 	subs	r5, r0, #0
   1ca68:	0a00000b 	beq	1ca9c <DeviceNameService+0x3c>
   1ca6c:	e3a03000 	mov	r3, #0
   1ca70:	e59f4038 	ldr	r4, [pc, #56]	; 1cab0 <DeviceNameService+0x50>
   1ca74:	e5853000 	str	r3, [r5]
   1ca78:	e5943000 	ldr	r3, [r4]
   1ca7c:	e3530000 	cmp	r3, #0
   1ca80:	0a000003 	beq	1ca94 <DeviceNameService+0x34>
   1ca84:	e3a02021 	mov	r2, #33	; 0x21
   1ca88:	e59f1024 	ldr	r1, [pc, #36]	; 1cab4 <DeviceNameService+0x54>
   1ca8c:	e59f0024 	ldr	r0, [pc, #36]	; 1cab8 <DeviceNameService+0x58>
   1ca90:	eb00293d 	bl	26f8c <uspi_assertion_failed>
   1ca94:	e5845000 	str	r5, [r4]
   1ca98:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ca9c:	e3a0201d 	mov	r2, #29
   1caa0:	e59f100c 	ldr	r1, [pc, #12]	; 1cab4 <DeviceNameService+0x54>
   1caa4:	e59f0010 	ldr	r0, [pc, #16]	; 1cabc <DeviceNameService+0x5c>
   1caa8:	eb002937 	bl	26f8c <uspi_assertion_failed>
   1caac:	eaffffee 	b	1ca6c <DeviceNameService+0xc>
   1cab0:	0002d154 	andeq	sp, r2, r4, asr r1
   1cab4:	0002ab1c 	andeq	sl, r2, ip, lsl fp
   1cab8:	0002ab30 	andeq	sl, r2, r0, lsr fp
   1cabc:	00029a68 	andeq	r9, r2, r8, ror #20

0001cac0 <_DeviceNameService>:
   1cac0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1cac4:	e2505000 	subs	r5, r0, #0
   1cac8:	0a00001d 	beq	1cb44 <_DeviceNameService+0x84>
   1cacc:	e5953000 	ldr	r3, [r5]
   1cad0:	e3530000 	cmp	r3, #0
   1cad4:	0a000016 	beq	1cb34 <_DeviceNameService+0x74>
   1cad8:	e59f7078 	ldr	r7, [pc, #120]	; 1cb58 <_DeviceNameService+0x98>
   1cadc:	e59f6078 	ldr	r6, [pc, #120]	; 1cb5c <_DeviceNameService+0x9c>
   1cae0:	ea00000a 	b	1cb10 <_DeviceNameService+0x50>
   1cae4:	e5953000 	ldr	r3, [r5]
   1cae8:	e5930004 	ldr	r0, [r3, #4]
   1caec:	eb002175 	bl	250c8 <free>
   1caf0:	e3a03000 	mov	r3, #0
   1caf4:	e5950000 	ldr	r0, [r5]
   1caf8:	e5803004 	str	r3, [r0, #4]
   1cafc:	e5803008 	str	r3, [r0, #8]
   1cb00:	eb002170 	bl	250c8 <free>
   1cb04:	e2543000 	subs	r3, r4, #0
   1cb08:	e5854000 	str	r4, [r5]
   1cb0c:	0a000008 	beq	1cb34 <_DeviceNameService+0x74>
   1cb10:	e5932004 	ldr	r2, [r3, #4]
   1cb14:	e5934000 	ldr	r4, [r3]
   1cb18:	e3520000 	cmp	r2, #0
   1cb1c:	1afffff0 	bne	1cae4 <_DeviceNameService+0x24>
   1cb20:	e3a0202d 	mov	r2, #45	; 0x2d
   1cb24:	e1a01007 	mov	r1, r7
   1cb28:	e1a00006 	mov	r0, r6
   1cb2c:	eb002916 	bl	26f8c <uspi_assertion_failed>
   1cb30:	eaffffeb 	b	1cae4 <_DeviceNameService+0x24>
   1cb34:	e3a02000 	mov	r2, #0
   1cb38:	e59f3020 	ldr	r3, [pc, #32]	; 1cb60 <_DeviceNameService+0xa0>
   1cb3c:	e5832000 	str	r2, [r3]
   1cb40:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1cb44:	e3a02027 	mov	r2, #39	; 0x27
   1cb48:	e59f1008 	ldr	r1, [pc, #8]	; 1cb58 <_DeviceNameService+0x98>
   1cb4c:	e59f0010 	ldr	r0, [pc, #16]	; 1cb64 <_DeviceNameService+0xa4>
   1cb50:	eb00290d 	bl	26f8c <uspi_assertion_failed>
   1cb54:	eaffffdc 	b	1cacc <_DeviceNameService+0xc>
   1cb58:	0002ab1c 	andeq	sl, r2, ip, lsl fp
   1cb5c:	0002ab40 	andeq	sl, r2, r0, asr #22
   1cb60:	0002d154 	andeq	sp, r2, r4, asr r1
   1cb64:	00029a68 	andeq	r9, r2, r8, ror #20

0001cb68 <DeviceNameServiceAddDevice>:
   1cb68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1cb6c:	e2506000 	subs	r6, r0, #0
   1cb70:	e1a05001 	mov	r5, r1
   1cb74:	e1a07002 	mov	r7, r2
   1cb78:	e1a08003 	mov	r8, r3
   1cb7c:	0a000016 	beq	1cbdc <DeviceNameServiceAddDevice+0x74>
   1cb80:	e3a00010 	mov	r0, #16
   1cb84:	eb0020e9 	bl	24f30 <malloc>
   1cb88:	e2504000 	subs	r4, r0, #0
   1cb8c:	0a00001a 	beq	1cbfc <DeviceNameServiceAddDevice+0x94>
   1cb90:	e3550000 	cmp	r5, #0
   1cb94:	0a00001e 	beq	1cc14 <DeviceNameServiceAddDevice+0xac>
   1cb98:	e1a00005 	mov	r0, r5
   1cb9c:	eb000e07 	bl	203c0 <uspi_strlen>
   1cba0:	e2800001 	add	r0, r0, #1
   1cba4:	eb0020e1 	bl	24f30 <malloc>
   1cba8:	e3500000 	cmp	r0, #0
   1cbac:	e5840004 	str	r0, [r4, #4]
   1cbb0:	0a00001c 	beq	1cc28 <DeviceNameServiceAddDevice+0xc0>
   1cbb4:	e1a01005 	mov	r1, r5
   1cbb8:	eb000e26 	bl	20458 <uspi_strcpy>
   1cbbc:	e3570000 	cmp	r7, #0
   1cbc0:	0a000021 	beq	1cc4c <DeviceNameServiceAddDevice+0xe4>
   1cbc4:	e5963000 	ldr	r3, [r6]
   1cbc8:	e5847008 	str	r7, [r4, #8]
   1cbcc:	e584800c 	str	r8, [r4, #12]
   1cbd0:	e5843000 	str	r3, [r4]
   1cbd4:	e5864000 	str	r4, [r6]
   1cbd8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1cbdc:	e3a0203d 	mov	r2, #61	; 0x3d
   1cbe0:	e59f1078 	ldr	r1, [pc, #120]	; 1cc60 <DeviceNameServiceAddDevice+0xf8>
   1cbe4:	e59f0078 	ldr	r0, [pc, #120]	; 1cc64 <DeviceNameServiceAddDevice+0xfc>
   1cbe8:	eb0028e7 	bl	26f8c <uspi_assertion_failed>
   1cbec:	e3a00010 	mov	r0, #16
   1cbf0:	eb0020ce 	bl	24f30 <malloc>
   1cbf4:	e2504000 	subs	r4, r0, #0
   1cbf8:	1affffe4 	bne	1cb90 <DeviceNameServiceAddDevice+0x28>
   1cbfc:	e3a02040 	mov	r2, #64	; 0x40
   1cc00:	e59f1058 	ldr	r1, [pc, #88]	; 1cc60 <DeviceNameServiceAddDevice+0xf8>
   1cc04:	e59f005c 	ldr	r0, [pc, #92]	; 1cc68 <DeviceNameServiceAddDevice+0x100>
   1cc08:	eb0028df 	bl	26f8c <uspi_assertion_failed>
   1cc0c:	e3550000 	cmp	r5, #0
   1cc10:	1affffe0 	bne	1cb98 <DeviceNameServiceAddDevice+0x30>
   1cc14:	e3a02042 	mov	r2, #66	; 0x42
   1cc18:	e59f1040 	ldr	r1, [pc, #64]	; 1cc60 <DeviceNameServiceAddDevice+0xf8>
   1cc1c:	e59f0048 	ldr	r0, [pc, #72]	; 1cc6c <DeviceNameServiceAddDevice+0x104>
   1cc20:	eb0028d9 	bl	26f8c <uspi_assertion_failed>
   1cc24:	eaffffdb 	b	1cb98 <DeviceNameServiceAddDevice+0x30>
   1cc28:	e3a02044 	mov	r2, #68	; 0x44
   1cc2c:	e59f102c 	ldr	r1, [pc, #44]	; 1cc60 <DeviceNameServiceAddDevice+0xf8>
   1cc30:	e59f0038 	ldr	r0, [pc, #56]	; 1cc70 <DeviceNameServiceAddDevice+0x108>
   1cc34:	eb0028d4 	bl	26f8c <uspi_assertion_failed>
   1cc38:	e5940004 	ldr	r0, [r4, #4]
   1cc3c:	e1a01005 	mov	r1, r5
   1cc40:	eb000e04 	bl	20458 <uspi_strcpy>
   1cc44:	e3570000 	cmp	r7, #0
   1cc48:	1affffdd 	bne	1cbc4 <DeviceNameServiceAddDevice+0x5c>
   1cc4c:	e3a02047 	mov	r2, #71	; 0x47
   1cc50:	e59f1008 	ldr	r1, [pc, #8]	; 1cc60 <DeviceNameServiceAddDevice+0xf8>
   1cc54:	e59f0018 	ldr	r0, [pc, #24]	; 1cc74 <DeviceNameServiceAddDevice+0x10c>
   1cc58:	eb0028cb 	bl	26f8c <uspi_assertion_failed>
   1cc5c:	eaffffd8 	b	1cbc4 <DeviceNameServiceAddDevice+0x5c>
   1cc60:	0002ab1c 	andeq	sl, r2, ip, lsl fp
   1cc64:	00029a68 	andeq	r9, r2, r8, ror #20
   1cc68:	00029a4c 	andeq	r9, r2, ip, asr #20
   1cc6c:	0002ab50 	andeq	sl, r2, r0, asr fp
   1cc70:	0002ab5c 	andeq	sl, r2, ip, asr fp
   1cc74:	0002a580 	andeq	sl, r2, r0, lsl #11

0001cc78 <DeviceNameServiceGetDevice>:
   1cc78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1cc7c:	e2504000 	subs	r4, r0, #0
   1cc80:	e1a05001 	mov	r5, r1
   1cc84:	e1a06002 	mov	r6, r2
   1cc88:	0a000025 	beq	1cd24 <DeviceNameServiceGetDevice+0xac>
   1cc8c:	e3550000 	cmp	r5, #0
   1cc90:	0a000029 	beq	1cd3c <DeviceNameServiceGetDevice+0xc4>
   1cc94:	e5944000 	ldr	r4, [r4]
   1cc98:	e3540000 	cmp	r4, #0
   1cc9c:	0a000015 	beq	1ccf8 <DeviceNameServiceGetDevice+0x80>
   1cca0:	e59f80a8 	ldr	r8, [pc, #168]	; 1cd50 <DeviceNameServiceGetDevice+0xd8>
   1cca4:	e59f70a8 	ldr	r7, [pc, #168]	; 1cd54 <DeviceNameServiceGetDevice+0xdc>
   1cca8:	ea000009 	b	1ccd4 <DeviceNameServiceGetDevice+0x5c>
   1ccac:	e1a00005 	mov	r0, r5
   1ccb0:	eb000dcc 	bl	203e8 <uspi_strcmp>
   1ccb4:	e3500000 	cmp	r0, #0
   1ccb8:	1a000002 	bne	1ccc8 <DeviceNameServiceGetDevice+0x50>
   1ccbc:	e594300c 	ldr	r3, [r4, #12]
   1ccc0:	e1530006 	cmp	r3, r6
   1ccc4:	0a00000d 	beq	1cd00 <DeviceNameServiceGetDevice+0x88>
   1ccc8:	e5944000 	ldr	r4, [r4]
   1cccc:	e3540000 	cmp	r4, #0
   1ccd0:	0a000008 	beq	1ccf8 <DeviceNameServiceGetDevice+0x80>
   1ccd4:	e5941004 	ldr	r1, [r4, #4]
   1ccd8:	e3510000 	cmp	r1, #0
   1ccdc:	1afffff2 	bne	1ccac <DeviceNameServiceGetDevice+0x34>
   1cce0:	e1a01008 	mov	r1, r8
   1cce4:	e3a02058 	mov	r2, #88	; 0x58
   1cce8:	e1a00007 	mov	r0, r7
   1ccec:	eb0028a6 	bl	26f8c <uspi_assertion_failed>
   1ccf0:	e5941004 	ldr	r1, [r4, #4]
   1ccf4:	eaffffec 	b	1ccac <DeviceNameServiceGetDevice+0x34>
   1ccf8:	e3a00000 	mov	r0, #0
   1ccfc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1cd00:	e5940008 	ldr	r0, [r4, #8]
   1cd04:	e3500000 	cmp	r0, #0
   1cd08:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
   1cd0c:	e3a0205c 	mov	r2, #92	; 0x5c
   1cd10:	e59f1038 	ldr	r1, [pc, #56]	; 1cd50 <DeviceNameServiceGetDevice+0xd8>
   1cd14:	e59f003c 	ldr	r0, [pc, #60]	; 1cd58 <DeviceNameServiceGetDevice+0xe0>
   1cd18:	eb00289b 	bl	26f8c <uspi_assertion_failed>
   1cd1c:	e5940008 	ldr	r0, [r4, #8]
   1cd20:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1cd24:	e3a02052 	mov	r2, #82	; 0x52
   1cd28:	e59f1020 	ldr	r1, [pc, #32]	; 1cd50 <DeviceNameServiceGetDevice+0xd8>
   1cd2c:	e59f0028 	ldr	r0, [pc, #40]	; 1cd5c <DeviceNameServiceGetDevice+0xe4>
   1cd30:	eb002895 	bl	26f8c <uspi_assertion_failed>
   1cd34:	e3550000 	cmp	r5, #0
   1cd38:	1affffd5 	bne	1cc94 <DeviceNameServiceGetDevice+0x1c>
   1cd3c:	e3a02053 	mov	r2, #83	; 0x53
   1cd40:	e59f1008 	ldr	r1, [pc, #8]	; 1cd50 <DeviceNameServiceGetDevice+0xd8>
   1cd44:	e59f0014 	ldr	r0, [pc, #20]	; 1cd60 <DeviceNameServiceGetDevice+0xe8>
   1cd48:	eb00288f 	bl	26f8c <uspi_assertion_failed>
   1cd4c:	eaffffd0 	b	1cc94 <DeviceNameServiceGetDevice+0x1c>
   1cd50:	0002ab1c 	andeq	sl, r2, ip, lsl fp
   1cd54:	0002ab5c 	andeq	sl, r2, ip, asr fp
   1cd58:	0002ab70 	andeq	sl, r2, r0, ror fp
   1cd5c:	00029a68 	andeq	r9, r2, r8, ror #20
   1cd60:	0002ab50 	andeq	sl, r2, r0, asr fp

0001cd64 <DeviceNameServiceGet>:
   1cd64:	e92d4010 	push	{r4, lr}
   1cd68:	e59f4020 	ldr	r4, [pc, #32]	; 1cd90 <DeviceNameServiceGet+0x2c>
   1cd6c:	e5940000 	ldr	r0, [r4]
   1cd70:	e3500000 	cmp	r0, #0
   1cd74:	18bd8010 	popne	{r4, pc}
   1cd78:	e3a02068 	mov	r2, #104	; 0x68
   1cd7c:	e59f1010 	ldr	r1, [pc, #16]	; 1cd94 <DeviceNameServiceGet+0x30>
   1cd80:	e59f0010 	ldr	r0, [pc, #16]	; 1cd98 <DeviceNameServiceGet+0x34>
   1cd84:	eb002880 	bl	26f8c <uspi_assertion_failed>
   1cd88:	e5940000 	ldr	r0, [r4]
   1cd8c:	e8bd8010 	pop	{r4, pc}
   1cd90:	0002d154 	andeq	sp, r2, r4, asr r1
   1cd94:	0002ab1c 	andeq	sl, r2, ip, lsl fp
   1cd98:	0002ab84 	andeq	sl, r2, r4, lsl #23

0001cd9c <MACAddress>:
   1cd9c:	e92d4010 	push	{r4, lr}
   1cda0:	e2504000 	subs	r4, r0, #0
   1cda4:	0a000002 	beq	1cdb4 <MACAddress+0x18>
   1cda8:	e3a03000 	mov	r3, #0
   1cdac:	e5843000 	str	r3, [r4]
   1cdb0:	e8bd8010 	pop	{r4, pc}
   1cdb4:	e3a0201a 	mov	r2, #26
   1cdb8:	e59f1008 	ldr	r1, [pc, #8]	; 1cdc8 <MACAddress+0x2c>
   1cdbc:	e59f0008 	ldr	r0, [pc, #8]	; 1cdcc <MACAddress+0x30>
   1cdc0:	eb002871 	bl	26f8c <uspi_assertion_failed>
   1cdc4:	eafffff7 	b	1cda8 <MACAddress+0xc>
   1cdc8:	0002ab94 	muleq	r2, r4, fp
   1cdcc:	00029a68 	andeq	r9, r2, r8, ror #20

0001cdd0 <_MACAddress>:
   1cdd0:	e92d4010 	push	{r4, lr}
   1cdd4:	e2504000 	subs	r4, r0, #0
   1cdd8:	0a000002 	beq	1cde8 <_MACAddress+0x18>
   1cddc:	e3a03000 	mov	r3, #0
   1cde0:	e5843000 	str	r3, [r4]
   1cde4:	e8bd8010 	pop	{r4, pc}
   1cde8:	e3a02028 	mov	r2, #40	; 0x28
   1cdec:	e59f1008 	ldr	r1, [pc, #8]	; 1cdfc <_MACAddress+0x2c>
   1cdf0:	e59f0008 	ldr	r0, [pc, #8]	; 1ce00 <_MACAddress+0x30>
   1cdf4:	eb002864 	bl	26f8c <uspi_assertion_failed>
   1cdf8:	eafffff7 	b	1cddc <_MACAddress+0xc>
   1cdfc:	0002ab94 	muleq	r2, r4, fp
   1ce00:	00029a68 	andeq	r9, r2, r8, ror #20

0001ce04 <MACAddressSet>:
   1ce04:	e92d4070 	push	{r4, r5, r6, lr}
   1ce08:	e2504000 	subs	r4, r0, #0
   1ce0c:	e1a05001 	mov	r5, r1
   1ce10:	0a000008 	beq	1ce38 <MACAddressSet+0x34>
   1ce14:	e3550000 	cmp	r5, #0
   1ce18:	0a00000c 	beq	1ce50 <MACAddressSet+0x4c>
   1ce1c:	e1a01005 	mov	r1, r5
   1ce20:	e3a02006 	mov	r2, #6
   1ce24:	e2840004 	add	r0, r4, #4
   1ce28:	eb000d44 	bl	20340 <uspi_memcpy>
   1ce2c:	e3a03001 	mov	r3, #1
   1ce30:	e5843000 	str	r3, [r4]
   1ce34:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ce38:	e3a02037 	mov	r2, #55	; 0x37
   1ce3c:	e59f1020 	ldr	r1, [pc, #32]	; 1ce64 <MACAddressSet+0x60>
   1ce40:	e59f0020 	ldr	r0, [pc, #32]	; 1ce68 <MACAddressSet+0x64>
   1ce44:	eb002850 	bl	26f8c <uspi_assertion_failed>
   1ce48:	e3550000 	cmp	r5, #0
   1ce4c:	1afffff2 	bne	1ce1c <MACAddressSet+0x18>
   1ce50:	e3a02038 	mov	r2, #56	; 0x38
   1ce54:	e59f1008 	ldr	r1, [pc, #8]	; 1ce64 <MACAddressSet+0x60>
   1ce58:	e59f000c 	ldr	r0, [pc, #12]	; 1ce6c <MACAddressSet+0x68>
   1ce5c:	eb00284a 	bl	26f8c <uspi_assertion_failed>
   1ce60:	eaffffed 	b	1ce1c <MACAddressSet+0x18>
   1ce64:	0002ab94 	muleq	r2, r4, fp
   1ce68:	00029a68 	andeq	r9, r2, r8, ror #20
   1ce6c:	0002aba4 	andeq	sl, r2, r4, lsr #23

0001ce70 <MACAddress2>:
   1ce70:	e92d4070 	push	{r4, r5, r6, lr}
   1ce74:	e2504000 	subs	r4, r0, #0
   1ce78:	e1a05001 	mov	r5, r1
   1ce7c:	0a000003 	beq	1ce90 <MACAddress2+0x20>
   1ce80:	e1a01005 	mov	r1, r5
   1ce84:	e1a00004 	mov	r0, r4
   1ce88:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ce8c:	eaffffdc 	b	1ce04 <MACAddressSet>
   1ce90:	e59f1018 	ldr	r1, [pc, #24]	; 1ceb0 <MACAddress2+0x40>
   1ce94:	e59f0018 	ldr	r0, [pc, #24]	; 1ceb4 <MACAddress2+0x44>
   1ce98:	e3a02021 	mov	r2, #33	; 0x21
   1ce9c:	eb00283a 	bl	26f8c <uspi_assertion_failed>
   1cea0:	e1a01005 	mov	r1, r5
   1cea4:	e1a00004 	mov	r0, r4
   1cea8:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ceac:	eaffffd4 	b	1ce04 <MACAddressSet>
   1ceb0:	0002ab94 	muleq	r2, r4, fp
   1ceb4:	00029a68 	andeq	r9, r2, r8, ror #20

0001ceb8 <MACAddressSetBroadcast>:
   1ceb8:	e92d4010 	push	{r4, lr}
   1cebc:	e2504000 	subs	r4, r0, #0
   1cec0:	0a000006 	beq	1cee0 <MACAddressSetBroadcast+0x28>
   1cec4:	e3a02006 	mov	r2, #6
   1cec8:	e3a010ff 	mov	r1, #255	; 0xff
   1cecc:	e2840004 	add	r0, r4, #4
   1ced0:	eb000d11 	bl	2031c <uspi_memset>
   1ced4:	e3a03001 	mov	r3, #1
   1ced8:	e5843000 	str	r3, [r4]
   1cedc:	e8bd8010 	pop	{r4, pc}
   1cee0:	e3a02040 	mov	r2, #64	; 0x40
   1cee4:	e59f1008 	ldr	r1, [pc, #8]	; 1cef4 <MACAddressSetBroadcast+0x3c>
   1cee8:	e59f0008 	ldr	r0, [pc, #8]	; 1cef8 <MACAddressSetBroadcast+0x40>
   1ceec:	eb002826 	bl	26f8c <uspi_assertion_failed>
   1cef0:	eafffff3 	b	1cec4 <MACAddressSetBroadcast+0xc>
   1cef4:	0002ab94 	muleq	r2, r4, fp
   1cef8:	00029a68 	andeq	r9, r2, r8, ror #20

0001cefc <MACAddressGet>:
   1cefc:	e92d4010 	push	{r4, lr}
   1cf00:	e2504000 	subs	r4, r0, #0
   1cf04:	0a00000a 	beq	1cf34 <MACAddressGet+0x38>
   1cf08:	e5943000 	ldr	r3, [r4]
   1cf0c:	e3530000 	cmp	r3, #0
   1cf10:	0a000001 	beq	1cf1c <MACAddressGet+0x20>
   1cf14:	e2840004 	add	r0, r4, #4
   1cf18:	e8bd8010 	pop	{r4, pc}
   1cf1c:	e3a02049 	mov	r2, #73	; 0x49
   1cf20:	e59f1020 	ldr	r1, [pc, #32]	; 1cf48 <MACAddressGet+0x4c>
   1cf24:	e59f0020 	ldr	r0, [pc, #32]	; 1cf4c <MACAddressGet+0x50>
   1cf28:	eb002817 	bl	26f8c <uspi_assertion_failed>
   1cf2c:	e2840004 	add	r0, r4, #4
   1cf30:	e8bd8010 	pop	{r4, pc}
   1cf34:	e3a02048 	mov	r2, #72	; 0x48
   1cf38:	e59f1008 	ldr	r1, [pc, #8]	; 1cf48 <MACAddressGet+0x4c>
   1cf3c:	e59f000c 	ldr	r0, [pc, #12]	; 1cf50 <MACAddressGet+0x54>
   1cf40:	eb002811 	bl	26f8c <uspi_assertion_failed>
   1cf44:	eaffffef 	b	1cf08 <MACAddressGet+0xc>
   1cf48:	0002ab94 	muleq	r2, r4, fp
   1cf4c:	00029fcc 	andeq	r9, r2, ip, asr #31
   1cf50:	00029a68 	andeq	r9, r2, r8, ror #20

0001cf54 <MACAddressIsEqual>:
   1cf54:	e92d4070 	push	{r4, r5, r6, lr}
   1cf58:	e2504000 	subs	r4, r0, #0
   1cf5c:	e1a05001 	mov	r5, r1
   1cf60:	0a000010 	beq	1cfa8 <MACAddressIsEqual+0x54>
   1cf64:	e5943000 	ldr	r3, [r4]
   1cf68:	e3530000 	cmp	r3, #0
   1cf6c:	0a000008 	beq	1cf94 <MACAddressIsEqual+0x40>
   1cf70:	e1a00005 	mov	r0, r5
   1cf74:	ebffffe0 	bl	1cefc <MACAddressGet>
   1cf78:	e3a02006 	mov	r2, #6
   1cf7c:	e1a01000 	mov	r1, r0
   1cf80:	e2840004 	add	r0, r4, #4
   1cf84:	eb000cf6 	bl	20364 <uspi_memcmp>
   1cf88:	e16f0f10 	clz	r0, r0
   1cf8c:	e1a002a0 	lsr	r0, r0, #5
   1cf90:	e8bd8070 	pop	{r4, r5, r6, pc}
   1cf94:	e3a02030 	mov	r2, #48	; 0x30
   1cf98:	e59f101c 	ldr	r1, [pc, #28]	; 1cfbc <MACAddressIsEqual+0x68>
   1cf9c:	e59f001c 	ldr	r0, [pc, #28]	; 1cfc0 <MACAddressIsEqual+0x6c>
   1cfa0:	eb0027f9 	bl	26f8c <uspi_assertion_failed>
   1cfa4:	eafffff1 	b	1cf70 <MACAddressIsEqual+0x1c>
   1cfa8:	e3a0202f 	mov	r2, #47	; 0x2f
   1cfac:	e59f1008 	ldr	r1, [pc, #8]	; 1cfbc <MACAddressIsEqual+0x68>
   1cfb0:	e59f000c 	ldr	r0, [pc, #12]	; 1cfc4 <MACAddressIsEqual+0x70>
   1cfb4:	eb0027f4 	bl	26f8c <uspi_assertion_failed>
   1cfb8:	eaffffe9 	b	1cf64 <MACAddressIsEqual+0x10>
   1cfbc:	0002ab94 	muleq	r2, r4, fp
   1cfc0:	00029fcc 	andeq	r9, r2, ip, asr #31
   1cfc4:	00029a68 	andeq	r9, r2, r8, ror #20

0001cfc8 <MACAddressCopyTo>:
   1cfc8:	e92d4070 	push	{r4, r5, r6, lr}
   1cfcc:	e2505000 	subs	r5, r0, #0
   1cfd0:	e1a04001 	mov	r4, r1
   1cfd4:	0a000014 	beq	1d02c <MACAddressCopyTo+0x64>
   1cfd8:	e5953000 	ldr	r3, [r5]
   1cfdc:	e3530000 	cmp	r3, #0
   1cfe0:	0a000006 	beq	1d000 <MACAddressCopyTo+0x38>
   1cfe4:	e3540000 	cmp	r4, #0
   1cfe8:	0a00000a 	beq	1d018 <MACAddressCopyTo+0x50>
   1cfec:	e2851004 	add	r1, r5, #4
   1cff0:	e1a00004 	mov	r0, r4
   1cff4:	e8bd4070 	pop	{r4, r5, r6, lr}
   1cff8:	e3a02006 	mov	r2, #6
   1cffc:	ea000ccf 	b	20340 <uspi_memcpy>
   1d000:	e3a02051 	mov	r2, #81	; 0x51
   1d004:	e59f1034 	ldr	r1, [pc, #52]	; 1d040 <MACAddressCopyTo+0x78>
   1d008:	e59f0034 	ldr	r0, [pc, #52]	; 1d044 <MACAddressCopyTo+0x7c>
   1d00c:	eb0027de 	bl	26f8c <uspi_assertion_failed>
   1d010:	e3540000 	cmp	r4, #0
   1d014:	1afffff4 	bne	1cfec <MACAddressCopyTo+0x24>
   1d018:	e3a02052 	mov	r2, #82	; 0x52
   1d01c:	e59f101c 	ldr	r1, [pc, #28]	; 1d040 <MACAddressCopyTo+0x78>
   1d020:	e59f0020 	ldr	r0, [pc, #32]	; 1d048 <MACAddressCopyTo+0x80>
   1d024:	eb0027d8 	bl	26f8c <uspi_assertion_failed>
   1d028:	eaffffef 	b	1cfec <MACAddressCopyTo+0x24>
   1d02c:	e3a02050 	mov	r2, #80	; 0x50
   1d030:	e59f1008 	ldr	r1, [pc, #8]	; 1d040 <MACAddressCopyTo+0x78>
   1d034:	e59f0010 	ldr	r0, [pc, #16]	; 1d04c <MACAddressCopyTo+0x84>
   1d038:	eb0027d3 	bl	26f8c <uspi_assertion_failed>
   1d03c:	eaffffe5 	b	1cfd8 <MACAddressCopyTo+0x10>
   1d040:	0002ab94 	muleq	r2, r4, fp
   1d044:	00029fcc 	andeq	r9, r2, ip, asr #31
   1d048:	0002afdc 	ldrdeq	sl, [r2], -ip
   1d04c:	00029a68 	andeq	r9, r2, r8, ror #20

0001d050 <MACAddressIsBroadcast>:
   1d050:	e92d4010 	push	{r4, lr}
   1d054:	e2504000 	subs	r4, r0, #0
   1d058:	0a000012 	beq	1d0a8 <MACAddressIsBroadcast+0x58>
   1d05c:	e5943000 	ldr	r3, [r4]
   1d060:	e3530000 	cmp	r3, #0
   1d064:	0a000008 	beq	1d08c <MACAddressIsBroadcast+0x3c>
   1d068:	e2843004 	add	r3, r4, #4
   1d06c:	e284200a 	add	r2, r4, #10
   1d070:	e4d31001 	ldrb	r1, [r3], #1
   1d074:	e35100ff 	cmp	r1, #255	; 0xff
   1d078:	1a000008 	bne	1d0a0 <MACAddressIsBroadcast+0x50>
   1d07c:	e1530002 	cmp	r3, r2
   1d080:	1afffffa 	bne	1d070 <MACAddressIsBroadcast+0x20>
   1d084:	e3a00001 	mov	r0, #1
   1d088:	e8bd8010 	pop	{r4, pc}
   1d08c:	e3a0205a 	mov	r2, #90	; 0x5a
   1d090:	e59f1024 	ldr	r1, [pc, #36]	; 1d0bc <MACAddressIsBroadcast+0x6c>
   1d094:	e59f0024 	ldr	r0, [pc, #36]	; 1d0c0 <MACAddressIsBroadcast+0x70>
   1d098:	eb0027bb 	bl	26f8c <uspi_assertion_failed>
   1d09c:	eafffff1 	b	1d068 <MACAddressIsBroadcast+0x18>
   1d0a0:	e3a00000 	mov	r0, #0
   1d0a4:	e8bd8010 	pop	{r4, pc}
   1d0a8:	e3a02059 	mov	r2, #89	; 0x59
   1d0ac:	e59f1008 	ldr	r1, [pc, #8]	; 1d0bc <MACAddressIsBroadcast+0x6c>
   1d0b0:	e59f000c 	ldr	r0, [pc, #12]	; 1d0c4 <MACAddressIsBroadcast+0x74>
   1d0b4:	eb0027b4 	bl	26f8c <uspi_assertion_failed>
   1d0b8:	eaffffe7 	b	1d05c <MACAddressIsBroadcast+0xc>
   1d0bc:	0002ab94 	muleq	r2, r4, fp
   1d0c0:	00029fcc 	andeq	r9, r2, ip, asr #31
   1d0c4:	00029a68 	andeq	r9, r2, r8, ror #20

0001d0c8 <MACAddressGetSize>:
   1d0c8:	e3a00006 	mov	r0, #6
   1d0cc:	e12fff1e 	bx	lr

0001d0d0 <MACAddressFormat>:
   1d0d0:	e92d4030 	push	{r4, r5, lr}
   1d0d4:	e2504000 	subs	r4, r0, #0
   1d0d8:	e24dd014 	sub	sp, sp, #20
   1d0dc:	e1a05001 	mov	r5, r1
   1d0e0:	0a00001e 	beq	1d160 <MACAddressFormat+0x90>
   1d0e4:	e5943000 	ldr	r3, [r4]
   1d0e8:	e3530000 	cmp	r3, #0
   1d0ec:	0a000010 	beq	1d134 <MACAddressFormat+0x64>
   1d0f0:	e3550000 	cmp	r5, #0
   1d0f4:	0a000014 	beq	1d14c <MACAddressFormat+0x7c>
   1d0f8:	e5d43009 	ldrb	r3, [r4, #9]
   1d0fc:	e1a00005 	mov	r0, r5
   1d100:	e58d300c 	str	r3, [sp, #12]
   1d104:	e5d43008 	ldrb	r3, [r4, #8]
   1d108:	e59f1064 	ldr	r1, [pc, #100]	; 1d174 <MACAddressFormat+0xa4>
   1d10c:	e58d3008 	str	r3, [sp, #8]
   1d110:	e5d43007 	ldrb	r3, [r4, #7]
   1d114:	e58d3004 	str	r3, [sp, #4]
   1d118:	e5d43006 	ldrb	r3, [r4, #6]
   1d11c:	e58d3000 	str	r3, [sp]
   1d120:	e5d43005 	ldrb	r3, [r4, #5]
   1d124:	e5d42004 	ldrb	r2, [r4, #4]
   1d128:	eb000c35 	bl	20204 <StringFormat>
   1d12c:	e28dd014 	add	sp, sp, #20
   1d130:	e8bd8030 	pop	{r4, r5, pc}
   1d134:	e3a0206f 	mov	r2, #111	; 0x6f
   1d138:	e59f1038 	ldr	r1, [pc, #56]	; 1d178 <MACAddressFormat+0xa8>
   1d13c:	e59f0038 	ldr	r0, [pc, #56]	; 1d17c <MACAddressFormat+0xac>
   1d140:	eb002791 	bl	26f8c <uspi_assertion_failed>
   1d144:	e3550000 	cmp	r5, #0
   1d148:	1affffea 	bne	1d0f8 <MACAddressFormat+0x28>
   1d14c:	e3a02071 	mov	r2, #113	; 0x71
   1d150:	e59f1020 	ldr	r1, [pc, #32]	; 1d178 <MACAddressFormat+0xa8>
   1d154:	e59f0024 	ldr	r0, [pc, #36]	; 1d180 <MACAddressFormat+0xb0>
   1d158:	eb00278b 	bl	26f8c <uspi_assertion_failed>
   1d15c:	eaffffe5 	b	1d0f8 <MACAddressFormat+0x28>
   1d160:	e3a0206e 	mov	r2, #110	; 0x6e
   1d164:	e59f100c 	ldr	r1, [pc, #12]	; 1d178 <MACAddressFormat+0xa8>
   1d168:	e59f0014 	ldr	r0, [pc, #20]	; 1d184 <MACAddressFormat+0xb4>
   1d16c:	eb002786 	bl	26f8c <uspi_assertion_failed>
   1d170:	eaffffdb 	b	1d0e4 <MACAddressFormat+0x14>
   1d174:	0002abb4 			; <UNDEFINED> instruction: 0x0002abb4
   1d178:	0002ab94 	muleq	r2, r4, fp
   1d17c:	00029fcc 	andeq	r9, r2, ip, asr #31
   1d180:	0002a204 	andeq	sl, r2, r4, lsl #4
   1d184:	00029a68 	andeq	r9, r2, r8, ror #20

0001d188 <USBFunction>:
   1d188:	e92d4070 	push	{r4, r5, r6, lr}
   1d18c:	e2504000 	subs	r4, r0, #0
   1d190:	e1a06001 	mov	r6, r1
   1d194:	e1a05002 	mov	r5, r2
   1d198:	0a000017 	beq	1d1fc <USBFunction+0x74>
   1d19c:	e3a03000 	mov	r3, #0
   1d1a0:	e1560003 	cmp	r6, r3
   1d1a4:	e8840048 	stm	r4, {r3, r6}
   1d1a8:	0a00001b 	beq	1d21c <USBFunction+0x94>
   1d1ac:	e3a0001c 	mov	r0, #28
   1d1b0:	eb001f5e 	bl	24f30 <malloc>
   1d1b4:	e3500000 	cmp	r0, #0
   1d1b8:	e5840008 	str	r0, [r4, #8]
   1d1bc:	0a00001b 	beq	1d230 <USBFunction+0xa8>
   1d1c0:	e3550000 	cmp	r5, #0
   1d1c4:	0a00001f 	beq	1d248 <USBFunction+0xc0>
   1d1c8:	e1a01005 	mov	r1, r5
   1d1cc:	e5940008 	ldr	r0, [r4, #8]
   1d1d0:	eb001d96 	bl	24830 <USBConfigurationParserCopy>
   1d1d4:	e5940008 	ldr	r0, [r4, #8]
   1d1d8:	eb001e0a 	bl	24a08 <USBConfigurationParserGetCurrentDescriptor>
   1d1dc:	e3500000 	cmp	r0, #0
   1d1e0:	e584000c 	str	r0, [r4, #12]
   1d1e4:	18bd8070 	popne	{r4, r5, r6, pc}
   1d1e8:	e3a0202c 	mov	r2, #44	; 0x2c
   1d1ec:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d1f0:	e59f1064 	ldr	r1, [pc, #100]	; 1d25c <USBFunction+0xd4>
   1d1f4:	e59f0064 	ldr	r0, [pc, #100]	; 1d260 <USBFunction+0xd8>
   1d1f8:	ea002763 	b	26f8c <uspi_assertion_failed>
   1d1fc:	e3a0201f 	mov	r2, #31
   1d200:	e59f1054 	ldr	r1, [pc, #84]	; 1d25c <USBFunction+0xd4>
   1d204:	e59f0058 	ldr	r0, [pc, #88]	; 1d264 <USBFunction+0xdc>
   1d208:	eb00275f 	bl	26f8c <uspi_assertion_failed>
   1d20c:	e3a03000 	mov	r3, #0
   1d210:	e1560003 	cmp	r6, r3
   1d214:	e8840048 	stm	r4, {r3, r6}
   1d218:	1affffe3 	bne	1d1ac <USBFunction+0x24>
   1d21c:	e3a02024 	mov	r2, #36	; 0x24
   1d220:	e59f1034 	ldr	r1, [pc, #52]	; 1d25c <USBFunction+0xd4>
   1d224:	e59f003c 	ldr	r0, [pc, #60]	; 1d268 <USBFunction+0xe0>
   1d228:	eb002757 	bl	26f8c <uspi_assertion_failed>
   1d22c:	eaffffde 	b	1d1ac <USBFunction+0x24>
   1d230:	e3a02027 	mov	r2, #39	; 0x27
   1d234:	e59f1020 	ldr	r1, [pc, #32]	; 1d25c <USBFunction+0xd4>
   1d238:	e59f002c 	ldr	r0, [pc, #44]	; 1d26c <USBFunction+0xe4>
   1d23c:	eb002752 	bl	26f8c <uspi_assertion_failed>
   1d240:	e3550000 	cmp	r5, #0
   1d244:	1affffdf 	bne	1d1c8 <USBFunction+0x40>
   1d248:	e3a02028 	mov	r2, #40	; 0x28
   1d24c:	e59f1008 	ldr	r1, [pc, #8]	; 1d25c <USBFunction+0xd4>
   1d250:	e59f0018 	ldr	r0, [pc, #24]	; 1d270 <USBFunction+0xe8>
   1d254:	eb00274c 	bl	26f8c <uspi_assertion_failed>
   1d258:	eaffffda 	b	1d1c8 <USBFunction+0x40>
   1d25c:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d260:	0002abf8 	strdeq	sl, [r2], -r8
   1d264:	00029a68 	andeq	r9, r2, r8, ror #20
   1d268:	0002a108 	andeq	sl, r2, r8, lsl #2
   1d26c:	0002a280 	andeq	sl, r2, r0, lsl #5
   1d270:	0002abe4 	andeq	sl, r2, r4, ror #23

0001d274 <USBFunctionCopy>:
   1d274:	e92d4070 	push	{r4, r5, r6, lr}
   1d278:	e2504000 	subs	r4, r0, #0
   1d27c:	e1a05001 	mov	r5, r1
   1d280:	0a000019 	beq	1d2ec <USBFunctionCopy+0x78>
   1d284:	e3550000 	cmp	r5, #0
   1d288:	0a00001d 	beq	1d304 <USBFunctionCopy+0x90>
   1d28c:	e1c520d0 	ldrd	r2, [r5]
   1d290:	e3530000 	cmp	r3, #0
   1d294:	e1c420f0 	strd	r2, [r4]
   1d298:	0a00001e 	beq	1d318 <USBFunctionCopy+0xa4>
   1d29c:	e3a0001c 	mov	r0, #28
   1d2a0:	eb001f22 	bl	24f30 <malloc>
   1d2a4:	e3500000 	cmp	r0, #0
   1d2a8:	e5840008 	str	r0, [r4, #8]
   1d2ac:	0a00001e 	beq	1d32c <USBFunctionCopy+0xb8>
   1d2b0:	e5951008 	ldr	r1, [r5, #8]
   1d2b4:	e3510000 	cmp	r1, #0
   1d2b8:	0a000022 	beq	1d348 <USBFunctionCopy+0xd4>
   1d2bc:	e5940008 	ldr	r0, [r4, #8]
   1d2c0:	eb001d5a 	bl	24830 <USBConfigurationParserCopy>
   1d2c4:	e5940008 	ldr	r0, [r4, #8]
   1d2c8:	eb001dce 	bl	24a08 <USBConfigurationParserGetCurrentDescriptor>
   1d2cc:	e3500000 	cmp	r0, #0
   1d2d0:	e584000c 	str	r0, [r4, #12]
   1d2d4:	18bd8070 	popne	{r4, r5, r6, pc}
   1d2d8:	e3a0203f 	mov	r2, #63	; 0x3f
   1d2dc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d2e0:	e59f1078 	ldr	r1, [pc, #120]	; 1d360 <USBFunctionCopy+0xec>
   1d2e4:	e59f0078 	ldr	r0, [pc, #120]	; 1d364 <USBFunctionCopy+0xf0>
   1d2e8:	ea002727 	b	26f8c <uspi_assertion_failed>
   1d2ec:	e3a02031 	mov	r2, #49	; 0x31
   1d2f0:	e59f1068 	ldr	r1, [pc, #104]	; 1d360 <USBFunctionCopy+0xec>
   1d2f4:	e59f006c 	ldr	r0, [pc, #108]	; 1d368 <USBFunctionCopy+0xf4>
   1d2f8:	eb002723 	bl	26f8c <uspi_assertion_failed>
   1d2fc:	e3550000 	cmp	r5, #0
   1d300:	1affffe1 	bne	1d28c <USBFunctionCopy+0x18>
   1d304:	e3a02032 	mov	r2, #50	; 0x32
   1d308:	e59f1050 	ldr	r1, [pc, #80]	; 1d360 <USBFunctionCopy+0xec>
   1d30c:	e59f0058 	ldr	r0, [pc, #88]	; 1d36c <USBFunctionCopy+0xf8>
   1d310:	eb00271d 	bl	26f8c <uspi_assertion_failed>
   1d314:	eaffffdc 	b	1d28c <USBFunctionCopy+0x18>
   1d318:	e3a02037 	mov	r2, #55	; 0x37
   1d31c:	e59f103c 	ldr	r1, [pc, #60]	; 1d360 <USBFunctionCopy+0xec>
   1d320:	e59f0048 	ldr	r0, [pc, #72]	; 1d370 <USBFunctionCopy+0xfc>
   1d324:	eb002718 	bl	26f8c <uspi_assertion_failed>
   1d328:	eaffffdb 	b	1d29c <USBFunctionCopy+0x28>
   1d32c:	e59f102c 	ldr	r1, [pc, #44]	; 1d360 <USBFunctionCopy+0xec>
   1d330:	e3a0203a 	mov	r2, #58	; 0x3a
   1d334:	e59f0038 	ldr	r0, [pc, #56]	; 1d374 <USBFunctionCopy+0x100>
   1d338:	eb002713 	bl	26f8c <uspi_assertion_failed>
   1d33c:	e5951008 	ldr	r1, [r5, #8]
   1d340:	e3510000 	cmp	r1, #0
   1d344:	1affffdc 	bne	1d2bc <USBFunctionCopy+0x48>
   1d348:	e59f1010 	ldr	r1, [pc, #16]	; 1d360 <USBFunctionCopy+0xec>
   1d34c:	e3a0203b 	mov	r2, #59	; 0x3b
   1d350:	e59f0020 	ldr	r0, [pc, #32]	; 1d378 <USBFunctionCopy+0x104>
   1d354:	eb00270c 	bl	26f8c <uspi_assertion_failed>
   1d358:	e5951008 	ldr	r1, [r5, #8]
   1d35c:	eaffffd6 	b	1d2bc <USBFunctionCopy+0x48>
   1d360:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d364:	0002abf8 	strdeq	sl, [r2], -r8
   1d368:	00029a68 	andeq	r9, r2, r8, ror #20
   1d36c:	0002ac18 	andeq	sl, r2, r8, lsl ip
   1d370:	0002a108 	andeq	sl, r2, r8, lsl #2
   1d374:	0002a280 	andeq	sl, r2, r0, lsl #5
   1d378:	0002ac28 	andeq	sl, r2, r8, lsr #24

0001d37c <_USBFunction>:
   1d37c:	e92d4070 	push	{r4, r5, r6, lr}
   1d380:	e2504000 	subs	r4, r0, #0
   1d384:	0a000009 	beq	1d3b0 <_USBFunction+0x34>
   1d388:	e3a05000 	mov	r5, #0
   1d38c:	e5940008 	ldr	r0, [r4, #8]
   1d390:	e584500c 	str	r5, [r4, #12]
   1d394:	eb001d44 	bl	248ac <_USBConfigurationParser>
   1d398:	e5940008 	ldr	r0, [r4, #8]
   1d39c:	eb001f49 	bl	250c8 <free>
   1d3a0:	e5845008 	str	r5, [r4, #8]
   1d3a4:	e5845004 	str	r5, [r4, #4]
   1d3a8:	e5845000 	str	r5, [r4]
   1d3ac:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d3b0:	e3a02044 	mov	r2, #68	; 0x44
   1d3b4:	e59f1008 	ldr	r1, [pc, #8]	; 1d3c4 <_USBFunction+0x48>
   1d3b8:	e59f0008 	ldr	r0, [pc, #8]	; 1d3c8 <_USBFunction+0x4c>
   1d3bc:	eb0026f2 	bl	26f8c <uspi_assertion_failed>
   1d3c0:	eafffff0 	b	1d388 <_USBFunction+0xc>
   1d3c4:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d3c8:	00029a68 	andeq	r9, r2, r8, ror #20

0001d3cc <USBFunctionGetInterfaceName>:
   1d3cc:	e92d4030 	push	{r4, r5, lr}
   1d3d0:	e2505000 	subs	r5, r0, #0
   1d3d4:	e24dd00c 	sub	sp, sp, #12
   1d3d8:	0a000011 	beq	1d424 <USBFunctionGetInterfaceName+0x58>
   1d3dc:	e3a0000c 	mov	r0, #12
   1d3e0:	eb001ed2 	bl	24f30 <malloc>
   1d3e4:	e2504000 	subs	r4, r0, #0
   1d3e8:	0a000015 	beq	1d444 <USBFunctionGetInterfaceName+0x78>
   1d3ec:	e59f1088 	ldr	r1, [pc, #136]	; 1d47c <USBFunctionGetInterfaceName+0xb0>
   1d3f0:	e1a00004 	mov	r0, r4
   1d3f4:	eb0008d1 	bl	1f740 <String2>
   1d3f8:	e595100c 	ldr	r1, [r5, #12]
   1d3fc:	e3510000 	cmp	r1, #0
   1d400:	0a000004 	beq	1d418 <USBFunctionGetInterfaceName+0x4c>
   1d404:	e5d12005 	ldrb	r2, [r1, #5]
   1d408:	e2423001 	sub	r3, r2, #1
   1d40c:	e6ef3073 	uxtb	r3, r3
   1d410:	e35300fd 	cmp	r3, #253	; 0xfd
   1d414:	9a00000f 	bls	1d458 <USBFunctionGetInterfaceName+0x8c>
   1d418:	e1a00004 	mov	r0, r4
   1d41c:	e28dd00c 	add	sp, sp, #12
   1d420:	e8bd8030 	pop	{r4, r5, pc}
   1d424:	e3a02068 	mov	r2, #104	; 0x68
   1d428:	e59f1050 	ldr	r1, [pc, #80]	; 1d480 <USBFunctionGetInterfaceName+0xb4>
   1d42c:	e59f0050 	ldr	r0, [pc, #80]	; 1d484 <USBFunctionGetInterfaceName+0xb8>
   1d430:	eb0026d5 	bl	26f8c <uspi_assertion_failed>
   1d434:	e3a0000c 	mov	r0, #12
   1d438:	eb001ebc 	bl	24f30 <malloc>
   1d43c:	e2504000 	subs	r4, r0, #0
   1d440:	1affffe9 	bne	1d3ec <USBFunctionGetInterfaceName+0x20>
   1d444:	e3a0206b 	mov	r2, #107	; 0x6b
   1d448:	e59f1030 	ldr	r1, [pc, #48]	; 1d480 <USBFunctionGetInterfaceName+0xb4>
   1d44c:	e59f0034 	ldr	r0, [pc, #52]	; 1d488 <USBFunctionGetInterfaceName+0xbc>
   1d450:	eb0026cd 	bl	26f8c <uspi_assertion_failed>
   1d454:	eaffffe4 	b	1d3ec <USBFunctionGetInterfaceName+0x20>
   1d458:	e5d13006 	ldrb	r3, [r1, #6]
   1d45c:	e5d11007 	ldrb	r1, [r1, #7]
   1d460:	e1a00004 	mov	r0, r4
   1d464:	e58d1000 	str	r1, [sp]
   1d468:	e59f101c 	ldr	r1, [pc, #28]	; 1d48c <USBFunctionGetInterfaceName+0xc0>
   1d46c:	eb000b64 	bl	20204 <StringFormat>
   1d470:	e1a00004 	mov	r0, r4
   1d474:	e28dd00c 	add	sp, sp, #12
   1d478:	e8bd8030 	pop	{r4, r5, pc}
   1d47c:	0002a248 	andeq	sl, r2, r8, asr #4
   1d480:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d484:	00029a68 	andeq	r9, r2, r8, ror #20
   1d488:	0002a204 	andeq	sl, r2, r4, lsl #4
   1d48c:	0002ac48 	andeq	sl, r2, r8, asr #24

0001d490 <USBFunctionGetNumEndpoints>:
   1d490:	e92d4010 	push	{r4, lr}
   1d494:	e2504000 	subs	r4, r0, #0
   1d498:	0a000004 	beq	1d4b0 <USBFunctionGetNumEndpoints+0x20>
   1d49c:	e594300c 	ldr	r3, [r4, #12]
   1d4a0:	e3530000 	cmp	r3, #0
   1d4a4:	0a000008 	beq	1d4cc <USBFunctionGetNumEndpoints+0x3c>
   1d4a8:	e5d30004 	ldrb	r0, [r3, #4]
   1d4ac:	e8bd8010 	pop	{r4, pc}
   1d4b0:	e3a0207d 	mov	r2, #125	; 0x7d
   1d4b4:	e59f102c 	ldr	r1, [pc, #44]	; 1d4e8 <USBFunctionGetNumEndpoints+0x58>
   1d4b8:	e59f002c 	ldr	r0, [pc, #44]	; 1d4ec <USBFunctionGetNumEndpoints+0x5c>
   1d4bc:	eb0026b2 	bl	26f8c <uspi_assertion_failed>
   1d4c0:	e594300c 	ldr	r3, [r4, #12]
   1d4c4:	e3530000 	cmp	r3, #0
   1d4c8:	1afffff6 	bne	1d4a8 <USBFunctionGetNumEndpoints+0x18>
   1d4cc:	e3a0207e 	mov	r2, #126	; 0x7e
   1d4d0:	e59f1010 	ldr	r1, [pc, #16]	; 1d4e8 <USBFunctionGetNumEndpoints+0x58>
   1d4d4:	e59f0014 	ldr	r0, [pc, #20]	; 1d4f0 <USBFunctionGetNumEndpoints+0x60>
   1d4d8:	eb0026ab 	bl	26f8c <uspi_assertion_failed>
   1d4dc:	e594300c 	ldr	r3, [r4, #12]
   1d4e0:	e5d30004 	ldrb	r0, [r3, #4]
   1d4e4:	e8bd8010 	pop	{r4, pc}
   1d4e8:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d4ec:	00029a68 	andeq	r9, r2, r8, ror #20
   1d4f0:	0002abf8 	strdeq	sl, [r2], -r8

0001d4f4 <USBFunctionGetDevice>:
   1d4f4:	e92d4010 	push	{r4, lr}
   1d4f8:	e2504000 	subs	r4, r0, #0
   1d4fc:	0a000008 	beq	1d524 <USBFunctionGetDevice+0x30>
   1d500:	e5940004 	ldr	r0, [r4, #4]
   1d504:	e3500000 	cmp	r0, #0
   1d508:	18bd8010 	popne	{r4, pc}
   1d50c:	e3a02085 	mov	r2, #133	; 0x85
   1d510:	e59f1020 	ldr	r1, [pc, #32]	; 1d538 <USBFunctionGetDevice+0x44>
   1d514:	e59f0020 	ldr	r0, [pc, #32]	; 1d53c <USBFunctionGetDevice+0x48>
   1d518:	eb00269b 	bl	26f8c <uspi_assertion_failed>
   1d51c:	e5940004 	ldr	r0, [r4, #4]
   1d520:	e8bd8010 	pop	{r4, pc}
   1d524:	e3a02084 	mov	r2, #132	; 0x84
   1d528:	e59f1008 	ldr	r1, [pc, #8]	; 1d538 <USBFunctionGetDevice+0x44>
   1d52c:	e59f000c 	ldr	r0, [pc, #12]	; 1d540 <USBFunctionGetDevice+0x4c>
   1d530:	eb002695 	bl	26f8c <uspi_assertion_failed>
   1d534:	eafffff1 	b	1d500 <USBFunctionGetDevice+0xc>
   1d538:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d53c:	0002a108 	andeq	sl, r2, r8, lsl #2
   1d540:	00029a68 	andeq	r9, r2, r8, ror #20

0001d544 <USBFunctionGetEndpoint0>:
   1d544:	e92d4010 	push	{r4, lr}
   1d548:	e2504000 	subs	r4, r0, #0
   1d54c:	0a000004 	beq	1d564 <USBFunctionGetEndpoint0+0x20>
   1d550:	e5940004 	ldr	r0, [r4, #4]
   1d554:	e3500000 	cmp	r0, #0
   1d558:	0a000008 	beq	1d580 <USBFunctionGetEndpoint0+0x3c>
   1d55c:	e8bd4010 	pop	{r4, lr}
   1d560:	eafff44e 	b	1a6a0 <USBDeviceGetEndpoint0>
   1d564:	e59f0030 	ldr	r0, [pc, #48]	; 1d59c <USBFunctionGetEndpoint0+0x58>
   1d568:	e3a0208b 	mov	r2, #139	; 0x8b
   1d56c:	e59f102c 	ldr	r1, [pc, #44]	; 1d5a0 <USBFunctionGetEndpoint0+0x5c>
   1d570:	eb002685 	bl	26f8c <uspi_assertion_failed>
   1d574:	e5940004 	ldr	r0, [r4, #4]
   1d578:	e3500000 	cmp	r0, #0
   1d57c:	1afffff6 	bne	1d55c <USBFunctionGetEndpoint0+0x18>
   1d580:	e59f001c 	ldr	r0, [pc, #28]	; 1d5a4 <USBFunctionGetEndpoint0+0x60>
   1d584:	e3a0208c 	mov	r2, #140	; 0x8c
   1d588:	e59f1010 	ldr	r1, [pc, #16]	; 1d5a0 <USBFunctionGetEndpoint0+0x5c>
   1d58c:	eb00267e 	bl	26f8c <uspi_assertion_failed>
   1d590:	e5940004 	ldr	r0, [r4, #4]
   1d594:	e8bd4010 	pop	{r4, lr}
   1d598:	eafff440 	b	1a6a0 <USBDeviceGetEndpoint0>
   1d59c:	00029a68 	andeq	r9, r2, r8, ror #20
   1d5a0:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d5a4:	0002a108 	andeq	sl, r2, r8, lsl #2

0001d5a8 <USBFunctionGetHost>:
   1d5a8:	e92d4010 	push	{r4, lr}
   1d5ac:	e2504000 	subs	r4, r0, #0
   1d5b0:	0a000004 	beq	1d5c8 <USBFunctionGetHost+0x20>
   1d5b4:	e5940004 	ldr	r0, [r4, #4]
   1d5b8:	e3500000 	cmp	r0, #0
   1d5bc:	0a000008 	beq	1d5e4 <USBFunctionGetHost+0x3c>
   1d5c0:	e8bd4010 	pop	{r4, lr}
   1d5c4:	eafff44b 	b	1a6f8 <USBDeviceGetHost>
   1d5c8:	e59f0030 	ldr	r0, [pc, #48]	; 1d600 <USBFunctionGetHost+0x58>
   1d5cc:	e3a02092 	mov	r2, #146	; 0x92
   1d5d0:	e59f102c 	ldr	r1, [pc, #44]	; 1d604 <USBFunctionGetHost+0x5c>
   1d5d4:	eb00266c 	bl	26f8c <uspi_assertion_failed>
   1d5d8:	e5940004 	ldr	r0, [r4, #4]
   1d5dc:	e3500000 	cmp	r0, #0
   1d5e0:	1afffff6 	bne	1d5c0 <USBFunctionGetHost+0x18>
   1d5e4:	e59f001c 	ldr	r0, [pc, #28]	; 1d608 <USBFunctionGetHost+0x60>
   1d5e8:	e3a02093 	mov	r2, #147	; 0x93
   1d5ec:	e59f1010 	ldr	r1, [pc, #16]	; 1d604 <USBFunctionGetHost+0x5c>
   1d5f0:	eb002665 	bl	26f8c <uspi_assertion_failed>
   1d5f4:	e5940004 	ldr	r0, [r4, #4]
   1d5f8:	e8bd4010 	pop	{r4, lr}
   1d5fc:	eafff43d 	b	1a6f8 <USBDeviceGetHost>
   1d600:	00029a68 	andeq	r9, r2, r8, ror #20
   1d604:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d608:	0002a108 	andeq	sl, r2, r8, lsl #2

0001d60c <USBFunctionConfigure>:
   1d60c:	e92d4070 	push	{r4, r5, r6, lr}
   1d610:	e2504000 	subs	r4, r0, #0
   1d614:	e24dd010 	sub	sp, sp, #16
   1d618:	0a000022 	beq	1d6a8 <USBFunctionConfigure+0x9c>
   1d61c:	e594300c 	ldr	r3, [r4, #12]
   1d620:	e3530000 	cmp	r3, #0
   1d624:	0a000026 	beq	1d6c4 <USBFunctionConfigure+0xb8>
   1d628:	e5d33003 	ldrb	r3, [r3, #3]
   1d62c:	e3530000 	cmp	r3, #0
   1d630:	1a000002 	bne	1d640 <USBFunctionConfigure+0x34>
   1d634:	e3a00001 	mov	r0, #1
   1d638:	e28dd010 	add	sp, sp, #16
   1d63c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1d640:	e1a00004 	mov	r0, r4
   1d644:	ebffffd7 	bl	1d5a8 <USBFunctionGetHost>
   1d648:	e3a05000 	mov	r5, #0
   1d64c:	e1a06000 	mov	r6, r0
   1d650:	e1a00004 	mov	r0, r4
   1d654:	ebffffba 	bl	1d544 <USBFunctionGetEndpoint0>
   1d658:	e594300c 	ldr	r3, [r4, #12]
   1d65c:	e58d500c 	str	r5, [sp, #12]
   1d660:	e58d5008 	str	r5, [sp, #8]
   1d664:	e5d32002 	ldrb	r2, [r3, #2]
   1d668:	e1a01000 	mov	r1, r0
   1d66c:	e58d2004 	str	r2, [sp, #4]
   1d670:	e5d33003 	ldrb	r3, [r3, #3]
   1d674:	e1a00006 	mov	r0, r6
   1d678:	e58d3000 	str	r3, [sp]
   1d67c:	e3a02001 	mov	r2, #1
   1d680:	e3a0300b 	mov	r3, #11
   1d684:	ebffe82f 	bl	17748 <DWHCIDeviceControlMessage>
   1d688:	e1500005 	cmp	r0, r5
   1d68c:	aaffffe8 	bge	1d634 <USBFunctionConfigure+0x28>
   1d690:	e59f0044 	ldr	r0, [pc, #68]	; 1d6dc <USBFunctionConfigure+0xd0>
   1d694:	e59f2044 	ldr	r2, [pc, #68]	; 1d6e0 <USBFunctionConfigure+0xd4>
   1d698:	e3a01001 	mov	r1, #1
   1d69c:	eb002628 	bl	26f44 <LogWrite>
   1d6a0:	e1a00005 	mov	r0, r5
   1d6a4:	eaffffe3 	b	1d638 <USBFunctionConfigure+0x2c>
   1d6a8:	e3a02053 	mov	r2, #83	; 0x53
   1d6ac:	e59f1030 	ldr	r1, [pc, #48]	; 1d6e4 <USBFunctionConfigure+0xd8>
   1d6b0:	e59f0030 	ldr	r0, [pc, #48]	; 1d6e8 <USBFunctionConfigure+0xdc>
   1d6b4:	eb002634 	bl	26f8c <uspi_assertion_failed>
   1d6b8:	e594300c 	ldr	r3, [r4, #12]
   1d6bc:	e3530000 	cmp	r3, #0
   1d6c0:	1affffd8 	bne	1d628 <USBFunctionConfigure+0x1c>
   1d6c4:	e3a02055 	mov	r2, #85	; 0x55
   1d6c8:	e59f1014 	ldr	r1, [pc, #20]	; 1d6e4 <USBFunctionConfigure+0xd8>
   1d6cc:	e59f0018 	ldr	r0, [pc, #24]	; 1d6ec <USBFunctionConfigure+0xe0>
   1d6d0:	eb00262d 	bl	26f8c <uspi_assertion_failed>
   1d6d4:	e594300c 	ldr	r3, [r4, #12]
   1d6d8:	eaffffd2 	b	1d628 <USBFunctionConfigure+0x1c>
   1d6dc:	00028574 	andeq	r8, r2, r4, ror r5
   1d6e0:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   1d6e4:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d6e8:	00029a68 	andeq	r9, r2, r8, ror #20
   1d6ec:	0002abf8 	strdeq	sl, [r2], -r8

0001d6f0 <USBFunctionGetDescriptor>:
   1d6f0:	e92d4070 	push	{r4, r5, r6, lr}
   1d6f4:	e2504000 	subs	r4, r0, #0
   1d6f8:	e1a05001 	mov	r5, r1
   1d6fc:	0a000005 	beq	1d718 <USBFunctionGetDescriptor+0x28>
   1d700:	e5940008 	ldr	r0, [r4, #8]
   1d704:	e3500000 	cmp	r0, #0
   1d708:	0a000009 	beq	1d734 <USBFunctionGetDescriptor+0x44>
   1d70c:	e1a01005 	mov	r1, r5
   1d710:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d714:	ea001c7e 	b	24914 <USBConfigurationParserGetDescriptor>
   1d718:	e59f0034 	ldr	r0, [pc, #52]	; 1d754 <USBFunctionGetDescriptor+0x64>
   1d71c:	e3a02099 	mov	r2, #153	; 0x99
   1d720:	e59f1030 	ldr	r1, [pc, #48]	; 1d758 <USBFunctionGetDescriptor+0x68>
   1d724:	eb002618 	bl	26f8c <uspi_assertion_failed>
   1d728:	e5940008 	ldr	r0, [r4, #8]
   1d72c:	e3500000 	cmp	r0, #0
   1d730:	1afffff5 	bne	1d70c <USBFunctionGetDescriptor+0x1c>
   1d734:	e59f101c 	ldr	r1, [pc, #28]	; 1d758 <USBFunctionGetDescriptor+0x68>
   1d738:	e59f001c 	ldr	r0, [pc, #28]	; 1d75c <USBFunctionGetDescriptor+0x6c>
   1d73c:	e3a0209a 	mov	r2, #154	; 0x9a
   1d740:	eb002611 	bl	26f8c <uspi_assertion_failed>
   1d744:	e5940008 	ldr	r0, [r4, #8]
   1d748:	e1a01005 	mov	r1, r5
   1d74c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d750:	ea001c6f 	b	24914 <USBConfigurationParserGetDescriptor>
   1d754:	00029a68 	andeq	r9, r2, r8, ror #20
   1d758:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d75c:	0002a280 	andeq	sl, r2, r0, lsl #5

0001d760 <USBFunctionConfigurationError>:
   1d760:	e92d4070 	push	{r4, r5, r6, lr}
   1d764:	e2504000 	subs	r4, r0, #0
   1d768:	e1a05001 	mov	r5, r1
   1d76c:	0a000008 	beq	1d794 <USBFunctionConfigurationError+0x34>
   1d770:	e5943008 	ldr	r3, [r4, #8]
   1d774:	e3530000 	cmp	r3, #0
   1d778:	0a00000c 	beq	1d7b0 <USBFunctionConfigurationError+0x50>
   1d77c:	e3550000 	cmp	r5, #0
   1d780:	0a000010 	beq	1d7c8 <USBFunctionConfigurationError+0x68>
   1d784:	e1a01005 	mov	r1, r5
   1d788:	e5940008 	ldr	r0, [r4, #8]
   1d78c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d790:	ea001cb2 	b	24a60 <USBConfigurationParserError>
   1d794:	e3a020a0 	mov	r2, #160	; 0xa0
   1d798:	e59f1048 	ldr	r1, [pc, #72]	; 1d7e8 <USBFunctionConfigurationError+0x88>
   1d79c:	e59f0048 	ldr	r0, [pc, #72]	; 1d7ec <USBFunctionConfigurationError+0x8c>
   1d7a0:	eb0025f9 	bl	26f8c <uspi_assertion_failed>
   1d7a4:	e5943008 	ldr	r3, [r4, #8]
   1d7a8:	e3530000 	cmp	r3, #0
   1d7ac:	1afffff2 	bne	1d77c <USBFunctionConfigurationError+0x1c>
   1d7b0:	e3a020a1 	mov	r2, #161	; 0xa1
   1d7b4:	e59f102c 	ldr	r1, [pc, #44]	; 1d7e8 <USBFunctionConfigurationError+0x88>
   1d7b8:	e59f0030 	ldr	r0, [pc, #48]	; 1d7f0 <USBFunctionConfigurationError+0x90>
   1d7bc:	eb0025f2 	bl	26f8c <uspi_assertion_failed>
   1d7c0:	e3550000 	cmp	r5, #0
   1d7c4:	1affffee 	bne	1d784 <USBFunctionConfigurationError+0x24>
   1d7c8:	e59f1018 	ldr	r1, [pc, #24]	; 1d7e8 <USBFunctionConfigurationError+0x88>
   1d7cc:	e59f0020 	ldr	r0, [pc, #32]	; 1d7f4 <USBFunctionConfigurationError+0x94>
   1d7d0:	e3a020a2 	mov	r2, #162	; 0xa2
   1d7d4:	eb0025ec 	bl	26f8c <uspi_assertion_failed>
   1d7d8:	e1a01005 	mov	r1, r5
   1d7dc:	e5940008 	ldr	r0, [r4, #8]
   1d7e0:	e8bd4070 	pop	{r4, r5, r6, lr}
   1d7e4:	ea001c9d 	b	24a60 <USBConfigurationParserError>
   1d7e8:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d7ec:	00029a68 	andeq	r9, r2, r8, ror #20
   1d7f0:	0002a280 	andeq	sl, r2, r0, lsl #5
   1d7f4:	0002ac54 	andeq	sl, r2, r4, asr ip

0001d7f8 <USBFunctionSelectInterfaceByClass>:
   1d7f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1d7fc:	e2504000 	subs	r4, r0, #0
   1d800:	e1a05001 	mov	r5, r1
   1d804:	e1a06002 	mov	r6, r2
   1d808:	e1a07003 	mov	r7, r3
   1d80c:	0a00001e 	beq	1d88c <USBFunctionSelectInterfaceByClass+0x94>
   1d810:	e594300c 	ldr	r3, [r4, #12]
   1d814:	e3530000 	cmp	r3, #0
   1d818:	0a000022 	beq	1d8a8 <USBFunctionSelectInterfaceByClass+0xb0>
   1d81c:	e5943008 	ldr	r3, [r4, #8]
   1d820:	e3530000 	cmp	r3, #0
   1d824:	0a000026 	beq	1d8c4 <USBFunctionSelectInterfaceByClass+0xcc>
   1d828:	e5943004 	ldr	r3, [r4, #4]
   1d82c:	e3530000 	cmp	r3, #0
   1d830:	0a00002a 	beq	1d8e0 <USBFunctionSelectInterfaceByClass+0xe8>
   1d834:	e594000c 	ldr	r0, [r4, #12]
   1d838:	ea000008 	b	1d860 <USBFunctionSelectInterfaceByClass+0x68>
   1d83c:	e3a01004 	mov	r1, #4
   1d840:	e5940004 	ldr	r0, [r4, #4]
   1d844:	ebfff3eb 	bl	1a7f8 <USBDeviceGetDescriptor>
   1d848:	e3a01004 	mov	r1, #4
   1d84c:	e5940008 	ldr	r0, [r4, #8]
   1d850:	eb001c2f 	bl	24914 <USBConfigurationParserGetDescriptor>
   1d854:	e3500000 	cmp	r0, #0
   1d858:	e584000c 	str	r0, [r4, #12]
   1d85c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   1d860:	e5d03005 	ldrb	r3, [r0, #5]
   1d864:	e1530005 	cmp	r3, r5
   1d868:	1afffff3 	bne	1d83c <USBFunctionSelectInterfaceByClass+0x44>
   1d86c:	e5d03006 	ldrb	r3, [r0, #6]
   1d870:	e1530006 	cmp	r3, r6
   1d874:	1afffff0 	bne	1d83c <USBFunctionSelectInterfaceByClass+0x44>
   1d878:	e5d03007 	ldrb	r3, [r0, #7]
   1d87c:	e1530007 	cmp	r3, r7
   1d880:	1affffed 	bne	1d83c <USBFunctionSelectInterfaceByClass+0x44>
   1d884:	e3a00001 	mov	r0, #1
   1d888:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1d88c:	e3a020a8 	mov	r2, #168	; 0xa8
   1d890:	e59f105c 	ldr	r1, [pc, #92]	; 1d8f4 <USBFunctionSelectInterfaceByClass+0xfc>
   1d894:	e59f005c 	ldr	r0, [pc, #92]	; 1d8f8 <USBFunctionSelectInterfaceByClass+0x100>
   1d898:	eb0025bb 	bl	26f8c <uspi_assertion_failed>
   1d89c:	e594300c 	ldr	r3, [r4, #12]
   1d8a0:	e3530000 	cmp	r3, #0
   1d8a4:	1affffdc 	bne	1d81c <USBFunctionSelectInterfaceByClass+0x24>
   1d8a8:	e3a020a9 	mov	r2, #169	; 0xa9
   1d8ac:	e59f1040 	ldr	r1, [pc, #64]	; 1d8f4 <USBFunctionSelectInterfaceByClass+0xfc>
   1d8b0:	e59f0044 	ldr	r0, [pc, #68]	; 1d8fc <USBFunctionSelectInterfaceByClass+0x104>
   1d8b4:	eb0025b4 	bl	26f8c <uspi_assertion_failed>
   1d8b8:	e5943008 	ldr	r3, [r4, #8]
   1d8bc:	e3530000 	cmp	r3, #0
   1d8c0:	1affffd8 	bne	1d828 <USBFunctionSelectInterfaceByClass+0x30>
   1d8c4:	e3a020aa 	mov	r2, #170	; 0xaa
   1d8c8:	e59f1024 	ldr	r1, [pc, #36]	; 1d8f4 <USBFunctionSelectInterfaceByClass+0xfc>
   1d8cc:	e59f002c 	ldr	r0, [pc, #44]	; 1d900 <USBFunctionSelectInterfaceByClass+0x108>
   1d8d0:	eb0025ad 	bl	26f8c <uspi_assertion_failed>
   1d8d4:	e5943004 	ldr	r3, [r4, #4]
   1d8d8:	e3530000 	cmp	r3, #0
   1d8dc:	1affffd4 	bne	1d834 <USBFunctionSelectInterfaceByClass+0x3c>
   1d8e0:	e3a020ab 	mov	r2, #171	; 0xab
   1d8e4:	e59f1008 	ldr	r1, [pc, #8]	; 1d8f4 <USBFunctionSelectInterfaceByClass+0xfc>
   1d8e8:	e59f0014 	ldr	r0, [pc, #20]	; 1d904 <USBFunctionSelectInterfaceByClass+0x10c>
   1d8ec:	eb0025a6 	bl	26f8c <uspi_assertion_failed>
   1d8f0:	eaffffcf 	b	1d834 <USBFunctionSelectInterfaceByClass+0x3c>
   1d8f4:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d8f8:	00029a68 	andeq	r9, r2, r8, ror #20
   1d8fc:	0002abf8 	strdeq	sl, [r2], -r8
   1d900:	0002a280 	andeq	sl, r2, r0, lsl #5
   1d904:	0002a108 	andeq	sl, r2, r8, lsl #2

0001d908 <USBFunctionGetInterfaceNumber>:
   1d908:	e92d4010 	push	{r4, lr}
   1d90c:	e2504000 	subs	r4, r0, #0
   1d910:	0a000004 	beq	1d928 <USBFunctionGetInterfaceNumber+0x20>
   1d914:	e594300c 	ldr	r3, [r4, #12]
   1d918:	e3530000 	cmp	r3, #0
   1d91c:	0a000008 	beq	1d944 <USBFunctionGetInterfaceNumber+0x3c>
   1d920:	e5d30002 	ldrb	r0, [r3, #2]
   1d924:	e8bd8010 	pop	{r4, pc}
   1d928:	e3a020c1 	mov	r2, #193	; 0xc1
   1d92c:	e59f102c 	ldr	r1, [pc, #44]	; 1d960 <USBFunctionGetInterfaceNumber+0x58>
   1d930:	e59f002c 	ldr	r0, [pc, #44]	; 1d964 <USBFunctionGetInterfaceNumber+0x5c>
   1d934:	eb002594 	bl	26f8c <uspi_assertion_failed>
   1d938:	e594300c 	ldr	r3, [r4, #12]
   1d93c:	e3530000 	cmp	r3, #0
   1d940:	1afffff6 	bne	1d920 <USBFunctionGetInterfaceNumber+0x18>
   1d944:	e3a020c2 	mov	r2, #194	; 0xc2
   1d948:	e59f1010 	ldr	r1, [pc, #16]	; 1d960 <USBFunctionGetInterfaceNumber+0x58>
   1d94c:	e59f0014 	ldr	r0, [pc, #20]	; 1d968 <USBFunctionGetInterfaceNumber+0x60>
   1d950:	eb00258d 	bl	26f8c <uspi_assertion_failed>
   1d954:	e594300c 	ldr	r3, [r4, #12]
   1d958:	e5d30002 	ldrb	r0, [r3, #2]
   1d95c:	e8bd8010 	pop	{r4, pc}
   1d960:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d964:	00029a68 	andeq	r9, r2, r8, ror #20
   1d968:	0002abf8 	strdeq	sl, [r2], -r8

0001d96c <USBFunctionGetInterfaceClass>:
   1d96c:	e92d4010 	push	{r4, lr}
   1d970:	e2504000 	subs	r4, r0, #0
   1d974:	0a000004 	beq	1d98c <USBFunctionGetInterfaceClass+0x20>
   1d978:	e594300c 	ldr	r3, [r4, #12]
   1d97c:	e3530000 	cmp	r3, #0
   1d980:	0a000008 	beq	1d9a8 <USBFunctionGetInterfaceClass+0x3c>
   1d984:	e5d30005 	ldrb	r0, [r3, #5]
   1d988:	e8bd8010 	pop	{r4, pc}
   1d98c:	e3a020c8 	mov	r2, #200	; 0xc8
   1d990:	e59f102c 	ldr	r1, [pc, #44]	; 1d9c4 <USBFunctionGetInterfaceClass+0x58>
   1d994:	e59f002c 	ldr	r0, [pc, #44]	; 1d9c8 <USBFunctionGetInterfaceClass+0x5c>
   1d998:	eb00257b 	bl	26f8c <uspi_assertion_failed>
   1d99c:	e594300c 	ldr	r3, [r4, #12]
   1d9a0:	e3530000 	cmp	r3, #0
   1d9a4:	1afffff6 	bne	1d984 <USBFunctionGetInterfaceClass+0x18>
   1d9a8:	e3a020c9 	mov	r2, #201	; 0xc9
   1d9ac:	e59f1010 	ldr	r1, [pc, #16]	; 1d9c4 <USBFunctionGetInterfaceClass+0x58>
   1d9b0:	e59f0014 	ldr	r0, [pc, #20]	; 1d9cc <USBFunctionGetInterfaceClass+0x60>
   1d9b4:	eb002574 	bl	26f8c <uspi_assertion_failed>
   1d9b8:	e594300c 	ldr	r3, [r4, #12]
   1d9bc:	e5d30005 	ldrb	r0, [r3, #5]
   1d9c0:	e8bd8010 	pop	{r4, pc}
   1d9c4:	0002abd4 	ldrdeq	sl, [r2], -r4
   1d9c8:	00029a68 	andeq	r9, r2, r8, ror #20
   1d9cc:	0002abf8 	strdeq	sl, [r2], -r8

0001d9d0 <USBFunctionGetInterfaceSubClass>:
   1d9d0:	e92d4010 	push	{r4, lr}
   1d9d4:	e2504000 	subs	r4, r0, #0
   1d9d8:	0a000004 	beq	1d9f0 <USBFunctionGetInterfaceSubClass+0x20>
   1d9dc:	e594300c 	ldr	r3, [r4, #12]
   1d9e0:	e3530000 	cmp	r3, #0
   1d9e4:	0a000008 	beq	1da0c <USBFunctionGetInterfaceSubClass+0x3c>
   1d9e8:	e5d30006 	ldrb	r0, [r3, #6]
   1d9ec:	e8bd8010 	pop	{r4, pc}
   1d9f0:	e3a020cf 	mov	r2, #207	; 0xcf
   1d9f4:	e59f102c 	ldr	r1, [pc, #44]	; 1da28 <USBFunctionGetInterfaceSubClass+0x58>
   1d9f8:	e59f002c 	ldr	r0, [pc, #44]	; 1da2c <USBFunctionGetInterfaceSubClass+0x5c>
   1d9fc:	eb002562 	bl	26f8c <uspi_assertion_failed>
   1da00:	e594300c 	ldr	r3, [r4, #12]
   1da04:	e3530000 	cmp	r3, #0
   1da08:	1afffff6 	bne	1d9e8 <USBFunctionGetInterfaceSubClass+0x18>
   1da0c:	e3a020d0 	mov	r2, #208	; 0xd0
   1da10:	e59f1010 	ldr	r1, [pc, #16]	; 1da28 <USBFunctionGetInterfaceSubClass+0x58>
   1da14:	e59f0014 	ldr	r0, [pc, #20]	; 1da30 <USBFunctionGetInterfaceSubClass+0x60>
   1da18:	eb00255b 	bl	26f8c <uspi_assertion_failed>
   1da1c:	e594300c 	ldr	r3, [r4, #12]
   1da20:	e5d30006 	ldrb	r0, [r3, #6]
   1da24:	e8bd8010 	pop	{r4, pc}
   1da28:	0002abd4 	ldrdeq	sl, [r2], -r4
   1da2c:	00029a68 	andeq	r9, r2, r8, ror #20
   1da30:	0002abf8 	strdeq	sl, [r2], -r8

0001da34 <USBFunctionGetInterfaceProtocol>:
   1da34:	e92d4010 	push	{r4, lr}
   1da38:	e2504000 	subs	r4, r0, #0
   1da3c:	0a000004 	beq	1da54 <USBFunctionGetInterfaceProtocol+0x20>
   1da40:	e594300c 	ldr	r3, [r4, #12]
   1da44:	e3530000 	cmp	r3, #0
   1da48:	0a000008 	beq	1da70 <USBFunctionGetInterfaceProtocol+0x3c>
   1da4c:	e5d30007 	ldrb	r0, [r3, #7]
   1da50:	e8bd8010 	pop	{r4, pc}
   1da54:	e3a020d6 	mov	r2, #214	; 0xd6
   1da58:	e59f102c 	ldr	r1, [pc, #44]	; 1da8c <USBFunctionGetInterfaceProtocol+0x58>
   1da5c:	e59f002c 	ldr	r0, [pc, #44]	; 1da90 <USBFunctionGetInterfaceProtocol+0x5c>
   1da60:	eb002549 	bl	26f8c <uspi_assertion_failed>
   1da64:	e594300c 	ldr	r3, [r4, #12]
   1da68:	e3530000 	cmp	r3, #0
   1da6c:	1afffff6 	bne	1da4c <USBFunctionGetInterfaceProtocol+0x18>
   1da70:	e3a020d7 	mov	r2, #215	; 0xd7
   1da74:	e59f1010 	ldr	r1, [pc, #16]	; 1da8c <USBFunctionGetInterfaceProtocol+0x58>
   1da78:	e59f0014 	ldr	r0, [pc, #20]	; 1da94 <USBFunctionGetInterfaceProtocol+0x60>
   1da7c:	eb002542 	bl	26f8c <uspi_assertion_failed>
   1da80:	e594300c 	ldr	r3, [r4, #12]
   1da84:	e5d30007 	ldrb	r0, [r3, #7]
   1da88:	e8bd8010 	pop	{r4, pc}
   1da8c:	0002abd4 	ldrdeq	sl, [r2], -r4
   1da90:	00029a68 	andeq	r9, r2, r8, ror #20
   1da94:	0002abf8 	strdeq	sl, [r2], -r8

0001da98 <SMSC951xDevice>:
   1da98:	e92d4070 	push	{r4, r5, r6, lr}
   1da9c:	e2504000 	subs	r4, r0, #0
   1daa0:	e1a05001 	mov	r5, r1
   1daa4:	0a000012 	beq	1daf4 <SMSC951xDevice+0x5c>
   1daa8:	e1a01005 	mov	r1, r5
   1daac:	e1a00004 	mov	r0, r4
   1dab0:	ebfffdef 	bl	1d274 <USBFunctionCopy>
   1dab4:	e3a03000 	mov	r3, #0
   1dab8:	e59f2048 	ldr	r2, [pc, #72]	; 1db08 <SMSC951xDevice+0x70>
   1dabc:	e5843010 	str	r3, [r4, #16]
   1dac0:	e5843014 	str	r3, [r4, #20]
   1dac4:	e5843024 	str	r3, [r4, #36]	; 0x24
   1dac8:	e5842000 	str	r2, [r4]
   1dacc:	e3a00d19 	mov	r0, #1600	; 0x640
   1dad0:	eb001d16 	bl	24f30 <malloc>
   1dad4:	e3500000 	cmp	r0, #0
   1dad8:	e5840024 	str	r0, [r4, #36]	; 0x24
   1dadc:	18bd8070 	popne	{r4, r5, r6, pc}
   1dae0:	e3a02093 	mov	r2, #147	; 0x93
   1dae4:	e8bd4070 	pop	{r4, r5, r6, lr}
   1dae8:	e59f101c 	ldr	r1, [pc, #28]	; 1db0c <SMSC951xDevice+0x74>
   1daec:	e59f001c 	ldr	r0, [pc, #28]	; 1db10 <SMSC951xDevice+0x78>
   1daf0:	ea002525 	b	26f8c <uspi_assertion_failed>
   1daf4:	e3a02089 	mov	r2, #137	; 0x89
   1daf8:	e59f100c 	ldr	r1, [pc, #12]	; 1db0c <SMSC951xDevice+0x74>
   1dafc:	e59f0010 	ldr	r0, [pc, #16]	; 1db14 <SMSC951xDevice+0x7c>
   1db00:	eb002521 	bl	26f8c <uspi_assertion_failed>
   1db04:	eaffffe7 	b	1daa8 <SMSC951xDevice+0x10>
   1db08:	0001df34 	andeq	sp, r1, r4, lsr pc
   1db0c:	0002ac64 	andeq	sl, r2, r4, ror #24
   1db10:	0002ac70 	andeq	sl, r2, r0, ror ip
   1db14:	00029a68 	andeq	r9, r2, r8, ror #20

0001db18 <_SMSC951xDevice>:
   1db18:	e92d4010 	push	{r4, lr}
   1db1c:	e2504000 	subs	r4, r0, #0
   1db20:	0a000018 	beq	1db88 <_SMSC951xDevice+0x70>
   1db24:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   1db28:	e3500000 	cmp	r0, #0
   1db2c:	0a000002 	beq	1db3c <_SMSC951xDevice+0x24>
   1db30:	eb001d64 	bl	250c8 <free>
   1db34:	e3a03000 	mov	r3, #0
   1db38:	e5843024 	str	r3, [r4, #36]	; 0x24
   1db3c:	e5940014 	ldr	r0, [r4, #20]
   1db40:	e3500000 	cmp	r0, #0
   1db44:	0a000004 	beq	1db5c <_SMSC951xDevice+0x44>
   1db48:	ebfff74a 	bl	1b878 <_USBEndpoint>
   1db4c:	e5940014 	ldr	r0, [r4, #20]
   1db50:	eb001d5c 	bl	250c8 <free>
   1db54:	e3a03000 	mov	r3, #0
   1db58:	e5843014 	str	r3, [r4, #20]
   1db5c:	e5940010 	ldr	r0, [r4, #16]
   1db60:	e3500000 	cmp	r0, #0
   1db64:	0a000004 	beq	1db7c <_SMSC951xDevice+0x64>
   1db68:	ebfff742 	bl	1b878 <_USBEndpoint>
   1db6c:	e5940010 	ldr	r0, [r4, #16]
   1db70:	eb001d54 	bl	250c8 <free>
   1db74:	e3a03000 	mov	r3, #0
   1db78:	e5843010 	str	r3, [r4, #16]
   1db7c:	e1a00004 	mov	r0, r4
   1db80:	e8bd4010 	pop	{r4, lr}
   1db84:	eafffdfc 	b	1d37c <_USBFunction>
   1db88:	e3a02098 	mov	r2, #152	; 0x98
   1db8c:	e59f1008 	ldr	r1, [pc, #8]	; 1db9c <_SMSC951xDevice+0x84>
   1db90:	e59f0008 	ldr	r0, [pc, #8]	; 1dba0 <_SMSC951xDevice+0x88>
   1db94:	eb0024fc 	bl	26f8c <uspi_assertion_failed>
   1db98:	eaffffe1 	b	1db24 <_SMSC951xDevice+0xc>
   1db9c:	0002ac64 	andeq	sl, r2, r4, ror #24
   1dba0:	00029a68 	andeq	r9, r2, r8, ror #20

0001dba4 <SMSC951xDeviceGetMACAddress>:
   1dba4:	e92d4010 	push	{r4, lr}
   1dba8:	e2504000 	subs	r4, r0, #0
   1dbac:	0a000001 	beq	1dbb8 <SMSC951xDeviceGetMACAddress+0x14>
   1dbb0:	e2840018 	add	r0, r4, #24
   1dbb4:	e8bd8010 	pop	{r4, pc}
   1dbb8:	e59f2010 	ldr	r2, [pc, #16]	; 1dbd0 <SMSC951xDeviceGetMACAddress+0x2c>
   1dbbc:	e59f1010 	ldr	r1, [pc, #16]	; 1dbd4 <SMSC951xDeviceGetMACAddress+0x30>
   1dbc0:	e59f0010 	ldr	r0, [pc, #16]	; 1dbd8 <SMSC951xDeviceGetMACAddress+0x34>
   1dbc4:	eb0024f0 	bl	26f8c <uspi_assertion_failed>
   1dbc8:	e2840018 	add	r0, r4, #24
   1dbcc:	e8bd8010 	pop	{r4, pc}
   1dbd0:	00000137 	andeq	r0, r0, r7, lsr r1
   1dbd4:	0002ac64 	andeq	sl, r2, r4, ror #24
   1dbd8:	00029a68 	andeq	r9, r2, r8, ror #20

0001dbdc <SMSC951xDeviceSendFrame>:
   1dbdc:	e92d4070 	push	{r4, r5, r6, lr}
   1dbe0:	e2504000 	subs	r4, r0, #0
   1dbe4:	e1a06001 	mov	r6, r1
   1dbe8:	e1a05002 	mov	r5, r2
   1dbec:	0a00001d 	beq	1dc68 <SMSC951xDeviceSendFrame+0x8c>
   1dbf0:	e59f30c4 	ldr	r3, [pc, #196]	; 1dcbc <SMSC951xDeviceSendFrame+0xe0>
   1dbf4:	e1550003 	cmp	r5, r3
   1dbf8:	8a000018 	bhi	1dc60 <SMSC951xDeviceSendFrame+0x84>
   1dbfc:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1dc00:	e3530000 	cmp	r3, #0
   1dc04:	0a00001c 	beq	1dc7c <SMSC951xDeviceSendFrame+0xa0>
   1dc08:	e3560000 	cmp	r6, #0
   1dc0c:	0a000020 	beq	1dc94 <SMSC951xDeviceSendFrame+0xb8>
   1dc10:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   1dc14:	e1a02005 	mov	r2, r5
   1dc18:	e1a01006 	mov	r1, r6
   1dc1c:	e2800008 	add	r0, r0, #8
   1dc20:	eb0009c6 	bl	20340 <uspi_memcpy>
   1dc24:	e5942014 	ldr	r2, [r4, #20]
   1dc28:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1dc2c:	e3520000 	cmp	r2, #0
   1dc30:	e3852a03 	orr	r2, r5, #12288	; 0x3000
   1dc34:	e8830024 	stm	r3, {r2, r5}
   1dc38:	0a00001a 	beq	1dca8 <SMSC951xDeviceSendFrame+0xcc>
   1dc3c:	e1a00004 	mov	r0, r4
   1dc40:	ebfffe58 	bl	1d5a8 <USBFunctionGetHost>
   1dc44:	e2853008 	add	r3, r5, #8
   1dc48:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   1dc4c:	e5941014 	ldr	r1, [r4, #20]
   1dc50:	ebffe746 	bl	17970 <DWHCIDeviceTransfer>
   1dc54:	e1e00000 	mvn	r0, r0
   1dc58:	e1a00fa0 	lsr	r0, r0, #31
   1dc5c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1dc60:	e3a00000 	mov	r0, #0
   1dc64:	e8bd8070 	pop	{r4, r5, r6, pc}
   1dc68:	e59f2050 	ldr	r2, [pc, #80]	; 1dcc0 <SMSC951xDeviceSendFrame+0xe4>
   1dc6c:	e59f1050 	ldr	r1, [pc, #80]	; 1dcc4 <SMSC951xDeviceSendFrame+0xe8>
   1dc70:	e59f0050 	ldr	r0, [pc, #80]	; 1dcc8 <SMSC951xDeviceSendFrame+0xec>
   1dc74:	eb0024c4 	bl	26f8c <uspi_assertion_failed>
   1dc78:	eaffffdc 	b	1dbf0 <SMSC951xDeviceSendFrame+0x14>
   1dc7c:	e59f2048 	ldr	r2, [pc, #72]	; 1dccc <SMSC951xDeviceSendFrame+0xf0>
   1dc80:	e59f103c 	ldr	r1, [pc, #60]	; 1dcc4 <SMSC951xDeviceSendFrame+0xe8>
   1dc84:	e59f0044 	ldr	r0, [pc, #68]	; 1dcd0 <SMSC951xDeviceSendFrame+0xf4>
   1dc88:	eb0024bf 	bl	26f8c <uspi_assertion_failed>
   1dc8c:	e3560000 	cmp	r6, #0
   1dc90:	1affffde 	bne	1dc10 <SMSC951xDeviceSendFrame+0x34>
   1dc94:	e59f2038 	ldr	r2, [pc, #56]	; 1dcd4 <SMSC951xDeviceSendFrame+0xf8>
   1dc98:	e59f1024 	ldr	r1, [pc, #36]	; 1dcc4 <SMSC951xDeviceSendFrame+0xe8>
   1dc9c:	e59f0034 	ldr	r0, [pc, #52]	; 1dcd8 <SMSC951xDeviceSendFrame+0xfc>
   1dca0:	eb0024b9 	bl	26f8c <uspi_assertion_failed>
   1dca4:	eaffffd9 	b	1dc10 <SMSC951xDeviceSendFrame+0x34>
   1dca8:	e3a02f53 	mov	r2, #332	; 0x14c
   1dcac:	e59f1010 	ldr	r1, [pc, #16]	; 1dcc4 <SMSC951xDeviceSendFrame+0xe8>
   1dcb0:	e59f0024 	ldr	r0, [pc, #36]	; 1dcdc <SMSC951xDeviceSendFrame+0x100>
   1dcb4:	eb0024b4 	bl	26f8c <uspi_assertion_failed>
   1dcb8:	eaffffdf 	b	1dc3c <SMSC951xDeviceSendFrame+0x60>
   1dcbc:	00000637 	andeq	r0, r0, r7, lsr r6
   1dcc0:	0000013e 	andeq	r0, r0, lr, lsr r1
   1dcc4:	0002ac64 	andeq	sl, r2, r4, ror #24
   1dcc8:	00029a68 	andeq	r9, r2, r8, ror #20
   1dccc:	00000145 	andeq	r0, r0, r5, asr #2
   1dcd0:	0002ac70 	andeq	sl, r2, r0, ror ip
   1dcd4:	00000146 	andeq	r0, r0, r6, asr #2
   1dcd8:	0002afdc 	ldrdeq	sl, [r2], -ip
   1dcdc:	0002ac88 	andeq	sl, r2, r8, lsl #25

0001dce0 <SMSC951xDeviceReceiveFrame>:
   1dce0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1dce4:	e2506000 	subs	r6, r0, #0
   1dce8:	e24dd034 	sub	sp, sp, #52	; 0x34
   1dcec:	e1a05001 	mov	r5, r1
   1dcf0:	e1a07002 	mov	r7, r2
   1dcf4:	0a000044 	beq	1de0c <SMSC951xDeviceReceiveFrame+0x12c>
   1dcf8:	e5963010 	ldr	r3, [r6, #16]
   1dcfc:	e3530000 	cmp	r3, #0
   1dd00:	0a000048 	beq	1de28 <SMSC951xDeviceReceiveFrame+0x148>
   1dd04:	e3550000 	cmp	r5, #0
   1dd08:	0a00004c 	beq	1de40 <SMSC951xDeviceReceiveFrame+0x160>
   1dd0c:	e3a04000 	mov	r4, #0
   1dd10:	e58d4000 	str	r4, [sp]
   1dd14:	e5961010 	ldr	r1, [r6, #16]
   1dd18:	e3a03d19 	mov	r3, #1600	; 0x640
   1dd1c:	e1a02005 	mov	r2, r5
   1dd20:	e28d000c 	add	r0, sp, #12
   1dd24:	ebfff7b3 	bl	1bbf8 <USBRequest>
   1dd28:	e1a00006 	mov	r0, r6
   1dd2c:	ebfffe1d 	bl	1d5a8 <USBFunctionGetHost>
   1dd30:	e28d100c 	add	r1, sp, #12
   1dd34:	ebffe5e9 	bl	174e0 <DWHCIDeviceSubmitBlockingRequest>
   1dd38:	e1500004 	cmp	r0, r4
   1dd3c:	0a000024 	beq	1ddd4 <SMSC951xDeviceReceiveFrame+0xf4>
   1dd40:	e28d000c 	add	r0, sp, #12
   1dd44:	ebfff828 	bl	1bdec <USBRequestGetResultLength>
   1dd48:	e3500003 	cmp	r0, #3
   1dd4c:	9a000020 	bls	1ddd4 <SMSC951xDeviceReceiveFrame+0xf4>
   1dd50:	e5953000 	ldr	r3, [r5]
   1dd54:	e59f210c 	ldr	r2, [pc, #268]	; 1de68 <SMSC951xDeviceReceiveFrame+0x188>
   1dd58:	e0022003 	and	r2, r2, r3
   1dd5c:	e3520000 	cmp	r2, #0
   1dd60:	1a000020 	bne	1dde8 <SMSC951xDeviceReceiveFrame+0x108>
   1dd64:	e59f4100 	ldr	r4, [pc, #256]	; 1de6c <SMSC951xDeviceReceiveFrame+0x18c>
   1dd68:	e2400004 	sub	r0, r0, #4
   1dd6c:	e0044823 	and	r4, r4, r3, lsr #16
   1dd70:	e1500004 	cmp	r0, r4
   1dd74:	0a000003 	beq	1dd88 <SMSC951xDeviceReceiveFrame+0xa8>
   1dd78:	e59f20f0 	ldr	r2, [pc, #240]	; 1de70 <SMSC951xDeviceReceiveFrame+0x190>
   1dd7c:	e59f10f0 	ldr	r1, [pc, #240]	; 1de74 <SMSC951xDeviceReceiveFrame+0x194>
   1dd80:	e59f00f0 	ldr	r0, [pc, #240]	; 1de78 <SMSC951xDeviceReceiveFrame+0x198>
   1dd84:	eb002480 	bl	26f8c <uspi_assertion_failed>
   1dd88:	e3540004 	cmp	r4, #4
   1dd8c:	9a00000c 	bls	1ddc4 <SMSC951xDeviceReceiveFrame+0xe4>
   1dd90:	e2444004 	sub	r4, r4, #4
   1dd94:	e1a02004 	mov	r2, r4
   1dd98:	e2851004 	add	r1, r5, #4
   1dd9c:	e1a00005 	mov	r0, r5
   1dda0:	eb000966 	bl	20340 <uspi_memcpy>
   1dda4:	e3570000 	cmp	r7, #0
   1dda8:	0a000029 	beq	1de54 <SMSC951xDeviceReceiveFrame+0x174>
   1ddac:	e28d000c 	add	r0, sp, #12
   1ddb0:	e5874000 	str	r4, [r7]
   1ddb4:	ebfff7bf 	bl	1bcb8 <_USBRequest>
   1ddb8:	e3a00001 	mov	r0, #1
   1ddbc:	e28dd034 	add	sp, sp, #52	; 0x34
   1ddc0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1ddc4:	e3a02f5d 	mov	r2, #372	; 0x174
   1ddc8:	e59f10a4 	ldr	r1, [pc, #164]	; 1de74 <SMSC951xDeviceReceiveFrame+0x194>
   1ddcc:	e59f00a8 	ldr	r0, [pc, #168]	; 1de7c <SMSC951xDeviceReceiveFrame+0x19c>
   1ddd0:	eb00246d 	bl	26f8c <uspi_assertion_failed>
   1ddd4:	e28d000c 	add	r0, sp, #12
   1ddd8:	ebfff7b6 	bl	1bcb8 <_USBRequest>
   1dddc:	e3a00000 	mov	r0, #0
   1dde0:	e28dd034 	add	sp, sp, #52	; 0x34
   1dde4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1dde8:	e59f2090 	ldr	r2, [pc, #144]	; 1de80 <SMSC951xDeviceReceiveFrame+0x1a0>
   1ddec:	e3a01002 	mov	r1, #2
   1ddf0:	e59f008c 	ldr	r0, [pc, #140]	; 1de84 <SMSC951xDeviceReceiveFrame+0x1a4>
   1ddf4:	eb002452 	bl	26f44 <LogWrite>
   1ddf8:	e28d000c 	add	r0, sp, #12
   1ddfc:	ebfff7ad 	bl	1bcb8 <_USBRequest>
   1de00:	e1a00004 	mov	r0, r4
   1de04:	e28dd034 	add	sp, sp, #52	; 0x34
   1de08:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1de0c:	e59f2074 	ldr	r2, [pc, #116]	; 1de88 <SMSC951xDeviceReceiveFrame+0x1a8>
   1de10:	e59f105c 	ldr	r1, [pc, #92]	; 1de74 <SMSC951xDeviceReceiveFrame+0x194>
   1de14:	e59f0070 	ldr	r0, [pc, #112]	; 1de8c <SMSC951xDeviceReceiveFrame+0x1ac>
   1de18:	eb00245b 	bl	26f8c <uspi_assertion_failed>
   1de1c:	e5963010 	ldr	r3, [r6, #16]
   1de20:	e3530000 	cmp	r3, #0
   1de24:	1affffb6 	bne	1dd04 <SMSC951xDeviceReceiveFrame+0x24>
   1de28:	e3a02f55 	mov	r2, #340	; 0x154
   1de2c:	e59f1040 	ldr	r1, [pc, #64]	; 1de74 <SMSC951xDeviceReceiveFrame+0x194>
   1de30:	e59f0058 	ldr	r0, [pc, #88]	; 1de90 <SMSC951xDeviceReceiveFrame+0x1b0>
   1de34:	eb002454 	bl	26f8c <uspi_assertion_failed>
   1de38:	e3550000 	cmp	r5, #0
   1de3c:	1affffb2 	bne	1dd0c <SMSC951xDeviceReceiveFrame+0x2c>
   1de40:	e59f204c 	ldr	r2, [pc, #76]	; 1de94 <SMSC951xDeviceReceiveFrame+0x1b4>
   1de44:	e59f1028 	ldr	r1, [pc, #40]	; 1de74 <SMSC951xDeviceReceiveFrame+0x194>
   1de48:	e59f0048 	ldr	r0, [pc, #72]	; 1de98 <SMSC951xDeviceReceiveFrame+0x1b8>
   1de4c:	eb00244e 	bl	26f8c <uspi_assertion_failed>
   1de50:	eaffffad 	b	1dd0c <SMSC951xDeviceReceiveFrame+0x2c>
   1de54:	e59f2040 	ldr	r2, [pc, #64]	; 1de9c <SMSC951xDeviceReceiveFrame+0x1bc>
   1de58:	e59f1014 	ldr	r1, [pc, #20]	; 1de74 <SMSC951xDeviceReceiveFrame+0x194>
   1de5c:	e59f003c 	ldr	r0, [pc, #60]	; 1dea0 <SMSC951xDeviceReceiveFrame+0x1c0>
   1de60:	eb002449 	bl	26f8c <uspi_assertion_failed>
   1de64:	eaffffd0 	b	1ddac <SMSC951xDeviceReceiveFrame+0xcc>
   1de68:	400090de 	ldrdmi	r9, [r0], -lr
   1de6c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   1de70:	00000173 	andeq	r0, r0, r3, ror r1
   1de74:	0002ac64 	andeq	sl, r2, r4, ror #24
   1de78:	0002ace0 	andeq	sl, r2, r0, ror #25
   1de7c:	0002ad00 	andeq	sl, r2, r0, lsl #26
   1de80:	0002acc8 	andeq	sl, r2, r8, asr #25
   1de84:	0002857c 	andeq	r8, r2, ip, ror r5
   1de88:	00000152 	andeq	r0, r0, r2, asr r1
   1de8c:	00029a68 	andeq	r9, r2, r8, ror #20
   1de90:	0002aca8 	andeq	sl, r2, r8, lsr #25
   1de94:	00000155 	andeq	r0, r0, r5, asr r1
   1de98:	0002afdc 	ldrdeq	sl, [r2], -ip
   1de9c:	00000181 	andeq	r0, r0, r1, lsl #3
   1dea0:	0002ad14 	andeq	sl, r2, r4, lsl sp

0001dea4 <SMSC951xDeviceWriteReg>:
   1dea4:	e92d4070 	push	{r4, r5, r6, lr}
   1dea8:	e2505000 	subs	r5, r0, #0
   1deac:	e24dd018 	sub	sp, sp, #24
   1deb0:	e1a04001 	mov	r4, r1
   1deb4:	e58d2014 	str	r2, [sp, #20]
   1deb8:	0a000015 	beq	1df14 <SMSC951xDeviceWriteReg+0x70>
   1debc:	e1a00005 	mov	r0, r5
   1dec0:	ebfffdb8 	bl	1d5a8 <USBFunctionGetHost>
   1dec4:	e1a06000 	mov	r6, r0
   1dec8:	e1a00005 	mov	r0, r5
   1decc:	ebfffd9c 	bl	1d544 <USBFunctionGetEndpoint0>
   1ded0:	e3a0c004 	mov	ip, #4
   1ded4:	e3a02000 	mov	r2, #0
   1ded8:	e28d3014 	add	r3, sp, #20
   1dedc:	e6ff4074 	uxth	r4, r4
   1dee0:	e1a01000 	mov	r1, r0
   1dee4:	e58d2000 	str	r2, [sp]
   1dee8:	e58d3008 	str	r3, [sp, #8]
   1deec:	e58d4004 	str	r4, [sp, #4]
   1def0:	e1a00006 	mov	r0, r6
   1def4:	e58dc00c 	str	ip, [sp, #12]
   1def8:	e3a030a0 	mov	r3, #160	; 0xa0
   1defc:	e3a02040 	mov	r2, #64	; 0x40
   1df00:	ebffe610 	bl	17748 <DWHCIDeviceControlMessage>
   1df04:	e1e00000 	mvn	r0, r0
   1df08:	e1a00fa0 	lsr	r0, r0, #31
   1df0c:	e28dd018 	add	sp, sp, #24
   1df10:	e8bd8070 	pop	{r4, r5, r6, pc}
   1df14:	e59f200c 	ldr	r2, [pc, #12]	; 1df28 <SMSC951xDeviceWriteReg+0x84>
   1df18:	e59f100c 	ldr	r1, [pc, #12]	; 1df2c <SMSC951xDeviceWriteReg+0x88>
   1df1c:	e59f000c 	ldr	r0, [pc, #12]	; 1df30 <SMSC951xDeviceWriteReg+0x8c>
   1df20:	eb002419 	bl	26f8c <uspi_assertion_failed>
   1df24:	eaffffe4 	b	1debc <SMSC951xDeviceWriteReg+0x18>
   1df28:	000001de 	ldrdeq	r0, [r0], -lr
   1df2c:	0002ac64 	andeq	sl, r2, r4, ror #24
   1df30:	00029a68 	andeq	r9, r2, r8, ror #20

0001df34 <SMSC951xDeviceConfigure>:
   1df34:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df38:	e2505000 	subs	r5, r0, #0
   1df3c:	e24dd028 	sub	sp, sp, #40	; 0x28
   1df40:	0a000094 	beq	1e198 <SMSC951xDeviceConfigure+0x264>
   1df44:	e1a0000d 	mov	r0, sp
   1df48:	eb0023e0 	bl	26ed0 <GetMACAddress>
   1df4c:	e2506000 	subs	r6, r0, #0
   1df50:	0a000082 	beq	1e160 <SMSC951xDeviceConfigure+0x22c>
   1df54:	e2857018 	add	r7, r5, #24
   1df58:	e1a0100d 	mov	r1, sp
   1df5c:	e1a00007 	mov	r0, r7
   1df60:	ebfffba7 	bl	1ce04 <MACAddressSet>
   1df64:	e28d0010 	add	r0, sp, #16
   1df68:	eb0005e6 	bl	1f708 <String>
   1df6c:	e28d1010 	add	r1, sp, #16
   1df70:	e1a00007 	mov	r0, r7
   1df74:	ebfffc55 	bl	1d0d0 <MACAddressFormat>
   1df78:	e28d0010 	add	r0, sp, #16
   1df7c:	eb000614 	bl	1f7d4 <StringGet>
   1df80:	e59f22a8 	ldr	r2, [pc, #680]	; 1e230 <SMSC951xDeviceConfigure+0x2fc>
   1df84:	e1a03000 	mov	r3, r0
   1df88:	e3a01004 	mov	r1, #4
   1df8c:	e59f02a0 	ldr	r0, [pc, #672]	; 1e234 <SMSC951xDeviceConfigure+0x300>
   1df90:	eb0023eb 	bl	26f44 <LogWrite>
   1df94:	e1a00005 	mov	r0, r5
   1df98:	ebfffd3c 	bl	1d490 <USBFunctionGetNumEndpoints>
   1df9c:	e3500003 	cmp	r0, #3
   1dfa0:	1a000052 	bne	1e0f0 <SMSC951xDeviceConfigure+0x1bc>
   1dfa4:	e59f628c 	ldr	r6, [pc, #652]	; 1e238 <SMSC951xDeviceConfigure+0x304>
   1dfa8:	e59f828c 	ldr	r8, [pc, #652]	; 1e23c <SMSC951xDeviceConfigure+0x308>
   1dfac:	e59f928c 	ldr	r9, [pc, #652]	; 1e240 <SMSC951xDeviceConfigure+0x30c>
   1dfb0:	ea000003 	b	1dfc4 <SMSC951xDeviceConfigure+0x90>
   1dfb4:	e5d42003 	ldrb	r2, [r4, #3]
   1dfb8:	e202203f 	and	r2, r2, #63	; 0x3f
   1dfbc:	e3520002 	cmp	r2, #2
   1dfc0:	0a000053 	beq	1e114 <SMSC951xDeviceConfigure+0x1e0>
   1dfc4:	e3a01005 	mov	r1, #5
   1dfc8:	e1a00005 	mov	r0, r5
   1dfcc:	ebfffdc7 	bl	1d6f0 <USBFunctionGetDescriptor>
   1dfd0:	e2504000 	subs	r4, r0, #0
   1dfd4:	1afffff6 	bne	1dfb4 <SMSC951xDeviceConfigure+0x80>
   1dfd8:	e5953010 	ldr	r3, [r5, #16]
   1dfdc:	e1a00005 	mov	r0, r5
   1dfe0:	e3530000 	cmp	r3, #0
   1dfe4:	0a000042 	beq	1e0f4 <SMSC951xDeviceConfigure+0x1c0>
   1dfe8:	e5953014 	ldr	r3, [r5, #20]
   1dfec:	e3530000 	cmp	r3, #0
   1dff0:	0a00003f 	beq	1e0f4 <SMSC951xDeviceConfigure+0x1c0>
   1dff4:	ebfffd84 	bl	1d60c <USBFunctionConfigure>
   1dff8:	e2506000 	subs	r6, r0, #0
   1dffc:	0a00005e 	beq	1e17c <SMSC951xDeviceConfigure+0x248>
   1e000:	e1a00007 	mov	r0, r7
   1e004:	e28d1008 	add	r1, sp, #8
   1e008:	ebfffbee 	bl	1cfc8 <MACAddressCopyTo>
   1e00c:	e5dd200d 	ldrb	r2, [sp, #13]
   1e010:	e5dd300c 	ldrb	r3, [sp, #12]
   1e014:	e3a01f41 	mov	r1, #260	; 0x104
   1e018:	e1832402 	orr	r2, r3, r2, lsl #8
   1e01c:	e1a00005 	mov	r0, r5
   1e020:	e59d6008 	ldr	r6, [sp, #8]
   1e024:	ebffff9e 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e028:	e3500000 	cmp	r0, #0
   1e02c:	0a00006d 	beq	1e1e8 <SMSC951xDeviceConfigure+0x2b4>
   1e030:	e1a02006 	mov	r2, r6
   1e034:	e3a01f42 	mov	r1, #264	; 0x108
   1e038:	e1a00005 	mov	r0, r5
   1e03c:	ebffff98 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e040:	e3500000 	cmp	r0, #0
   1e044:	0a000067 	beq	1e1e8 <SMSC951xDeviceConfigure+0x2b4>
   1e048:	e59f21f4 	ldr	r2, [pc, #500]	; 1e244 <SMSC951xDeviceConfigure+0x310>
   1e04c:	e3a01024 	mov	r1, #36	; 0x24
   1e050:	e1a00005 	mov	r0, r5
   1e054:	ebffff92 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e058:	e3500000 	cmp	r0, #0
   1e05c:	0a000071 	beq	1e228 <SMSC951xDeviceConfigure+0x2f4>
   1e060:	e59f21e0 	ldr	r2, [pc, #480]	; 1e248 <SMSC951xDeviceConfigure+0x314>
   1e064:	e3a01c01 	mov	r1, #256	; 0x100
   1e068:	e1a00005 	mov	r0, r5
   1e06c:	ebffff8c 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e070:	e3500000 	cmp	r0, #0
   1e074:	0a00006b 	beq	1e228 <SMSC951xDeviceConfigure+0x2f4>
   1e078:	e3a02004 	mov	r2, #4
   1e07c:	e3a01010 	mov	r1, #16
   1e080:	e1a00005 	mov	r0, r5
   1e084:	ebffff86 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e088:	e3500000 	cmp	r0, #0
   1e08c:	0a000065 	beq	1e228 <SMSC951xDeviceConfigure+0x2f4>
   1e090:	e28d001c 	add	r0, sp, #28
   1e094:	eb00059b 	bl	1f708 <String>
   1e098:	e59f31ac 	ldr	r3, [pc, #428]	; 1e24c <SMSC951xDeviceConfigure+0x318>
   1e09c:	e59f11ac 	ldr	r1, [pc, #428]	; 1e250 <SMSC951xDeviceConfigure+0x31c>
   1e0a0:	e5932000 	ldr	r2, [r3]
   1e0a4:	e28d001c 	add	r0, sp, #28
   1e0a8:	e282c001 	add	ip, r2, #1
   1e0ac:	e583c000 	str	ip, [r3]
   1e0b0:	eb000853 	bl	20204 <StringFormat>
   1e0b4:	ebfffb2a 	bl	1cd64 <DeviceNameServiceGet>
   1e0b8:	e1a06000 	mov	r6, r0
   1e0bc:	e28d001c 	add	r0, sp, #28
   1e0c0:	eb0005c3 	bl	1f7d4 <StringGet>
   1e0c4:	e1a03004 	mov	r3, r4
   1e0c8:	e1a01000 	mov	r1, r0
   1e0cc:	e1a02005 	mov	r2, r5
   1e0d0:	e1a00006 	mov	r0, r6
   1e0d4:	ebfffaa3 	bl	1cb68 <DeviceNameServiceAddDevice>
   1e0d8:	e28d001c 	add	r0, sp, #28
   1e0dc:	eb0005ab 	bl	1f790 <_String>
   1e0e0:	e28d0010 	add	r0, sp, #16
   1e0e4:	eb0005a9 	bl	1f790 <_String>
   1e0e8:	e3a06001 	mov	r6, #1
   1e0ec:	ea000005 	b	1e108 <SMSC951xDeviceConfigure+0x1d4>
   1e0f0:	e1a00005 	mov	r0, r5
   1e0f4:	e59f1138 	ldr	r1, [pc, #312]	; 1e234 <SMSC951xDeviceConfigure+0x300>
   1e0f8:	ebfffd98 	bl	1d760 <USBFunctionConfigurationError>
   1e0fc:	e28d0010 	add	r0, sp, #16
   1e100:	eb0005a2 	bl	1f790 <_String>
   1e104:	e3a06000 	mov	r6, #0
   1e108:	e1a00006 	mov	r0, r6
   1e10c:	e28dd028 	add	sp, sp, #40	; 0x28
   1e110:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e114:	e1d430d2 	ldrsb	r3, [r4, #2]
   1e118:	e3530000 	cmp	r3, #0
   1e11c:	ba000022 	blt	1e1ac <SMSC951xDeviceConfigure+0x278>
   1e120:	e5953014 	ldr	r3, [r5, #20]
   1e124:	e3530000 	cmp	r3, #0
   1e128:	1afffff0 	bne	1e0f0 <SMSC951xDeviceConfigure+0x1bc>
   1e12c:	e3a00018 	mov	r0, #24
   1e130:	eb001b7e 	bl	24f30 <malloc>
   1e134:	e3500000 	cmp	r0, #0
   1e138:	e1a0a000 	mov	sl, r0
   1e13c:	e5850014 	str	r0, [r5, #20]
   1e140:	0a000032 	beq	1e210 <SMSC951xDeviceConfigure+0x2dc>
   1e144:	e1a00005 	mov	r0, r5
   1e148:	ebfffce9 	bl	1d4f4 <USBFunctionGetDevice>
   1e14c:	e1a02004 	mov	r2, r4
   1e150:	e1a01000 	mov	r1, r0
   1e154:	e1a0000a 	mov	r0, sl
   1e158:	ebfff527 	bl	1b5fc <USBEndpoint2>
   1e15c:	eaffff98 	b	1dfc4 <SMSC951xDeviceConfigure+0x90>
   1e160:	e59f20ec 	ldr	r2, [pc, #236]	; 1e254 <SMSC951xDeviceConfigure+0x320>
   1e164:	e3a01001 	mov	r1, #1
   1e168:	e59f00c4 	ldr	r0, [pc, #196]	; 1e234 <SMSC951xDeviceConfigure+0x300>
   1e16c:	eb002374 	bl	26f44 <LogWrite>
   1e170:	e1a00006 	mov	r0, r6
   1e174:	e28dd028 	add	sp, sp, #40	; 0x28
   1e178:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e17c:	e59f20d4 	ldr	r2, [pc, #212]	; 1e258 <SMSC951xDeviceConfigure+0x324>
   1e180:	e3a01001 	mov	r1, #1
   1e184:	e59f00a8 	ldr	r0, [pc, #168]	; 1e234 <SMSC951xDeviceConfigure+0x300>
   1e188:	eb00236d 	bl	26f44 <LogWrite>
   1e18c:	e28d0010 	add	r0, sp, #16
   1e190:	eb00057e 	bl	1f790 <_String>
   1e194:	eaffffdb 	b	1e108 <SMSC951xDeviceConfigure+0x1d4>
   1e198:	e3a020b4 	mov	r2, #180	; 0xb4
   1e19c:	e59f1094 	ldr	r1, [pc, #148]	; 1e238 <SMSC951xDeviceConfigure+0x304>
   1e1a0:	e59f00b4 	ldr	r0, [pc, #180]	; 1e25c <SMSC951xDeviceConfigure+0x328>
   1e1a4:	eb002378 	bl	26f8c <uspi_assertion_failed>
   1e1a8:	eaffff65 	b	1df44 <SMSC951xDeviceConfigure+0x10>
   1e1ac:	e5953010 	ldr	r3, [r5, #16]
   1e1b0:	e3530000 	cmp	r3, #0
   1e1b4:	1affffcd 	bne	1e0f0 <SMSC951xDeviceConfigure+0x1bc>
   1e1b8:	e3a00018 	mov	r0, #24
   1e1bc:	eb001b5b 	bl	24f30 <malloc>
   1e1c0:	e3500000 	cmp	r0, #0
   1e1c4:	e1a0a000 	mov	sl, r0
   1e1c8:	e5850010 	str	r0, [r5, #16]
   1e1cc:	1affffdc 	bne	1e144 <SMSC951xDeviceConfigure+0x210>
   1e1d0:	e3a020e0 	mov	r2, #224	; 0xe0
   1e1d4:	e1a01006 	mov	r1, r6
   1e1d8:	e1a00009 	mov	r0, r9
   1e1dc:	eb00236a 	bl	26f8c <uspi_assertion_failed>
   1e1e0:	e595a010 	ldr	sl, [r5, #16]
   1e1e4:	eaffffd6 	b	1e144 <SMSC951xDeviceConfigure+0x210>
   1e1e8:	e59f2070 	ldr	r2, [pc, #112]	; 1e260 <SMSC951xDeviceConfigure+0x32c>
   1e1ec:	e3a06000 	mov	r6, #0
   1e1f0:	e3a01001 	mov	r1, #1
   1e1f4:	e59f0038 	ldr	r0, [pc, #56]	; 1e234 <SMSC951xDeviceConfigure+0x300>
   1e1f8:	eb002351 	bl	26f44 <LogWrite>
   1e1fc:	e28d0010 	add	r0, sp, #16
   1e200:	eb000562 	bl	1f790 <_String>
   1e204:	e1a00006 	mov	r0, r6
   1e208:	e28dd028 	add	sp, sp, #40	; 0x28
   1e20c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e210:	e3a020ef 	mov	r2, #239	; 0xef
   1e214:	e1a01006 	mov	r1, r6
   1e218:	e1a00008 	mov	r0, r8
   1e21c:	eb00235a 	bl	26f8c <uspi_assertion_failed>
   1e220:	e595a014 	ldr	sl, [r5, #20]
   1e224:	eaffffc6 	b	1e144 <SMSC951xDeviceConfigure+0x210>
   1e228:	e59f2034 	ldr	r2, [pc, #52]	; 1e264 <SMSC951xDeviceConfigure+0x330>
   1e22c:	eaffffee 	b	1e1ec <SMSC951xDeviceConfigure+0x2b8>
   1e230:	0002ad28 	andeq	sl, r2, r8, lsr #26
   1e234:	0002857c 	andeq	r8, r2, ip, ror r5
   1e238:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e23c:	0002ad70 	andeq	sl, r2, r0, ror sp
   1e240:	0002ad54 	andeq	sl, r2, r4, asr sp
   1e244:	01110000 	tsteq	r1, r0
   1e248:	0080000c 	addeq	r0, r0, ip
   1e24c:	0002d158 	andeq	sp, r2, r8, asr r1
   1e250:	0002adb8 			; <UNDEFINED> instruction: 0x0002adb8
   1e254:	0002ad3c 	andeq	sl, r2, ip, lsr sp
   1e258:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   1e25c:	00029a68 	andeq	r9, r2, r8, ror #20
   1e260:	0002ad8c 	andeq	sl, r2, ip, lsl #27
   1e264:	0002ada4 	andeq	sl, r2, r4, lsr #27

0001e268 <SMSC951xDeviceReadReg>:
   1e268:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1e26c:	e2505000 	subs	r5, r0, #0
   1e270:	e24dd014 	sub	sp, sp, #20
   1e274:	e1a04001 	mov	r4, r1
   1e278:	e1a06002 	mov	r6, r2
   1e27c:	0a000015 	beq	1e2d8 <SMSC951xDeviceReadReg+0x70>
   1e280:	e1a00005 	mov	r0, r5
   1e284:	ebfffcc7 	bl	1d5a8 <USBFunctionGetHost>
   1e288:	e1a07000 	mov	r7, r0
   1e28c:	e1a00005 	mov	r0, r5
   1e290:	ebfffcab 	bl	1d544 <USBFunctionGetEndpoint0>
   1e294:	e3a02004 	mov	r2, #4
   1e298:	e3a03000 	mov	r3, #0
   1e29c:	e6ff4074 	uxth	r4, r4
   1e2a0:	e1a01000 	mov	r1, r0
   1e2a4:	e58d200c 	str	r2, [sp, #12]
   1e2a8:	e58d3000 	str	r3, [sp]
   1e2ac:	e58d4004 	str	r4, [sp, #4]
   1e2b0:	e1a00007 	mov	r0, r7
   1e2b4:	e58d6008 	str	r6, [sp, #8]
   1e2b8:	e3a030a1 	mov	r3, #161	; 0xa1
   1e2bc:	e3a020c0 	mov	r2, #192	; 0xc0
   1e2c0:	ebffe520 	bl	17748 <DWHCIDeviceControlMessage>
   1e2c4:	e2400004 	sub	r0, r0, #4
   1e2c8:	e16f0f10 	clz	r0, r0
   1e2cc:	e1a002a0 	lsr	r0, r0, #5
   1e2d0:	e28dd014 	add	sp, sp, #20
   1e2d4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1e2d8:	e3a02f7a 	mov	r2, #488	; 0x1e8
   1e2dc:	e59f1008 	ldr	r1, [pc, #8]	; 1e2ec <SMSC951xDeviceReadReg+0x84>
   1e2e0:	e59f0008 	ldr	r0, [pc, #8]	; 1e2f0 <SMSC951xDeviceReadReg+0x88>
   1e2e4:	eb002328 	bl	26f8c <uspi_assertion_failed>
   1e2e8:	eaffffe4 	b	1e280 <SMSC951xDeviceReadReg+0x18>
   1e2ec:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e2f0:	00029a68 	andeq	r9, r2, r8, ror #20

0001e2f4 <SMSC951xDevicePHYWaitNotBusy>:
   1e2f4:	e92d4030 	push	{r4, r5, lr}
   1e2f8:	e2505000 	subs	r5, r0, #0
   1e2fc:	e24dd00c 	sub	sp, sp, #12
   1e300:	0a000013 	beq	1e354 <SMSC951xDevicePHYWaitNotBusy+0x60>
   1e304:	e3a00001 	mov	r0, #1
   1e308:	eb0022a6 	bl	26da8 <MsDelay>
   1e30c:	e59f4054 	ldr	r4, [pc, #84]	; 1e368 <SMSC951xDevicePHYWaitNotBusy+0x74>
   1e310:	ea000006 	b	1e330 <SMSC951xDevicePHYWaitNotBusy+0x3c>
   1e314:	e59d3004 	ldr	r3, [sp, #4]
   1e318:	e3a00001 	mov	r0, #1
   1e31c:	e3130001 	tst	r3, #1
   1e320:	0a000009 	beq	1e34c <SMSC951xDevicePHYWaitNotBusy+0x58>
   1e324:	eb00229f 	bl	26da8 <MsDelay>
   1e328:	e2544001 	subs	r4, r4, #1
   1e32c:	0a000005 	beq	1e348 <SMSC951xDevicePHYWaitNotBusy+0x54>
   1e330:	e28d2004 	add	r2, sp, #4
   1e334:	e3a01f45 	mov	r1, #276	; 0x114
   1e338:	e1a00005 	mov	r0, r5
   1e33c:	ebffffc9 	bl	1e268 <SMSC951xDeviceReadReg>
   1e340:	e3500000 	cmp	r0, #0
   1e344:	1afffff2 	bne	1e314 <SMSC951xDevicePHYWaitNotBusy+0x20>
   1e348:	e3a00000 	mov	r0, #0
   1e34c:	e28dd00c 	add	sp, sp, #12
   1e350:	e8bd8030 	pop	{r4, r5, pc}
   1e354:	e59f2010 	ldr	r2, [pc, #16]	; 1e36c <SMSC951xDevicePHYWaitNotBusy+0x78>
   1e358:	e59f1010 	ldr	r1, [pc, #16]	; 1e370 <SMSC951xDevicePHYWaitNotBusy+0x7c>
   1e35c:	e59f0010 	ldr	r0, [pc, #16]	; 1e374 <SMSC951xDevicePHYWaitNotBusy+0x80>
   1e360:	eb002309 	bl	26f8c <uspi_assertion_failed>
   1e364:	eaffffe6 	b	1e304 <SMSC951xDevicePHYWaitNotBusy+0x10>
   1e368:	000003e7 	andeq	r0, r0, r7, ror #7
   1e36c:	000001c5 	andeq	r0, r0, r5, asr #3
   1e370:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e374:	00029a68 	andeq	r9, r2, r8, ror #20

0001e378 <SMSC951xDevicePHYWrite>:
   1e378:	e92d4070 	push	{r4, r5, r6, lr}
   1e37c:	e2504000 	subs	r4, r0, #0
   1e380:	e1a05001 	mov	r5, r1
   1e384:	e1a06002 	mov	r6, r2
   1e388:	0a00001c 	beq	1e400 <SMSC951xDevicePHYWrite+0x88>
   1e38c:	e355001f 	cmp	r5, #31
   1e390:	8a000015 	bhi	1e3ec <SMSC951xDevicePHYWrite+0x74>
   1e394:	e1a00004 	mov	r0, r4
   1e398:	ebffffd5 	bl	1e2f4 <SMSC951xDevicePHYWaitNotBusy>
   1e39c:	e3500000 	cmp	r0, #0
   1e3a0:	1a000001 	bne	1e3ac <SMSC951xDevicePHYWrite+0x34>
   1e3a4:	e3a00000 	mov	r0, #0
   1e3a8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e3ac:	e1a02006 	mov	r2, r6
   1e3b0:	e3a01f46 	mov	r1, #280	; 0x118
   1e3b4:	e1a00004 	mov	r0, r4
   1e3b8:	ebfffeb9 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e3bc:	e3500000 	cmp	r0, #0
   1e3c0:	0afffff7 	beq	1e3a4 <SMSC951xDevicePHYWrite+0x2c>
   1e3c4:	e59f2048 	ldr	r2, [pc, #72]	; 1e414 <SMSC951xDevicePHYWrite+0x9c>
   1e3c8:	e3a01f45 	mov	r1, #276	; 0x114
   1e3cc:	e1822305 	orr	r2, r2, r5, lsl #6
   1e3d0:	e1a00004 	mov	r0, r4
   1e3d4:	ebfffeb2 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e3d8:	e3500000 	cmp	r0, #0
   1e3dc:	0afffff0 	beq	1e3a4 <SMSC951xDevicePHYWrite+0x2c>
   1e3e0:	e1a00004 	mov	r0, r4
   1e3e4:	e8bd4070 	pop	{r4, r5, r6, lr}
   1e3e8:	eaffffc1 	b	1e2f4 <SMSC951xDevicePHYWaitNotBusy>
   1e3ec:	e59f2024 	ldr	r2, [pc, #36]	; 1e418 <SMSC951xDevicePHYWrite+0xa0>
   1e3f0:	e59f1024 	ldr	r1, [pc, #36]	; 1e41c <SMSC951xDevicePHYWrite+0xa4>
   1e3f4:	e59f0024 	ldr	r0, [pc, #36]	; 1e420 <SMSC951xDevicePHYWrite+0xa8>
   1e3f8:	eb0022e3 	bl	26f8c <uspi_assertion_failed>
   1e3fc:	eaffffe4 	b	1e394 <SMSC951xDevicePHYWrite+0x1c>
   1e400:	e3a02f66 	mov	r2, #408	; 0x198
   1e404:	e59f1010 	ldr	r1, [pc, #16]	; 1e41c <SMSC951xDevicePHYWrite+0xa4>
   1e408:	e59f0014 	ldr	r0, [pc, #20]	; 1e424 <SMSC951xDevicePHYWrite+0xac>
   1e40c:	eb0022de 	bl	26f8c <uspi_assertion_failed>
   1e410:	eaffffdd 	b	1e38c <SMSC951xDevicePHYWrite+0x14>
   1e414:	00000803 	andeq	r0, r0, r3, lsl #16
   1e418:	00000199 	muleq	r0, r9, r1
   1e41c:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e420:	0002adc0 	andeq	sl, r2, r0, asr #27
   1e424:	00029a68 	andeq	r9, r2, r8, ror #20

0001e428 <SMSC951xDevicePHYRead>:
   1e428:	e92d4070 	push	{r4, r5, r6, lr}
   1e42c:	e2504000 	subs	r4, r0, #0
   1e430:	e24dd008 	sub	sp, sp, #8
   1e434:	e1a05001 	mov	r5, r1
   1e438:	e1a06002 	mov	r6, r2
   1e43c:	0a000026 	beq	1e4dc <SMSC951xDevicePHYRead+0xb4>
   1e440:	e355001f 	cmp	r5, #31
   1e444:	8a000013 	bhi	1e498 <SMSC951xDevicePHYRead+0x70>
   1e448:	e1a00004 	mov	r0, r4
   1e44c:	ebffffa8 	bl	1e2f4 <SMSC951xDevicePHYWaitNotBusy>
   1e450:	e3500000 	cmp	r0, #0
   1e454:	1a000001 	bne	1e460 <SMSC951xDevicePHYRead+0x38>
   1e458:	e28dd008 	add	sp, sp, #8
   1e45c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e460:	e59f209c 	ldr	r2, [pc, #156]	; 1e504 <SMSC951xDevicePHYRead+0xdc>
   1e464:	e3a01f45 	mov	r1, #276	; 0x114
   1e468:	e1822305 	orr	r2, r2, r5, lsl #6
   1e46c:	e1a00004 	mov	r0, r4
   1e470:	ebfffe8b 	bl	1dea4 <SMSC951xDeviceWriteReg>
   1e474:	e3500000 	cmp	r0, #0
   1e478:	0a000003 	beq	1e48c <SMSC951xDevicePHYRead+0x64>
   1e47c:	e1a00004 	mov	r0, r4
   1e480:	ebffff9b 	bl	1e2f4 <SMSC951xDevicePHYWaitNotBusy>
   1e484:	e3500000 	cmp	r0, #0
   1e488:	1a000007 	bne	1e4ac <SMSC951xDevicePHYRead+0x84>
   1e48c:	e3a00000 	mov	r0, #0
   1e490:	e28dd008 	add	sp, sp, #8
   1e494:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e498:	e59f2068 	ldr	r2, [pc, #104]	; 1e508 <SMSC951xDevicePHYRead+0xe0>
   1e49c:	e59f1068 	ldr	r1, [pc, #104]	; 1e50c <SMSC951xDevicePHYRead+0xe4>
   1e4a0:	e59f0068 	ldr	r0, [pc, #104]	; 1e510 <SMSC951xDevicePHYRead+0xe8>
   1e4a4:	eb0022b8 	bl	26f8c <uspi_assertion_failed>
   1e4a8:	eaffffe6 	b	1e448 <SMSC951xDevicePHYRead+0x20>
   1e4ac:	e1a00004 	mov	r0, r4
   1e4b0:	e28d2004 	add	r2, sp, #4
   1e4b4:	e3a01f46 	mov	r1, #280	; 0x118
   1e4b8:	ebffff6a 	bl	1e268 <SMSC951xDeviceReadReg>
   1e4bc:	e3500000 	cmp	r0, #0
   1e4c0:	0afffff1 	beq	1e48c <SMSC951xDevicePHYRead+0x64>
   1e4c4:	e3560000 	cmp	r6, #0
   1e4c8:	0a000008 	beq	1e4f0 <SMSC951xDevicePHYRead+0xc8>
   1e4cc:	e59d3004 	ldr	r3, [sp, #4]
   1e4d0:	e3a00001 	mov	r0, #1
   1e4d4:	e1c630b0 	strh	r3, [r6]
   1e4d8:	eaffffde 	b	1e458 <SMSC951xDevicePHYRead+0x30>
   1e4dc:	e3a02f6b 	mov	r2, #428	; 0x1ac
   1e4e0:	e59f1024 	ldr	r1, [pc, #36]	; 1e50c <SMSC951xDevicePHYRead+0xe4>
   1e4e4:	e59f0028 	ldr	r0, [pc, #40]	; 1e514 <SMSC951xDevicePHYRead+0xec>
   1e4e8:	eb0022a7 	bl	26f8c <uspi_assertion_failed>
   1e4ec:	eaffffd3 	b	1e440 <SMSC951xDevicePHYRead+0x18>
   1e4f0:	e59f2020 	ldr	r2, [pc, #32]	; 1e518 <SMSC951xDevicePHYRead+0xf0>
   1e4f4:	e59f1010 	ldr	r1, [pc, #16]	; 1e50c <SMSC951xDevicePHYRead+0xe4>
   1e4f8:	e59f001c 	ldr	r0, [pc, #28]	; 1e51c <SMSC951xDevicePHYRead+0xf4>
   1e4fc:	eb0022a2 	bl	26f8c <uspi_assertion_failed>
   1e500:	eafffff1 	b	1e4cc <SMSC951xDevicePHYRead+0xa4>
   1e504:	00000801 	andeq	r0, r0, r1, lsl #16
   1e508:	000001ad 	andeq	r0, r0, sp, lsr #3
   1e50c:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e510:	0002adc0 	andeq	sl, r2, r0, asr #27
   1e514:	00029a68 	andeq	r9, r2, r8, ror #20
   1e518:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
   1e51c:	0002add0 	ldrdeq	sl, [r2], -r0

0001e520 <SMSC951xDeviceIsLinkUp>:
   1e520:	e92d4010 	push	{r4, lr}
   1e524:	e2504000 	subs	r4, r0, #0
   1e528:	e24dd008 	sub	sp, sp, #8
   1e52c:	0a000009 	beq	1e558 <SMSC951xDeviceIsLinkUp+0x38>
   1e530:	e1a00004 	mov	r0, r4
   1e534:	e28d2006 	add	r2, sp, #6
   1e538:	e3a01001 	mov	r1, #1
   1e53c:	ebffffb9 	bl	1e428 <SMSC951xDevicePHYRead>
   1e540:	e3500000 	cmp	r0, #0
   1e544:	11dd00b6 	ldrhne	r0, [sp, #6]
   1e548:	11a00140 	asrne	r0, r0, #2
   1e54c:	12000001 	andne	r0, r0, #1
   1e550:	e28dd008 	add	sp, sp, #8
   1e554:	e8bd8010 	pop	{r4, pc}
   1e558:	e59f200c 	ldr	r2, [pc, #12]	; 1e56c <SMSC951xDeviceIsLinkUp+0x4c>
   1e55c:	e59f100c 	ldr	r1, [pc, #12]	; 1e570 <SMSC951xDeviceIsLinkUp+0x50>
   1e560:	e59f000c 	ldr	r0, [pc, #12]	; 1e574 <SMSC951xDeviceIsLinkUp+0x54>
   1e564:	eb002288 	bl	26f8c <uspi_assertion_failed>
   1e568:	eafffff0 	b	1e530 <SMSC951xDeviceIsLinkUp+0x10>
   1e56c:	0000018b 	andeq	r0, r0, fp, lsl #3
   1e570:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e574:	00029a68 	andeq	r9, r2, r8, ror #20

0001e578 <SMSC951xDeviceDumpReg>:
   1e578:	e92d4070 	push	{r4, r5, r6, lr}
   1e57c:	e2505000 	subs	r5, r0, #0
   1e580:	e24dd010 	sub	sp, sp, #16
   1e584:	e1a06001 	mov	r6, r1
   1e588:	e1a04002 	mov	r4, r2
   1e58c:	0a000014 	beq	1e5e4 <SMSC951xDeviceDumpReg+0x6c>
   1e590:	e1a00005 	mov	r0, r5
   1e594:	e28d200c 	add	r2, sp, #12
   1e598:	e1a01004 	mov	r1, r4
   1e59c:	ebffff31 	bl	1e268 <SMSC951xDeviceReadReg>
   1e5a0:	e3500000 	cmp	r0, #0
   1e5a4:	0a000007 	beq	1e5c8 <SMSC951xDeviceDumpReg+0x50>
   1e5a8:	e58d6000 	str	r6, [sp]
   1e5ac:	e59d300c 	ldr	r3, [sp, #12]
   1e5b0:	e59f2040 	ldr	r2, [pc, #64]	; 1e5f8 <SMSC951xDeviceDumpReg+0x80>
   1e5b4:	e3a01004 	mov	r1, #4
   1e5b8:	e59f003c 	ldr	r0, [pc, #60]	; 1e5fc <SMSC951xDeviceDumpReg+0x84>
   1e5bc:	eb002260 	bl	26f44 <LogWrite>
   1e5c0:	e28dd010 	add	sp, sp, #16
   1e5c4:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e5c8:	e1a03004 	mov	r3, r4
   1e5cc:	e59f202c 	ldr	r2, [pc, #44]	; 1e600 <SMSC951xDeviceDumpReg+0x88>
   1e5d0:	e3a01001 	mov	r1, #1
   1e5d4:	e59f0020 	ldr	r0, [pc, #32]	; 1e5fc <SMSC951xDeviceDumpReg+0x84>
   1e5d8:	eb002259 	bl	26f44 <LogWrite>
   1e5dc:	e28dd010 	add	sp, sp, #16
   1e5e0:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e5e4:	e3a02f7d 	mov	r2, #500	; 0x1f4
   1e5e8:	e59f1014 	ldr	r1, [pc, #20]	; 1e604 <SMSC951xDeviceDumpReg+0x8c>
   1e5ec:	e59f0014 	ldr	r0, [pc, #20]	; 1e608 <SMSC951xDeviceDumpReg+0x90>
   1e5f0:	eb002265 	bl	26f8c <uspi_assertion_failed>
   1e5f4:	eaffffe5 	b	1e590 <SMSC951xDeviceDumpReg+0x18>
   1e5f8:	0002adf8 	strdeq	sl, [r2], -r8
   1e5fc:	0002857c 	andeq	r8, r2, ip, ror r5
   1e600:	0002addc 	ldrdeq	sl, [r2], -ip
   1e604:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e608:	00029a68 	andeq	r9, r2, r8, ror #20

0001e60c <SMSC951xDeviceDumpRegs>:
   1e60c:	e92d4010 	push	{r4, lr}
   1e610:	e2504000 	subs	r4, r0, #0
   1e614:	0a000050 	beq	1e75c <SMSC951xDeviceDumpRegs+0x150>
   1e618:	e1a00004 	mov	r0, r4
   1e61c:	e3a02000 	mov	r2, #0
   1e620:	e59f1148 	ldr	r1, [pc, #328]	; 1e770 <SMSC951xDeviceDumpRegs+0x164>
   1e624:	ebffffd3 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e628:	e1a00004 	mov	r0, r4
   1e62c:	e3a02008 	mov	r2, #8
   1e630:	e59f113c 	ldr	r1, [pc, #316]	; 1e774 <SMSC951xDeviceDumpRegs+0x168>
   1e634:	ebffffcf 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e638:	e1a00004 	mov	r0, r4
   1e63c:	e3a0200c 	mov	r2, #12
   1e640:	e59f1130 	ldr	r1, [pc, #304]	; 1e778 <SMSC951xDeviceDumpRegs+0x16c>
   1e644:	ebffffcb 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e648:	e1a00004 	mov	r0, r4
   1e64c:	e3a02010 	mov	r2, #16
   1e650:	e59f1124 	ldr	r1, [pc, #292]	; 1e77c <SMSC951xDeviceDumpRegs+0x170>
   1e654:	ebffffc7 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e658:	e1a00004 	mov	r0, r4
   1e65c:	e3a02014 	mov	r2, #20
   1e660:	e59f1118 	ldr	r1, [pc, #280]	; 1e780 <SMSC951xDeviceDumpRegs+0x174>
   1e664:	ebffffc3 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e668:	e1a00004 	mov	r0, r4
   1e66c:	e3a02018 	mov	r2, #24
   1e670:	e59f110c 	ldr	r1, [pc, #268]	; 1e784 <SMSC951xDeviceDumpRegs+0x178>
   1e674:	ebffffbf 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e678:	e1a00004 	mov	r0, r4
   1e67c:	e3a02020 	mov	r2, #32
   1e680:	e59f1100 	ldr	r1, [pc, #256]	; 1e788 <SMSC951xDeviceDumpRegs+0x17c>
   1e684:	ebffffbb 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e688:	e1a00004 	mov	r0, r4
   1e68c:	e3a02024 	mov	r2, #36	; 0x24
   1e690:	e59f10f4 	ldr	r1, [pc, #244]	; 1e78c <SMSC951xDeviceDumpRegs+0x180>
   1e694:	ebffffb7 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e698:	e1a00004 	mov	r0, r4
   1e69c:	e3a02028 	mov	r2, #40	; 0x28
   1e6a0:	e59f10e8 	ldr	r1, [pc, #232]	; 1e790 <SMSC951xDeviceDumpRegs+0x184>
   1e6a4:	ebffffb3 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e6a8:	e1a00004 	mov	r0, r4
   1e6ac:	e3a0202c 	mov	r2, #44	; 0x2c
   1e6b0:	e59f10dc 	ldr	r1, [pc, #220]	; 1e794 <SMSC951xDeviceDumpRegs+0x188>
   1e6b4:	ebffffaf 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e6b8:	e1a00004 	mov	r0, r4
   1e6bc:	e3a02038 	mov	r2, #56	; 0x38
   1e6c0:	e59f10d0 	ldr	r1, [pc, #208]	; 1e798 <SMSC951xDeviceDumpRegs+0x18c>
   1e6c4:	ebffffab 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e6c8:	e1a00004 	mov	r0, r4
   1e6cc:	e3a02068 	mov	r2, #104	; 0x68
   1e6d0:	e59f10c4 	ldr	r1, [pc, #196]	; 1e79c <SMSC951xDeviceDumpRegs+0x190>
   1e6d4:	ebffffa7 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e6d8:	e1a00004 	mov	r0, r4
   1e6dc:	e3a0206c 	mov	r2, #108	; 0x6c
   1e6e0:	e59f10b8 	ldr	r1, [pc, #184]	; 1e7a0 <SMSC951xDeviceDumpRegs+0x194>
   1e6e4:	ebffffa3 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e6e8:	e1a00004 	mov	r0, r4
   1e6ec:	e3a02c01 	mov	r2, #256	; 0x100
   1e6f0:	e59f10ac 	ldr	r1, [pc, #172]	; 1e7a4 <SMSC951xDeviceDumpRegs+0x198>
   1e6f4:	ebffff9f 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e6f8:	e1a00004 	mov	r0, r4
   1e6fc:	e3a02f41 	mov	r2, #260	; 0x104
   1e700:	e59f10a0 	ldr	r1, [pc, #160]	; 1e7a8 <SMSC951xDeviceDumpRegs+0x19c>
   1e704:	ebffff9b 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e708:	e1a00004 	mov	r0, r4
   1e70c:	e3a02f42 	mov	r2, #264	; 0x108
   1e710:	e59f1094 	ldr	r1, [pc, #148]	; 1e7ac <SMSC951xDeviceDumpRegs+0x1a0>
   1e714:	ebffff97 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e718:	e1a00004 	mov	r0, r4
   1e71c:	e3a02f43 	mov	r2, #268	; 0x10c
   1e720:	e59f1088 	ldr	r1, [pc, #136]	; 1e7b0 <SMSC951xDeviceDumpRegs+0x1a4>
   1e724:	ebffff93 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e728:	e1a00004 	mov	r0, r4
   1e72c:	e3a02e11 	mov	r2, #272	; 0x110
   1e730:	e59f107c 	ldr	r1, [pc, #124]	; 1e7b4 <SMSC951xDeviceDumpRegs+0x1a8>
   1e734:	ebffff8f 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e738:	e1a00004 	mov	r0, r4
   1e73c:	e3a02f47 	mov	r2, #284	; 0x11c
   1e740:	e59f1070 	ldr	r1, [pc, #112]	; 1e7b8 <SMSC951xDeviceDumpRegs+0x1ac>
   1e744:	ebffff8b 	bl	1e578 <SMSC951xDeviceDumpReg>
   1e748:	e1a00004 	mov	r0, r4
   1e74c:	e8bd4010 	pop	{r4, lr}
   1e750:	e3a02f4b 	mov	r2, #300	; 0x12c
   1e754:	e59f1060 	ldr	r1, [pc, #96]	; 1e7bc <SMSC951xDeviceDumpRegs+0x1b0>
   1e758:	eaffff86 	b	1e578 <SMSC951xDeviceDumpReg>
   1e75c:	e59f205c 	ldr	r2, [pc, #92]	; 1e7c0 <SMSC951xDeviceDumpRegs+0x1b4>
   1e760:	e59f105c 	ldr	r1, [pc, #92]	; 1e7c4 <SMSC951xDeviceDumpRegs+0x1b8>
   1e764:	e59f005c 	ldr	r0, [pc, #92]	; 1e7c8 <SMSC951xDeviceDumpRegs+0x1bc>
   1e768:	eb002207 	bl	26f8c <uspi_assertion_failed>
   1e76c:	eaffffa9 	b	1e618 <SMSC951xDeviceDumpRegs+0xc>
   1e770:	0002ae00 	andeq	sl, r2, r0, lsl #28
   1e774:	0002ae08 	andeq	sl, r2, r8, lsl #28
   1e778:	0002ae10 	andeq	sl, r2, r0, lsl lr
   1e77c:	0002ae18 	andeq	sl, r2, r8, lsl lr
   1e780:	0002ae20 	andeq	sl, r2, r0, lsr #28
   1e784:	0002ae28 	andeq	sl, r2, r8, lsr #28
   1e788:	0002ae34 	andeq	sl, r2, r4, lsr lr
   1e78c:	0002ae3c 	andeq	sl, r2, ip, lsr lr
   1e790:	0002ae40 	andeq	sl, r2, r0, asr #28
   1e794:	0002ae4c 	andeq	sl, r2, ip, asr #28
   1e798:	0002ae54 	andeq	sl, r2, r4, asr lr
   1e79c:	0002ae60 	andeq	sl, r2, r0, ror #28
   1e7a0:	0002ae6c 	andeq	sl, r2, ip, ror #28
   1e7a4:	0002ae78 	andeq	sl, r2, r8, ror lr
   1e7a8:	0002ae80 	andeq	sl, r2, r0, lsl #29
   1e7ac:	0002ae88 	andeq	sl, r2, r8, lsl #29
   1e7b0:	0002ae90 	muleq	r2, r0, lr
   1e7b4:	0002ae98 	muleq	r2, r8, lr
   1e7b8:	0002aea0 	andeq	sl, r2, r0, lsr #29
   1e7bc:	0002aea8 	andeq	sl, r2, r8, lsr #29
   1e7c0:	00000203 	andeq	r0, r0, r3, lsl #4
   1e7c4:	0002ac64 	andeq	sl, r2, r4, ror #24
   1e7c8:	00029a68 	andeq	r9, r2, r8, ror #20

0001e7cc <LAN7800Device>:
   1e7cc:	e92d4070 	push	{r4, r5, r6, lr}
   1e7d0:	e2504000 	subs	r4, r0, #0
   1e7d4:	e1a05001 	mov	r5, r1
   1e7d8:	0a000012 	beq	1e828 <LAN7800Device+0x5c>
   1e7dc:	e1a01005 	mov	r1, r5
   1e7e0:	e1a00004 	mov	r0, r4
   1e7e4:	ebfffaa2 	bl	1d274 <USBFunctionCopy>
   1e7e8:	e3a03000 	mov	r3, #0
   1e7ec:	e59f2048 	ldr	r2, [pc, #72]	; 1e83c <LAN7800Device+0x70>
   1e7f0:	e5843010 	str	r3, [r4, #16]
   1e7f4:	e5843014 	str	r3, [r4, #20]
   1e7f8:	e5843024 	str	r3, [r4, #36]	; 0x24
   1e7fc:	e5842000 	str	r2, [r4]
   1e800:	e3a00d19 	mov	r0, #1600	; 0x640
   1e804:	eb0019c9 	bl	24f30 <malloc>
   1e808:	e3500000 	cmp	r0, #0
   1e80c:	e5840024 	str	r0, [r4, #36]	; 0x24
   1e810:	18bd8070 	popne	{r4, r5, r6, pc}
   1e814:	e59f2024 	ldr	r2, [pc, #36]	; 1e840 <LAN7800Device+0x74>
   1e818:	e59f1024 	ldr	r1, [pc, #36]	; 1e844 <LAN7800Device+0x78>
   1e81c:	e59f0024 	ldr	r0, [pc, #36]	; 1e848 <LAN7800Device+0x7c>
   1e820:	e8bd4070 	pop	{r4, r5, r6, lr}
   1e824:	ea0021d8 	b	26f8c <uspi_assertion_failed>
   1e828:	e3a020f8 	mov	r2, #248	; 0xf8
   1e82c:	e59f1010 	ldr	r1, [pc, #16]	; 1e844 <LAN7800Device+0x78>
   1e830:	e59f0014 	ldr	r0, [pc, #20]	; 1e84c <LAN7800Device+0x80>
   1e834:	eb0021d4 	bl	26f8c <uspi_assertion_failed>
   1e838:	eaffffe7 	b	1e7dc <LAN7800Device+0x10>
   1e83c:	0001f218 	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   1e840:	00000102 	andeq	r0, r0, r2, lsl #2
   1e844:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1e848:	0002ac70 	andeq	sl, r2, r0, ror ip
   1e84c:	00029a68 	andeq	r9, r2, r8, ror #20

0001e850 <_LAN7800Device>:
   1e850:	e92d4010 	push	{r4, lr}
   1e854:	e2504000 	subs	r4, r0, #0
   1e858:	0a000018 	beq	1e8c0 <_LAN7800Device+0x70>
   1e85c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   1e860:	e3500000 	cmp	r0, #0
   1e864:	0a000002 	beq	1e874 <_LAN7800Device+0x24>
   1e868:	eb001a16 	bl	250c8 <free>
   1e86c:	e3a03000 	mov	r3, #0
   1e870:	e5843024 	str	r3, [r4, #36]	; 0x24
   1e874:	e5940014 	ldr	r0, [r4, #20]
   1e878:	e3500000 	cmp	r0, #0
   1e87c:	0a000004 	beq	1e894 <_LAN7800Device+0x44>
   1e880:	ebfff3fc 	bl	1b878 <_USBEndpoint>
   1e884:	e5940014 	ldr	r0, [r4, #20]
   1e888:	eb001a0e 	bl	250c8 <free>
   1e88c:	e3a03000 	mov	r3, #0
   1e890:	e5843014 	str	r3, [r4, #20]
   1e894:	e5940010 	ldr	r0, [r4, #16]
   1e898:	e3500000 	cmp	r0, #0
   1e89c:	0a000004 	beq	1e8b4 <_LAN7800Device+0x64>
   1e8a0:	ebfff3f4 	bl	1b878 <_USBEndpoint>
   1e8a4:	e5940010 	ldr	r0, [r4, #16]
   1e8a8:	eb001a06 	bl	250c8 <free>
   1e8ac:	e3a03000 	mov	r3, #0
   1e8b0:	e5843010 	str	r3, [r4, #16]
   1e8b4:	e1a00004 	mov	r0, r4
   1e8b8:	e8bd4010 	pop	{r4, lr}
   1e8bc:	eafffaae 	b	1d37c <_USBFunction>
   1e8c0:	e59f200c 	ldr	r2, [pc, #12]	; 1e8d4 <_LAN7800Device+0x84>
   1e8c4:	e59f100c 	ldr	r1, [pc, #12]	; 1e8d8 <_LAN7800Device+0x88>
   1e8c8:	e59f000c 	ldr	r0, [pc, #12]	; 1e8dc <_LAN7800Device+0x8c>
   1e8cc:	eb0021ae 	bl	26f8c <uspi_assertion_failed>
   1e8d0:	eaffffe1 	b	1e85c <_LAN7800Device+0xc>
   1e8d4:	00000107 	andeq	r0, r0, r7, lsl #2
   1e8d8:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1e8dc:	00029a68 	andeq	r9, r2, r8, ror #20

0001e8e0 <LAN7800DeviceGetMACAddress>:
   1e8e0:	e92d4010 	push	{r4, lr}
   1e8e4:	e2504000 	subs	r4, r0, #0
   1e8e8:	0a000001 	beq	1e8f4 <LAN7800DeviceGetMACAddress+0x14>
   1e8ec:	e2840018 	add	r0, r4, #24
   1e8f0:	e8bd8010 	pop	{r4, pc}
   1e8f4:	e59f2010 	ldr	r2, [pc, #16]	; 1e90c <LAN7800DeviceGetMACAddress+0x2c>
   1e8f8:	e59f1010 	ldr	r1, [pc, #16]	; 1e910 <LAN7800DeviceGetMACAddress+0x30>
   1e8fc:	e59f0010 	ldr	r0, [pc, #16]	; 1e914 <LAN7800DeviceGetMACAddress+0x34>
   1e900:	eb0021a1 	bl	26f8c <uspi_assertion_failed>
   1e904:	e2840018 	add	r0, r4, #24
   1e908:	e8bd8010 	pop	{r4, pc}
   1e90c:	000001de 	ldrdeq	r0, [r0], -lr
   1e910:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1e914:	00029a68 	andeq	r9, r2, r8, ror #20

0001e918 <LAN7800DeviceSendFrame>:
   1e918:	e92d4070 	push	{r4, r5, r6, lr}
   1e91c:	e2504000 	subs	r4, r0, #0
   1e920:	e1a06001 	mov	r6, r1
   1e924:	e1a05002 	mov	r5, r2
   1e928:	0a00001f 	beq	1e9ac <LAN7800DeviceSendFrame+0x94>
   1e92c:	e59f30cc 	ldr	r3, [pc, #204]	; 1ea00 <LAN7800DeviceSendFrame+0xe8>
   1e930:	e1550003 	cmp	r5, r3
   1e934:	8a00001a 	bhi	1e9a4 <LAN7800DeviceSendFrame+0x8c>
   1e938:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1e93c:	e3530000 	cmp	r3, #0
   1e940:	0a00001e 	beq	1e9c0 <LAN7800DeviceSendFrame+0xa8>
   1e944:	e3560000 	cmp	r6, #0
   1e948:	0a000022 	beq	1e9d8 <LAN7800DeviceSendFrame+0xc0>
   1e94c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
   1e950:	e1a01006 	mov	r1, r6
   1e954:	e1a02005 	mov	r2, r5
   1e958:	e2800008 	add	r0, r0, #8
   1e95c:	eb000677 	bl	20340 <uspi_memcpy>
   1e960:	e3a01000 	mov	r1, #0
   1e964:	e5942014 	ldr	r2, [r4, #20]
   1e968:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1e96c:	e1520001 	cmp	r2, r1
   1e970:	e3852501 	orr	r2, r5, #4194304	; 0x400000
   1e974:	e5831004 	str	r1, [r3, #4]
   1e978:	e5832000 	str	r2, [r3]
   1e97c:	0a00001a 	beq	1e9ec <LAN7800DeviceSendFrame+0xd4>
   1e980:	e1a00004 	mov	r0, r4
   1e984:	ebfffb07 	bl	1d5a8 <USBFunctionGetHost>
   1e988:	e2853008 	add	r3, r5, #8
   1e98c:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   1e990:	e5941014 	ldr	r1, [r4, #20]
   1e994:	ebffe3f5 	bl	17970 <DWHCIDeviceTransfer>
   1e998:	e1e00000 	mvn	r0, r0
   1e99c:	e1a00fa0 	lsr	r0, r0, #31
   1e9a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e9a4:	e3a00000 	mov	r0, #0
   1e9a8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e9ac:	e59f2050 	ldr	r2, [pc, #80]	; 1ea04 <LAN7800DeviceSendFrame+0xec>
   1e9b0:	e59f1050 	ldr	r1, [pc, #80]	; 1ea08 <LAN7800DeviceSendFrame+0xf0>
   1e9b4:	e59f0050 	ldr	r0, [pc, #80]	; 1ea0c <LAN7800DeviceSendFrame+0xf4>
   1e9b8:	eb002173 	bl	26f8c <uspi_assertion_failed>
   1e9bc:	eaffffda 	b	1e92c <LAN7800DeviceSendFrame+0x14>
   1e9c0:	e3a02f7b 	mov	r2, #492	; 0x1ec
   1e9c4:	e59f103c 	ldr	r1, [pc, #60]	; 1ea08 <LAN7800DeviceSendFrame+0xf0>
   1e9c8:	e59f0040 	ldr	r0, [pc, #64]	; 1ea10 <LAN7800DeviceSendFrame+0xf8>
   1e9cc:	eb00216e 	bl	26f8c <uspi_assertion_failed>
   1e9d0:	e3560000 	cmp	r6, #0
   1e9d4:	1affffdc 	bne	1e94c <LAN7800DeviceSendFrame+0x34>
   1e9d8:	e59f2034 	ldr	r2, [pc, #52]	; 1ea14 <LAN7800DeviceSendFrame+0xfc>
   1e9dc:	e59f1024 	ldr	r1, [pc, #36]	; 1ea08 <LAN7800DeviceSendFrame+0xf0>
   1e9e0:	e59f0030 	ldr	r0, [pc, #48]	; 1ea18 <LAN7800DeviceSendFrame+0x100>
   1e9e4:	eb002168 	bl	26f8c <uspi_assertion_failed>
   1e9e8:	eaffffd7 	b	1e94c <LAN7800DeviceSendFrame+0x34>
   1e9ec:	e59f2028 	ldr	r2, [pc, #40]	; 1ea1c <LAN7800DeviceSendFrame+0x104>
   1e9f0:	e59f1010 	ldr	r1, [pc, #16]	; 1ea08 <LAN7800DeviceSendFrame+0xf0>
   1e9f4:	e59f0024 	ldr	r0, [pc, #36]	; 1ea20 <LAN7800DeviceSendFrame+0x108>
   1e9f8:	eb002163 	bl	26f8c <uspi_assertion_failed>
   1e9fc:	eaffffdf 	b	1e980 <LAN7800DeviceSendFrame+0x68>
   1ea00:	00000638 	andeq	r0, r0, r8, lsr r6
   1ea04:	000001e5 	andeq	r0, r0, r5, ror #3
   1ea08:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1ea0c:	00029a68 	andeq	r9, r2, r8, ror #20
   1ea10:	0002ac70 	andeq	sl, r2, r0, ror ip
   1ea14:	000001ed 	andeq	r0, r0, sp, ror #3
   1ea18:	0002afdc 	ldrdeq	sl, [r2], -ip
   1ea1c:	000001f3 	strdeq	r0, [r0], -r3
   1ea20:	0002ac88 	andeq	sl, r2, r8, lsl #25

0001ea24 <LAN7800DeviceReceiveFrame>:
   1ea24:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1ea28:	e2506000 	subs	r6, r0, #0
   1ea2c:	e24dd034 	sub	sp, sp, #52	; 0x34
   1ea30:	e1a05001 	mov	r5, r1
   1ea34:	e1a07002 	mov	r7, r2
   1ea38:	0a000042 	beq	1eb48 <LAN7800DeviceReceiveFrame+0x124>
   1ea3c:	e5963010 	ldr	r3, [r6, #16]
   1ea40:	e3530000 	cmp	r3, #0
   1ea44:	0a000046 	beq	1eb64 <LAN7800DeviceReceiveFrame+0x140>
   1ea48:	e3550000 	cmp	r5, #0
   1ea4c:	0a00004a 	beq	1eb7c <LAN7800DeviceReceiveFrame+0x158>
   1ea50:	e3a04000 	mov	r4, #0
   1ea54:	e58d4000 	str	r4, [sp]
   1ea58:	e5961010 	ldr	r1, [r6, #16]
   1ea5c:	e3a03d19 	mov	r3, #1600	; 0x640
   1ea60:	e1a02005 	mov	r2, r5
   1ea64:	e28d000c 	add	r0, sp, #12
   1ea68:	ebfff462 	bl	1bbf8 <USBRequest>
   1ea6c:	e1a00006 	mov	r0, r6
   1ea70:	ebfffacc 	bl	1d5a8 <USBFunctionGetHost>
   1ea74:	e28d100c 	add	r1, sp, #12
   1ea78:	ebffe298 	bl	174e0 <DWHCIDeviceSubmitBlockingRequest>
   1ea7c:	e1500004 	cmp	r0, r4
   1ea80:	0a000022 	beq	1eb10 <LAN7800DeviceReceiveFrame+0xec>
   1ea84:	e28d000c 	add	r0, sp, #12
   1ea88:	ebfff4d7 	bl	1bdec <USBRequestGetResultLength>
   1ea8c:	e3500009 	cmp	r0, #9
   1ea90:	9a00001e 	bls	1eb10 <LAN7800DeviceReceiveFrame+0xec>
   1ea94:	e5953000 	ldr	r3, [r5]
   1ea98:	e3130501 	tst	r3, #4194304	; 0x400000
   1ea9c:	1a000020 	bne	1eb24 <LAN7800DeviceReceiveFrame+0x100>
   1eaa0:	e1a04903 	lsl	r4, r3, #18
   1eaa4:	e1a04924 	lsr	r4, r4, #18
   1eaa8:	e240000a 	sub	r0, r0, #10
   1eaac:	e1500004 	cmp	r0, r4
   1eab0:	0a000003 	beq	1eac4 <LAN7800DeviceReceiveFrame+0xa0>
   1eab4:	e59f20e8 	ldr	r2, [pc, #232]	; 1eba4 <LAN7800DeviceReceiveFrame+0x180>
   1eab8:	e59f10e8 	ldr	r1, [pc, #232]	; 1eba8 <LAN7800DeviceReceiveFrame+0x184>
   1eabc:	e59f00e8 	ldr	r0, [pc, #232]	; 1ebac <LAN7800DeviceReceiveFrame+0x188>
   1eac0:	eb002131 	bl	26f8c <uspi_assertion_failed>
   1eac4:	e3540004 	cmp	r4, #4
   1eac8:	9a00000c 	bls	1eb00 <LAN7800DeviceReceiveFrame+0xdc>
   1eacc:	e2444004 	sub	r4, r4, #4
   1ead0:	e1a02004 	mov	r2, r4
   1ead4:	e285100a 	add	r1, r5, #10
   1ead8:	e1a00005 	mov	r0, r5
   1eadc:	eb000617 	bl	20340 <uspi_memcpy>
   1eae0:	e3570000 	cmp	r7, #0
   1eae4:	0a000029 	beq	1eb90 <LAN7800DeviceReceiveFrame+0x16c>
   1eae8:	e28d000c 	add	r0, sp, #12
   1eaec:	e5874000 	str	r4, [r7]
   1eaf0:	ebfff470 	bl	1bcb8 <_USBRequest>
   1eaf4:	e3a00001 	mov	r0, #1
   1eaf8:	e28dd034 	add	sp, sp, #52	; 0x34
   1eafc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1eb00:	e3a02f87 	mov	r2, #540	; 0x21c
   1eb04:	e59f109c 	ldr	r1, [pc, #156]	; 1eba8 <LAN7800DeviceReceiveFrame+0x184>
   1eb08:	e59f00a0 	ldr	r0, [pc, #160]	; 1ebb0 <LAN7800DeviceReceiveFrame+0x18c>
   1eb0c:	eb00211e 	bl	26f8c <uspi_assertion_failed>
   1eb10:	e28d000c 	add	r0, sp, #12
   1eb14:	ebfff467 	bl	1bcb8 <_USBRequest>
   1eb18:	e3a00000 	mov	r0, #0
   1eb1c:	e28dd034 	add	sp, sp, #52	; 0x34
   1eb20:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1eb24:	e59f2088 	ldr	r2, [pc, #136]	; 1ebb4 <LAN7800DeviceReceiveFrame+0x190>
   1eb28:	e3a01002 	mov	r1, #2
   1eb2c:	e59f0084 	ldr	r0, [pc, #132]	; 1ebb8 <LAN7800DeviceReceiveFrame+0x194>
   1eb30:	eb002103 	bl	26f44 <LogWrite>
   1eb34:	e28d000c 	add	r0, sp, #12
   1eb38:	ebfff45e 	bl	1bcb8 <_USBRequest>
   1eb3c:	e1a00004 	mov	r0, r4
   1eb40:	e28dd034 	add	sp, sp, #52	; 0x34
   1eb44:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1eb48:	e59f206c 	ldr	r2, [pc, #108]	; 1ebbc <LAN7800DeviceReceiveFrame+0x198>
   1eb4c:	e59f1054 	ldr	r1, [pc, #84]	; 1eba8 <LAN7800DeviceReceiveFrame+0x184>
   1eb50:	e59f0068 	ldr	r0, [pc, #104]	; 1ebc0 <LAN7800DeviceReceiveFrame+0x19c>
   1eb54:	eb00210c 	bl	26f8c <uspi_assertion_failed>
   1eb58:	e5963010 	ldr	r3, [r6, #16]
   1eb5c:	e3530000 	cmp	r3, #0
   1eb60:	1affffb8 	bne	1ea48 <LAN7800DeviceReceiveFrame+0x24>
   1eb64:	e3a02f7f 	mov	r2, #508	; 0x1fc
   1eb68:	e59f1038 	ldr	r1, [pc, #56]	; 1eba8 <LAN7800DeviceReceiveFrame+0x184>
   1eb6c:	e59f0050 	ldr	r0, [pc, #80]	; 1ebc4 <LAN7800DeviceReceiveFrame+0x1a0>
   1eb70:	eb002105 	bl	26f8c <uspi_assertion_failed>
   1eb74:	e3550000 	cmp	r5, #0
   1eb78:	1affffb4 	bne	1ea50 <LAN7800DeviceReceiveFrame+0x2c>
   1eb7c:	e59f2044 	ldr	r2, [pc, #68]	; 1ebc8 <LAN7800DeviceReceiveFrame+0x1a4>
   1eb80:	e59f1020 	ldr	r1, [pc, #32]	; 1eba8 <LAN7800DeviceReceiveFrame+0x184>
   1eb84:	e59f0040 	ldr	r0, [pc, #64]	; 1ebcc <LAN7800DeviceReceiveFrame+0x1a8>
   1eb88:	eb0020ff 	bl	26f8c <uspi_assertion_failed>
   1eb8c:	eaffffaf 	b	1ea50 <LAN7800DeviceReceiveFrame+0x2c>
   1eb90:	e59f2038 	ldr	r2, [pc, #56]	; 1ebd0 <LAN7800DeviceReceiveFrame+0x1ac>
   1eb94:	e59f100c 	ldr	r1, [pc, #12]	; 1eba8 <LAN7800DeviceReceiveFrame+0x184>
   1eb98:	e59f0034 	ldr	r0, [pc, #52]	; 1ebd4 <LAN7800DeviceReceiveFrame+0x1b0>
   1eb9c:	eb0020fa 	bl	26f8c <uspi_assertion_failed>
   1eba0:	eaffffd0 	b	1eae8 <LAN7800DeviceReceiveFrame+0xc4>
   1eba4:	0000021b 	andeq	r0, r0, fp, lsl r2
   1eba8:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1ebac:	0002aebc 			; <UNDEFINED> instruction: 0x0002aebc
   1ebb0:	0002ad00 	andeq	sl, r2, r0, lsl #26
   1ebb4:	0002acc8 	andeq	sl, r2, r8, asr #25
   1ebb8:	00028588 	andeq	r8, r2, r8, lsl #11
   1ebbc:	000001fa 	strdeq	r0, [r0], -sl
   1ebc0:	00029a68 	andeq	r9, r2, r8, ror #20
   1ebc4:	0002aca8 	andeq	sl, r2, r8, lsr #25
   1ebc8:	000001fd 	strdeq	r0, [r0], -sp
   1ebcc:	0002afdc 	ldrdeq	sl, [r2], -ip
   1ebd0:	00000229 	andeq	r0, r0, r9, lsr #4
   1ebd4:	0002ad14 	andeq	sl, r2, r4, lsl sp

0001ebd8 <LAN7800DeviceWriteReg>:
   1ebd8:	e92d4070 	push	{r4, r5, r6, lr}
   1ebdc:	e2504000 	subs	r4, r0, #0
   1ebe0:	e24dd018 	sub	sp, sp, #24
   1ebe4:	e1a05001 	mov	r5, r1
   1ebe8:	e58d2014 	str	r2, [sp, #20]
   1ebec:	0a000016 	beq	1ec4c <LAN7800DeviceWriteReg+0x74>
   1ebf0:	e1a00004 	mov	r0, r4
   1ebf4:	ebfffa6b 	bl	1d5a8 <USBFunctionGetHost>
   1ebf8:	e1a06000 	mov	r6, r0
   1ebfc:	e1a00004 	mov	r0, r4
   1ec00:	ebfffa4f 	bl	1d544 <USBFunctionGetEndpoint0>
   1ec04:	e3a04000 	mov	r4, #0
   1ec08:	e3a0c004 	mov	ip, #4
   1ec0c:	e28d2014 	add	r2, sp, #20
   1ec10:	e6ff3075 	uxth	r3, r5
   1ec14:	e1a01000 	mov	r1, r0
   1ec18:	e58d2008 	str	r2, [sp, #8]
   1ec1c:	e58d3004 	str	r3, [sp, #4]
   1ec20:	e58dc00c 	str	ip, [sp, #12]
   1ec24:	e1a00006 	mov	r0, r6
   1ec28:	e58d4000 	str	r4, [sp]
   1ec2c:	e3a030a0 	mov	r3, #160	; 0xa0
   1ec30:	e3a02040 	mov	r2, #64	; 0x40
   1ec34:	ebffe2c3 	bl	17748 <DWHCIDeviceControlMessage>
   1ec38:	e1500004 	cmp	r0, r4
   1ec3c:	a3a00001 	movge	r0, #1
   1ec40:	ba000006 	blt	1ec60 <LAN7800DeviceWriteReg+0x88>
   1ec44:	e28dd018 	add	sp, sp, #24
   1ec48:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ec4c:	e59f202c 	ldr	r2, [pc, #44]	; 1ec80 <LAN7800DeviceWriteReg+0xa8>
   1ec50:	e59f102c 	ldr	r1, [pc, #44]	; 1ec84 <LAN7800DeviceWriteReg+0xac>
   1ec54:	e59f002c 	ldr	r0, [pc, #44]	; 1ec88 <LAN7800DeviceWriteReg+0xb0>
   1ec58:	eb0020cb 	bl	26f8c <uspi_assertion_failed>
   1ec5c:	eaffffe3 	b	1ebf0 <LAN7800DeviceWriteReg+0x18>
   1ec60:	e1a03005 	mov	r3, r5
   1ec64:	e59f2020 	ldr	r2, [pc, #32]	; 1ec8c <LAN7800DeviceWriteReg+0xb4>
   1ec68:	e3a01002 	mov	r1, #2
   1ec6c:	e59f001c 	ldr	r0, [pc, #28]	; 1ec90 <LAN7800DeviceWriteReg+0xb8>
   1ec70:	eb0020b3 	bl	26f44 <LogWrite>
   1ec74:	e1a00004 	mov	r0, r4
   1ec78:	e28dd018 	add	sp, sp, #24
   1ec7c:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ec80:	000002e2 	andeq	r0, r0, r2, ror #5
   1ec84:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1ec88:	00029a68 	andeq	r9, r2, r8, ror #20
   1ec8c:	0002aeec 	andeq	sl, r2, ip, ror #29
   1ec90:	00028588 	andeq	r8, r2, r8, lsl #11

0001ec94 <LAN7800DeviceInitMACAddress>:
   1ec94:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1ec98:	e2504000 	subs	r4, r0, #0
   1ec9c:	e24dd01c 	sub	sp, sp, #28
   1eca0:	0a000034 	beq	1ed78 <LAN7800DeviceInitMACAddress+0xe4>
   1eca4:	e28d0004 	add	r0, sp, #4
   1eca8:	eb002088 	bl	26ed0 <GetMACAddress>
   1ecac:	e3500000 	cmp	r0, #0
   1ecb0:	1a000002 	bne	1ecc0 <LAN7800DeviceInitMACAddress+0x2c>
   1ecb4:	e3a00000 	mov	r0, #0
   1ecb8:	e28dd01c 	add	sp, sp, #28
   1ecbc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1ecc0:	e2846018 	add	r6, r4, #24
   1ecc4:	e28d1004 	add	r1, sp, #4
   1ecc8:	e1a00006 	mov	r0, r6
   1eccc:	ebfff84c 	bl	1ce04 <MACAddressSet>
   1ecd0:	e59d5004 	ldr	r5, [sp, #4]
   1ecd4:	e3a01f47 	mov	r1, #284	; 0x11c
   1ecd8:	e1a02005 	mov	r2, r5
   1ecdc:	e1a00004 	mov	r0, r4
   1ece0:	e1dd70b8 	ldrh	r7, [sp, #8]
   1ece4:	ebffffbb 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1ece8:	e3500000 	cmp	r0, #0
   1ecec:	0afffff0 	beq	1ecb4 <LAN7800DeviceInitMACAddress+0x20>
   1ecf0:	e1a02007 	mov	r2, r7
   1ecf4:	e3a01f46 	mov	r1, #280	; 0x118
   1ecf8:	e1a00004 	mov	r0, r4
   1ecfc:	ebffffb5 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1ed00:	e3500000 	cmp	r0, #0
   1ed04:	0affffea 	beq	1ecb4 <LAN7800DeviceInitMACAddress+0x20>
   1ed08:	e1a02005 	mov	r2, r5
   1ed0c:	e59f1078 	ldr	r1, [pc, #120]	; 1ed8c <LAN7800DeviceInitMACAddress+0xf8>
   1ed10:	e1a00004 	mov	r0, r4
   1ed14:	ebffffaf 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1ed18:	e3500000 	cmp	r0, #0
   1ed1c:	0affffe4 	beq	1ecb4 <LAN7800DeviceInitMACAddress+0x20>
   1ed20:	e3872102 	orr	r2, r7, #-2147483648	; 0x80000000
   1ed24:	e1a00004 	mov	r0, r4
   1ed28:	e3a01b01 	mov	r1, #1024	; 0x400
   1ed2c:	ebffffa9 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1ed30:	e3500000 	cmp	r0, #0
   1ed34:	0affffde 	beq	1ecb4 <LAN7800DeviceInitMACAddress+0x20>
   1ed38:	e28d000c 	add	r0, sp, #12
   1ed3c:	eb000271 	bl	1f708 <String>
   1ed40:	e28d100c 	add	r1, sp, #12
   1ed44:	e1a00006 	mov	r0, r6
   1ed48:	ebfff8e0 	bl	1d0d0 <MACAddressFormat>
   1ed4c:	e28d000c 	add	r0, sp, #12
   1ed50:	eb00029f 	bl	1f7d4 <StringGet>
   1ed54:	e59f2034 	ldr	r2, [pc, #52]	; 1ed90 <LAN7800DeviceInitMACAddress+0xfc>
   1ed58:	e1a03000 	mov	r3, r0
   1ed5c:	e3a01004 	mov	r1, #4
   1ed60:	e59f002c 	ldr	r0, [pc, #44]	; 1ed94 <LAN7800DeviceInitMACAddress+0x100>
   1ed64:	eb002076 	bl	26f44 <LogWrite>
   1ed68:	e28d000c 	add	r0, sp, #12
   1ed6c:	eb000287 	bl	1f790 <_String>
   1ed70:	e3a00001 	mov	r0, #1
   1ed74:	eaffffcf 	b	1ecb8 <LAN7800DeviceInitMACAddress+0x24>
   1ed78:	e3a02d09 	mov	r2, #576	; 0x240
   1ed7c:	e59f1014 	ldr	r1, [pc, #20]	; 1ed98 <LAN7800DeviceInitMACAddress+0x104>
   1ed80:	e59f0014 	ldr	r0, [pc, #20]	; 1ed9c <LAN7800DeviceInitMACAddress+0x108>
   1ed84:	eb002080 	bl	26f8c <uspi_assertion_failed>
   1ed88:	eaffffc5 	b	1eca4 <LAN7800DeviceInitMACAddress+0x10>
   1ed8c:	00000404 	andeq	r0, r0, r4, lsl #8
   1ed90:	0002ad28 	andeq	sl, r2, r8, lsr #26
   1ed94:	00028588 	andeq	r8, r2, r8, lsl #11
   1ed98:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1ed9c:	00029a68 	andeq	r9, r2, r8, ror #20

0001eda0 <LAN7800DeviceReadReg>:
   1eda0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1eda4:	e2504000 	subs	r4, r0, #0
   1eda8:	e24dd014 	sub	sp, sp, #20
   1edac:	e1a05001 	mov	r5, r1
   1edb0:	e1a07002 	mov	r7, r2
   1edb4:	0a00001d 	beq	1ee30 <LAN7800DeviceReadReg+0x90>
   1edb8:	e1a00004 	mov	r0, r4
   1edbc:	ebfff9f9 	bl	1d5a8 <USBFunctionGetHost>
   1edc0:	e1a06000 	mov	r6, r0
   1edc4:	e1a00004 	mov	r0, r4
   1edc8:	ebfff9dd 	bl	1d544 <USBFunctionGetEndpoint0>
   1edcc:	e3a04000 	mov	r4, #0
   1edd0:	e3a02004 	mov	r2, #4
   1edd4:	e6ff3075 	uxth	r3, r5
   1edd8:	e1a01000 	mov	r1, r0
   1eddc:	e58d200c 	str	r2, [sp, #12]
   1ede0:	e58d3004 	str	r3, [sp, #4]
   1ede4:	e58d7008 	str	r7, [sp, #8]
   1ede8:	e1a00006 	mov	r0, r6
   1edec:	e58d4000 	str	r4, [sp]
   1edf0:	e3a030a1 	mov	r3, #161	; 0xa1
   1edf4:	e3a020c0 	mov	r2, #192	; 0xc0
   1edf8:	ebffe252 	bl	17748 <DWHCIDeviceControlMessage>
   1edfc:	e3500004 	cmp	r0, #4
   1ee00:	03a00001 	moveq	r0, #1
   1ee04:	1a000001 	bne	1ee10 <LAN7800DeviceReadReg+0x70>
   1ee08:	e28dd014 	add	sp, sp, #20
   1ee0c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1ee10:	e1a03005 	mov	r3, r5
   1ee14:	e59f2028 	ldr	r2, [pc, #40]	; 1ee44 <LAN7800DeviceReadReg+0xa4>
   1ee18:	e3a01002 	mov	r1, #2
   1ee1c:	e59f0024 	ldr	r0, [pc, #36]	; 1ee48 <LAN7800DeviceReadReg+0xa8>
   1ee20:	eb002047 	bl	26f44 <LogWrite>
   1ee24:	e1a00004 	mov	r0, r4
   1ee28:	e28dd014 	add	sp, sp, #20
   1ee2c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1ee30:	e59f2014 	ldr	r2, [pc, #20]	; 1ee4c <LAN7800DeviceReadReg+0xac>
   1ee34:	e59f1014 	ldr	r1, [pc, #20]	; 1ee50 <LAN7800DeviceReadReg+0xb0>
   1ee38:	e59f0014 	ldr	r0, [pc, #20]	; 1ee54 <LAN7800DeviceReadReg+0xb4>
   1ee3c:	eb002052 	bl	26f8c <uspi_assertion_failed>
   1ee40:	eaffffdc 	b	1edb8 <LAN7800DeviceReadReg+0x18>
   1ee44:	0002addc 	ldrdeq	sl, [r2], -ip
   1ee48:	00028588 	andeq	r8, r2, r8, lsl #11
   1ee4c:	000002f3 	strdeq	r0, [r0], -r3
   1ee50:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1ee54:	00029a68 	andeq	r9, r2, r8, ror #20

0001ee58 <LAN7800DeviceWaitReg>:
   1ee58:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1ee5c:	e2505000 	subs	r5, r0, #0
   1ee60:	e24dd008 	sub	sp, sp, #8
   1ee64:	e1a06001 	mov	r6, r1
   1ee68:	e1a07002 	mov	r7, r2
   1ee6c:	e1a08003 	mov	r8, r3
   1ee70:	0a000014 	beq	1eec8 <LAN7800DeviceWaitReg+0x70>
   1ee74:	e3a00001 	mov	r0, #1
   1ee78:	eb001fca 	bl	26da8 <MsDelay>
   1ee7c:	e59f4058 	ldr	r4, [pc, #88]	; 1eedc <LAN7800DeviceWaitReg+0x84>
   1ee80:	ea000007 	b	1eea4 <LAN7800DeviceWaitReg+0x4c>
   1ee84:	e59d3004 	ldr	r3, [sp, #4]
   1ee88:	e3a00001 	mov	r0, #1
   1ee8c:	e0033007 	and	r3, r3, r7
   1ee90:	e1530008 	cmp	r3, r8
   1ee94:	0a000009 	beq	1eec0 <LAN7800DeviceWaitReg+0x68>
   1ee98:	eb001fc2 	bl	26da8 <MsDelay>
   1ee9c:	e2544001 	subs	r4, r4, #1
   1eea0:	0a000005 	beq	1eebc <LAN7800DeviceWaitReg+0x64>
   1eea4:	e28d2004 	add	r2, sp, #4
   1eea8:	e1a01006 	mov	r1, r6
   1eeac:	e1a00005 	mov	r0, r5
   1eeb0:	ebffffba 	bl	1eda0 <LAN7800DeviceReadReg>
   1eeb4:	e3500000 	cmp	r0, #0
   1eeb8:	1afffff1 	bne	1ee84 <LAN7800DeviceWaitReg+0x2c>
   1eebc:	e3a00000 	mov	r0, #0
   1eec0:	e28dd008 	add	sp, sp, #8
   1eec4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1eec8:	e59f2010 	ldr	r2, [pc, #16]	; 1eee0 <LAN7800DeviceWaitReg+0x88>
   1eecc:	e59f1010 	ldr	r1, [pc, #16]	; 1eee4 <LAN7800DeviceWaitReg+0x8c>
   1eed0:	e59f0010 	ldr	r0, [pc, #16]	; 1eee8 <LAN7800DeviceWaitReg+0x90>
   1eed4:	eb00202c 	bl	26f8c <uspi_assertion_failed>
   1eed8:	eaffffe5 	b	1ee74 <LAN7800DeviceWaitReg+0x1c>
   1eedc:	000003e7 	andeq	r0, r0, r7, ror #7
   1eee0:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
   1eee4:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1eee8:	00029a68 	andeq	r9, r2, r8, ror #20

0001eeec <LAN7800DevicePHYWrite>:
   1eeec:	e92d4070 	push	{r4, r5, r6, lr}
   1eef0:	e2505000 	subs	r5, r0, #0
   1eef4:	e1a04001 	mov	r4, r1
   1eef8:	e1a06002 	mov	r6, r2
   1eefc:	0a000024 	beq	1ef94 <LAN7800DevicePHYWrite+0xa8>
   1ef00:	e354001e 	cmp	r4, #30
   1ef04:	8a00001d 	bhi	1ef80 <LAN7800DevicePHYWrite+0x94>
   1ef08:	e3a03000 	mov	r3, #0
   1ef0c:	e3a02001 	mov	r2, #1
   1ef10:	e3a01e12 	mov	r1, #288	; 0x120
   1ef14:	e1a00005 	mov	r0, r5
   1ef18:	ebffffce 	bl	1ee58 <LAN7800DeviceWaitReg>
   1ef1c:	e3500000 	cmp	r0, #0
   1ef20:	1a000001 	bne	1ef2c <LAN7800DevicePHYWrite+0x40>
   1ef24:	e3a00000 	mov	r0, #0
   1ef28:	e8bd8070 	pop	{r4, r5, r6, pc}
   1ef2c:	e1a02006 	mov	r2, r6
   1ef30:	e3a01f49 	mov	r1, #292	; 0x124
   1ef34:	e1a00005 	mov	r0, r5
   1ef38:	ebffff26 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1ef3c:	e3500000 	cmp	r0, #0
   1ef40:	0afffff7 	beq	1ef24 <LAN7800DevicePHYWrite+0x38>
   1ef44:	e1a02304 	lsl	r2, r4, #6
   1ef48:	e2022d1f 	and	r2, r2, #1984	; 0x7c0
   1ef4c:	e3822b02 	orr	r2, r2, #2048	; 0x800
   1ef50:	e3822003 	orr	r2, r2, #3
   1ef54:	e3a01e12 	mov	r1, #288	; 0x120
   1ef58:	e1a00005 	mov	r0, r5
   1ef5c:	ebffff1d 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1ef60:	e3500000 	cmp	r0, #0
   1ef64:	0affffee 	beq	1ef24 <LAN7800DevicePHYWrite+0x38>
   1ef68:	e1a00005 	mov	r0, r5
   1ef6c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1ef70:	e3a03000 	mov	r3, #0
   1ef74:	e3a02001 	mov	r2, #1
   1ef78:	e3a01e12 	mov	r1, #288	; 0x120
   1ef7c:	eaffffb5 	b	1ee58 <LAN7800DeviceWaitReg>
   1ef80:	e59f2020 	ldr	r2, [pc, #32]	; 1efa8 <LAN7800DevicePHYWrite+0xbc>
   1ef84:	e59f1020 	ldr	r1, [pc, #32]	; 1efac <LAN7800DevicePHYWrite+0xc0>
   1ef88:	e59f0020 	ldr	r0, [pc, #32]	; 1efb0 <LAN7800DevicePHYWrite+0xc4>
   1ef8c:	eb001ffe 	bl	26f8c <uspi_assertion_failed>
   1ef90:	eaffffdc 	b	1ef08 <LAN7800DevicePHYWrite+0x1c>
   1ef94:	e59f2018 	ldr	r2, [pc, #24]	; 1efb4 <LAN7800DevicePHYWrite+0xc8>
   1ef98:	e59f100c 	ldr	r1, [pc, #12]	; 1efac <LAN7800DevicePHYWrite+0xc0>
   1ef9c:	e59f0014 	ldr	r0, [pc, #20]	; 1efb8 <LAN7800DevicePHYWrite+0xcc>
   1efa0:	eb001ff9 	bl	26f8c <uspi_assertion_failed>
   1efa4:	eaffffd5 	b	1ef00 <LAN7800DevicePHYWrite+0x14>
   1efa8:	00000283 	andeq	r0, r0, r3, lsl #5
   1efac:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1efb0:	0002af08 	andeq	sl, r2, r8, lsl #30
   1efb4:	00000282 	andeq	r0, r0, r2, lsl #5
   1efb8:	00029a68 	andeq	r9, r2, r8, ror #20

0001efbc <LAN7800DevicePHYRead>:
   1efbc:	e92d4070 	push	{r4, r5, r6, lr}
   1efc0:	e2505000 	subs	r5, r0, #0
   1efc4:	e24dd008 	sub	sp, sp, #8
   1efc8:	e1a04001 	mov	r4, r1
   1efcc:	e1a06002 	mov	r6, r2
   1efd0:	0a00002e 	beq	1f090 <LAN7800DevicePHYRead+0xd4>
   1efd4:	e354001e 	cmp	r4, #30
   1efd8:	8a00001b 	bhi	1f04c <LAN7800DevicePHYRead+0x90>
   1efdc:	e3a03000 	mov	r3, #0
   1efe0:	e3a02001 	mov	r2, #1
   1efe4:	e3a01e12 	mov	r1, #288	; 0x120
   1efe8:	e1a00005 	mov	r0, r5
   1efec:	ebffff99 	bl	1ee58 <LAN7800DeviceWaitReg>
   1eff0:	e3500000 	cmp	r0, #0
   1eff4:	1a000001 	bne	1f000 <LAN7800DevicePHYRead+0x44>
   1eff8:	e28dd008 	add	sp, sp, #8
   1effc:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f000:	e1a02304 	lsl	r2, r4, #6
   1f004:	e2022d1f 	and	r2, r2, #1984	; 0x7c0
   1f008:	e3822b02 	orr	r2, r2, #2048	; 0x800
   1f00c:	e3822001 	orr	r2, r2, #1
   1f010:	e3a01e12 	mov	r1, #288	; 0x120
   1f014:	e1a00005 	mov	r0, r5
   1f018:	ebfffeee 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f01c:	e3500000 	cmp	r0, #0
   1f020:	0a000006 	beq	1f040 <LAN7800DevicePHYRead+0x84>
   1f024:	e3a03000 	mov	r3, #0
   1f028:	e3a02001 	mov	r2, #1
   1f02c:	e3a01e12 	mov	r1, #288	; 0x120
   1f030:	e1a00005 	mov	r0, r5
   1f034:	ebffff87 	bl	1ee58 <LAN7800DeviceWaitReg>
   1f038:	e3500000 	cmp	r0, #0
   1f03c:	1a000007 	bne	1f060 <LAN7800DevicePHYRead+0xa4>
   1f040:	e3a00000 	mov	r0, #0
   1f044:	e28dd008 	add	sp, sp, #8
   1f048:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f04c:	e59f2064 	ldr	r2, [pc, #100]	; 1f0b8 <LAN7800DevicePHYRead+0xfc>
   1f050:	e59f1064 	ldr	r1, [pc, #100]	; 1f0bc <LAN7800DevicePHYRead+0x100>
   1f054:	e59f0064 	ldr	r0, [pc, #100]	; 1f0c0 <LAN7800DevicePHYRead+0x104>
   1f058:	eb001fcb 	bl	26f8c <uspi_assertion_failed>
   1f05c:	eaffffde 	b	1efdc <LAN7800DevicePHYRead+0x20>
   1f060:	e1a00005 	mov	r0, r5
   1f064:	e28d2004 	add	r2, sp, #4
   1f068:	e3a01f49 	mov	r1, #292	; 0x124
   1f06c:	ebffff4b 	bl	1eda0 <LAN7800DeviceReadReg>
   1f070:	e3500000 	cmp	r0, #0
   1f074:	0afffff1 	beq	1f040 <LAN7800DevicePHYRead+0x84>
   1f078:	e3560000 	cmp	r6, #0
   1f07c:	0a000008 	beq	1f0a4 <LAN7800DevicePHYRead+0xe8>
   1f080:	e59d3004 	ldr	r3, [sp, #4]
   1f084:	e3a00001 	mov	r0, #1
   1f088:	e1c630b0 	strh	r3, [r6]
   1f08c:	eaffffd9 	b	1eff8 <LAN7800DevicePHYRead+0x3c>
   1f090:	e59f202c 	ldr	r2, [pc, #44]	; 1f0c4 <LAN7800DevicePHYRead+0x108>
   1f094:	e59f1020 	ldr	r1, [pc, #32]	; 1f0bc <LAN7800DevicePHYRead+0x100>
   1f098:	e59f0028 	ldr	r0, [pc, #40]	; 1f0c8 <LAN7800DevicePHYRead+0x10c>
   1f09c:	eb001fba 	bl	26f8c <uspi_assertion_failed>
   1f0a0:	eaffffcb 	b	1efd4 <LAN7800DevicePHYRead+0x18>
   1f0a4:	e59f2020 	ldr	r2, [pc, #32]	; 1f0cc <LAN7800DevicePHYRead+0x110>
   1f0a8:	e59f100c 	ldr	r1, [pc, #12]	; 1f0bc <LAN7800DevicePHYRead+0x100>
   1f0ac:	e59f001c 	ldr	r0, [pc, #28]	; 1f0d0 <LAN7800DevicePHYRead+0x114>
   1f0b0:	eb001fb5 	bl	26f8c <uspi_assertion_failed>
   1f0b4:	eafffff1 	b	1f080 <LAN7800DevicePHYRead+0xc4>
   1f0b8:	0000029b 	muleq	r0, fp, r2
   1f0bc:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1f0c0:	0002af08 	andeq	sl, r2, r8, lsl #30
   1f0c4:	0000029a 	muleq	r0, sl, r2
   1f0c8:	00029a68 	andeq	r9, r2, r8, ror #20
   1f0cc:	000002af 	andeq	r0, r0, pc, lsr #5
   1f0d0:	0002add0 	ldrdeq	sl, [r2], -r0

0001f0d4 <LAN7800DeviceIsLinkUp>:
   1f0d4:	e92d4010 	push	{r4, lr}
   1f0d8:	e2504000 	subs	r4, r0, #0
   1f0dc:	e24dd008 	sub	sp, sp, #8
   1f0e0:	0a000009 	beq	1f10c <LAN7800DeviceIsLinkUp+0x38>
   1f0e4:	e1a00004 	mov	r0, r4
   1f0e8:	e28d2006 	add	r2, sp, #6
   1f0ec:	e3a01001 	mov	r1, #1
   1f0f0:	ebffffb1 	bl	1efbc <LAN7800DevicePHYRead>
   1f0f4:	e3500000 	cmp	r0, #0
   1f0f8:	11dd00b6 	ldrhne	r0, [sp, #6]
   1f0fc:	11a00140 	asrne	r0, r0, #2
   1f100:	12000001 	andne	r0, r0, #1
   1f104:	e28dd008 	add	sp, sp, #8
   1f108:	e8bd8010 	pop	{r4, pc}
   1f10c:	e59f200c 	ldr	r2, [pc, #12]	; 1f120 <LAN7800DeviceIsLinkUp+0x4c>
   1f110:	e59f100c 	ldr	r1, [pc, #12]	; 1f124 <LAN7800DeviceIsLinkUp+0x50>
   1f114:	e59f000c 	ldr	r0, [pc, #12]	; 1f128 <LAN7800DeviceIsLinkUp+0x54>
   1f118:	eb001f9b 	bl	26f8c <uspi_assertion_failed>
   1f11c:	eafffff0 	b	1f0e4 <LAN7800DeviceIsLinkUp+0x10>
   1f120:	00000233 	andeq	r0, r0, r3, lsr r2
   1f124:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1f128:	00029a68 	andeq	r9, r2, r8, ror #20

0001f12c <LAN7800DeviceInitPHY>:
   1f12c:	e92d4010 	push	{r4, lr}
   1f130:	e2504000 	subs	r4, r0, #0
   1f134:	e24dd008 	sub	sp, sp, #8
   1f138:	0a00000f 	beq	1f17c <LAN7800DeviceInitPHY+0x50>
   1f13c:	e28d2006 	add	r2, sp, #6
   1f140:	e3a0101d 	mov	r1, #29
   1f144:	e1a00004 	mov	r0, r4
   1f148:	ebffff9b 	bl	1efbc <LAN7800DevicePHYRead>
   1f14c:	e3500000 	cmp	r0, #0
   1f150:	0a000007 	beq	1f174 <LAN7800DeviceInitPHY+0x48>
   1f154:	e1dd30b6 	ldrh	r3, [sp, #6]
   1f158:	e1a00004 	mov	r0, r4
   1f15c:	e3c330ff 	bic	r3, r3, #255	; 0xff
   1f160:	e3833061 	orr	r3, r3, #97	; 0x61
   1f164:	e1a02003 	mov	r2, r3
   1f168:	e3a0101d 	mov	r1, #29
   1f16c:	e1cd30b6 	strh	r3, [sp, #6]
   1f170:	ebffff5d 	bl	1eeec <LAN7800DevicePHYWrite>
   1f174:	e28dd008 	add	sp, sp, #8
   1f178:	e8bd8010 	pop	{r4, pc}
   1f17c:	e59f200c 	ldr	r2, [pc, #12]	; 1f190 <LAN7800DeviceInitPHY+0x64>
   1f180:	e59f100c 	ldr	r1, [pc, #12]	; 1f194 <LAN7800DeviceInitPHY+0x68>
   1f184:	e59f000c 	ldr	r0, [pc, #12]	; 1f198 <LAN7800DeviceInitPHY+0x6c>
   1f188:	eb001f7f 	bl	26f8c <uspi_assertion_failed>
   1f18c:	eaffffea 	b	1f13c <LAN7800DeviceInitPHY+0x10>
   1f190:	0000026a 	andeq	r0, r0, sl, ror #4
   1f194:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1f198:	00029a68 	andeq	r9, r2, r8, ror #20

0001f19c <LAN7800DeviceReadWriteReg>:
   1f19c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   1f1a0:	e2505000 	subs	r5, r0, #0
   1f1a4:	e24dd00c 	sub	sp, sp, #12
   1f1a8:	e1a06001 	mov	r6, r1
   1f1ac:	e1a07002 	mov	r7, r2
   1f1b0:	e1a04003 	mov	r4, r3
   1f1b4:	0a00000f 	beq	1f1f8 <LAN7800DeviceReadWriteReg+0x5c>
   1f1b8:	e28d2004 	add	r2, sp, #4
   1f1bc:	e1a01006 	mov	r1, r6
   1f1c0:	e1a00005 	mov	r0, r5
   1f1c4:	ebfffef5 	bl	1eda0 <LAN7800DeviceReadReg>
   1f1c8:	e3500000 	cmp	r0, #0
   1f1cc:	0a000007 	beq	1f1f0 <LAN7800DeviceReadWriteReg+0x54>
   1f1d0:	e59d3004 	ldr	r3, [sp, #4]
   1f1d4:	e1a01006 	mov	r1, r6
   1f1d8:	e0044003 	and	r4, r4, r3
   1f1dc:	e1844007 	orr	r4, r4, r7
   1f1e0:	e1a00005 	mov	r0, r5
   1f1e4:	e1a02004 	mov	r2, r4
   1f1e8:	e58d4004 	str	r4, [sp, #4]
   1f1ec:	ebfffe79 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f1f0:	e28dd00c 	add	sp, sp, #12
   1f1f4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   1f1f8:	e59f200c 	ldr	r2, [pc, #12]	; 1f20c <LAN7800DeviceReadWriteReg+0x70>
   1f1fc:	e59f100c 	ldr	r1, [pc, #12]	; 1f210 <LAN7800DeviceReadWriteReg+0x74>
   1f200:	e59f000c 	ldr	r0, [pc, #12]	; 1f214 <LAN7800DeviceReadWriteReg+0x78>
   1f204:	eb001f60 	bl	26f8c <uspi_assertion_failed>
   1f208:	eaffffea 	b	1f1b8 <LAN7800DeviceReadWriteReg+0x1c>
   1f20c:	000002d2 	ldrdeq	r0, [r0], -r2
   1f210:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1f214:	00029a68 	andeq	r9, r2, r8, ror #20

0001f218 <LAN7800DeviceConfigure>:
   1f218:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   1f21c:	e2505000 	subs	r5, r0, #0
   1f220:	e24dd014 	sub	sp, sp, #20
   1f224:	0a0000fc 	beq	1f61c <LAN7800DeviceConfigure+0x404>
   1f228:	e1a00005 	mov	r0, r5
   1f22c:	ebfff897 	bl	1d490 <USBFunctionGetNumEndpoints>
   1f230:	e3500003 	cmp	r0, #3
   1f234:	1a00004f 	bne	1f378 <LAN7800DeviceConfigure+0x160>
   1f238:	e59f747c 	ldr	r7, [pc, #1148]	; 1f6bc <LAN7800DeviceConfigure+0x4a4>
   1f23c:	e59f847c 	ldr	r8, [pc, #1148]	; 1f6c0 <LAN7800DeviceConfigure+0x4a8>
   1f240:	e59f947c 	ldr	r9, [pc, #1148]	; 1f6c4 <LAN7800DeviceConfigure+0x4ac>
   1f244:	ea000003 	b	1f258 <LAN7800DeviceConfigure+0x40>
   1f248:	e5d43003 	ldrb	r3, [r4, #3]
   1f24c:	e203303f 	and	r3, r3, #63	; 0x3f
   1f250:	e3530002 	cmp	r3, #2
   1f254:	0a00001f 	beq	1f2d8 <LAN7800DeviceConfigure+0xc0>
   1f258:	e3a01005 	mov	r1, #5
   1f25c:	e1a00005 	mov	r0, r5
   1f260:	ebfff922 	bl	1d6f0 <USBFunctionGetDescriptor>
   1f264:	e2504000 	subs	r4, r0, #0
   1f268:	1afffff6 	bne	1f248 <LAN7800DeviceConfigure+0x30>
   1f26c:	e5953010 	ldr	r3, [r5, #16]
   1f270:	e1a00005 	mov	r0, r5
   1f274:	e3530000 	cmp	r3, #0
   1f278:	0a000038 	beq	1f360 <LAN7800DeviceConfigure+0x148>
   1f27c:	e5953014 	ldr	r3, [r5, #20]
   1f280:	e3530000 	cmp	r3, #0
   1f284:	0a000035 	beq	1f360 <LAN7800DeviceConfigure+0x148>
   1f288:	ebfff8df 	bl	1d60c <USBFunctionConfigure>
   1f28c:	e2506000 	subs	r6, r0, #0
   1f290:	0a0000e6 	beq	1f630 <LAN7800DeviceConfigure+0x418>
   1f294:	e1a0200d 	mov	r2, sp
   1f298:	e1a01004 	mov	r1, r4
   1f29c:	e1a00005 	mov	r0, r5
   1f2a0:	ebfffebe 	bl	1eda0 <LAN7800DeviceReadReg>
   1f2a4:	e3500000 	cmp	r0, #0
   1f2a8:	e1dd30b2 	ldrh	r3, [sp, #2]
   1f2ac:	0a000001 	beq	1f2b8 <LAN7800DeviceConfigure+0xa0>
   1f2b0:	e3530b1e 	cmp	r3, #30720	; 0x7800
   1f2b4:	0a000036 	beq	1f394 <LAN7800DeviceConfigure+0x17c>
   1f2b8:	e3a06000 	mov	r6, #0
   1f2bc:	e59f2404 	ldr	r2, [pc, #1028]	; 1f6c8 <LAN7800DeviceConfigure+0x4b0>
   1f2c0:	e3a01001 	mov	r1, #1
   1f2c4:	e59f0400 	ldr	r0, [pc, #1024]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f2c8:	eb001f1d 	bl	26f44 <LogWrite>
   1f2cc:	e1a00006 	mov	r0, r6
   1f2d0:	e28dd014 	add	sp, sp, #20
   1f2d4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f2d8:	e1d430d2 	ldrsb	r3, [r4, #2]
   1f2dc:	e3530000 	cmp	r3, #0
   1f2e0:	ba00000f 	blt	1f324 <LAN7800DeviceConfigure+0x10c>
   1f2e4:	e5953014 	ldr	r3, [r5, #20]
   1f2e8:	e3530000 	cmp	r3, #0
   1f2ec:	1a000021 	bne	1f378 <LAN7800DeviceConfigure+0x160>
   1f2f0:	e3a00018 	mov	r0, #24
   1f2f4:	eb00170d 	bl	24f30 <malloc>
   1f2f8:	e3500000 	cmp	r0, #0
   1f2fc:	e1a06000 	mov	r6, r0
   1f300:	e5850014 	str	r0, [r5, #20]
   1f304:	0a0000d0 	beq	1f64c <LAN7800DeviceConfigure+0x434>
   1f308:	e1a00005 	mov	r0, r5
   1f30c:	ebfff878 	bl	1d4f4 <USBFunctionGetDevice>
   1f310:	e1a02004 	mov	r2, r4
   1f314:	e1a01000 	mov	r1, r0
   1f318:	e1a00006 	mov	r0, r6
   1f31c:	ebfff0b6 	bl	1b5fc <USBEndpoint2>
   1f320:	eaffffcc 	b	1f258 <LAN7800DeviceConfigure+0x40>
   1f324:	e5953010 	ldr	r3, [r5, #16]
   1f328:	e3530000 	cmp	r3, #0
   1f32c:	1a000011 	bne	1f378 <LAN7800DeviceConfigure+0x160>
   1f330:	e3a00018 	mov	r0, #24
   1f334:	eb0016fd 	bl	24f30 <malloc>
   1f338:	e3500000 	cmp	r0, #0
   1f33c:	e1a06000 	mov	r6, r0
   1f340:	e5850010 	str	r0, [r5, #16]
   1f344:	1affffef 	bne	1f308 <LAN7800DeviceConfigure+0xf0>
   1f348:	e59f2380 	ldr	r2, [pc, #896]	; 1f6d0 <LAN7800DeviceConfigure+0x4b8>
   1f34c:	e1a01007 	mov	r1, r7
   1f350:	e1a00009 	mov	r0, r9
   1f354:	eb001f0c 	bl	26f8c <uspi_assertion_failed>
   1f358:	e5956010 	ldr	r6, [r5, #16]
   1f35c:	eaffffe9 	b	1f308 <LAN7800DeviceConfigure+0xf0>
   1f360:	e59f1364 	ldr	r1, [pc, #868]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f364:	ebfff8fd 	bl	1d760 <USBFunctionConfigurationError>
   1f368:	e3a06000 	mov	r6, #0
   1f36c:	e1a00006 	mov	r0, r6
   1f370:	e28dd014 	add	sp, sp, #20
   1f374:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f378:	e3a06000 	mov	r6, #0
   1f37c:	e1a00005 	mov	r0, r5
   1f380:	e59f1344 	ldr	r1, [pc, #836]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f384:	ebfff8f5 	bl	1d760 <USBFunctionConfigurationError>
   1f388:	e1a00006 	mov	r0, r6
   1f38c:	e28dd014 	add	sp, sp, #20
   1f390:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f394:	e3e03000 	mvn	r3, #0
   1f398:	e3a02002 	mov	r2, #2
   1f39c:	e3a01010 	mov	r1, #16
   1f3a0:	e1a00005 	mov	r0, r5
   1f3a4:	ebffff7c 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f3a8:	e3500000 	cmp	r0, #0
   1f3ac:	0a0000ac 	beq	1f664 <LAN7800DeviceConfigure+0x44c>
   1f3b0:	e1a03004 	mov	r3, r4
   1f3b4:	e3a02002 	mov	r2, #2
   1f3b8:	e3a01010 	mov	r1, #16
   1f3bc:	e1a00005 	mov	r0, r5
   1f3c0:	ebfffea4 	bl	1ee58 <LAN7800DeviceWaitReg>
   1f3c4:	e3500000 	cmp	r0, #0
   1f3c8:	0a0000a5 	beq	1f664 <LAN7800DeviceConfigure+0x44c>
   1f3cc:	e1a00005 	mov	r0, r5
   1f3d0:	ebfffe2f 	bl	1ec94 <LAN7800DeviceInitMACAddress>
   1f3d4:	e2506000 	subs	r6, r0, #0
   1f3d8:	0a0000ad 	beq	1f694 <LAN7800DeviceConfigure+0x47c>
   1f3dc:	e3a02018 	mov	r2, #24
   1f3e0:	e3a01090 	mov	r1, #144	; 0x90
   1f3e4:	e1a00005 	mov	r0, r5
   1f3e8:	ebfffdfa 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f3ec:	e3500000 	cmp	r0, #0
   1f3f0:	0a0000a5 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f3f4:	e3a02b02 	mov	r2, #2048	; 0x800
   1f3f8:	e3a01094 	mov	r1, #148	; 0x94
   1f3fc:	e1a00005 	mov	r0, r5
   1f400:	ebfffdf4 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f404:	e3500000 	cmp	r0, #0
   1f408:	0a00009f 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f40c:	e3e03010 	mvn	r3, #16
   1f410:	e3a02603 	mov	r2, #3145728	; 0x300000
   1f414:	e3a01010 	mov	r1, #16
   1f418:	e1a00005 	mov	r0, r5
   1f41c:	ebffff5e 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f420:	e3500000 	cmp	r0, #0
   1f424:	0a000098 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f428:	e3e03040 	mvn	r3, #64	; 0x40
   1f42c:	e3a02020 	mov	r2, #32
   1f430:	e3a01080 	mov	r1, #128	; 0x80
   1f434:	e1a00005 	mov	r0, r5
   1f438:	ebffff57 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f43c:	e3500000 	cmp	r0, #0
   1f440:	0a000091 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f444:	e3a02017 	mov	r2, #23
   1f448:	e3a010c8 	mov	r1, #200	; 0xc8
   1f44c:	e1a00005 	mov	r0, r5
   1f450:	ebfffde0 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f454:	e3500000 	cmp	r0, #0
   1f458:	0a00008b 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f45c:	e3a02017 	mov	r2, #23
   1f460:	e3a010cc 	mov	r1, #204	; 0xcc
   1f464:	e1a00005 	mov	r0, r5
   1f468:	ebfffdda 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f46c:	e3500000 	cmp	r0, #0
   1f470:	0a000085 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f474:	e3a02000 	mov	r2, #0
   1f478:	e3a01098 	mov	r1, #152	; 0x98
   1f47c:	e1a00005 	mov	r0, r5
   1f480:	ebfffdd4 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f484:	e3500000 	cmp	r0, #0
   1f488:	0a00007f 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f48c:	e3e02000 	mvn	r2, #0
   1f490:	e3a0100c 	mov	r1, #12
   1f494:	e1a00005 	mov	r0, r5
   1f498:	ebfffdce 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f49c:	e3500000 	cmp	r0, #0
   1f4a0:	0a000079 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f4a4:	e3a02000 	mov	r2, #0
   1f4a8:	e3a01f43 	mov	r1, #268	; 0x10c
   1f4ac:	e1a00005 	mov	r0, r5
   1f4b0:	ebfffdc8 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f4b4:	e3500000 	cmp	r0, #0
   1f4b8:	0a000073 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f4bc:	e3a02000 	mov	r2, #0
   1f4c0:	e3a010d0 	mov	r1, #208	; 0xd0
   1f4c4:	e1a00005 	mov	r0, r5
   1f4c8:	ebfffdc2 	bl	1ebd8 <LAN7800DeviceWriteReg>
   1f4cc:	e3500000 	cmp	r0, #0
   1f4d0:	0a00006d 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f4d4:	e3e03000 	mvn	r3, #0
   1f4d8:	e59f21f4 	ldr	r2, [pc, #500]	; 1f6d4 <LAN7800DeviceConfigure+0x4bc>
   1f4dc:	e3a010b0 	mov	r1, #176	; 0xb0
   1f4e0:	e1a00005 	mov	r0, r5
   1f4e4:	ebffff2c 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f4e8:	e3500000 	cmp	r0, #0
   1f4ec:	0a000066 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f4f0:	e3e03000 	mvn	r3, #0
   1f4f4:	e3a02010 	mov	r2, #16
   1f4f8:	e3a01014 	mov	r1, #20
   1f4fc:	e1a00005 	mov	r0, r5
   1f500:	ebffff25 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f504:	e3500000 	cmp	r0, #0
   1f508:	0a00005b 	beq	1f67c <LAN7800DeviceConfigure+0x464>
   1f50c:	e3a03080 	mov	r3, #128	; 0x80
   1f510:	e3a02090 	mov	r2, #144	; 0x90
   1f514:	e3a01014 	mov	r1, #20
   1f518:	e1a00005 	mov	r0, r5
   1f51c:	ebfffe4d 	bl	1ee58 <LAN7800DeviceWaitReg>
   1f520:	e3500000 	cmp	r0, #0
   1f524:	0a000054 	beq	1f67c <LAN7800DeviceConfigure+0x464>
   1f528:	e3e03000 	mvn	r3, #0
   1f52c:	e3a02b06 	mov	r2, #6144	; 0x1800
   1f530:	e3a01c01 	mov	r1, #256	; 0x100
   1f534:	e1a00005 	mov	r0, r5
   1f538:	ebffff17 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f53c:	e3500000 	cmp	r0, #0
   1f540:	0a000051 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f544:	e3e03000 	mvn	r3, #0
   1f548:	e3a02001 	mov	r2, #1
   1f54c:	e3a01f42 	mov	r1, #264	; 0x108
   1f550:	e1a00005 	mov	r0, r5
   1f554:	ebffff10 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f558:	e3500000 	cmp	r0, #0
   1f55c:	0a00004a 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f560:	e3e03000 	mvn	r3, #0
   1f564:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   1f568:	e3a010c4 	mov	r1, #196	; 0xc4
   1f56c:	e1a00005 	mov	r0, r5
   1f570:	ebffff09 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f574:	e3500000 	cmp	r0, #0
   1f578:	0a000043 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f57c:	e59f3154 	ldr	r3, [pc, #340]	; 1f6d8 <LAN7800DeviceConfigure+0x4c0>
   1f580:	e59f2154 	ldr	r2, [pc, #340]	; 1f6dc <LAN7800DeviceConfigure+0x4c4>
   1f584:	e3a01f41 	mov	r1, #260	; 0x104
   1f588:	e1a00005 	mov	r0, r5
   1f58c:	ebffff02 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f590:	e3500000 	cmp	r0, #0
   1f594:	0a00003c 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f598:	e3e03000 	mvn	r3, #0
   1f59c:	e3a02102 	mov	r2, #-2147483648	; 0x80000000
   1f5a0:	e3a010c0 	mov	r1, #192	; 0xc0
   1f5a4:	e1a00005 	mov	r0, r5
   1f5a8:	ebfffefb 	bl	1f19c <LAN7800DeviceReadWriteReg>
   1f5ac:	e3500000 	cmp	r0, #0
   1f5b0:	0a000035 	beq	1f68c <LAN7800DeviceConfigure+0x474>
   1f5b4:	e1a00005 	mov	r0, r5
   1f5b8:	ebfffedb 	bl	1f12c <LAN7800DeviceInitPHY>
   1f5bc:	e2506000 	subs	r6, r0, #0
   1f5c0:	0a000038 	beq	1f6a8 <LAN7800DeviceConfigure+0x490>
   1f5c4:	e28d0004 	add	r0, sp, #4
   1f5c8:	eb00004e 	bl	1f708 <String>
   1f5cc:	e59f310c 	ldr	r3, [pc, #268]	; 1f6e0 <LAN7800DeviceConfigure+0x4c8>
   1f5d0:	e59f110c 	ldr	r1, [pc, #268]	; 1f6e4 <LAN7800DeviceConfigure+0x4cc>
   1f5d4:	e5932000 	ldr	r2, [r3]
   1f5d8:	e28d0004 	add	r0, sp, #4
   1f5dc:	e282c001 	add	ip, r2, #1
   1f5e0:	e583c000 	str	ip, [r3]
   1f5e4:	eb000306 	bl	20204 <StringFormat>
   1f5e8:	ebfff5dd 	bl	1cd64 <DeviceNameServiceGet>
   1f5ec:	e1a04000 	mov	r4, r0
   1f5f0:	e28d0004 	add	r0, sp, #4
   1f5f4:	eb000076 	bl	1f7d4 <StringGet>
   1f5f8:	e1a02005 	mov	r2, r5
   1f5fc:	e1a01000 	mov	r1, r0
   1f600:	e3a03000 	mov	r3, #0
   1f604:	e1a00004 	mov	r0, r4
   1f608:	ebfff556 	bl	1cb68 <DeviceNameServiceAddDevice>
   1f60c:	e28d0004 	add	r0, sp, #4
   1f610:	eb00005e 	bl	1f790 <_String>
   1f614:	e3a06001 	mov	r6, #1
   1f618:	eaffff53 	b	1f36c <LAN7800DeviceConfigure+0x154>
   1f61c:	e59f20c4 	ldr	r2, [pc, #196]	; 1f6e8 <LAN7800DeviceConfigure+0x4d0>
   1f620:	e59f1094 	ldr	r1, [pc, #148]	; 1f6bc <LAN7800DeviceConfigure+0x4a4>
   1f624:	e59f00c0 	ldr	r0, [pc, #192]	; 1f6ec <LAN7800DeviceConfigure+0x4d4>
   1f628:	eb001e57 	bl	26f8c <uspi_assertion_failed>
   1f62c:	eafffefd 	b	1f228 <LAN7800DeviceConfigure+0x10>
   1f630:	e59f20b8 	ldr	r2, [pc, #184]	; 1f6f0 <LAN7800DeviceConfigure+0x4d8>
   1f634:	e3a01001 	mov	r1, #1
   1f638:	e59f008c 	ldr	r0, [pc, #140]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f63c:	eb001e40 	bl	26f44 <LogWrite>
   1f640:	e1a00006 	mov	r0, r6
   1f644:	e28dd014 	add	sp, sp, #20
   1f648:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f64c:	e59f20a0 	ldr	r2, [pc, #160]	; 1f6f4 <LAN7800DeviceConfigure+0x4dc>
   1f650:	e1a01007 	mov	r1, r7
   1f654:	e1a00008 	mov	r0, r8
   1f658:	eb001e4b 	bl	26f8c <uspi_assertion_failed>
   1f65c:	e5956014 	ldr	r6, [r5, #20]
   1f660:	eaffff28 	b	1f308 <LAN7800DeviceConfigure+0xf0>
   1f664:	e59f208c 	ldr	r2, [pc, #140]	; 1f6f8 <LAN7800DeviceConfigure+0x4e0>
   1f668:	e3a01001 	mov	r1, #1
   1f66c:	e59f0058 	ldr	r0, [pc, #88]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f670:	eb001e33 	bl	26f44 <LogWrite>
   1f674:	e3a06000 	mov	r6, #0
   1f678:	eaffff3b 	b	1f36c <LAN7800DeviceConfigure+0x154>
   1f67c:	e59f2078 	ldr	r2, [pc, #120]	; 1f6fc <LAN7800DeviceConfigure+0x4e4>
   1f680:	e3a01001 	mov	r1, #1
   1f684:	e59f0040 	ldr	r0, [pc, #64]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f688:	eb001e2d 	bl	26f44 <LogWrite>
   1f68c:	e3a06000 	mov	r6, #0
   1f690:	eaffff35 	b	1f36c <LAN7800DeviceConfigure+0x154>
   1f694:	e59f2064 	ldr	r2, [pc, #100]	; 1f700 <LAN7800DeviceConfigure+0x4e8>
   1f698:	e3a01001 	mov	r1, #1
   1f69c:	e59f0028 	ldr	r0, [pc, #40]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f6a0:	eb001e27 	bl	26f44 <LogWrite>
   1f6a4:	eaffff30 	b	1f36c <LAN7800DeviceConfigure+0x154>
   1f6a8:	e59f2054 	ldr	r2, [pc, #84]	; 1f704 <LAN7800DeviceConfigure+0x4ec>
   1f6ac:	e3a01001 	mov	r1, #1
   1f6b0:	e59f0014 	ldr	r0, [pc, #20]	; 1f6cc <LAN7800DeviceConfigure+0x4b4>
   1f6b4:	eb001e22 	bl	26f44 <LogWrite>
   1f6b8:	eaffff2b 	b	1f36c <LAN7800DeviceConfigure+0x154>
   1f6bc:	0002aeb0 			; <UNDEFINED> instruction: 0x0002aeb0
   1f6c0:	0002ad70 	andeq	sl, r2, r0, ror sp
   1f6c4:	0002ad54 	andeq	sl, r2, r4, asr sp
   1f6c8:	0002af18 	andeq	sl, r2, r8, lsl pc
   1f6cc:	00028588 	andeq	r8, r2, r8, lsl #11
   1f6d0:	0000013d 	andeq	r0, r0, sp, lsr r1
   1f6d4:	00000402 	andeq	r0, r0, r2, lsl #8
   1f6d8:	c000ffff 	strdgt	pc, [r0], -pc	; <UNPREDICTABLE>
   1f6dc:	05ee0001 	strbeq	r0, [lr, #1]!
   1f6e0:	0002bcd4 	ldrdeq	fp, [r2], -r4
   1f6e4:	0002adb8 			; <UNDEFINED> instruction: 0x0002adb8
   1f6e8:	00000123 	andeq	r0, r0, r3, lsr #2
   1f6ec:	00029a68 	andeq	r9, r2, r8, ror #20
   1f6f0:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   1f6f4:	0000014a 	andeq	r0, r0, sl, asr #2
   1f6f8:	0002af30 	andeq	sl, r2, r0, lsr pc
   1f6fc:	0002af58 	andeq	sl, r2, r8, asr pc
   1f700:	0002af40 	andeq	sl, r2, r0, asr #30
   1f704:	0002af6c 	andeq	sl, r2, ip, ror #30

0001f708 <String>:
   1f708:	e92d4010 	push	{r4, lr}
   1f70c:	e2504000 	subs	r4, r0, #0
   1f710:	0a000003 	beq	1f724 <String+0x1c>
   1f714:	e3a03000 	mov	r3, #0
   1f718:	e5843000 	str	r3, [r4]
   1f71c:	e5843004 	str	r3, [r4, #4]
   1f720:	e8bd8010 	pop	{r4, pc}
   1f724:	e3a02023 	mov	r2, #35	; 0x23
   1f728:	e59f1008 	ldr	r1, [pc, #8]	; 1f738 <String+0x30>
   1f72c:	e59f0008 	ldr	r0, [pc, #8]	; 1f73c <String+0x34>
   1f730:	eb001e15 	bl	26f8c <uspi_assertion_failed>
   1f734:	eafffff6 	b	1f714 <String+0xc>
   1f738:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f73c:	00029a68 	andeq	r9, r2, r8, ror #20

0001f740 <String2>:
   1f740:	e92d4070 	push	{r4, r5, r6, lr}
   1f744:	e2504000 	subs	r4, r0, #0
   1f748:	e1a05001 	mov	r5, r1
   1f74c:	0a000008 	beq	1f774 <String2+0x34>
   1f750:	e1a00005 	mov	r0, r5
   1f754:	eb000319 	bl	203c0 <uspi_strlen>
   1f758:	e2800001 	add	r0, r0, #1
   1f75c:	e5840004 	str	r0, [r4, #4]
   1f760:	eb0015f2 	bl	24f30 <malloc>
   1f764:	e1a01005 	mov	r1, r5
   1f768:	e5840000 	str	r0, [r4]
   1f76c:	e8bd4070 	pop	{r4, r5, r6, lr}
   1f770:	ea000338 	b	20458 <uspi_strcpy>
   1f774:	e3a0202a 	mov	r2, #42	; 0x2a
   1f778:	e59f1008 	ldr	r1, [pc, #8]	; 1f788 <String2+0x48>
   1f77c:	e59f0008 	ldr	r0, [pc, #8]	; 1f78c <String2+0x4c>
   1f780:	eb001e01 	bl	26f8c <uspi_assertion_failed>
   1f784:	eafffff1 	b	1f750 <String2+0x10>
   1f788:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f78c:	00029a68 	andeq	r9, r2, r8, ror #20

0001f790 <_String>:
   1f790:	e92d4010 	push	{r4, lr}
   1f794:	e2504000 	subs	r4, r0, #0
   1f798:	0a000006 	beq	1f7b8 <_String+0x28>
   1f79c:	e5940000 	ldr	r0, [r4]
   1f7a0:	e3500000 	cmp	r0, #0
   1f7a4:	08bd8010 	popeq	{r4, pc}
   1f7a8:	eb001646 	bl	250c8 <free>
   1f7ac:	e3a03000 	mov	r3, #0
   1f7b0:	e5843000 	str	r3, [r4]
   1f7b4:	e8bd8010 	pop	{r4, pc}
   1f7b8:	e3a02035 	mov	r2, #53	; 0x35
   1f7bc:	e59f1008 	ldr	r1, [pc, #8]	; 1f7cc <_String+0x3c>
   1f7c0:	e59f0008 	ldr	r0, [pc, #8]	; 1f7d0 <_String+0x40>
   1f7c4:	eb001df0 	bl	26f8c <uspi_assertion_failed>
   1f7c8:	eafffff3 	b	1f79c <_String+0xc>
   1f7cc:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f7d0:	00029a68 	andeq	r9, r2, r8, ror #20

0001f7d4 <StringGet>:
   1f7d4:	e92d4010 	push	{r4, lr}
   1f7d8:	e2504000 	subs	r4, r0, #0
   1f7dc:	0a000004 	beq	1f7f4 <StringGet+0x20>
   1f7e0:	e5940000 	ldr	r0, [r4]
   1f7e4:	e59f301c 	ldr	r3, [pc, #28]	; 1f808 <StringGet+0x34>
   1f7e8:	e3500000 	cmp	r0, #0
   1f7ec:	01a00003 	moveq	r0, r3
   1f7f0:	e8bd8010 	pop	{r4, pc}
   1f7f4:	e3a02040 	mov	r2, #64	; 0x40
   1f7f8:	e59f100c 	ldr	r1, [pc, #12]	; 1f80c <StringGet+0x38>
   1f7fc:	e59f000c 	ldr	r0, [pc, #12]	; 1f810 <StringGet+0x3c>
   1f800:	eb001de1 	bl	26f8c <uspi_assertion_failed>
   1f804:	eafffff5 	b	1f7e0 <StringGet+0xc>
   1f808:	0002bb34 	andeq	fp, r2, r4, lsr fp
   1f80c:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f810:	00029a68 	andeq	r9, r2, r8, ror #20

0001f814 <StringSet>:
   1f814:	e92d4070 	push	{r4, r5, r6, lr}
   1f818:	e2504000 	subs	r4, r0, #0
   1f81c:	e1a05001 	mov	r5, r1
   1f820:	0a00000d 	beq	1f85c <StringSet+0x48>
   1f824:	e5940000 	ldr	r0, [r4]
   1f828:	e3500000 	cmp	r0, #0
   1f82c:	0a000000 	beq	1f834 <StringSet+0x20>
   1f830:	eb001624 	bl	250c8 <free>
   1f834:	e1a00005 	mov	r0, r5
   1f838:	eb0002e0 	bl	203c0 <uspi_strlen>
   1f83c:	e2800001 	add	r0, r0, #1
   1f840:	e5840004 	str	r0, [r4, #4]
   1f844:	eb0015b9 	bl	24f30 <malloc>
   1f848:	e1a01005 	mov	r1, r5
   1f84c:	e5840000 	str	r0, [r4]
   1f850:	eb000300 	bl	20458 <uspi_strcpy>
   1f854:	e5940000 	ldr	r0, [r4]
   1f858:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f85c:	e3a0204c 	mov	r2, #76	; 0x4c
   1f860:	e59f1008 	ldr	r1, [pc, #8]	; 1f870 <StringSet+0x5c>
   1f864:	e59f0008 	ldr	r0, [pc, #8]	; 1f874 <StringSet+0x60>
   1f868:	eb001dc7 	bl	26f8c <uspi_assertion_failed>
   1f86c:	eaffffec 	b	1f824 <StringSet+0x10>
   1f870:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f874:	00029a68 	andeq	r9, r2, r8, ror #20

0001f878 <StringGetLength>:
   1f878:	e92d4010 	push	{r4, lr}
   1f87c:	e2504000 	subs	r4, r0, #0
   1f880:	0a000004 	beq	1f898 <StringGetLength+0x20>
   1f884:	e5940000 	ldr	r0, [r4]
   1f888:	e3500000 	cmp	r0, #0
   1f88c:	08bd8010 	popeq	{r4, pc}
   1f890:	e8bd4010 	pop	{r4, lr}
   1f894:	ea0002c9 	b	203c0 <uspi_strlen>
   1f898:	e3a0205e 	mov	r2, #94	; 0x5e
   1f89c:	e59f1008 	ldr	r1, [pc, #8]	; 1f8ac <StringGetLength+0x34>
   1f8a0:	e59f0008 	ldr	r0, [pc, #8]	; 1f8b0 <StringGetLength+0x38>
   1f8a4:	eb001db8 	bl	26f8c <uspi_assertion_failed>
   1f8a8:	eafffff5 	b	1f884 <StringGetLength+0xc>
   1f8ac:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f8b0:	00029a68 	andeq	r9, r2, r8, ror #20

0001f8b4 <StringAppend>:
   1f8b4:	e92d4070 	push	{r4, r5, r6, lr}
   1f8b8:	e2504000 	subs	r4, r0, #0
   1f8bc:	e1a06001 	mov	r6, r1
   1f8c0:	0a00001b 	beq	1f934 <StringAppend+0x80>
   1f8c4:	e3a03001 	mov	r3, #1
   1f8c8:	e5940000 	ldr	r0, [r4]
   1f8cc:	e5843004 	str	r3, [r4, #4]
   1f8d0:	e3500000 	cmp	r0, #0
   1f8d4:	0a000003 	beq	1f8e8 <StringAppend+0x34>
   1f8d8:	eb0002b8 	bl	203c0 <uspi_strlen>
   1f8dc:	e5943004 	ldr	r3, [r4, #4]
   1f8e0:	e0830000 	add	r0, r3, r0
   1f8e4:	e5840004 	str	r0, [r4, #4]
   1f8e8:	e1a00006 	mov	r0, r6
   1f8ec:	eb0002b3 	bl	203c0 <uspi_strlen>
   1f8f0:	e5943004 	ldr	r3, [r4, #4]
   1f8f4:	e0800003 	add	r0, r0, r3
   1f8f8:	e5840004 	str	r0, [r4, #4]
   1f8fc:	eb00158b 	bl	24f30 <malloc>
   1f900:	e5941000 	ldr	r1, [r4]
   1f904:	e1a05000 	mov	r5, r0
   1f908:	e3510000 	cmp	r1, #0
   1f90c:	05c01000 	strbeq	r1, [r0]
   1f910:	0a000002 	beq	1f920 <StringAppend+0x6c>
   1f914:	eb0002cf 	bl	20458 <uspi_strcpy>
   1f918:	e5940000 	ldr	r0, [r4]
   1f91c:	eb0015e9 	bl	250c8 <free>
   1f920:	e1a01006 	mov	r1, r6
   1f924:	e1a00005 	mov	r0, r5
   1f928:	eb0002e7 	bl	204cc <uspi_strcat>
   1f92c:	e5845000 	str	r5, [r4]
   1f930:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f934:	e3a0206a 	mov	r2, #106	; 0x6a
   1f938:	e59f1008 	ldr	r1, [pc, #8]	; 1f948 <StringAppend+0x94>
   1f93c:	e59f0008 	ldr	r0, [pc, #8]	; 1f94c <StringAppend+0x98>
   1f940:	eb001d91 	bl	26f8c <uspi_assertion_failed>
   1f944:	eaffffde 	b	1f8c4 <StringAppend+0x10>
   1f948:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f94c:	00029a68 	andeq	r9, r2, r8, ror #20

0001f950 <StringCompare>:
   1f950:	e92d4070 	push	{r4, r5, r6, lr}
   1f954:	e2504000 	subs	r4, r0, #0
   1f958:	e1a05001 	mov	r5, r1
   1f95c:	0a000003 	beq	1f970 <StringCompare+0x20>
   1f960:	e1a01005 	mov	r1, r5
   1f964:	e5940000 	ldr	r0, [r4]
   1f968:	e8bd4070 	pop	{r4, r5, r6, lr}
   1f96c:	ea00029d 	b	203e8 <uspi_strcmp>
   1f970:	e59f1018 	ldr	r1, [pc, #24]	; 1f990 <StringCompare+0x40>
   1f974:	e59f0018 	ldr	r0, [pc, #24]	; 1f994 <StringCompare+0x44>
   1f978:	e3a02086 	mov	r2, #134	; 0x86
   1f97c:	eb001d82 	bl	26f8c <uspi_assertion_failed>
   1f980:	e1a01005 	mov	r1, r5
   1f984:	e5940000 	ldr	r0, [r4]
   1f988:	e8bd4070 	pop	{r4, r5, r6, lr}
   1f98c:	ea000295 	b	203e8 <uspi_strcmp>
   1f990:	0002af7c 	andeq	sl, r2, ip, ror pc
   1f994:	00029a68 	andeq	r9, r2, r8, ror #20

0001f998 <StringFind>:
   1f998:	e92d4070 	push	{r4, r5, r6, lr}
   1f99c:	e2505000 	subs	r5, r0, #0
   1f9a0:	e1a04001 	mov	r4, r1
   1f9a4:	0a00000f 	beq	1f9e8 <StringFind+0x50>
   1f9a8:	e5953000 	ldr	r3, [r5]
   1f9ac:	e1d320d0 	ldrsb	r2, [r3]
   1f9b0:	e3520000 	cmp	r2, #0
   1f9b4:	0a000009 	beq	1f9e0 <StringFind+0x48>
   1f9b8:	e1540002 	cmp	r4, r2
   1f9bc:	0a00000e 	beq	1f9fc <StringFind+0x64>
   1f9c0:	e2631001 	rsb	r1, r3, #1
   1f9c4:	ea000001 	b	1f9d0 <StringFind+0x38>
   1f9c8:	e1520004 	cmp	r2, r4
   1f9cc:	08bd8070 	popeq	{r4, r5, r6, pc}
   1f9d0:	e0830001 	add	r0, r3, r1
   1f9d4:	e1f320d1 	ldrsb	r2, [r3, #1]!
   1f9d8:	e3520000 	cmp	r2, #0
   1f9dc:	1afffff9 	bne	1f9c8 <StringFind+0x30>
   1f9e0:	e3e00000 	mvn	r0, #0
   1f9e4:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f9e8:	e3a0208d 	mov	r2, #141	; 0x8d
   1f9ec:	e59f1010 	ldr	r1, [pc, #16]	; 1fa04 <StringFind+0x6c>
   1f9f0:	e59f0010 	ldr	r0, [pc, #16]	; 1fa08 <StringFind+0x70>
   1f9f4:	eb001d64 	bl	26f8c <uspi_assertion_failed>
   1f9f8:	eaffffea 	b	1f9a8 <StringFind+0x10>
   1f9fc:	e3a00000 	mov	r0, #0
   1fa00:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fa04:	0002af7c 	andeq	sl, r2, ip, ror pc
   1fa08:	00029a68 	andeq	r9, r2, r8, ror #20

0001fa0c <StringReserveSpace>:
   1fa0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1fa10:	e2505000 	subs	r5, r0, #0
   1fa14:	e1a04001 	mov	r4, r1
   1fa18:	0a000016 	beq	1fa78 <StringReserveSpace+0x6c>
   1fa1c:	e3540000 	cmp	r4, #0
   1fa20:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   1fa24:	e895004c 	ldm	r5, {r2, r3, r6}
   1fa28:	e0466002 	sub	r6, r6, r2
   1fa2c:	e0844006 	add	r4, r4, r6
   1fa30:	e2842001 	add	r2, r4, #1
   1fa34:	e1520003 	cmp	r2, r3
   1fa38:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
   1fa3c:	e2844041 	add	r4, r4, #65	; 0x41
   1fa40:	e1a00004 	mov	r0, r4
   1fa44:	eb001539 	bl	24f30 <malloc>
   1fa48:	e3a02000 	mov	r2, #0
   1fa4c:	e1a07000 	mov	r7, r0
   1fa50:	e5953008 	ldr	r3, [r5, #8]
   1fa54:	e0876006 	add	r6, r7, r6
   1fa58:	e5c32000 	strb	r2, [r3]
   1fa5c:	e5951000 	ldr	r1, [r5]
   1fa60:	eb00027c 	bl	20458 <uspi_strcpy>
   1fa64:	e5950000 	ldr	r0, [r5]
   1fa68:	eb001596 	bl	250c8 <free>
   1fa6c:	e9850050 	stmib	r5, {r4, r6}
   1fa70:	e5857000 	str	r7, [r5]
   1fa74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1fa78:	e59f2014 	ldr	r2, [pc, #20]	; 1fa94 <StringReserveSpace+0x88>
   1fa7c:	e59f1014 	ldr	r1, [pc, #20]	; 1fa98 <StringReserveSpace+0x8c>
   1fa80:	e59f0014 	ldr	r0, [pc, #20]	; 1fa9c <StringReserveSpace+0x90>
   1fa84:	eb001d40 	bl	26f8c <uspi_assertion_failed>
   1fa88:	e3540000 	cmp	r4, #0
   1fa8c:	1affffe4 	bne	1fa24 <StringReserveSpace+0x18>
   1fa90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1fa94:	00000199 	muleq	r0, r9, r1
   1fa98:	0002af7c 	andeq	sl, r2, ip, ror pc
   1fa9c:	00029a68 	andeq	r9, r2, r8, ror #20

0001faa0 <StringPutChar>:
   1faa0:	e92d4070 	push	{r4, r5, r6, lr}
   1faa4:	e2505000 	subs	r5, r0, #0
   1faa8:	e1a06001 	mov	r6, r1
   1faac:	e1a04002 	mov	r4, r2
   1fab0:	0a00000d 	beq	1faec <StringPutChar+0x4c>
   1fab4:	e1a01004 	mov	r1, r4
   1fab8:	e1a00005 	mov	r0, r5
   1fabc:	ebffffd2 	bl	1fa0c <StringReserveSpace>
   1fac0:	e3540000 	cmp	r4, #0
   1fac4:	e2442001 	sub	r2, r4, #1
   1fac8:	08bd8070 	popeq	{r4, r5, r6, pc}
   1facc:	e5953008 	ldr	r3, [r5, #8]
   1fad0:	e2422001 	sub	r2, r2, #1
   1fad4:	e2831001 	add	r1, r3, #1
   1fad8:	e3720001 	cmn	r2, #1
   1fadc:	e5851008 	str	r1, [r5, #8]
   1fae0:	e5c36000 	strb	r6, [r3]
   1fae4:	1afffff8 	bne	1facc <StringPutChar+0x2c>
   1fae8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1faec:	e3a02d06 	mov	r2, #384	; 0x180
   1faf0:	e59f1008 	ldr	r1, [pc, #8]	; 1fb00 <StringPutChar+0x60>
   1faf4:	e59f0008 	ldr	r0, [pc, #8]	; 1fb04 <StringPutChar+0x64>
   1faf8:	eb001d23 	bl	26f8c <uspi_assertion_failed>
   1fafc:	eaffffec 	b	1fab4 <StringPutChar+0x14>
   1fb00:	0002af7c 	andeq	sl, r2, ip, ror pc
   1fb04:	00029a68 	andeq	r9, r2, r8, ror #20

0001fb08 <StringPutString>:
   1fb08:	e92d4070 	push	{r4, r5, r6, lr}
   1fb0c:	e2504000 	subs	r4, r0, #0
   1fb10:	e1a06001 	mov	r6, r1
   1fb14:	0a00000c 	beq	1fb4c <StringPutString+0x44>
   1fb18:	e1a00006 	mov	r0, r6
   1fb1c:	eb000227 	bl	203c0 <uspi_strlen>
   1fb20:	e1a05000 	mov	r5, r0
   1fb24:	e1a01000 	mov	r1, r0
   1fb28:	e1a00004 	mov	r0, r4
   1fb2c:	ebffffb6 	bl	1fa0c <StringReserveSpace>
   1fb30:	e1a01006 	mov	r1, r6
   1fb34:	e5940008 	ldr	r0, [r4, #8]
   1fb38:	eb000246 	bl	20458 <uspi_strcpy>
   1fb3c:	e5940008 	ldr	r0, [r4, #8]
   1fb40:	e0800005 	add	r0, r0, r5
   1fb44:	e5840008 	str	r0, [r4, #8]
   1fb48:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fb4c:	e3a02f63 	mov	r2, #396	; 0x18c
   1fb50:	e59f1008 	ldr	r1, [pc, #8]	; 1fb60 <StringPutString+0x58>
   1fb54:	e59f0008 	ldr	r0, [pc, #8]	; 1fb64 <StringPutString+0x5c>
   1fb58:	eb001d0b 	bl	26f8c <uspi_assertion_failed>
   1fb5c:	eaffffed 	b	1fb18 <StringPutString+0x10>
   1fb60:	0002af7c 	andeq	sl, r2, ip, ror pc
   1fb64:	00029a68 	andeq	r9, r2, r8, ror #20

0001fb68 <StringFormatV>:
   1fb68:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb6c:	e250b000 	subs	fp, r0, #0
   1fb70:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   1fb74:	e1a0a001 	mov	sl, r1
   1fb78:	e58d2004 	str	r2, [sp, #4]
   1fb7c:	0a00017e 	beq	2017c <StringFormatV+0x614>
   1fb80:	e59b0000 	ldr	r0, [fp]
   1fb84:	e3500000 	cmp	r0, #0
   1fb88:	0a000000 	beq	1fb90 <StringFormatV+0x28>
   1fb8c:	eb00154d 	bl	250c8 <free>
   1fb90:	e3a00040 	mov	r0, #64	; 0x40
   1fb94:	e58b0004 	str	r0, [fp, #4]
   1fb98:	eb0014e4 	bl	24f30 <malloc>
   1fb9c:	e58b0000 	str	r0, [fp]
   1fba0:	e58b0008 	str	r0, [fp, #8]
   1fba4:	e1da10d0 	ldrsb	r1, [sl]
   1fba8:	e3510000 	cmp	r1, #0
   1fbac:	0a000055 	beq	1fd08 <StringFormatV+0x1a0>
   1fbb0:	e3510025 	cmp	r1, #37	; 0x25
   1fbb4:	e28ac001 	add	ip, sl, #1
   1fbb8:	1a00004b 	bne	1fcec <StringFormatV+0x184>
   1fbbc:	e1da10d1 	ldrsb	r1, [sl, #1]
   1fbc0:	e3510025 	cmp	r1, #37	; 0x25
   1fbc4:	0a00007a 	beq	1fdb4 <StringFormatV+0x24c>
   1fbc8:	e351002d 	cmp	r1, #45	; 0x2d
   1fbcc:	03a03001 	moveq	r3, #1
   1fbd0:	13a03000 	movne	r3, #0
   1fbd4:	01da10d2 	ldrsbeq	r1, [sl, #2]
   1fbd8:	028ac002 	addeq	ip, sl, #2
   1fbdc:	e3510030 	cmp	r1, #48	; 0x30
   1fbe0:	e58d3008 	str	r3, [sp, #8]
   1fbe4:	13a03000 	movne	r3, #0
   1fbe8:	03a02001 	moveq	r2, #1
   1fbec:	01dc10d1 	ldrsbeq	r1, [ip, #1]
   1fbf0:	028c3002 	addeq	r3, ip, #2
   1fbf4:	e28c5001 	add	r5, ip, #1
   1fbf8:	01a0c005 	moveq	ip, r5
   1fbfc:	158d3010 	strne	r3, [sp, #16]
   1fc00:	01a05003 	moveq	r5, r3
   1fc04:	e2413030 	sub	r3, r1, #48	; 0x30
   1fc08:	e6ef3073 	uxtb	r3, r3
   1fc0c:	058d2010 	streq	r2, [sp, #16]
   1fc10:	e3530009 	cmp	r3, #9
   1fc14:	8a000133 	bhi	200e8 <StringFormatV+0x580>
   1fc18:	e3a04000 	mov	r4, #0
   1fc1c:	ea000000 	b	1fc24 <StringFormatV+0xbc>
   1fc20:	e1a0c006 	mov	ip, r6
   1fc24:	e0844104 	add	r4, r4, r4, lsl #2
   1fc28:	e0814084 	add	r4, r1, r4, lsl #1
   1fc2c:	e1dc10d1 	ldrsb	r1, [ip, #1]
   1fc30:	e2444030 	sub	r4, r4, #48	; 0x30
   1fc34:	e2413030 	sub	r3, r1, #48	; 0x30
   1fc38:	e6ef3073 	uxtb	r3, r3
   1fc3c:	e3530009 	cmp	r3, #9
   1fc40:	e28c6001 	add	r6, ip, #1
   1fc44:	9afffff5 	bls	1fc20 <StringFormatV+0xb8>
   1fc48:	e28c5002 	add	r5, ip, #2
   1fc4c:	e351006c 	cmp	r1, #108	; 0x6c
   1fc50:	0a000030 	beq	1fd18 <StringFormatV+0x1b0>
   1fc54:	e1d680d0 	ldrsb	r8, [r6]
   1fc58:	e2483058 	sub	r3, r8, #88	; 0x58
   1fc5c:	e3530020 	cmp	r3, #32
   1fc60:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   1fc64:	ea000107 	b	20088 <StringFormatV+0x520>
   1fc68:	0001ff58 	andeq	pc, r1, r8, asr pc	; <UNPREDICTABLE>
   1fc6c:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc70:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc74:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc78:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc7c:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc80:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc84:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc88:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc8c:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc90:	00020088 	andeq	r0, r2, r8, lsl #1
   1fc94:	0001fed8 	ldrdeq	pc, [r1], -r8
   1fc98:	0001ff68 	andeq	pc, r1, r8, ror #30
   1fc9c:	00020088 	andeq	r0, r2, r8, lsl #1
   1fca0:	00020088 	andeq	r0, r2, r8, lsl #1
   1fca4:	00020088 	andeq	r0, r2, r8, lsl #1
   1fca8:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcac:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcb0:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcb4:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcb8:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcbc:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcc0:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcc4:	0001fdc8 	andeq	pc, r1, r8, asr #27
   1fcc8:	00020088 	andeq	r0, r2, r8, lsl #1
   1fccc:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcd0:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcd4:	0001ff18 	andeq	pc, r1, r8, lsl pc	; <UNPREDICTABLE>
   1fcd8:	00020088 	andeq	r0, r2, r8, lsl #1
   1fcdc:	0001ff60 	andeq	pc, r1, r0, ror #30
   1fce0:	00020088 	andeq	r0, r2, r8, lsl #1
   1fce4:	00020088 	andeq	r0, r2, r8, lsl #1
   1fce8:	0001ff58 	andeq	pc, r1, r8, asr pc	; <UNPREDICTABLE>
   1fcec:	e1a0a00c 	mov	sl, ip
   1fcf0:	e3a02001 	mov	r2, #1
   1fcf4:	e1a0000b 	mov	r0, fp
   1fcf8:	ebffff68 	bl	1faa0 <StringPutChar>
   1fcfc:	e1da10d0 	ldrsb	r1, [sl]
   1fd00:	e3510000 	cmp	r1, #0
   1fd04:	1affffa9 	bne	1fbb0 <StringFormatV+0x48>
   1fd08:	e59b3008 	ldr	r3, [fp, #8]
   1fd0c:	e5c31000 	strb	r1, [r3]
   1fd10:	e28dd02c 	add	sp, sp, #44	; 0x2c
   1fd14:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd18:	e1d680d1 	ldrsb	r8, [r6, #1]
   1fd1c:	e285a001 	add	sl, r5, #1
   1fd20:	e2483058 	sub	r3, r8, #88	; 0x58
   1fd24:	e3530020 	cmp	r3, #32
   1fd28:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   1fd2c:	ea0000d3 	b	20080 <StringFormatV+0x518>
   1fd30:	0002014c 	andeq	r0, r2, ip, asr #2
   1fd34:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd38:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd3c:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd40:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd44:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd48:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd4c:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd50:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd54:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd58:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd5c:	0001fed4 	ldrdeq	pc, [r1], -r4
   1fd60:	00020070 	andeq	r0, r2, r0, ror r0
   1fd64:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd68:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd6c:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd70:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd74:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd78:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd7c:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd80:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd84:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd88:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd8c:	00020144 	andeq	r0, r2, r4, asr #2
   1fd90:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd94:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd98:	00020080 	andeq	r0, r2, r0, lsl #1
   1fd9c:	0001ff14 	andeq	pc, r1, r4, lsl pc	; <UNPREDICTABLE>
   1fda0:	00020080 	andeq	r0, r2, r0, lsl #1
   1fda4:	0002011c 	andeq	r0, r2, ip, lsl r1
   1fda8:	00020080 	andeq	r0, r2, r0, lsl #1
   1fdac:	00020080 	andeq	r0, r2, r0, lsl #1
   1fdb0:	0002014c 	andeq	r0, r2, ip, asr #2
   1fdb4:	e3a02001 	mov	r2, #1
   1fdb8:	e1a0000b 	mov	r0, fp
   1fdbc:	e28aa002 	add	sl, sl, #2
   1fdc0:	ebffff36 	bl	1faa0 <StringPutChar>
   1fdc4:	eaffff76 	b	1fba4 <StringFormatV+0x3c>
   1fdc8:	e3a07008 	mov	r7, #8
   1fdcc:	e59d3004 	ldr	r3, [sp, #4]
   1fdd0:	e1a0a005 	mov	sl, r5
   1fdd4:	e4936004 	ldr	r6, [r3], #4
   1fdd8:	e1560007 	cmp	r6, r7
   1fddc:	e58d3004 	str	r3, [sp, #4]
   1fde0:	23a05001 	movcs	r5, #1
   1fde4:	3a0000d3 	bcc	20138 <StringFormatV+0x5d0>
   1fde8:	e0050597 	mul	r5, r7, r5
   1fdec:	e1a00006 	mov	r0, r6
   1fdf0:	e1a01005 	mov	r1, r5
   1fdf4:	eb0015b8 	bl	254dc <__aeabi_uidiv>
   1fdf8:	e1500007 	cmp	r0, r7
   1fdfc:	2afffff9 	bcs	1fde8 <StringFormatV+0x280>
   1fe00:	e1a09000 	mov	r9, r0
   1fe04:	e3580058 	cmp	r8, #88	; 0x58
   1fe08:	13a03057 	movne	r3, #87	; 0x57
   1fe0c:	03a03037 	moveq	r3, #55	; 0x37
   1fe10:	e28d801c 	add	r8, sp, #28
   1fe14:	e58d4014 	str	r4, [sp, #20]
   1fe18:	e58d800c 	str	r8, [sp, #12]
   1fe1c:	e1a04009 	mov	r4, r9
   1fe20:	e1a09003 	mov	r9, r3
   1fe24:	ea000004 	b	1fe3c <StringFormatV+0x2d4>
   1fe28:	e1a01000 	mov	r1, r0
   1fe2c:	e1a00006 	mov	r0, r6
   1fe30:	e1a05001 	mov	r5, r1
   1fe34:	eb0015a8 	bl	254dc <__aeabi_uidiv>
   1fe38:	e1a04000 	mov	r4, r0
   1fe3c:	e1a00006 	mov	r0, r6
   1fe40:	e1a01005 	mov	r1, r5
   1fe44:	eb0015a8 	bl	254ec <__aeabi_uidivmod>
   1fe48:	e6ef3074 	uxtb	r3, r4
   1fe4c:	e3540009 	cmp	r4, #9
   1fe50:	e2832030 	add	r2, r3, #48	; 0x30
   1fe54:	80833009 	addhi	r3, r3, r9
   1fe58:	96af3072 	sxtbls	r3, r2
   1fe5c:	86af3073 	sxtbhi	r3, r3
   1fe60:	e1a06001 	mov	r6, r1
   1fe64:	e1a00005 	mov	r0, r5
   1fe68:	e1a01007 	mov	r1, r7
   1fe6c:	e4c83001 	strb	r3, [r8], #1
   1fe70:	eb001599 	bl	254dc <__aeabi_uidiv>
   1fe74:	e1550007 	cmp	r5, r7
   1fe78:	2affffea 	bcs	1fe28 <StringFormatV+0x2c0>
   1fe7c:	e3a03000 	mov	r3, #0
   1fe80:	e59d000c 	ldr	r0, [sp, #12]
   1fe84:	e5c83000 	strb	r3, [r8]
   1fe88:	e59d4014 	ldr	r4, [sp, #20]
   1fe8c:	eb00014b 	bl	203c0 <uspi_strlen>
   1fe90:	e59d3008 	ldr	r3, [sp, #8]
   1fe94:	e1a05000 	mov	r5, r0
   1fe98:	e3530000 	cmp	r3, #0
   1fe9c:	1a000087 	bne	200c0 <StringFormatV+0x558>
   1fea0:	e1540000 	cmp	r4, r0
   1fea4:	9a000006 	bls	1fec4 <StringFormatV+0x35c>
   1fea8:	e59d3010 	ldr	r3, [sp, #16]
   1feac:	e0442000 	sub	r2, r4, r0
   1feb0:	e3530000 	cmp	r3, #0
   1feb4:	13a01030 	movne	r1, #48	; 0x30
   1feb8:	03a01020 	moveq	r1, #32
   1febc:	e1a0000b 	mov	r0, fp
   1fec0:	ebfffef6 	bl	1faa0 <StringPutChar>
   1fec4:	e59d100c 	ldr	r1, [sp, #12]
   1fec8:	e1a0000b 	mov	r0, fp
   1fecc:	ebffff0d 	bl	1fb08 <StringPutString>
   1fed0:	eaffff33 	b	1fba4 <StringFormatV+0x3c>
   1fed4:	e1a0500a 	mov	r5, sl
   1fed8:	e59d6004 	ldr	r6, [sp, #4]
   1fedc:	e59d3008 	ldr	r3, [sp, #8]
   1fee0:	e4967004 	ldr	r7, [r6], #4
   1fee4:	e3530000 	cmp	r3, #0
   1fee8:	e6af7077 	sxtb	r7, r7
   1feec:	1a0000af 	bne	201b0 <StringFormatV+0x648>
   1fef0:	e3540001 	cmp	r4, #1
   1fef4:	8a000096 	bhi	20154 <StringFormatV+0x5ec>
   1fef8:	e1a01007 	mov	r1, r7
   1fefc:	e3a02001 	mov	r2, #1
   1ff00:	e1a0000b 	mov	r0, fp
   1ff04:	e1a0a005 	mov	sl, r5
   1ff08:	e58d6004 	str	r6, [sp, #4]
   1ff0c:	ebfffee3 	bl	1faa0 <StringPutChar>
   1ff10:	eaffff23 	b	1fba4 <StringFormatV+0x3c>
   1ff14:	e1a0500a 	mov	r5, sl
   1ff18:	e59d6004 	ldr	r6, [sp, #4]
   1ff1c:	e4967004 	ldr	r7, [r6], #4
   1ff20:	e1a00007 	mov	r0, r7
   1ff24:	eb000125 	bl	203c0 <uspi_strlen>
   1ff28:	e59d3008 	ldr	r3, [sp, #8]
   1ff2c:	e1a08000 	mov	r8, r0
   1ff30:	e3530000 	cmp	r3, #0
   1ff34:	1a000095 	bne	20190 <StringFormatV+0x628>
   1ff38:	e1540000 	cmp	r4, r0
   1ff3c:	8a000089 	bhi	20168 <StringFormatV+0x600>
   1ff40:	e1a01007 	mov	r1, r7
   1ff44:	e1a0000b 	mov	r0, fp
   1ff48:	e1a0a005 	mov	sl, r5
   1ff4c:	e58d6004 	str	r6, [sp, #4]
   1ff50:	ebfffeec 	bl	1fb08 <StringPutString>
   1ff54:	eaffff12 	b	1fba4 <StringFormatV+0x3c>
   1ff58:	e3a07010 	mov	r7, #16
   1ff5c:	eaffff9a 	b	1fdcc <StringFormatV+0x264>
   1ff60:	e3a0700a 	mov	r7, #10
   1ff64:	eaffff98 	b	1fdcc <StringFormatV+0x264>
   1ff68:	e1a0a005 	mov	sl, r5
   1ff6c:	e59d3004 	ldr	r3, [sp, #4]
   1ff70:	e4936004 	ldr	r6, [r3], #4
   1ff74:	e58d3004 	str	r3, [sp, #4]
   1ff78:	e3560000 	cmp	r6, #0
   1ff7c:	b2666000 	rsblt	r6, r6, #0
   1ff80:	b3a07001 	movlt	r7, #1
   1ff84:	a3a07000 	movge	r7, #0
   1ff88:	e3560009 	cmp	r6, #9
   1ff8c:	e1a05006 	mov	r5, r6
   1ff90:	c3a09001 	movgt	r9, #1
   1ff94:	da000094 	ble	201ec <StringFormatV+0x684>
   1ff98:	e0899109 	add	r9, r9, r9, lsl #2
   1ff9c:	e1a09089 	lsl	r9, r9, #1
   1ffa0:	e1a01009 	mov	r1, r9
   1ffa4:	e1a00006 	mov	r0, r6
   1ffa8:	eb00154b 	bl	254dc <__aeabi_uidiv>
   1ffac:	e3500009 	cmp	r0, #9
   1ffb0:	8afffff8 	bhi	1ff98 <StringFormatV+0x430>
   1ffb4:	e1a08000 	mov	r8, r0
   1ffb8:	e28d301c 	add	r3, sp, #28
   1ffbc:	e58d300c 	str	r3, [sp, #12]
   1ffc0:	e1a06003 	mov	r6, r3
   1ffc4:	ea000003 	b	1ffd8 <StringFormatV+0x470>
   1ffc8:	e1a00005 	mov	r0, r5
   1ffcc:	e1a09001 	mov	r9, r1
   1ffd0:	eb001541 	bl	254dc <__aeabi_uidiv>
   1ffd4:	e1a08000 	mov	r8, r0
   1ffd8:	e1a00005 	mov	r0, r5
   1ffdc:	e1a01009 	mov	r1, r9
   1ffe0:	eb001541 	bl	254ec <__aeabi_uidivmod>
   1ffe4:	e3580009 	cmp	r8, #9
   1ffe8:	e6ef8078 	uxtb	r8, r8
   1ffec:	e2883030 	add	r3, r8, #48	; 0x30
   1fff0:	96af8073 	sxtbls	r8, r3
   1fff4:	e59f31fc 	ldr	r3, [pc, #508]	; 201f8 <StringFormatV+0x690>
   1fff8:	e1a05001 	mov	r5, r1
   1fffc:	e0813993 	umull	r3, r1, r3, r9
   20000:	82888057 	addhi	r8, r8, #87	; 0x57
   20004:	86af8078 	sxtbhi	r8, r8
   20008:	e3590009 	cmp	r9, #9
   2000c:	e1a011a1 	lsr	r1, r1, #3
   20010:	e4c68001 	strb	r8, [r6], #1
   20014:	8affffeb 	bhi	1ffc8 <StringFormatV+0x460>
   20018:	e3a03000 	mov	r3, #0
   2001c:	e59d000c 	ldr	r0, [sp, #12]
   20020:	e5c63000 	strb	r3, [r6]
   20024:	eb0000e5 	bl	203c0 <uspi_strlen>
   20028:	e3570000 	cmp	r7, #0
   2002c:	e1a05000 	mov	r5, r0
   20030:	0a00002f 	beq	200f4 <StringFormatV+0x58c>
   20034:	e59d3008 	ldr	r3, [sp, #8]
   20038:	e2805001 	add	r5, r0, #1
   2003c:	e3530000 	cmp	r3, #0
   20040:	1a00001a 	bne	200b0 <StringFormatV+0x548>
   20044:	e1540005 	cmp	r4, r5
   20048:	9a000003 	bls	2005c <StringFormatV+0x4f4>
   2004c:	e0442005 	sub	r2, r4, r5
   20050:	e3a01020 	mov	r1, #32
   20054:	e1a0000b 	mov	r0, fp
   20058:	ebfffe90 	bl	1faa0 <StringPutChar>
   2005c:	e3a02001 	mov	r2, #1
   20060:	e3a0102d 	mov	r1, #45	; 0x2d
   20064:	e1a0000b 	mov	r0, fp
   20068:	ebfffe8c 	bl	1faa0 <StringPutChar>
   2006c:	eaffff94 	b	1fec4 <StringFormatV+0x35c>
   20070:	e59d3004 	ldr	r3, [sp, #4]
   20074:	e4936004 	ldr	r6, [r3], #4
   20078:	e58d3004 	str	r3, [sp, #4]
   2007c:	eaffffbd 	b	1ff78 <StringFormatV+0x410>
   20080:	e1a06005 	mov	r6, r5
   20084:	e1a0500a 	mov	r5, sl
   20088:	e1a0000b 	mov	r0, fp
   2008c:	e3a02001 	mov	r2, #1
   20090:	e3a01025 	mov	r1, #37	; 0x25
   20094:	ebfffe81 	bl	1faa0 <StringPutChar>
   20098:	e1d610d0 	ldrsb	r1, [r6]
   2009c:	e3a02001 	mov	r2, #1
   200a0:	e1a0000b 	mov	r0, fp
   200a4:	e1a0a005 	mov	sl, r5
   200a8:	ebfffe7c 	bl	1faa0 <StringPutChar>
   200ac:	eafffebc 	b	1fba4 <StringFormatV+0x3c>
   200b0:	e3a02001 	mov	r2, #1
   200b4:	e3a0102d 	mov	r1, #45	; 0x2d
   200b8:	e1a0000b 	mov	r0, fp
   200bc:	ebfffe77 	bl	1faa0 <StringPutChar>
   200c0:	e59d100c 	ldr	r1, [sp, #12]
   200c4:	e1a0000b 	mov	r0, fp
   200c8:	ebfffe8e 	bl	1fb08 <StringPutString>
   200cc:	e1540005 	cmp	r4, r5
   200d0:	9afffeb3 	bls	1fba4 <StringFormatV+0x3c>
   200d4:	e0442005 	sub	r2, r4, r5
   200d8:	e3a01020 	mov	r1, #32
   200dc:	e1a0000b 	mov	r0, fp
   200e0:	ebfffe6e 	bl	1faa0 <StringPutChar>
   200e4:	eafffeae 	b	1fba4 <StringFormatV+0x3c>
   200e8:	e1a0600c 	mov	r6, ip
   200ec:	e3a04000 	mov	r4, #0
   200f0:	eafffed5 	b	1fc4c <StringFormatV+0xe4>
   200f4:	e59d3008 	ldr	r3, [sp, #8]
   200f8:	e3530000 	cmp	r3, #0
   200fc:	1affffef 	bne	200c0 <StringFormatV+0x558>
   20100:	e1540000 	cmp	r4, r0
   20104:	9affff6e 	bls	1fec4 <StringFormatV+0x35c>
   20108:	e0442000 	sub	r2, r4, r0
   2010c:	e3a01020 	mov	r1, #32
   20110:	e1a0000b 	mov	r0, fp
   20114:	ebfffe61 	bl	1faa0 <StringPutChar>
   20118:	eaffff69 	b	1fec4 <StringFormatV+0x35c>
   2011c:	e3a0700a 	mov	r7, #10
   20120:	e59d3004 	ldr	r3, [sp, #4]
   20124:	e4936004 	ldr	r6, [r3], #4
   20128:	e1560007 	cmp	r6, r7
   2012c:	e58d3004 	str	r3, [sp, #4]
   20130:	23a05001 	movcs	r5, #1
   20134:	2affff2b 	bcs	1fde8 <StringFormatV+0x280>
   20138:	e1a09006 	mov	r9, r6
   2013c:	e3a05001 	mov	r5, #1
   20140:	eaffff2f 	b	1fe04 <StringFormatV+0x29c>
   20144:	e3a07008 	mov	r7, #8
   20148:	eafffff4 	b	20120 <StringFormatV+0x5b8>
   2014c:	e3a07010 	mov	r7, #16
   20150:	eafffff2 	b	20120 <StringFormatV+0x5b8>
   20154:	e2442001 	sub	r2, r4, #1
   20158:	e3a01020 	mov	r1, #32
   2015c:	e1a0000b 	mov	r0, fp
   20160:	ebfffe4e 	bl	1faa0 <StringPutChar>
   20164:	eaffff63 	b	1fef8 <StringFormatV+0x390>
   20168:	e0442000 	sub	r2, r4, r0
   2016c:	e3a01020 	mov	r1, #32
   20170:	e1a0000b 	mov	r0, fp
   20174:	ebfffe49 	bl	1faa0 <StringPutChar>
   20178:	eaffff70 	b	1ff40 <StringFormatV+0x3d8>
   2017c:	e3a020ad 	mov	r2, #173	; 0xad
   20180:	e59f1074 	ldr	r1, [pc, #116]	; 201fc <StringFormatV+0x694>
   20184:	e59f0074 	ldr	r0, [pc, #116]	; 20200 <StringFormatV+0x698>
   20188:	eb001b7f 	bl	26f8c <uspi_assertion_failed>
   2018c:	eafffe7b 	b	1fb80 <StringFormatV+0x18>
   20190:	e1a01007 	mov	r1, r7
   20194:	e1a0000b 	mov	r0, fp
   20198:	ebfffe5a 	bl	1fb08 <StringPutString>
   2019c:	e1540008 	cmp	r4, r8
   201a0:	8a00000f 	bhi	201e4 <StringFormatV+0x67c>
   201a4:	e1a0a005 	mov	sl, r5
   201a8:	e58d6004 	str	r6, [sp, #4]
   201ac:	eafffe7c 	b	1fba4 <StringFormatV+0x3c>
   201b0:	e3a02001 	mov	r2, #1
   201b4:	e1a01007 	mov	r1, r7
   201b8:	e1a0000b 	mov	r0, fp
   201bc:	ebfffe37 	bl	1faa0 <StringPutChar>
   201c0:	e3540001 	cmp	r4, #1
   201c4:	82442001 	subhi	r2, r4, #1
   201c8:	9afffff5 	bls	201a4 <StringFormatV+0x63c>
   201cc:	e3a01020 	mov	r1, #32
   201d0:	e1a0000b 	mov	r0, fp
   201d4:	e1a0a005 	mov	sl, r5
   201d8:	e58d6004 	str	r6, [sp, #4]
   201dc:	ebfffe2f 	bl	1faa0 <StringPutChar>
   201e0:	eafffe6f 	b	1fba4 <StringFormatV+0x3c>
   201e4:	e0442008 	sub	r2, r4, r8
   201e8:	eafffff7 	b	201cc <StringFormatV+0x664>
   201ec:	e1a08006 	mov	r8, r6
   201f0:	e3a09001 	mov	r9, #1
   201f4:	eaffff6f 	b	1ffb8 <StringFormatV+0x450>
   201f8:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
   201fc:	0002af7c 	andeq	sl, r2, ip, ror pc
   20200:	00029a68 	andeq	r9, r2, r8, ror #20

00020204 <StringFormat>:
   20204:	e92d000e 	push	{r1, r2, r3}
   20208:	e92d4010 	push	{r4, lr}
   2020c:	e2504000 	subs	r4, r0, #0
   20210:	e24dd00c 	sub	sp, sp, #12
   20214:	0a000009 	beq	20240 <StringFormat+0x3c>
   20218:	e28d3018 	add	r3, sp, #24
   2021c:	e1a00004 	mov	r0, r4
   20220:	e1a02003 	mov	r2, r3
   20224:	e59d1014 	ldr	r1, [sp, #20]
   20228:	e58d3004 	str	r3, [sp, #4]
   2022c:	ebfffe4d 	bl	1fb68 <StringFormatV>
   20230:	e28dd00c 	add	sp, sp, #12
   20234:	e8bd4010 	pop	{r4, lr}
   20238:	e28dd00c 	add	sp, sp, #12
   2023c:	e12fff1e 	bx	lr
   20240:	e3a020a1 	mov	r2, #161	; 0xa1
   20244:	e59f1008 	ldr	r1, [pc, #8]	; 20254 <StringFormat+0x50>
   20248:	e59f0008 	ldr	r0, [pc, #8]	; 20258 <StringFormat+0x54>
   2024c:	eb001b4e 	bl	26f8c <uspi_assertion_failed>
   20250:	eafffff0 	b	20218 <StringFormat+0x14>
   20254:	0002af7c 	andeq	sl, r2, ip, ror pc
   20258:	00029a68 	andeq	r9, r2, r8, ror #20

0002025c <ntoa>:
   2025c:	e1510002 	cmp	r1, r2
   20260:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20264:	e1a06001 	mov	r6, r1
   20268:	e1a07002 	mov	r7, r2
   2026c:	e1a0a000 	mov	sl, r0
   20270:	e1a08003 	mov	r8, r3
   20274:	23a05001 	movcs	r5, #1
   20278:	3a000024 	bcc	20310 <ntoa+0xb4>
   2027c:	e0050597 	mul	r5, r7, r5
   20280:	e1a00006 	mov	r0, r6
   20284:	e1a01005 	mov	r1, r5
   20288:	eb001493 	bl	254dc <__aeabi_uidiv>
   2028c:	e1500007 	cmp	r0, r7
   20290:	e1a04000 	mov	r4, r0
   20294:	2afffff8 	bcs	2027c <ntoa+0x20>
   20298:	e3580000 	cmp	r8, #0
   2029c:	13a09037 	movne	r9, #55	; 0x37
   202a0:	03a09057 	moveq	r9, #87	; 0x57
   202a4:	e1a0800a 	mov	r8, sl
   202a8:	ea000004 	b	202c0 <ntoa+0x64>
   202ac:	e1a01000 	mov	r1, r0
   202b0:	e1a00006 	mov	r0, r6
   202b4:	e1a05001 	mov	r5, r1
   202b8:	eb001487 	bl	254dc <__aeabi_uidiv>
   202bc:	e1a04000 	mov	r4, r0
   202c0:	e1a00006 	mov	r0, r6
   202c4:	e1a01005 	mov	r1, r5
   202c8:	eb001487 	bl	254ec <__aeabi_uidivmod>
   202cc:	e3540009 	cmp	r4, #9
   202d0:	e6ef4074 	uxtb	r4, r4
   202d4:	e2843030 	add	r3, r4, #48	; 0x30
   202d8:	80844009 	addhi	r4, r4, r9
   202dc:	96af4073 	sxtbls	r4, r3
   202e0:	86af4074 	sxtbhi	r4, r4
   202e4:	e1a06001 	mov	r6, r1
   202e8:	e4c84001 	strb	r4, [r8], #1
   202ec:	e1a01007 	mov	r1, r7
   202f0:	e1a00005 	mov	r0, r5
   202f4:	eb001478 	bl	254dc <__aeabi_uidiv>
   202f8:	e1550007 	cmp	r5, r7
   202fc:	2affffea 	bcs	202ac <ntoa+0x50>
   20300:	e3a03000 	mov	r3, #0
   20304:	e1a0000a 	mov	r0, sl
   20308:	e5c83000 	strb	r3, [r8]
   2030c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20310:	e1a04001 	mov	r4, r1
   20314:	e3a05001 	mov	r5, #1
   20318:	eaffffde 	b	20298 <ntoa+0x3c>

0002031c <uspi_memset>:
   2031c:	e3520000 	cmp	r2, #0
   20320:	012fff1e 	bxeq	lr
   20324:	e1a03000 	mov	r3, r0
   20328:	e6af1071 	sxtb	r1, r1
   2032c:	e0802002 	add	r2, r0, r2
   20330:	e4c31001 	strb	r1, [r3], #1
   20334:	e1530002 	cmp	r3, r2
   20338:	1afffffc 	bne	20330 <uspi_memset+0x14>
   2033c:	e12fff1e 	bx	lr

00020340 <uspi_memcpy>:
   20340:	e3520000 	cmp	r2, #0
   20344:	012fff1e 	bxeq	lr
   20348:	e0812002 	add	r2, r1, r2
   2034c:	e2403001 	sub	r3, r0, #1
   20350:	e0d1c0d1 	ldrsb	ip, [r1], #1
   20354:	e1510002 	cmp	r1, r2
   20358:	e5e3c001 	strb	ip, [r3, #1]!
   2035c:	1afffffb 	bne	20350 <uspi_memcpy+0x10>
   20360:	e12fff1e 	bx	lr

00020364 <uspi_memcmp>:
   20364:	e3520000 	cmp	r2, #0
   20368:	e242c001 	sub	ip, r2, #1
   2036c:	0a00000d 	beq	203a8 <uspi_memcmp+0x44>
   20370:	e5d02000 	ldrb	r2, [r0]
   20374:	e5d13000 	ldrb	r3, [r1]
   20378:	e1520003 	cmp	r2, r3
   2037c:	8a00000b 	bhi	203b0 <uspi_memcmp+0x4c>
   20380:	3a00000c 	bcc	203b8 <uspi_memcmp+0x54>
   20384:	e081c00c 	add	ip, r1, ip
   20388:	ea000004 	b	203a0 <uspi_memcmp+0x3c>
   2038c:	e5f02001 	ldrb	r2, [r0, #1]!
   20390:	e5f13001 	ldrb	r3, [r1, #1]!
   20394:	e1520003 	cmp	r2, r3
   20398:	8a000004 	bhi	203b0 <uspi_memcmp+0x4c>
   2039c:	3a000005 	bcc	203b8 <uspi_memcmp+0x54>
   203a0:	e151000c 	cmp	r1, ip
   203a4:	1afffff8 	bne	2038c <uspi_memcmp+0x28>
   203a8:	e3a00000 	mov	r0, #0
   203ac:	e12fff1e 	bx	lr
   203b0:	e3a00001 	mov	r0, #1
   203b4:	e12fff1e 	bx	lr
   203b8:	e3e00000 	mvn	r0, #0
   203bc:	e12fff1e 	bx	lr

000203c0 <uspi_strlen>:
   203c0:	e0d030d1 	ldrsb	r3, [r0], #1
   203c4:	e3530000 	cmp	r3, #0
   203c8:	0a000004 	beq	203e0 <uspi_strlen+0x20>
   203cc:	e3a03000 	mov	r3, #0
   203d0:	e0d020d1 	ldrsb	r2, [r0], #1
   203d4:	e2833001 	add	r3, r3, #1
   203d8:	e3520000 	cmp	r2, #0
   203dc:	1afffffb 	bne	203d0 <uspi_strlen+0x10>
   203e0:	e1a00003 	mov	r0, r3
   203e4:	e12fff1e 	bx	lr

000203e8 <uspi_strcmp>:
   203e8:	e1d030d0 	ldrsb	r3, [r0]
   203ec:	e1d120d0 	ldrsb	r2, [r1]
   203f0:	e3530000 	cmp	r3, #0
   203f4:	0a00000e 	beq	20434 <uspi_strcmp+0x4c>
   203f8:	e3520000 	cmp	r2, #0
   203fc:	0a00000c 	beq	20434 <uspi_strcmp+0x4c>
   20400:	e1520003 	cmp	r2, r3
   20404:	ba00000f 	blt	20448 <uspi_strcmp+0x60>
   20408:	da000005 	ble	20424 <uspi_strcmp+0x3c>
   2040c:	ea00000f 	b	20450 <uspi_strcmp+0x68>
   20410:	e3520000 	cmp	r2, #0
   20414:	0a000006 	beq	20434 <uspi_strcmp+0x4c>
   20418:	e1530002 	cmp	r3, r2
   2041c:	ca000009 	bgt	20448 <uspi_strcmp+0x60>
   20420:	ba00000a 	blt	20450 <uspi_strcmp+0x68>
   20424:	e1f030d1 	ldrsb	r3, [r0, #1]!
   20428:	e1f120d1 	ldrsb	r2, [r1, #1]!
   2042c:	e3530000 	cmp	r3, #0
   20430:	1afffff6 	bne	20410 <uspi_strcmp+0x28>
   20434:	e1530002 	cmp	r3, r2
   20438:	ca000002 	bgt	20448 <uspi_strcmp+0x60>
   2043c:	b3e00000 	mvnlt	r0, #0
   20440:	a3a00000 	movge	r0, #0
   20444:	e12fff1e 	bx	lr
   20448:	e3a00001 	mov	r0, #1
   2044c:	e12fff1e 	bx	lr
   20450:	e3e00000 	mvn	r0, #0
   20454:	e12fff1e 	bx	lr

00020458 <uspi_strcpy>:
   20458:	e1d130d0 	ldrsb	r3, [r1]
   2045c:	e1a02000 	mov	r2, r0
   20460:	e3530000 	cmp	r3, #0
   20464:	0a000003 	beq	20478 <uspi_strcpy+0x20>
   20468:	e4c23001 	strb	r3, [r2], #1
   2046c:	e1f130d1 	ldrsb	r3, [r1, #1]!
   20470:	e3530000 	cmp	r3, #0
   20474:	1afffffb 	bne	20468 <uspi_strcpy+0x10>
   20478:	e3a03000 	mov	r3, #0
   2047c:	e5c23000 	strb	r3, [r2]
   20480:	e12fff1e 	bx	lr

00020484 <uspi_strncpy>:
   20484:	e3520000 	cmp	r2, #0
   20488:	012fff1e 	bxeq	lr
   2048c:	e1d1c0d0 	ldrsb	ip, [r1]
   20490:	e35c0000 	cmp	ip, #0
   20494:	0a00000a 	beq	204c4 <uspi_strncpy+0x40>
   20498:	e1a03000 	mov	r3, r0
   2049c:	e0802002 	add	r2, r0, r2
   204a0:	e4c3c001 	strb	ip, [r3], #1
   204a4:	e1530002 	cmp	r3, r2
   204a8:	012fff1e 	bxeq	lr
   204ac:	e1f1c0d1 	ldrsb	ip, [r1, #1]!
   204b0:	e35c0000 	cmp	ip, #0
   204b4:	1afffff9 	bne	204a0 <uspi_strncpy+0x1c>
   204b8:	e3a02000 	mov	r2, #0
   204bc:	e5c32000 	strb	r2, [r3]
   204c0:	e12fff1e 	bx	lr
   204c4:	e1a03000 	mov	r3, r0
   204c8:	eafffffa 	b	204b8 <uspi_strncpy+0x34>

000204cc <uspi_strcat>:
   204cc:	e1d030d0 	ldrsb	r3, [r0]
   204d0:	e3530000 	cmp	r3, #0
   204d4:	e1a03000 	mov	r3, r0
   204d8:	0a000002 	beq	204e8 <uspi_strcat+0x1c>
   204dc:	e1f320d1 	ldrsb	r2, [r3, #1]!
   204e0:	e3520000 	cmp	r2, #0
   204e4:	1afffffc 	bne	204dc <uspi_strcat+0x10>
   204e8:	e1d120d0 	ldrsb	r2, [r1]
   204ec:	e3520000 	cmp	r2, #0
   204f0:	0a000003 	beq	20504 <uspi_strcat+0x38>
   204f4:	e4c32001 	strb	r2, [r3], #1
   204f8:	e1f120d1 	ldrsb	r2, [r1, #1]!
   204fc:	e3520000 	cmp	r2, #0
   20500:	1afffffb 	bne	204f4 <uspi_strcat+0x28>
   20504:	e3a02000 	mov	r2, #0
   20508:	e5c32000 	strb	r2, [r3]
   2050c:	e12fff1e 	bx	lr

00020510 <uspi_char2int>:
   20510:	e12fff1e 	bx	lr

00020514 <uspi_le2be16>:
   20514:	e6bf0fb0 	rev16	r0, r0
   20518:	e6ff0070 	uxth	r0, r0
   2051c:	e12fff1e 	bx	lr

00020520 <uspi_le2be32>:
   20520:	e6bf0f30 	rev	r0, r0
   20524:	e12fff1e 	bx	lr

00020528 <USBBulkOnlyMassStorageDevice>:
   20528:	e92d4070 	push	{r4, r5, r6, lr}
   2052c:	e2504000 	subs	r4, r0, #0
   20530:	e1a05001 	mov	r5, r1
   20534:	0a00000d 	beq	20570 <USBBulkOnlyMassStorageDevice+0x48>
   20538:	e1a01005 	mov	r1, r5
   2053c:	e1a00004 	mov	r0, r4
   20540:	ebfff34b 	bl	1d274 <USBFunctionCopy>
   20544:	e3a03000 	mov	r3, #0
   20548:	e3a00000 	mov	r0, #0
   2054c:	e3a01000 	mov	r1, #0
   20550:	e59f202c 	ldr	r2, [pc, #44]	; 20584 <USBBulkOnlyMassStorageDevice+0x5c>
   20554:	e1c402f0 	strd	r0, [r4, #32]
   20558:	e5843010 	str	r3, [r4, #16]
   2055c:	e5843014 	str	r3, [r4, #20]
   20560:	e5843018 	str	r3, [r4, #24]
   20564:	e584301c 	str	r3, [r4, #28]
   20568:	e5842000 	str	r2, [r4]
   2056c:	e8bd8070 	pop	{r4, r5, r6, pc}
   20570:	e3a020c8 	mov	r2, #200	; 0xc8
   20574:	e59f100c 	ldr	r1, [pc, #12]	; 20588 <USBBulkOnlyMassStorageDevice+0x60>
   20578:	e59f000c 	ldr	r0, [pc, #12]	; 2058c <USBBulkOnlyMassStorageDevice+0x64>
   2057c:	eb001a82 	bl	26f8c <uspi_assertion_failed>
   20580:	eaffffec 	b	20538 <USBBulkOnlyMassStorageDevice+0x10>
   20584:	00020944 	andeq	r0, r2, r4, asr #18
   20588:	0002af88 	andeq	sl, r2, r8, lsl #31
   2058c:	00029a68 	andeq	r9, r2, r8, ror #20

00020590 <_USBBulkOnlyMassStorageDevice>:
   20590:	e92d4010 	push	{r4, lr}
   20594:	e2504000 	subs	r4, r0, #0
   20598:	0a000012 	beq	205e8 <_USBBulkOnlyMassStorageDevice+0x58>
   2059c:	e5940014 	ldr	r0, [r4, #20]
   205a0:	e3500000 	cmp	r0, #0
   205a4:	0a000004 	beq	205bc <_USBBulkOnlyMassStorageDevice+0x2c>
   205a8:	ebffecb2 	bl	1b878 <_USBEndpoint>
   205ac:	e5940014 	ldr	r0, [r4, #20]
   205b0:	eb0012c4 	bl	250c8 <free>
   205b4:	e3a03000 	mov	r3, #0
   205b8:	e5843014 	str	r3, [r4, #20]
   205bc:	e5940010 	ldr	r0, [r4, #16]
   205c0:	e3500000 	cmp	r0, #0
   205c4:	0a000004 	beq	205dc <_USBBulkOnlyMassStorageDevice+0x4c>
   205c8:	ebffecaa 	bl	1b878 <_USBEndpoint>
   205cc:	e5940010 	ldr	r0, [r4, #16]
   205d0:	eb0012bc 	bl	250c8 <free>
   205d4:	e3a03000 	mov	r3, #0
   205d8:	e5843010 	str	r3, [r4, #16]
   205dc:	e1a00004 	mov	r0, r4
   205e0:	e8bd4010 	pop	{r4, lr}
   205e4:	eafff364 	b	1d37c <_USBFunction>
   205e8:	e3a020d6 	mov	r2, #214	; 0xd6
   205ec:	e59f1008 	ldr	r1, [pc, #8]	; 205fc <_USBBulkOnlyMassStorageDevice+0x6c>
   205f0:	e59f0008 	ldr	r0, [pc, #8]	; 20600 <_USBBulkOnlyMassStorageDevice+0x70>
   205f4:	eb001a64 	bl	26f8c <uspi_assertion_failed>
   205f8:	eaffffe7 	b	2059c <_USBBulkOnlyMassStorageDevice+0xc>
   205fc:	0002af88 	andeq	sl, r2, r8, lsl #31
   20600:	00029a68 	andeq	r9, r2, r8, ror #20

00020604 <USBBulkOnlyMassStorageDeviceSeek>:
   20604:	e92d4070 	push	{r4, r5, r6, lr}
   20608:	e2506000 	subs	r6, r0, #0
   2060c:	e1a04002 	mov	r4, r2
   20610:	e1a05003 	mov	r5, r3
   20614:	0a000003 	beq	20628 <USBBulkOnlyMassStorageDeviceSeek+0x24>
   20618:	e1c642f0 	strd	r4, [r6, #32]
   2061c:	e1a00004 	mov	r0, r4
   20620:	e1a01005 	mov	r1, r5
   20624:	e8bd8070 	pop	{r4, r5, r6, pc}
   20628:	e59f200c 	ldr	r2, [pc, #12]	; 2063c <USBBulkOnlyMassStorageDeviceSeek+0x38>
   2062c:	e59f100c 	ldr	r1, [pc, #12]	; 20640 <USBBulkOnlyMassStorageDeviceSeek+0x3c>
   20630:	e59f000c 	ldr	r0, [pc, #12]	; 20644 <USBBulkOnlyMassStorageDeviceSeek+0x40>
   20634:	eb001a54 	bl	26f8c <uspi_assertion_failed>
   20638:	eafffff6 	b	20618 <USBBulkOnlyMassStorageDeviceSeek+0x14>
   2063c:	000001d3 	ldrdeq	r0, [r0], -r3
   20640:	0002af88 	andeq	sl, r2, r8, lsl #31
   20644:	00029a68 	andeq	r9, r2, r8, ror #20

00020648 <USBBulkOnlyMassStorageDeviceGetCapacity>:
   20648:	e92d4010 	push	{r4, lr}
   2064c:	e2504000 	subs	r4, r0, #0
   20650:	0a000001 	beq	2065c <USBBulkOnlyMassStorageDeviceGetCapacity+0x14>
   20654:	e594001c 	ldr	r0, [r4, #28]
   20658:	e8bd8010 	pop	{r4, pc}
   2065c:	e3a02f77 	mov	r2, #476	; 0x1dc
   20660:	e59f100c 	ldr	r1, [pc, #12]	; 20674 <USBBulkOnlyMassStorageDeviceGetCapacity+0x2c>
   20664:	e59f000c 	ldr	r0, [pc, #12]	; 20678 <USBBulkOnlyMassStorageDeviceGetCapacity+0x30>
   20668:	eb001a47 	bl	26f8c <uspi_assertion_failed>
   2066c:	e594001c 	ldr	r0, [r4, #28]
   20670:	e8bd8010 	pop	{r4, pc}
   20674:	0002af88 	andeq	sl, r2, r8, lsl #31
   20678:	00029a68 	andeq	r9, r2, r8, ror #20

0002067c <USBBulkOnlyMassStorageDeviceCommand>:
   2067c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   20680:	e2504000 	subs	r4, r0, #0
   20684:	e24dd034 	sub	sp, sp, #52	; 0x34
   20688:	e1a07001 	mov	r7, r1
   2068c:	e1a06002 	mov	r6, r2
   20690:	e1a09003 	mov	r9, r3
   20694:	e59d5050 	ldr	r5, [sp, #80]	; 0x50
   20698:	e59d8054 	ldr	r8, [sp, #84]	; 0x54
   2069c:	0a00005e 	beq	2081c <USBBulkOnlyMassStorageDeviceCommand+0x1a0>
   206a0:	e3570000 	cmp	r7, #0
   206a4:	0a000062 	beq	20834 <USBBulkOnlyMassStorageDeviceCommand+0x1b8>
   206a8:	e2463006 	sub	r3, r6, #6
   206ac:	e353000a 	cmp	r3, #10
   206b0:	8a00004f 	bhi	207f4 <USBBulkOnlyMassStorageDeviceCommand+0x178>
   206b4:	e16f3f19 	clz	r3, r9
   206b8:	e3550000 	cmp	r5, #0
   206bc:	e1a032a3 	lsr	r3, r3, #5
   206c0:	03a03000 	moveq	r3, #0
   206c4:	e3530000 	cmp	r3, #0
   206c8:	1a00004e 	bne	20808 <USBBulkOnlyMassStorageDeviceCommand+0x18c>
   206cc:	e3a0201f 	mov	r2, #31
   206d0:	e3a01000 	mov	r1, #0
   206d4:	e28d0010 	add	r0, sp, #16
   206d8:	ebffff0f 	bl	2031c <uspi_memset>
   206dc:	e3580000 	cmp	r8, #0
   206e0:	13a0e080 	movne	lr, #128	; 0x80
   206e4:	03a0e000 	moveq	lr, #0
   206e8:	e5943018 	ldr	r3, [r4, #24]
   206ec:	e5ddc01d 	ldrb	ip, [sp, #29]
   206f0:	e2833001 	add	r3, r3, #1
   206f4:	e5843018 	str	r3, [r4, #24]
   206f8:	e5dd201e 	ldrb	r2, [sp, #30]
   206fc:	e206001f 	and	r0, r6, #31
   20700:	e3c2201f 	bic	r2, r2, #31
   20704:	e1800002 	orr	r0, r0, r2
   20708:	e58d3014 	str	r3, [sp, #20]
   2070c:	e59f31e0 	ldr	r3, [pc, #480]	; 208f4 <USBBulkOnlyMassStorageDeviceCommand+0x278>
   20710:	e1a02006 	mov	r2, r6
   20714:	e3ccc00f 	bic	ip, ip, #15
   20718:	e1a01007 	mov	r1, r7
   2071c:	e5cd001e 	strb	r0, [sp, #30]
   20720:	e28d001f 	add	r0, sp, #31
   20724:	e5cde01c 	strb	lr, [sp, #28]
   20728:	e5cdc01d 	strb	ip, [sp, #29]
   2072c:	e58d3010 	str	r3, [sp, #16]
   20730:	e58d5018 	str	r5, [sp, #24]
   20734:	ebffff01 	bl	20340 <uspi_memcpy>
   20738:	e1a00004 	mov	r0, r4
   2073c:	ebfff399 	bl	1d5a8 <USBFunctionGetHost>
   20740:	e2506000 	subs	r6, r0, #0
   20744:	0a00003f 	beq	20848 <USBBulkOnlyMassStorageDeviceCommand+0x1cc>
   20748:	e28d2010 	add	r2, sp, #16
   2074c:	e3a0301f 	mov	r3, #31
   20750:	e5941014 	ldr	r1, [r4, #20]
   20754:	e1a00006 	mov	r0, r6
   20758:	ebffdc84 	bl	17970 <DWHCIDeviceTransfer>
   2075c:	e3500000 	cmp	r0, #0
   20760:	ba000057 	blt	208c4 <USBBulkOnlyMassStorageDeviceCommand+0x248>
   20764:	e3550000 	cmp	r5, #0
   20768:	e5941010 	ldr	r1, [r4, #16]
   2076c:	0a000009 	beq	20798 <USBBulkOnlyMassStorageDeviceCommand+0x11c>
   20770:	e5940014 	ldr	r0, [r4, #20]
   20774:	e3580000 	cmp	r8, #0
   20778:	01a01000 	moveq	r1, r0
   2077c:	e1a03005 	mov	r3, r5
   20780:	e1a02009 	mov	r2, r9
   20784:	e1a00006 	mov	r0, r6
   20788:	ebffdc78 	bl	17970 <DWHCIDeviceTransfer>
   2078c:	e2505000 	subs	r5, r0, #0
   20790:	ba000051 	blt	208dc <USBBulkOnlyMassStorageDeviceCommand+0x260>
   20794:	e5941010 	ldr	r1, [r4, #16]
   20798:	e1a00006 	mov	r0, r6
   2079c:	e3a0300d 	mov	r3, #13
   207a0:	e1a0200d 	mov	r2, sp
   207a4:	ebffdc71 	bl	17970 <DWHCIDeviceTransfer>
   207a8:	e350000d 	cmp	r0, #13
   207ac:	1a00002c 	bne	20864 <USBBulkOnlyMassStorageDeviceCommand+0x1e8>
   207b0:	e59f3140 	ldr	r3, [pc, #320]	; 208f8 <USBBulkOnlyMassStorageDeviceCommand+0x27c>
   207b4:	e59d2000 	ldr	r2, [sp]
   207b8:	e1520003 	cmp	r2, r3
   207bc:	1a00002e 	bne	2087c <USBBulkOnlyMassStorageDeviceCommand+0x200>
   207c0:	e5943018 	ldr	r3, [r4, #24]
   207c4:	e59d2004 	ldr	r2, [sp, #4]
   207c8:	e1520003 	cmp	r2, r3
   207cc:	1a000030 	bne	20894 <USBBulkOnlyMassStorageDeviceCommand+0x218>
   207d0:	e5dd300c 	ldrb	r3, [sp, #12]
   207d4:	e3530000 	cmp	r3, #0
   207d8:	1a00001f 	bne	2085c <USBBulkOnlyMassStorageDeviceCommand+0x1e0>
   207dc:	e59d3008 	ldr	r3, [sp, #8]
   207e0:	e3530000 	cmp	r3, #0
   207e4:	1a000030 	bne	208ac <USBBulkOnlyMassStorageDeviceCommand+0x230>
   207e8:	e1a00005 	mov	r0, r5
   207ec:	e28dd034 	add	sp, sp, #52	; 0x34
   207f0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   207f4:	e59f2100 	ldr	r2, [pc, #256]	; 208fc <USBBulkOnlyMassStorageDeviceCommand+0x280>
   207f8:	e59f1100 	ldr	r1, [pc, #256]	; 20900 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   207fc:	e59f0100 	ldr	r0, [pc, #256]	; 20904 <USBBulkOnlyMassStorageDeviceCommand+0x288>
   20800:	eb0019e1 	bl	26f8c <uspi_assertion_failed>
   20804:	eaffffaa 	b	206b4 <USBBulkOnlyMassStorageDeviceCommand+0x38>
   20808:	e59f20f8 	ldr	r2, [pc, #248]	; 20908 <USBBulkOnlyMassStorageDeviceCommand+0x28c>
   2080c:	e59f10ec 	ldr	r1, [pc, #236]	; 20900 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   20810:	e59f00f4 	ldr	r0, [pc, #244]	; 2090c <USBBulkOnlyMassStorageDeviceCommand+0x290>
   20814:	eb0019dc 	bl	26f8c <uspi_assertion_failed>
   20818:	eaffffab 	b	206cc <USBBulkOnlyMassStorageDeviceCommand+0x50>
   2081c:	e59f20ec 	ldr	r2, [pc, #236]	; 20910 <USBBulkOnlyMassStorageDeviceCommand+0x294>
   20820:	e59f10d8 	ldr	r1, [pc, #216]	; 20900 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   20824:	e59f00e8 	ldr	r0, [pc, #232]	; 20914 <USBBulkOnlyMassStorageDeviceCommand+0x298>
   20828:	eb0019d7 	bl	26f8c <uspi_assertion_failed>
   2082c:	e3570000 	cmp	r7, #0
   20830:	1affff9c 	bne	206a8 <USBBulkOnlyMassStorageDeviceCommand+0x2c>
   20834:	e59f20dc 	ldr	r2, [pc, #220]	; 20918 <USBBulkOnlyMassStorageDeviceCommand+0x29c>
   20838:	e59f10c0 	ldr	r1, [pc, #192]	; 20900 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   2083c:	e59f00d8 	ldr	r0, [pc, #216]	; 2091c <USBBulkOnlyMassStorageDeviceCommand+0x2a0>
   20840:	eb0019d1 	bl	26f8c <uspi_assertion_failed>
   20844:	eaffff97 	b	206a8 <USBBulkOnlyMassStorageDeviceCommand+0x2c>
   20848:	e59f20d0 	ldr	r2, [pc, #208]	; 20920 <USBBulkOnlyMassStorageDeviceCommand+0x2a4>
   2084c:	e59f10ac 	ldr	r1, [pc, #172]	; 20900 <USBBulkOnlyMassStorageDeviceCommand+0x284>
   20850:	e59f00cc 	ldr	r0, [pc, #204]	; 20924 <USBBulkOnlyMassStorageDeviceCommand+0x2a8>
   20854:	eb0019cc 	bl	26f8c <uspi_assertion_failed>
   20858:	eaffffba 	b	20748 <USBBulkOnlyMassStorageDeviceCommand+0xcc>
   2085c:	e3e05000 	mvn	r5, #0
   20860:	eaffffe0 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   20864:	e59f20bc 	ldr	r2, [pc, #188]	; 20928 <USBBulkOnlyMassStorageDeviceCommand+0x2ac>
   20868:	e3a01001 	mov	r1, #1
   2086c:	e59f00b8 	ldr	r0, [pc, #184]	; 2092c <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   20870:	eb0019b3 	bl	26f44 <LogWrite>
   20874:	e3e05000 	mvn	r5, #0
   20878:	eaffffda 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   2087c:	e59f20ac 	ldr	r2, [pc, #172]	; 20930 <USBBulkOnlyMassStorageDeviceCommand+0x2b4>
   20880:	e3a01001 	mov	r1, #1
   20884:	e59f00a0 	ldr	r0, [pc, #160]	; 2092c <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   20888:	eb0019ad 	bl	26f44 <LogWrite>
   2088c:	e3e05000 	mvn	r5, #0
   20890:	eaffffd4 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   20894:	e59f2098 	ldr	r2, [pc, #152]	; 20934 <USBBulkOnlyMassStorageDeviceCommand+0x2b8>
   20898:	e3a01001 	mov	r1, #1
   2089c:	e59f0088 	ldr	r0, [pc, #136]	; 2092c <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   208a0:	eb0019a7 	bl	26f44 <LogWrite>
   208a4:	e3e05000 	mvn	r5, #0
   208a8:	eaffffce 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   208ac:	e59f2084 	ldr	r2, [pc, #132]	; 20938 <USBBulkOnlyMassStorageDeviceCommand+0x2bc>
   208b0:	e3a01001 	mov	r1, #1
   208b4:	e59f0070 	ldr	r0, [pc, #112]	; 2092c <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   208b8:	eb0019a1 	bl	26f44 <LogWrite>
   208bc:	e3e05000 	mvn	r5, #0
   208c0:	eaffffc8 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   208c4:	e59f2070 	ldr	r2, [pc, #112]	; 2093c <USBBulkOnlyMassStorageDeviceCommand+0x2c0>
   208c8:	e3a01001 	mov	r1, #1
   208cc:	e59f0058 	ldr	r0, [pc, #88]	; 2092c <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   208d0:	eb00199b 	bl	26f44 <LogWrite>
   208d4:	e3e05000 	mvn	r5, #0
   208d8:	eaffffc2 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   208dc:	e59f205c 	ldr	r2, [pc, #92]	; 20940 <USBBulkOnlyMassStorageDeviceCommand+0x2c4>
   208e0:	e3a01001 	mov	r1, #1
   208e4:	e59f0040 	ldr	r0, [pc, #64]	; 2092c <USBBulkOnlyMassStorageDeviceCommand+0x2b0>
   208e8:	eb001995 	bl	26f44 <LogWrite>
   208ec:	e3e05000 	mvn	r5, #0
   208f0:	eaffffbc 	b	207e8 <USBBulkOnlyMassStorageDeviceCommand+0x16c>
   208f4:	43425355 	movtmi	r5, #9045	; 0x2355
   208f8:	53425355 	movtpl	r5, #9045	; 0x2355
   208fc:	0000023a 	andeq	r0, r0, sl, lsr r2
   20900:	0002af88 	andeq	sl, r2, r8, lsl #31
   20904:	0002afa8 	andeq	sl, r2, r8, lsr #31
   20908:	0000023b 	andeq	r0, r0, fp, lsr r2
   2090c:	0002afcc 	andeq	sl, r2, ip, asr #31
   20910:	00000237 	andeq	r0, r0, r7, lsr r2
   20914:	00029a68 	andeq	r9, r2, r8, ror #20
   20918:	00000239 	andeq	r0, r0, r9, lsr r2
   2091c:	0002af98 	muleq	r2, r8, pc	; <UNPREDICTABLE>
   20920:	0000024a 	andeq	r0, r0, sl, asr #4
   20924:	0002a884 	andeq	sl, r2, r4, lsl #17
   20928:	0002b018 	andeq	fp, r2, r8, lsl r0
   2092c:	00028590 	muleq	r2, r0, r5
   20930:	0002b02c 	andeq	fp, r2, ip, lsr #32
   20934:	0002b044 	andeq	fp, r2, r4, asr #32
   20938:	0002b058 	andeq	fp, r2, r8, asr r0
   2093c:	0002afec 	andeq	sl, r2, ip, ror #31
   20940:	0002b000 	andeq	fp, r2, r0

00020944 <USBBulkOnlyMassStorageDeviceConfigure>:
   20944:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   20948:	e2505000 	subs	r5, r0, #0
   2094c:	e24dd064 	sub	sp, sp, #100	; 0x64
   20950:	0a00009e 	beq	20bd0 <USBBulkOnlyMassStorageDeviceConfigure+0x28c>
   20954:	e1a00005 	mov	r0, r5
   20958:	ebfff2cc 	bl	1d490 <USBFunctionGetNumEndpoints>
   2095c:	e3500001 	cmp	r0, #1
   20960:	9a000093 	bls	20bb4 <USBBulkOnlyMassStorageDeviceConfigure+0x270>
   20964:	e59f7390 	ldr	r7, [pc, #912]	; 20cfc <USBBulkOnlyMassStorageDeviceConfigure+0x3b8>
   20968:	e59f8390 	ldr	r8, [pc, #912]	; 20d00 <USBBulkOnlyMassStorageDeviceConfigure+0x3bc>
   2096c:	e59f9390 	ldr	r9, [pc, #912]	; 20d04 <USBBulkOnlyMassStorageDeviceConfigure+0x3c0>
   20970:	ea000003 	b	20984 <USBBulkOnlyMassStorageDeviceConfigure+0x40>
   20974:	e5d43003 	ldrb	r3, [r4, #3]
   20978:	e203303f 	and	r3, r3, #63	; 0x3f
   2097c:	e3530002 	cmp	r3, #2
   20980:	0a000027 	beq	20a24 <USBBulkOnlyMassStorageDeviceConfigure+0xe0>
   20984:	e3a01005 	mov	r1, #5
   20988:	e1a00005 	mov	r0, r5
   2098c:	ebfff357 	bl	1d6f0 <USBFunctionGetDescriptor>
   20990:	e2504000 	subs	r4, r0, #0
   20994:	1afffff6 	bne	20974 <USBBulkOnlyMassStorageDeviceConfigure+0x30>
   20998:	e5953010 	ldr	r3, [r5, #16]
   2099c:	e1a00005 	mov	r0, r5
   209a0:	e3530000 	cmp	r3, #0
   209a4:	0a000075 	beq	20b80 <USBBulkOnlyMassStorageDeviceConfigure+0x23c>
   209a8:	e5953014 	ldr	r3, [r5, #20]
   209ac:	e3530000 	cmp	r3, #0
   209b0:	0a000072 	beq	20b80 <USBBulkOnlyMassStorageDeviceConfigure+0x23c>
   209b4:	ebfff314 	bl	1d60c <USBFunctionConfigure>
   209b8:	e2506000 	subs	r6, r0, #0
   209bc:	0a000075 	beq	20b98 <USBBulkOnlyMassStorageDeviceConfigure+0x254>
   209c0:	e3a00024 	mov	r0, #36	; 0x24
   209c4:	e3a06001 	mov	r6, #1
   209c8:	e3a0c012 	mov	ip, #18
   209cc:	e88d0041 	stm	sp, {r0, r6}
   209d0:	e1cd01b0 	strh	r0, [sp, #16]
   209d4:	e28d303c 	add	r3, sp, #60	; 0x3c
   209d8:	e3a02006 	mov	r2, #6
   209dc:	e28d100c 	add	r1, sp, #12
   209e0:	e1a00005 	mov	r0, r5
   209e4:	e58dc00c 	str	ip, [sp, #12]
   209e8:	ebffff23 	bl	2067c <USBBulkOnlyMassStorageDeviceCommand>
   209ec:	e3500024 	cmp	r0, #36	; 0x24
   209f0:	1a00007b 	bne	20be4 <USBBulkOnlyMassStorageDeviceConfigure+0x2a0>
   209f4:	e5dd303c 	ldrb	r3, [sp, #60]	; 0x3c
   209f8:	e213301f 	ands	r3, r3, #31
   209fc:	01a04003 	moveq	r4, r3
   20a00:	03a06063 	moveq	r6, #99	; 0x63
   20a04:	03a08003 	moveq	r8, #3
   20a08:	0a000028 	beq	20ab0 <USBBulkOnlyMassStorageDeviceConfigure+0x16c>
   20a0c:	e1a01006 	mov	r1, r6
   20a10:	e59f22f0 	ldr	r2, [pc, #752]	; 20d08 <USBBulkOnlyMassStorageDeviceConfigure+0x3c4>
   20a14:	e59f02f0 	ldr	r0, [pc, #752]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20a18:	e1a06004 	mov	r6, r4
   20a1c:	eb001948 	bl	26f44 <LogWrite>
   20a20:	ea000059 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20a24:	e1d430d2 	ldrsb	r3, [r4, #2]
   20a28:	e3530000 	cmp	r3, #0
   20a2c:	ba000044 	blt	20b44 <USBBulkOnlyMassStorageDeviceConfigure+0x200>
   20a30:	e5953014 	ldr	r3, [r5, #20]
   20a34:	e3530000 	cmp	r3, #0
   20a38:	1a00005d 	bne	20bb4 <USBBulkOnlyMassStorageDeviceConfigure+0x270>
   20a3c:	e3a00018 	mov	r0, #24
   20a40:	eb00113a 	bl	24f30 <malloc>
   20a44:	e3500000 	cmp	r0, #0
   20a48:	e1a06000 	mov	r6, r0
   20a4c:	e5850014 	str	r0, [r5, #20]
   20a50:	0a000071 	beq	20c1c <USBBulkOnlyMassStorageDeviceConfigure+0x2d8>
   20a54:	e1a00005 	mov	r0, r5
   20a58:	ebfff2a5 	bl	1d4f4 <USBFunctionGetDevice>
   20a5c:	e1a02004 	mov	r2, r4
   20a60:	e1a01000 	mov	r1, r0
   20a64:	e1a00006 	mov	r0, r6
   20a68:	ebffeae3 	bl	1b5fc <USBEndpoint2>
   20a6c:	eaffffc4 	b	20984 <USBBulkOnlyMassStorageDeviceConfigure+0x40>
   20a70:	e3a0c012 	mov	ip, #18
   20a74:	e3a07001 	mov	r7, #1
   20a78:	e58dc000 	str	ip, [sp]
   20a7c:	e58d7004 	str	r7, [sp, #4]
   20a80:	e3a02006 	mov	r2, #6
   20a84:	e28d101c 	add	r1, sp, #28
   20a88:	e1a00005 	mov	r0, r5
   20a8c:	e58d801c 	str	r8, [sp, #28]
   20a90:	e1cdc2b0 	strh	ip, [sp, #32]
   20a94:	ebfffef8 	bl	2067c <USBBulkOnlyMassStorageDeviceCommand>
   20a98:	e3500000 	cmp	r0, #0
   20a9c:	ba000058 	blt	20c04 <USBBulkOnlyMassStorageDeviceConfigure+0x2c0>
   20aa0:	e3a00064 	mov	r0, #100	; 0x64
   20aa4:	eb0018bf 	bl	26da8 <MsDelay>
   20aa8:	e2566001 	subs	r6, r6, #1
   20aac:	0a000066 	beq	20c4c <USBBulkOnlyMassStorageDeviceConfigure+0x308>
   20ab0:	e3a03000 	mov	r3, #0
   20ab4:	e58d4004 	str	r4, [sp, #4]
   20ab8:	e58d4000 	str	r4, [sp]
   20abc:	e3a02006 	mov	r2, #6
   20ac0:	e28d1014 	add	r1, sp, #20
   20ac4:	e1a00005 	mov	r0, r5
   20ac8:	e58d4014 	str	r4, [sp, #20]
   20acc:	e1cd41b8 	strh	r4, [sp, #24]
   20ad0:	ebfffee9 	bl	2067c <USBBulkOnlyMassStorageDeviceCommand>
   20ad4:	e3500000 	cmp	r0, #0
   20ad8:	e28d3028 	add	r3, sp, #40	; 0x28
   20adc:	baffffe3 	blt	20a70 <USBBulkOnlyMassStorageDeviceConfigure+0x12c>
   20ae0:	e3a02008 	mov	r2, #8
   20ae4:	e3a06001 	mov	r6, #1
   20ae8:	e3a0c025 	mov	ip, #37	; 0x25
   20aec:	e88d0044 	stm	sp, {r2, r6}
   20af0:	e28d3014 	add	r3, sp, #20
   20af4:	e28d101c 	add	r1, sp, #28
   20af8:	e3a0200a 	mov	r2, #10
   20afc:	e1a00005 	mov	r0, r5
   20b00:	e58d4020 	str	r4, [sp, #32]
   20b04:	e1cd42b4 	strh	r4, [sp, #36]	; 0x24
   20b08:	e58dc01c 	str	ip, [sp, #28]
   20b0c:	ebfffeda 	bl	2067c <USBBulkOnlyMassStorageDeviceCommand>
   20b10:	e3500008 	cmp	r0, #8
   20b14:	1a000046 	bne	20c34 <USBBulkOnlyMassStorageDeviceConfigure+0x2f0>
   20b18:	e59d0018 	ldr	r0, [sp, #24]
   20b1c:	ebfffe7f 	bl	20520 <uspi_le2be32>
   20b20:	e3500c02 	cmp	r0, #512	; 0x200
   20b24:	0a00004d 	beq	20c60 <USBBulkOnlyMassStorageDeviceConfigure+0x31c>
   20b28:	e1a03000 	mov	r3, r0
   20b2c:	e1a01006 	mov	r1, r6
   20b30:	e59f21d8 	ldr	r2, [pc, #472]	; 20d10 <USBBulkOnlyMassStorageDeviceConfigure+0x3cc>
   20b34:	e59f01d0 	ldr	r0, [pc, #464]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20b38:	eb001901 	bl	26f44 <LogWrite>
   20b3c:	e3a06000 	mov	r6, #0
   20b40:	ea000011 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20b44:	e5953010 	ldr	r3, [r5, #16]
   20b48:	e3530000 	cmp	r3, #0
   20b4c:	1a000018 	bne	20bb4 <USBBulkOnlyMassStorageDeviceConfigure+0x270>
   20b50:	e3a00018 	mov	r0, #24
   20b54:	eb0010f5 	bl	24f30 <malloc>
   20b58:	e3500000 	cmp	r0, #0
   20b5c:	e1a06000 	mov	r6, r0
   20b60:	e5850010 	str	r0, [r5, #16]
   20b64:	1affffba 	bne	20a54 <USBBulkOnlyMassStorageDeviceConfigure+0x110>
   20b68:	e3a02f41 	mov	r2, #260	; 0x104
   20b6c:	e1a01007 	mov	r1, r7
   20b70:	e1a00009 	mov	r0, r9
   20b74:	eb001904 	bl	26f8c <uspi_assertion_failed>
   20b78:	e5956010 	ldr	r6, [r5, #16]
   20b7c:	eaffffb4 	b	20a54 <USBBulkOnlyMassStorageDeviceConfigure+0x110>
   20b80:	e59f1184 	ldr	r1, [pc, #388]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20b84:	ebfff2f5 	bl	1d760 <USBFunctionConfigurationError>
   20b88:	e3a06000 	mov	r6, #0
   20b8c:	e1a00006 	mov	r0, r6
   20b90:	e28dd064 	add	sp, sp, #100	; 0x64
   20b94:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   20b98:	e59f2174 	ldr	r2, [pc, #372]	; 20d14 <USBBulkOnlyMassStorageDeviceConfigure+0x3d0>
   20b9c:	e3a01001 	mov	r1, #1
   20ba0:	e59f0164 	ldr	r0, [pc, #356]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20ba4:	eb0018e6 	bl	26f44 <LogWrite>
   20ba8:	e1a00006 	mov	r0, r6
   20bac:	e28dd064 	add	sp, sp, #100	; 0x64
   20bb0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   20bb4:	e3a06000 	mov	r6, #0
   20bb8:	e1a00005 	mov	r0, r5
   20bbc:	e59f1148 	ldr	r1, [pc, #328]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20bc0:	ebfff2e6 	bl	1d760 <USBFunctionConfigurationError>
   20bc4:	e1a00006 	mov	r0, r6
   20bc8:	e28dd064 	add	sp, sp, #100	; 0x64
   20bcc:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   20bd0:	e3a020ec 	mov	r2, #236	; 0xec
   20bd4:	e59f1120 	ldr	r1, [pc, #288]	; 20cfc <USBBulkOnlyMassStorageDeviceConfigure+0x3b8>
   20bd8:	e59f0138 	ldr	r0, [pc, #312]	; 20d18 <USBBulkOnlyMassStorageDeviceConfigure+0x3d4>
   20bdc:	eb0018ea 	bl	26f8c <uspi_assertion_failed>
   20be0:	eaffff5b 	b	20954 <USBBulkOnlyMassStorageDeviceConfigure+0x10>
   20be4:	e1a01006 	mov	r1, r6
   20be8:	e1a06004 	mov	r6, r4
   20bec:	e59f2128 	ldr	r2, [pc, #296]	; 20d1c <USBBulkOnlyMassStorageDeviceConfigure+0x3d8>
   20bf0:	e59f0114 	ldr	r0, [pc, #276]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20bf4:	eb0018d2 	bl	26f44 <LogWrite>
   20bf8:	e1a00006 	mov	r0, r6
   20bfc:	e28dd064 	add	sp, sp, #100	; 0x64
   20c00:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   20c04:	e1a01007 	mov	r1, r7
   20c08:	e59f2110 	ldr	r2, [pc, #272]	; 20d20 <USBBulkOnlyMassStorageDeviceConfigure+0x3dc>
   20c0c:	e59f00f8 	ldr	r0, [pc, #248]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20c10:	eb0018cb 	bl	26f44 <LogWrite>
   20c14:	e3a06000 	mov	r6, #0
   20c18:	eaffffdb 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20c1c:	e59f2100 	ldr	r2, [pc, #256]	; 20d24 <USBBulkOnlyMassStorageDeviceConfigure+0x3e0>
   20c20:	e1a01007 	mov	r1, r7
   20c24:	e1a00008 	mov	r0, r8
   20c28:	eb0018d7 	bl	26f8c <uspi_assertion_failed>
   20c2c:	e5956014 	ldr	r6, [r5, #20]
   20c30:	eaffff87 	b	20a54 <USBBulkOnlyMassStorageDeviceConfigure+0x110>
   20c34:	e1a01006 	mov	r1, r6
   20c38:	e59f20e8 	ldr	r2, [pc, #232]	; 20d28 <USBBulkOnlyMassStorageDeviceConfigure+0x3e4>
   20c3c:	e59f00c8 	ldr	r0, [pc, #200]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20c40:	eb0018bf 	bl	26f44 <LogWrite>
   20c44:	e3a06000 	mov	r6, #0
   20c48:	eaffffcf 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20c4c:	e1a01007 	mov	r1, r7
   20c50:	e59f20d4 	ldr	r2, [pc, #212]	; 20d2c <USBBulkOnlyMassStorageDeviceConfigure+0x3e8>
   20c54:	e59f00b0 	ldr	r0, [pc, #176]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20c58:	eb0018b9 	bl	26f44 <LogWrite>
   20c5c:	eaffffca 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20c60:	e59d0014 	ldr	r0, [sp, #20]
   20c64:	ebfffe2d 	bl	20520 <uspi_le2be32>
   20c68:	e3700001 	cmn	r0, #1
   20c6c:	e585001c 	str	r0, [r5, #28]
   20c70:	0a00001b 	beq	20ce4 <USBBulkOnlyMassStorageDeviceConfigure+0x3a0>
   20c74:	e2803001 	add	r3, r0, #1
   20c78:	e585301c 	str	r3, [r5, #28]
   20c7c:	e59f20ac 	ldr	r2, [pc, #172]	; 20d30 <USBBulkOnlyMassStorageDeviceConfigure+0x3ec>
   20c80:	e1a035a3 	lsr	r3, r3, #11
   20c84:	e3a01004 	mov	r1, #4
   20c88:	e59f007c 	ldr	r0, [pc, #124]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20c8c:	eb0018ac 	bl	26f44 <LogWrite>
   20c90:	e28d0028 	add	r0, sp, #40	; 0x28
   20c94:	ebfffa9b 	bl	1f708 <String>
   20c98:	e59f3094 	ldr	r3, [pc, #148]	; 20d34 <USBBulkOnlyMassStorageDeviceConfigure+0x3f0>
   20c9c:	e59f1094 	ldr	r1, [pc, #148]	; 20d38 <USBBulkOnlyMassStorageDeviceConfigure+0x3f4>
   20ca0:	e5932000 	ldr	r2, [r3]
   20ca4:	e28d0028 	add	r0, sp, #40	; 0x28
   20ca8:	e282c001 	add	ip, r2, #1
   20cac:	e583c000 	str	ip, [r3]
   20cb0:	ebfffd53 	bl	20204 <StringFormat>
   20cb4:	ebfff02a 	bl	1cd64 <DeviceNameServiceGet>
   20cb8:	e1a04000 	mov	r4, r0
   20cbc:	e28d0028 	add	r0, sp, #40	; 0x28
   20cc0:	ebfffac3 	bl	1f7d4 <StringGet>
   20cc4:	e1a03006 	mov	r3, r6
   20cc8:	e1a01000 	mov	r1, r0
   20ccc:	e1a02005 	mov	r2, r5
   20cd0:	e1a00004 	mov	r0, r4
   20cd4:	ebffefa3 	bl	1cb68 <DeviceNameServiceAddDevice>
   20cd8:	e28d0028 	add	r0, sp, #40	; 0x28
   20cdc:	ebfffaab 	bl	1f790 <_String>
   20ce0:	eaffffa9 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20ce4:	e1a01006 	mov	r1, r6
   20ce8:	e59f204c 	ldr	r2, [pc, #76]	; 20d3c <USBBulkOnlyMassStorageDeviceConfigure+0x3f8>
   20cec:	e59f0018 	ldr	r0, [pc, #24]	; 20d0c <USBBulkOnlyMassStorageDeviceConfigure+0x3c8>
   20cf0:	eb001893 	bl	26f44 <LogWrite>
   20cf4:	e3a06000 	mov	r6, #0
   20cf8:	eaffffa3 	b	20b8c <USBBulkOnlyMassStorageDeviceConfigure+0x248>
   20cfc:	0002af88 	andeq	sl, r2, r8, lsl #31
   20d00:	0002b08c 	andeq	fp, r2, ip, lsl #1
   20d04:	0002b070 	andeq	fp, r2, r0, ror r0
   20d08:	0002b0c0 	andeq	fp, r2, r0, asr #1
   20d0c:	00028590 	muleq	r2, r0, r5
   20d10:	0002b110 	andeq	fp, r2, r0, lsl r1
   20d14:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   20d18:	00029a68 	andeq	r9, r2, r8, ror #20
   20d1c:	0002b0a8 	andeq	fp, r2, r8, lsr #1
   20d20:	0002b0e0 	andeq	fp, r2, r0, ror #1
   20d24:	00000111 	andeq	r0, r0, r1, lsl r1
   20d28:	0002b0f8 	strdeq	fp, [r2], -r8
   20d2c:	0002b160 	andeq	fp, r2, r0, ror #2
   20d30:	0002b148 	andeq	fp, r2, r8, asr #2
   20d34:	0002bcd8 	ldrdeq	fp, [r2], -r8
   20d38:	00029984 	andeq	r9, r2, r4, lsl #19
   20d3c:	0002b12c 	andeq	fp, r2, ip, lsr #2

00020d40 <USBBulkOnlyMassStorageDeviceTryRead>:
   20d40:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   20d44:	e2505000 	subs	r5, r0, #0
   20d48:	e24dd01c 	sub	sp, sp, #28
   20d4c:	e1a06001 	mov	r6, r1
   20d50:	e1a04002 	mov	r4, r2
   20d54:	0a00002e 	beq	20e14 <USBBulkOnlyMassStorageDeviceTryRead+0xd4>
   20d58:	e3560000 	cmp	r6, #0
   20d5c:	0a000032 	beq	20e2c <USBBulkOnlyMassStorageDeviceTryRead+0xec>
   20d60:	e1c522d0 	ldrd	r2, [r5, #32]
   20d64:	e59f00f4 	ldr	r0, [pc, #244]	; 20e60 <USBBulkOnlyMassStorageDeviceTryRead+0x120>
   20d68:	e3e08000 	mvn	r8, #0
   20d6c:	e1100002 	tst	r0, r2
   20d70:	13a01001 	movne	r1, #1
   20d74:	03a01000 	moveq	r1, #0
   20d78:	e59f90e0 	ldr	r9, [pc, #224]	; 20e60 <USBBulkOnlyMassStorageDeviceTryRead+0x120>
   20d7c:	e1530009 	cmp	r3, r9
   20d80:	01520008 	cmpeq	r2, r8
   20d84:	83811001 	orrhi	r1, r1, #1
   20d88:	e3510000 	cmp	r1, #0
   20d8c:	1a00002b 	bne	20e40 <USBBulkOnlyMassStorageDeviceTryRead+0x100>
   20d90:	e0147000 	ands	r7, r4, r0
   20d94:	e1a004a2 	lsr	r0, r2, #9
   20d98:	e1800b83 	orr	r0, r0, r3, lsl #23
   20d9c:	1a000027 	bne	20e40 <USBBulkOnlyMassStorageDeviceTryRead+0x100>
   20da0:	e3a03028 	mov	r3, #40	; 0x28
   20da4:	e1cd30bc 	strh	r3, [sp, #12]
   20da8:	ebfffddc 	bl	20520 <uspi_le2be32>
   20dac:	e1a03000 	mov	r3, r0
   20db0:	e1a004a4 	lsr	r0, r4, #9
   20db4:	e1a02823 	lsr	r2, r3, #16
   20db8:	e6ff0070 	uxth	r0, r0
   20dbc:	e1cd30be 	strh	r3, [sp, #14]
   20dc0:	e1cd21b0 	strh	r2, [sp, #16]
   20dc4:	e5cd7012 	strb	r7, [sp, #18]
   20dc8:	ebfffdd1 	bl	20514 <uspi_le2be16>
   20dcc:	e1a02000 	mov	r2, r0
   20dd0:	e3a08001 	mov	r8, #1
   20dd4:	e1a01422 	lsr	r1, r2, #8
   20dd8:	e5cd2013 	strb	r2, [sp, #19]
   20ddc:	e5cd1014 	strb	r1, [sp, #20]
   20de0:	e58d4000 	str	r4, [sp]
   20de4:	e1a03006 	mov	r3, r6
   20de8:	e1a00005 	mov	r0, r5
   20dec:	e58d8004 	str	r8, [sp, #4]
   20df0:	e3a0200a 	mov	r2, #10
   20df4:	e28d100c 	add	r1, sp, #12
   20df8:	e5cd7015 	strb	r7, [sp, #21]
   20dfc:	ebfffe1e 	bl	2067c <USBBulkOnlyMassStorageDeviceCommand>
   20e00:	e1500004 	cmp	r0, r4
   20e04:	1a00000f 	bne	20e48 <USBBulkOnlyMassStorageDeviceTryRead+0x108>
   20e08:	e1a00004 	mov	r0, r4
   20e0c:	e28dd01c 	add	sp, sp, #28
   20e10:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   20e14:	e59f2048 	ldr	r2, [pc, #72]	; 20e64 <USBBulkOnlyMassStorageDeviceTryRead+0x124>
   20e18:	e59f1048 	ldr	r1, [pc, #72]	; 20e68 <USBBulkOnlyMassStorageDeviceTryRead+0x128>
   20e1c:	e59f0048 	ldr	r0, [pc, #72]	; 20e6c <USBBulkOnlyMassStorageDeviceTryRead+0x12c>
   20e20:	eb001859 	bl	26f8c <uspi_assertion_failed>
   20e24:	e3560000 	cmp	r6, #0
   20e28:	1affffcc 	bne	20d60 <USBBulkOnlyMassStorageDeviceTryRead+0x20>
   20e2c:	e59f203c 	ldr	r2, [pc, #60]	; 20e70 <USBBulkOnlyMassStorageDeviceTryRead+0x130>
   20e30:	e59f1030 	ldr	r1, [pc, #48]	; 20e68 <USBBulkOnlyMassStorageDeviceTryRead+0x128>
   20e34:	e59f0038 	ldr	r0, [pc, #56]	; 20e74 <USBBulkOnlyMassStorageDeviceTryRead+0x134>
   20e38:	eb001853 	bl	26f8c <uspi_assertion_failed>
   20e3c:	eaffffc7 	b	20d60 <USBBulkOnlyMassStorageDeviceTryRead+0x20>
   20e40:	e3e04000 	mvn	r4, #0
   20e44:	eaffffef 	b	20e08 <USBBulkOnlyMassStorageDeviceTryRead+0xc8>
   20e48:	e1a01008 	mov	r1, r8
   20e4c:	e59f2024 	ldr	r2, [pc, #36]	; 20e78 <USBBulkOnlyMassStorageDeviceTryRead+0x138>
   20e50:	e59f0024 	ldr	r0, [pc, #36]	; 20e7c <USBBulkOnlyMassStorageDeviceTryRead+0x13c>
   20e54:	eb00183a 	bl	26f44 <LogWrite>
   20e58:	e3e04000 	mvn	r4, #0
   20e5c:	eaffffe9 	b	20e08 <USBBulkOnlyMassStorageDeviceTryRead+0xc8>
   20e60:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   20e64:	000001e3 	andeq	r0, r0, r3, ror #3
   20e68:	0002af88 	andeq	sl, r2, r8, lsl #31
   20e6c:	00029a68 	andeq	r9, r2, r8, ror #20
   20e70:	000001e5 	andeq	r0, r0, r5, ror #3
   20e74:	0002afdc 	ldrdeq	sl, [r2], -ip
   20e78:	0002b174 	andeq	fp, r2, r4, ror r1
   20e7c:	00028590 	muleq	r2, r0, r5

00020e80 <USBBulkOnlyMassStorageDeviceTryWrite>:
   20e80:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   20e84:	e2505000 	subs	r5, r0, #0
   20e88:	e24dd01c 	sub	sp, sp, #28
   20e8c:	e1a06001 	mov	r6, r1
   20e90:	e1a04002 	mov	r4, r2
   20e94:	0a00002d 	beq	20f50 <USBBulkOnlyMassStorageDeviceTryWrite+0xd0>
   20e98:	e3560000 	cmp	r6, #0
   20e9c:	0a000031 	beq	20f68 <USBBulkOnlyMassStorageDeviceTryWrite+0xe8>
   20ea0:	e1c522d0 	ldrd	r2, [r5, #32]
   20ea4:	e59f00f0 	ldr	r0, [pc, #240]	; 20f9c <USBBulkOnlyMassStorageDeviceTryWrite+0x11c>
   20ea8:	e3e08000 	mvn	r8, #0
   20eac:	e1100002 	tst	r0, r2
   20eb0:	13a01001 	movne	r1, #1
   20eb4:	03a01000 	moveq	r1, #0
   20eb8:	e59f90dc 	ldr	r9, [pc, #220]	; 20f9c <USBBulkOnlyMassStorageDeviceTryWrite+0x11c>
   20ebc:	e1530009 	cmp	r3, r9
   20ec0:	01520008 	cmpeq	r2, r8
   20ec4:	83811001 	orrhi	r1, r1, #1
   20ec8:	e3510000 	cmp	r1, #0
   20ecc:	1a00002a 	bne	20f7c <USBBulkOnlyMassStorageDeviceTryWrite+0xfc>
   20ed0:	e0147000 	ands	r7, r4, r0
   20ed4:	e1a004a2 	lsr	r0, r2, #9
   20ed8:	e1800b83 	orr	r0, r0, r3, lsl #23
   20edc:	1a000026 	bne	20f7c <USBBulkOnlyMassStorageDeviceTryWrite+0xfc>
   20ee0:	e59f30b8 	ldr	r3, [pc, #184]	; 20fa0 <USBBulkOnlyMassStorageDeviceTryWrite+0x120>
   20ee4:	e1cd30bc 	strh	r3, [sp, #12]
   20ee8:	ebfffd8c 	bl	20520 <uspi_le2be32>
   20eec:	e1a03000 	mov	r3, r0
   20ef0:	e1a004a4 	lsr	r0, r4, #9
   20ef4:	e1a02823 	lsr	r2, r3, #16
   20ef8:	e6ff0070 	uxth	r0, r0
   20efc:	e1cd30be 	strh	r3, [sp, #14]
   20f00:	e1cd21b0 	strh	r2, [sp, #16]
   20f04:	e5cd7012 	strb	r7, [sp, #18]
   20f08:	ebfffd81 	bl	20514 <uspi_le2be16>
   20f0c:	e1a01000 	mov	r1, r0
   20f10:	e1a0c420 	lsr	ip, r0, #8
   20f14:	e5cd1013 	strb	r1, [sp, #19]
   20f18:	e58d7004 	str	r7, [sp, #4]
   20f1c:	e58d4000 	str	r4, [sp]
   20f20:	e1a03006 	mov	r3, r6
   20f24:	e1a00005 	mov	r0, r5
   20f28:	e3a0200a 	mov	r2, #10
   20f2c:	e28d100c 	add	r1, sp, #12
   20f30:	e5cdc014 	strb	ip, [sp, #20]
   20f34:	e5cd7015 	strb	r7, [sp, #21]
   20f38:	ebfffdcf 	bl	2067c <USBBulkOnlyMassStorageDeviceCommand>
   20f3c:	e3500000 	cmp	r0, #0
   20f40:	a1a00004 	movge	r0, r4
   20f44:	ba00000e 	blt	20f84 <USBBulkOnlyMassStorageDeviceTryWrite+0x104>
   20f48:	e28dd01c 	add	sp, sp, #28
   20f4c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   20f50:	e3a02f83 	mov	r2, #524	; 0x20c
   20f54:	e59f1048 	ldr	r1, [pc, #72]	; 20fa4 <USBBulkOnlyMassStorageDeviceTryWrite+0x124>
   20f58:	e59f0048 	ldr	r0, [pc, #72]	; 20fa8 <USBBulkOnlyMassStorageDeviceTryWrite+0x128>
   20f5c:	eb00180a 	bl	26f8c <uspi_assertion_failed>
   20f60:	e3560000 	cmp	r6, #0
   20f64:	1affffcd 	bne	20ea0 <USBBulkOnlyMassStorageDeviceTryWrite+0x20>
   20f68:	e59f203c 	ldr	r2, [pc, #60]	; 20fac <USBBulkOnlyMassStorageDeviceTryWrite+0x12c>
   20f6c:	e59f1030 	ldr	r1, [pc, #48]	; 20fa4 <USBBulkOnlyMassStorageDeviceTryWrite+0x124>
   20f70:	e59f0038 	ldr	r0, [pc, #56]	; 20fb0 <USBBulkOnlyMassStorageDeviceTryWrite+0x130>
   20f74:	eb001804 	bl	26f8c <uspi_assertion_failed>
   20f78:	eaffffc8 	b	20ea0 <USBBulkOnlyMassStorageDeviceTryWrite+0x20>
   20f7c:	e3e00000 	mvn	r0, #0
   20f80:	eafffff0 	b	20f48 <USBBulkOnlyMassStorageDeviceTryWrite+0xc8>
   20f84:	e59f0028 	ldr	r0, [pc, #40]	; 20fb4 <USBBulkOnlyMassStorageDeviceTryWrite+0x134>
   20f88:	e59f2028 	ldr	r2, [pc, #40]	; 20fb8 <USBBulkOnlyMassStorageDeviceTryWrite+0x138>
   20f8c:	e3a01001 	mov	r1, #1
   20f90:	eb0017eb 	bl	26f44 <LogWrite>
   20f94:	e3e00000 	mvn	r0, #0
   20f98:	eaffffea 	b	20f48 <USBBulkOnlyMassStorageDeviceTryWrite+0xc8>
   20f9c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   20fa0:	0000082a 	andeq	r0, r0, sl, lsr #16
   20fa4:	0002af88 	andeq	sl, r2, r8, lsl #31
   20fa8:	00029a68 	andeq	r9, r2, r8, ror #20
   20fac:	0000020e 	andeq	r0, r0, lr, lsl #4
   20fb0:	0002afdc 	ldrdeq	sl, [r2], -ip
   20fb4:	00028590 	muleq	r2, r0, r5
   20fb8:	0002b184 	andeq	fp, r2, r4, lsl #3

00020fbc <USBBulkOnlyMassStorageDeviceReset>:
   20fbc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   20fc0:	e2505000 	subs	r5, r0, #0
   20fc4:	e24dd014 	sub	sp, sp, #20
   20fc8:	0a000032 	beq	21098 <USBBulkOnlyMassStorageDeviceReset+0xdc>
   20fcc:	e1a00005 	mov	r0, r5
   20fd0:	ebfff174 	bl	1d5a8 <USBFunctionGetHost>
   20fd4:	e2506000 	subs	r6, r0, #0
   20fd8:	0a000036 	beq	210b8 <USBBulkOnlyMassStorageDeviceReset+0xfc>
   20fdc:	e1a00005 	mov	r0, r5
   20fe0:	ebfff157 	bl	1d544 <USBFunctionGetEndpoint0>
   20fe4:	e3a04000 	mov	r4, #0
   20fe8:	e1a01000 	mov	r1, r0
   20fec:	e58d400c 	str	r4, [sp, #12]
   20ff0:	e58d4008 	str	r4, [sp, #8]
   20ff4:	e58d4004 	str	r4, [sp, #4]
   20ff8:	e58d4000 	str	r4, [sp]
   20ffc:	e3a030ff 	mov	r3, #255	; 0xff
   21000:	e3a02021 	mov	r2, #33	; 0x21
   21004:	e1a00006 	mov	r0, r6
   21008:	ebffd9ce 	bl	17748 <DWHCIDeviceControlMessage>
   2100c:	e1500004 	cmp	r0, r4
   21010:	ba00002d 	blt	210cc <USBBulkOnlyMassStorageDeviceReset+0x110>
   21014:	e1a00005 	mov	r0, r5
   21018:	ebfff149 	bl	1d544 <USBFunctionGetEndpoint0>
   2101c:	e3a07001 	mov	r7, #1
   21020:	e1a01000 	mov	r1, r0
   21024:	e58d400c 	str	r4, [sp, #12]
   21028:	e58d4008 	str	r4, [sp, #8]
   2102c:	e88d0090 	stm	sp, {r4, r7}
   21030:	e1a03007 	mov	r3, r7
   21034:	e3a02002 	mov	r2, #2
   21038:	e1a00006 	mov	r0, r6
   2103c:	ebffd9c1 	bl	17748 <DWHCIDeviceControlMessage>
   21040:	e3500000 	cmp	r0, #0
   21044:	ba00002c 	blt	210fc <USBBulkOnlyMassStorageDeviceReset+0x140>
   21048:	e1a00005 	mov	r0, r5
   2104c:	ebfff13c 	bl	1d544 <USBFunctionGetEndpoint0>
   21050:	e3a02002 	mov	r2, #2
   21054:	e1a01000 	mov	r1, r0
   21058:	e58d400c 	str	r4, [sp, #12]
   2105c:	e58d4008 	str	r4, [sp, #8]
   21060:	e58d4000 	str	r4, [sp]
   21064:	e1a03007 	mov	r3, r7
   21068:	e1a00006 	mov	r0, r6
   2106c:	e58d2004 	str	r2, [sp, #4]
   21070:	ebffd9b4 	bl	17748 <DWHCIDeviceControlMessage>
   21074:	e3500000 	cmp	r0, #0
   21078:	ba000019 	blt	210e4 <USBBulkOnlyMassStorageDeviceReset+0x128>
   2107c:	e5950010 	ldr	r0, [r5, #16]
   21080:	ebffeac7 	bl	1bba4 <USBEndpointResetPID>
   21084:	e5950014 	ldr	r0, [r5, #20]
   21088:	ebffeac5 	bl	1bba4 <USBEndpointResetPID>
   2108c:	e1a00004 	mov	r0, r4
   21090:	e28dd014 	add	sp, sp, #20
   21094:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   21098:	e3a02fa2 	mov	r2, #648	; 0x288
   2109c:	e59f1070 	ldr	r1, [pc, #112]	; 21114 <USBBulkOnlyMassStorageDeviceReset+0x158>
   210a0:	e59f0070 	ldr	r0, [pc, #112]	; 21118 <USBBulkOnlyMassStorageDeviceReset+0x15c>
   210a4:	eb0017b8 	bl	26f8c <uspi_assertion_failed>
   210a8:	e1a00005 	mov	r0, r5
   210ac:	ebfff13d 	bl	1d5a8 <USBFunctionGetHost>
   210b0:	e2506000 	subs	r6, r0, #0
   210b4:	1affffc8 	bne	20fdc <USBBulkOnlyMassStorageDeviceReset+0x20>
   210b8:	e59f205c 	ldr	r2, [pc, #92]	; 2111c <USBBulkOnlyMassStorageDeviceReset+0x160>
   210bc:	e59f1050 	ldr	r1, [pc, #80]	; 21114 <USBBulkOnlyMassStorageDeviceReset+0x158>
   210c0:	e59f0058 	ldr	r0, [pc, #88]	; 21120 <USBBulkOnlyMassStorageDeviceReset+0x164>
   210c4:	eb0017b0 	bl	26f8c <uspi_assertion_failed>
   210c8:	eaffffc3 	b	20fdc <USBBulkOnlyMassStorageDeviceReset+0x20>
   210cc:	e59f0050 	ldr	r0, [pc, #80]	; 21124 <USBBulkOnlyMassStorageDeviceReset+0x168>
   210d0:	e59f2050 	ldr	r2, [pc, #80]	; 21128 <USBBulkOnlyMassStorageDeviceReset+0x16c>
   210d4:	e3a01004 	mov	r1, #4
   210d8:	eb001799 	bl	26f44 <LogWrite>
   210dc:	e3e00000 	mvn	r0, #0
   210e0:	eaffffea 	b	21090 <USBBulkOnlyMassStorageDeviceReset+0xd4>
   210e4:	e59f0038 	ldr	r0, [pc, #56]	; 21124 <USBBulkOnlyMassStorageDeviceReset+0x168>
   210e8:	e59f203c 	ldr	r2, [pc, #60]	; 2112c <USBBulkOnlyMassStorageDeviceReset+0x170>
   210ec:	e3a01004 	mov	r1, #4
   210f0:	eb001793 	bl	26f44 <LogWrite>
   210f4:	e3e00000 	mvn	r0, #0
   210f8:	eaffffe4 	b	21090 <USBBulkOnlyMassStorageDeviceReset+0xd4>
   210fc:	e59f0020 	ldr	r0, [pc, #32]	; 21124 <USBBulkOnlyMassStorageDeviceReset+0x168>
   21100:	e59f2028 	ldr	r2, [pc, #40]	; 21130 <USBBulkOnlyMassStorageDeviceReset+0x174>
   21104:	e3a01004 	mov	r1, #4
   21108:	eb00178d 	bl	26f44 <LogWrite>
   2110c:	e3e00000 	mvn	r0, #0
   21110:	eaffffde 	b	21090 <USBBulkOnlyMassStorageDeviceReset+0xd4>
   21114:	0002af88 	andeq	sl, r2, r8, lsl #31
   21118:	00029a68 	andeq	r9, r2, r8, ror #20
   2111c:	0000028b 	andeq	r0, r0, fp, lsl #5
   21120:	0002a884 	andeq	sl, r2, r4, lsl #17
   21124:	00028590 	muleq	r2, r0, r5
   21128:	0002b194 	muleq	r2, r4, r1
   2112c:	0002b1c8 	andeq	fp, r2, r8, asr #3
   21130:	0002b1a8 	andeq	fp, r2, r8, lsr #3

00021134 <USBBulkOnlyMassStorageDeviceRead>:
   21134:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   21138:	e2507000 	subs	r7, r0, #0
   2113c:	e1a08001 	mov	r8, r1
   21140:	e1a06002 	mov	r6, r2
   21144:	0a000011 	beq	21190 <USBBulkOnlyMassStorageDeviceRead+0x5c>
   21148:	e3a04004 	mov	r4, #4
   2114c:	e1a02006 	mov	r2, r6
   21150:	e1a01008 	mov	r1, r8
   21154:	e1a00007 	mov	r0, r7
   21158:	ebfffef8 	bl	20d40 <USBBulkOnlyMassStorageDeviceTryRead>
   2115c:	e1560000 	cmp	r6, r0
   21160:	e1a05000 	mov	r5, r0
   21164:	1a000001 	bne	21170 <USBBulkOnlyMassStorageDeviceRead+0x3c>
   21168:	e1a00005 	mov	r0, r5
   2116c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   21170:	e1a00007 	mov	r0, r7
   21174:	ebffff90 	bl	20fbc <USBBulkOnlyMassStorageDeviceReset>
   21178:	e3500000 	cmp	r0, #0
   2117c:	1a000008 	bne	211a4 <USBBulkOnlyMassStorageDeviceRead+0x70>
   21180:	e2544001 	subs	r4, r4, #1
   21184:	1afffff0 	bne	2114c <USBBulkOnlyMassStorageDeviceRead+0x18>
   21188:	e1a00005 	mov	r0, r5
   2118c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   21190:	e59f2014 	ldr	r2, [pc, #20]	; 211ac <USBBulkOnlyMassStorageDeviceRead+0x78>
   21194:	e59f1014 	ldr	r1, [pc, #20]	; 211b0 <USBBulkOnlyMassStorageDeviceRead+0x7c>
   21198:	e59f0014 	ldr	r0, [pc, #20]	; 211b4 <USBBulkOnlyMassStorageDeviceRead+0x80>
   2119c:	eb00177a 	bl	26f8c <uspi_assertion_failed>
   211a0:	eaffffe8 	b	21148 <USBBulkOnlyMassStorageDeviceRead+0x14>
   211a4:	e1a05000 	mov	r5, r0
   211a8:	eaffffee 	b	21168 <USBBulkOnlyMassStorageDeviceRead+0x34>
   211ac:	0000019d 	muleq	r0, sp, r1
   211b0:	0002af88 	andeq	sl, r2, r8, lsl #31
   211b4:	00029a68 	andeq	r9, r2, r8, ror #20

000211b8 <USBBulkOnlyMassStorageDeviceWrite>:
   211b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   211bc:	e2507000 	subs	r7, r0, #0
   211c0:	e1a08001 	mov	r8, r1
   211c4:	e1a06002 	mov	r6, r2
   211c8:	0a000011 	beq	21214 <USBBulkOnlyMassStorageDeviceWrite+0x5c>
   211cc:	e3a04004 	mov	r4, #4
   211d0:	e1a02006 	mov	r2, r6
   211d4:	e1a01008 	mov	r1, r8
   211d8:	e1a00007 	mov	r0, r7
   211dc:	ebffff27 	bl	20e80 <USBBulkOnlyMassStorageDeviceTryWrite>
   211e0:	e1560000 	cmp	r6, r0
   211e4:	e1a05000 	mov	r5, r0
   211e8:	1a000001 	bne	211f4 <USBBulkOnlyMassStorageDeviceWrite+0x3c>
   211ec:	e1a00005 	mov	r0, r5
   211f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   211f4:	e1a00007 	mov	r0, r7
   211f8:	ebffff6f 	bl	20fbc <USBBulkOnlyMassStorageDeviceReset>
   211fc:	e3500000 	cmp	r0, #0
   21200:	1a000008 	bne	21228 <USBBulkOnlyMassStorageDeviceWrite+0x70>
   21204:	e2544001 	subs	r4, r4, #1
   21208:	1afffff0 	bne	211d0 <USBBulkOnlyMassStorageDeviceWrite+0x18>
   2120c:	e1a00005 	mov	r0, r5
   21210:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   21214:	e3a02f6e 	mov	r2, #440	; 0x1b8
   21218:	e59f1010 	ldr	r1, [pc, #16]	; 21230 <USBBulkOnlyMassStorageDeviceWrite+0x78>
   2121c:	e59f0010 	ldr	r0, [pc, #16]	; 21234 <USBBulkOnlyMassStorageDeviceWrite+0x7c>
   21220:	eb001759 	bl	26f8c <uspi_assertion_failed>
   21224:	eaffffe8 	b	211cc <USBBulkOnlyMassStorageDeviceWrite+0x14>
   21228:	e1a05000 	mov	r5, r0
   2122c:	eaffffee 	b	211ec <USBBulkOnlyMassStorageDeviceWrite+0x34>
   21230:	0002af88 	andeq	sl, r2, r8, lsl #31
   21234:	00029a68 	andeq	r9, r2, r8, ror #20

00021238 <DWHCIFrameSchedulerNonPeriodicWaitForFrame>:
   21238:	e12fff1e 	bx	lr

0002123c <DWHCIFrameSchedulerNonPeriodicIsOddFrame>:
   2123c:	e3a00000 	mov	r0, #0
   21240:	e12fff1e 	bx	lr

00021244 <_DWHCIFrameSchedulerNonPeriodic>:
   21244:	e92d4010 	push	{r4, lr}
   21248:	e2504000 	subs	r4, r0, #0
   2124c:	0a000002 	beq	2125c <_DWHCIFrameSchedulerNonPeriodic+0x18>
   21250:	e3a03006 	mov	r3, #6
   21254:	e5843018 	str	r3, [r4, #24]
   21258:	e8bd8010 	pop	{r4, pc}
   2125c:	e3a0203a 	mov	r2, #58	; 0x3a
   21260:	e59f1008 	ldr	r1, [pc, #8]	; 21270 <_DWHCIFrameSchedulerNonPeriodic+0x2c>
   21264:	e59f0008 	ldr	r0, [pc, #8]	; 21274 <_DWHCIFrameSchedulerNonPeriodic+0x30>
   21268:	eb001747 	bl	26f8c <uspi_assertion_failed>
   2126c:	eafffff7 	b	21250 <_DWHCIFrameSchedulerNonPeriodic+0xc>
   21270:	0002b1e8 	andeq	fp, r2, r8, ror #3
   21274:	00029a68 	andeq	r9, r2, r8, ror #20

00021278 <DWHCIFrameSchedulerNonPeriodicStartSplit>:
   21278:	e92d4010 	push	{r4, lr}
   2127c:	e2504000 	subs	r4, r0, #0
   21280:	0a000002 	beq	21290 <DWHCIFrameSchedulerNonPeriodicStartSplit+0x18>
   21284:	e3a03000 	mov	r3, #0
   21288:	e5843018 	str	r3, [r4, #24]
   2128c:	e8bd8010 	pop	{r4, pc}
   21290:	e3a02042 	mov	r2, #66	; 0x42
   21294:	e59f1008 	ldr	r1, [pc, #8]	; 212a4 <DWHCIFrameSchedulerNonPeriodicStartSplit+0x2c>
   21298:	e59f0008 	ldr	r0, [pc, #8]	; 212a8 <DWHCIFrameSchedulerNonPeriodicStartSplit+0x30>
   2129c:	eb00173a 	bl	26f8c <uspi_assertion_failed>
   212a0:	eafffff7 	b	21284 <DWHCIFrameSchedulerNonPeriodicStartSplit+0xc>
   212a4:	0002b1e8 	andeq	fp, r2, r8, ror #3
   212a8:	00029a68 	andeq	r9, r2, r8, ror #20

000212ac <DWHCIFrameSchedulerNonPeriodicCompleteSplit>:
   212ac:	e92d4010 	push	{r4, lr}
   212b0:	e2504000 	subs	r4, r0, #0
   212b4:	0a000014 	beq	2130c <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x60>
   212b8:	e5943018 	ldr	r3, [r4, #24]
   212bc:	e2433001 	sub	r3, r3, #1
   212c0:	e3530004 	cmp	r3, #4
   212c4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   212c8:	ea000014 	b	21320 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x74>
   212cc:	000212f8 	strdeq	r1, [r2], -r8
   212d0:	000212e8 	andeq	r1, r2, r8, ror #5
   212d4:	000212e8 	andeq	r1, r2, r8, ror #5
   212d8:	000212e0 	andeq	r1, r2, r0, ror #5
   212dc:	000212e0 	andeq	r1, r2, r0, ror #5
   212e0:	e3a00000 	mov	r0, #0
   212e4:	e8bd8010 	pop	{r4, pc}
   212e8:	e59f0048 	ldr	r0, [pc, #72]	; 21338 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x8c>
   212ec:	eb0016b3 	bl	26dc0 <usDelay>
   212f0:	e3a00001 	mov	r0, #1
   212f4:	e8bd8010 	pop	{r4, pc}
   212f8:	e3a02002 	mov	r2, #2
   212fc:	e3a03003 	mov	r3, #3
   21300:	e3a00001 	mov	r0, #1
   21304:	e1c421f8 	strd	r2, [r4, #24]
   21308:	e8bd8010 	pop	{r4, pc}
   2130c:	e3a0204a 	mov	r2, #74	; 0x4a
   21310:	e59f1024 	ldr	r1, [pc, #36]	; 2133c <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x90>
   21314:	e59f0024 	ldr	r0, [pc, #36]	; 21340 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x94>
   21318:	eb00171b 	bl	26f8c <uspi_assertion_failed>
   2131c:	eaffffe5 	b	212b8 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0xc>
   21320:	e3a02061 	mov	r2, #97	; 0x61
   21324:	e59f1010 	ldr	r1, [pc, #16]	; 2133c <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x90>
   21328:	e59f0014 	ldr	r0, [pc, #20]	; 21344 <DWHCIFrameSchedulerNonPeriodicCompleteSplit+0x98>
   2132c:	eb001716 	bl	26f8c <uspi_assertion_failed>
   21330:	e3a00000 	mov	r0, #0
   21334:	e8bd8010 	pop	{r4, pc}
   21338:	00000271 	andeq	r0, r0, r1, ror r2
   2133c:	0002b1e8 	andeq	fp, r2, r8, ror #3
   21340:	00029a68 	andeq	r9, r2, r8, ror #20
   21344:	000299fc 	strdeq	r9, [r2], -ip

00021348 <DWHCIFrameSchedulerNonPeriodicTransactionComplete>:
   21348:	e92d4070 	push	{r4, r5, r6, lr}
   2134c:	e2504000 	subs	r4, r0, #0
   21350:	e1a05001 	mov	r5, r1
   21354:	0a000028 	beq	213fc <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xb4>
   21358:	e5942018 	ldr	r2, [r4, #24]
   2135c:	e3520000 	cmp	r2, #0
   21360:	0a000013 	beq	213b4 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x6c>
   21364:	e2422002 	sub	r2, r2, #2
   21368:	e3520001 	cmp	r2, #1
   2136c:	8a00000b 	bhi	213a0 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x58>
   21370:	e3150001 	tst	r5, #1
   21374:	1a000013 	bne	213c8 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x80>
   21378:	e3150060 	tst	r5, #96	; 0x60
   2137c:	0a000014 	beq	213d4 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x8c>
   21380:	e594301c 	ldr	r3, [r4, #28]
   21384:	e3530000 	cmp	r3, #0
   21388:	e2433001 	sub	r3, r3, #1
   2138c:	e584301c 	str	r3, [r4, #28]
   21390:	1a000016 	bne	213f0 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xa8>
   21394:	e3a03005 	mov	r3, #5
   21398:	e5843018 	str	r3, [r4, #24]
   2139c:	e8bd8070 	pop	{r4, r5, r6, pc}
   213a0:	e3a02099 	mov	r2, #153	; 0x99
   213a4:	e8bd4070 	pop	{r4, r5, r6, lr}
   213a8:	e59f10a8 	ldr	r1, [pc, #168]	; 21458 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x110>
   213ac:	e59f00a8 	ldr	r0, [pc, #168]	; 2145c <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x114>
   213b0:	ea0016f5 	b	26f8c <uspi_assertion_failed>
   213b4:	e3150020 	tst	r5, #32
   213b8:	0a000014 	beq	21410 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xc8>
   213bc:	e3a03001 	mov	r3, #1
   213c0:	e5843018 	str	r3, [r4, #24]
   213c4:	e8bd8070 	pop	{r4, r5, r6, pc}
   213c8:	e3a03004 	mov	r3, #4
   213cc:	e5843018 	str	r3, [r4, #24]
   213d0:	e8bd8070 	pop	{r4, r5, r6, pc}
   213d4:	e3150010 	tst	r5, #16
   213d8:	0a000014 	beq	21430 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xe8>
   213dc:	e594301c 	ldr	r3, [r4, #28]
   213e0:	e3530000 	cmp	r3, #0
   213e4:	e2433001 	sub	r3, r3, #1
   213e8:	e584301c 	str	r3, [r4, #28]
   213ec:	0a00000c 	beq	21424 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0xdc>
   213f0:	e3a03003 	mov	r3, #3
   213f4:	e5843018 	str	r3, [r4, #24]
   213f8:	e8bd8070 	pop	{r4, r5, r6, pc}
   213fc:	e3a0206b 	mov	r2, #107	; 0x6b
   21400:	e59f1050 	ldr	r1, [pc, #80]	; 21458 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x110>
   21404:	e59f0054 	ldr	r0, [pc, #84]	; 21460 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x118>
   21408:	eb0016df 	bl	26f8c <uspi_assertion_failed>
   2140c:	eaffffd1 	b	21358 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x10>
   21410:	e3a02070 	mov	r2, #112	; 0x70
   21414:	e59f103c 	ldr	r1, [pc, #60]	; 21458 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x110>
   21418:	e59f0044 	ldr	r0, [pc, #68]	; 21464 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x11c>
   2141c:	eb0016da 	bl	26f8c <uspi_assertion_failed>
   21420:	eaffffe5 	b	213bc <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x74>
   21424:	e59f003c 	ldr	r0, [pc, #60]	; 21468 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x120>
   21428:	eb001664 	bl	26dc0 <usDelay>
   2142c:	eaffffd8 	b	21394 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x4c>
   21430:	e1a03005 	mov	r3, r5
   21434:	e59f2030 	ldr	r2, [pc, #48]	; 2146c <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x124>
   21438:	e3a01001 	mov	r1, #1
   2143c:	e59f002c 	ldr	r0, [pc, #44]	; 21470 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x128>
   21440:	eb0016bf 	bl	26f44 <LogWrite>
   21444:	e8bd4070 	pop	{r4, r5, r6, lr}
   21448:	e3a02094 	mov	r2, #148	; 0x94
   2144c:	e59f1004 	ldr	r1, [pc, #4]	; 21458 <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x110>
   21450:	e59f0004 	ldr	r0, [pc, #4]	; 2145c <DWHCIFrameSchedulerNonPeriodicTransactionComplete+0x114>
   21454:	ea0016cc 	b	26f8c <uspi_assertion_failed>
   21458:	0002b1e8 	andeq	fp, r2, r8, ror #3
   2145c:	000299fc 	strdeq	r9, [r2], -ip
   21460:	00029a68 	andeq	r9, r2, r8, ror #20
   21464:	0002b200 	andeq	fp, r2, r0, lsl #4
   21468:	00000271 	andeq	r0, r0, r1, ror r2
   2146c:	0002b224 	andeq	fp, r2, r4, lsr #4
   21470:	0002b238 	andeq	fp, r2, r8, lsr r2

00021474 <DWHCIFrameSchedulerNonPeriodic>:
   21474:	e92d4010 	push	{r4, lr}
   21478:	e2504000 	subs	r4, r0, #0
   2147c:	0a00000c 	beq	214b4 <DWHCIFrameSchedulerNonPeriodic+0x40>
   21480:	e3a02006 	mov	r2, #6
   21484:	e59f303c 	ldr	r3, [pc, #60]	; 214c8 <DWHCIFrameSchedulerNonPeriodic+0x54>
   21488:	e59fc03c 	ldr	ip, [pc, #60]	; 214cc <DWHCIFrameSchedulerNonPeriodic+0x58>
   2148c:	e59f003c 	ldr	r0, [pc, #60]	; 214d0 <DWHCIFrameSchedulerNonPeriodic+0x5c>
   21490:	e59f103c 	ldr	r1, [pc, #60]	; 214d4 <DWHCIFrameSchedulerNonPeriodic+0x60>
   21494:	e5842018 	str	r2, [r4, #24]
   21498:	e5843000 	str	r3, [r4]
   2149c:	e59f2034 	ldr	r2, [pc, #52]	; 214d8 <DWHCIFrameSchedulerNonPeriodic+0x64>
   214a0:	e59f3034 	ldr	r3, [pc, #52]	; 214dc <DWHCIFrameSchedulerNonPeriodic+0x68>
   214a4:	e584c004 	str	ip, [r4, #4]
   214a8:	e1c400f8 	strd	r0, [r4, #8]
   214ac:	e1c421f0 	strd	r2, [r4, #16]
   214b0:	e8bd8010 	pop	{r4, pc}
   214b4:	e3a02029 	mov	r2, #41	; 0x29
   214b8:	e59f1020 	ldr	r1, [pc, #32]	; 214e0 <DWHCIFrameSchedulerNonPeriodic+0x6c>
   214bc:	e59f0020 	ldr	r0, [pc, #32]	; 214e4 <DWHCIFrameSchedulerNonPeriodic+0x70>
   214c0:	eb0016b1 	bl	26f8c <uspi_assertion_failed>
   214c4:	eaffffed 	b	21480 <DWHCIFrameSchedulerNonPeriodic+0xc>
   214c8:	00021244 	andeq	r1, r2, r4, asr #4
   214cc:	00021278 	andeq	r1, r2, r8, ror r2
   214d0:	000212ac 	andeq	r1, r2, ip, lsr #5
   214d4:	00021348 	andeq	r1, r2, r8, asr #6
   214d8:	00021238 	andeq	r1, r2, r8, lsr r2
   214dc:	0002123c 	andeq	r1, r2, ip, lsr r2
   214e0:	0002b1e8 	andeq	fp, r2, r8, ror #3
   214e4:	00029a68 	andeq	r9, r2, r8, ror #20

000214e8 <_DWHCIFrameSchedulerPeriodic>:
   214e8:	e92d4010 	push	{r4, lr}
   214ec:	e2504000 	subs	r4, r0, #0
   214f0:	0a000002 	beq	21500 <_DWHCIFrameSchedulerPeriodic+0x18>
   214f4:	e3a03006 	mov	r3, #6
   214f8:	e5843018 	str	r3, [r4, #24]
   214fc:	e8bd8010 	pop	{r4, pc}
   21500:	e3a0203e 	mov	r2, #62	; 0x3e
   21504:	e59f1008 	ldr	r1, [pc, #8]	; 21514 <_DWHCIFrameSchedulerPeriodic+0x2c>
   21508:	e59f0008 	ldr	r0, [pc, #8]	; 21518 <_DWHCIFrameSchedulerPeriodic+0x30>
   2150c:	eb00169e 	bl	26f8c <uspi_assertion_failed>
   21510:	eafffff7 	b	214f4 <_DWHCIFrameSchedulerPeriodic+0xc>
   21514:	0002b240 	andeq	fp, r2, r0, asr #4
   21518:	00029a68 	andeq	r9, r2, r8, ror #20

0002151c <DWHCIFrameSchedulerPeriodicStartSplit>:
   2151c:	e92d4010 	push	{r4, lr}
   21520:	e2504000 	subs	r4, r0, #0
   21524:	0a000004 	beq	2153c <DWHCIFrameSchedulerPeriodicStartSplit+0x20>
   21528:	e3a02000 	mov	r2, #0
   2152c:	e3a03008 	mov	r3, #8
   21530:	e5842018 	str	r2, [r4, #24]
   21534:	e5843020 	str	r3, [r4, #32]
   21538:	e8bd8010 	pop	{r4, pc}
   2153c:	e3a02046 	mov	r2, #70	; 0x46
   21540:	e59f1008 	ldr	r1, [pc, #8]	; 21550 <DWHCIFrameSchedulerPeriodicStartSplit+0x34>
   21544:	e59f0008 	ldr	r0, [pc, #8]	; 21554 <DWHCIFrameSchedulerPeriodicStartSplit+0x38>
   21548:	eb00168f 	bl	26f8c <uspi_assertion_failed>
   2154c:	eafffff5 	b	21528 <DWHCIFrameSchedulerPeriodicStartSplit+0xc>
   21550:	0002b240 	andeq	fp, r2, r0, asr #4
   21554:	00029a68 	andeq	r9, r2, r8, ror #20

00021558 <DWHCIFrameSchedulerPeriodicIsOddFrame>:
   21558:	e92d4010 	push	{r4, lr}
   2155c:	e2504000 	subs	r4, r0, #0
   21560:	0a000002 	beq	21570 <DWHCIFrameSchedulerPeriodicIsOddFrame+0x18>
   21564:	e5940020 	ldr	r0, [r4, #32]
   21568:	e2000001 	and	r0, r0, #1
   2156c:	e8bd8010 	pop	{r4, pc}
   21570:	e3a020ba 	mov	r2, #186	; 0xba
   21574:	e59f1008 	ldr	r1, [pc, #8]	; 21584 <DWHCIFrameSchedulerPeriodicIsOddFrame+0x2c>
   21578:	e59f0008 	ldr	r0, [pc, #8]	; 21588 <DWHCIFrameSchedulerPeriodicIsOddFrame+0x30>
   2157c:	eb001682 	bl	26f8c <uspi_assertion_failed>
   21580:	eafffff7 	b	21564 <DWHCIFrameSchedulerPeriodicIsOddFrame+0xc>
   21584:	0002b240 	andeq	fp, r2, r0, asr #4
   21588:	00029a68 	andeq	r9, r2, r8, ror #20

0002158c <DWHCIFrameSchedulerPeriodicWaitForFrame>:
   2158c:	e92d4010 	push	{r4, lr}
   21590:	e2504000 	subs	r4, r0, #0
   21594:	e24dd010 	sub	sp, sp, #16
   21598:	0a000018 	beq	21600 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x74>
   2159c:	e28d0004 	add	r0, sp, #4
   215a0:	e59f106c 	ldr	r1, [pc, #108]	; 21614 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x88>
   215a4:	ebffde22 	bl	18e34 <DWHCIRegister>
   215a8:	e5943020 	ldr	r3, [r4, #32]
   215ac:	e3530008 	cmp	r3, #8
   215b0:	0a000009 	beq	215dc <DWHCIFrameSchedulerPeriodicWaitForFrame+0x50>
   215b4:	e28d0004 	add	r0, sp, #4
   215b8:	ebffde49 	bl	18ee4 <DWHCIRegisterRead>
   215bc:	e5943020 	ldr	r3, [r4, #32]
   215c0:	e2000007 	and	r0, r0, #7
   215c4:	e1500003 	cmp	r0, r3
   215c8:	1afffff9 	bne	215b4 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x28>
   215cc:	e28d0004 	add	r0, sp, #4
   215d0:	ebffde36 	bl	18eb0 <_DWHCIRegister>
   215d4:	e28dd010 	add	sp, sp, #16
   215d8:	e8bd8010 	pop	{r4, pc}
   215dc:	e28d0004 	add	r0, sp, #4
   215e0:	ebffde3f 	bl	18ee4 <DWHCIRegisterRead>
   215e4:	e2800001 	add	r0, r0, #1
   215e8:	e2000007 	and	r0, r0, #7
   215ec:	e3500006 	cmp	r0, #6
   215f0:	03a03007 	moveq	r3, #7
   215f4:	15840020 	strne	r0, [r4, #32]
   215f8:	05843020 	streq	r3, [r4, #32]
   215fc:	eaffffec 	b	215b4 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x28>
   21600:	e3a020a1 	mov	r2, #161	; 0xa1
   21604:	e59f100c 	ldr	r1, [pc, #12]	; 21618 <DWHCIFrameSchedulerPeriodicWaitForFrame+0x8c>
   21608:	e59f000c 	ldr	r0, [pc, #12]	; 2161c <DWHCIFrameSchedulerPeriodicWaitForFrame+0x90>
   2160c:	eb00165e 	bl	26f8c <uspi_assertion_failed>
   21610:	eaffffe1 	b	2159c <DWHCIFrameSchedulerPeriodicWaitForFrame+0x10>
   21614:	20980408 	addscs	r0, r8, r8, lsl #8
   21618:	0002b240 	andeq	fp, r2, r0, asr #4
   2161c:	00029a68 	andeq	r9, r2, r8, ror #20

00021620 <DWHCIFrameSchedulerPeriodicCompleteSplit>:
   21620:	e92d4010 	push	{r4, lr}
   21624:	e2504000 	subs	r4, r0, #0
   21628:	0a000023 	beq	216bc <DWHCIFrameSchedulerPeriodicCompleteSplit+0x9c>
   2162c:	e5943018 	ldr	r3, [r4, #24]
   21630:	e2433001 	sub	r3, r3, #1
   21634:	e3530004 	cmp	r3, #4
   21638:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   2163c:	ea000018 	b	216a4 <DWHCIFrameSchedulerPeriodicCompleteSplit+0x84>
   21640:	00021674 	andeq	r1, r2, r4, ror r6
   21644:	000216a4 	andeq	r1, r2, r4, lsr #13
   21648:	0002165c 	andeq	r1, r2, ip, asr r6
   2164c:	00021654 	andeq	r1, r2, r4, asr r6
   21650:	00021654 	andeq	r1, r2, r4, asr r6
   21654:	e3a00000 	mov	r0, #0
   21658:	e8bd8010 	pop	{r4, pc}
   2165c:	e3a00001 	mov	r0, #1
   21660:	e5943020 	ldr	r3, [r4, #32]
   21664:	e0833000 	add	r3, r3, r0
   21668:	e2033007 	and	r3, r3, #7
   2166c:	e5843020 	str	r3, [r4, #32]
   21670:	e8bd8010 	pop	{r4, pc}
   21674:	e3a02002 	mov	r2, #2
   21678:	e5943020 	ldr	r3, [r4, #32]
   2167c:	e5842018 	str	r2, [r4, #24]
   21680:	e3530005 	cmp	r3, #5
   21684:	13a01003 	movne	r1, #3
   21688:	01a01002 	moveq	r1, r2
   2168c:	e0833002 	add	r3, r3, r2
   21690:	e2033007 	and	r3, r3, #7
   21694:	e5843020 	str	r3, [r4, #32]
   21698:	e584101c 	str	r1, [r4, #28]
   2169c:	e3a00001 	mov	r0, #1
   216a0:	e8bd8010 	pop	{r4, pc}
   216a4:	e3a02066 	mov	r2, #102	; 0x66
   216a8:	e59f1020 	ldr	r1, [pc, #32]	; 216d0 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb0>
   216ac:	e59f0020 	ldr	r0, [pc, #32]	; 216d4 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb4>
   216b0:	eb001635 	bl	26f8c <uspi_assertion_failed>
   216b4:	e3a00000 	mov	r0, #0
   216b8:	e8bd8010 	pop	{r4, pc}
   216bc:	e3a0204f 	mov	r2, #79	; 0x4f
   216c0:	e59f1008 	ldr	r1, [pc, #8]	; 216d0 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb0>
   216c4:	e59f000c 	ldr	r0, [pc, #12]	; 216d8 <DWHCIFrameSchedulerPeriodicCompleteSplit+0xb8>
   216c8:	eb00162f 	bl	26f8c <uspi_assertion_failed>
   216cc:	eaffffd6 	b	2162c <DWHCIFrameSchedulerPeriodicCompleteSplit+0xc>
   216d0:	0002b240 	andeq	fp, r2, r0, asr #4
   216d4:	000299fc 	strdeq	r9, [r2], -ip
   216d8:	00029a68 	andeq	r9, r2, r8, ror #20

000216dc <DWHCIFrameSchedulerPeriodicTransactionComplete>:
   216dc:	e92d4070 	push	{r4, r5, r6, lr}
   216e0:	e2504000 	subs	r4, r0, #0
   216e4:	e1a05001 	mov	r5, r1
   216e8:	0a00001e 	beq	21768 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x8c>
   216ec:	e5942018 	ldr	r2, [r4, #24]
   216f0:	e3520000 	cmp	r2, #0
   216f4:	0a000013 	beq	21748 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x6c>
   216f8:	e2422002 	sub	r2, r2, #2
   216fc:	e3520001 	cmp	r2, #1
   21700:	8a00000b 	bhi	21734 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x58>
   21704:	e3150001 	tst	r5, #1
   21708:	1a000013 	bne	2175c <DWHCIFrameSchedulerPeriodicTransactionComplete+0x80>
   2170c:	e3150060 	tst	r5, #96	; 0x60
   21710:	0a00001e 	beq	21790 <DWHCIFrameSchedulerPeriodicTransactionComplete+0xb4>
   21714:	e594301c 	ldr	r3, [r4, #28]
   21718:	e3530000 	cmp	r3, #0
   2171c:	e2433001 	sub	r3, r3, #1
   21720:	e584301c 	str	r3, [r4, #28]
   21724:	0a00002a 	beq	217d4 <DWHCIFrameSchedulerPeriodicTransactionComplete+0xf8>
   21728:	e3a03003 	mov	r3, #3
   2172c:	e5843018 	str	r3, [r4, #24]
   21730:	e8bd8070 	pop	{r4, r5, r6, pc}
   21734:	e3a02099 	mov	r2, #153	; 0x99
   21738:	e8bd4070 	pop	{r4, r5, r6, lr}
   2173c:	e59f10a4 	ldr	r1, [pc, #164]	; 217e8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10c>
   21740:	e59f00a4 	ldr	r0, [pc, #164]	; 217ec <DWHCIFrameSchedulerPeriodicTransactionComplete+0x110>
   21744:	ea001610 	b	26f8c <uspi_assertion_failed>
   21748:	e3150020 	tst	r5, #32
   2174c:	0a00000a 	beq	2177c <DWHCIFrameSchedulerPeriodicTransactionComplete+0xa0>
   21750:	e3a03001 	mov	r3, #1
   21754:	e5843018 	str	r3, [r4, #24]
   21758:	e8bd8070 	pop	{r4, r5, r6, pc}
   2175c:	e3a03004 	mov	r3, #4
   21760:	e5843018 	str	r3, [r4, #24]
   21764:	e8bd8070 	pop	{r4, r5, r6, pc}
   21768:	e3a02070 	mov	r2, #112	; 0x70
   2176c:	e59f1074 	ldr	r1, [pc, #116]	; 217e8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10c>
   21770:	e59f0078 	ldr	r0, [pc, #120]	; 217f0 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x114>
   21774:	eb001604 	bl	26f8c <uspi_assertion_failed>
   21778:	eaffffdb 	b	216ec <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10>
   2177c:	e3a02075 	mov	r2, #117	; 0x75
   21780:	e59f1060 	ldr	r1, [pc, #96]	; 217e8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10c>
   21784:	e59f0068 	ldr	r0, [pc, #104]	; 217f4 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x118>
   21788:	eb0015ff 	bl	26f8c <uspi_assertion_failed>
   2178c:	eaffffef 	b	21750 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x74>
   21790:	e3150010 	tst	r5, #16
   21794:	0a000004 	beq	217ac <DWHCIFrameSchedulerPeriodicTransactionComplete+0xd0>
   21798:	e59f0058 	ldr	r0, [pc, #88]	; 217f8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x11c>
   2179c:	eb001587 	bl	26dc0 <usDelay>
   217a0:	e3a03005 	mov	r3, #5
   217a4:	e5843018 	str	r3, [r4, #24]
   217a8:	e8bd8070 	pop	{r4, r5, r6, pc}
   217ac:	e1a03005 	mov	r3, r5
   217b0:	e59f2044 	ldr	r2, [pc, #68]	; 217fc <DWHCIFrameSchedulerPeriodicTransactionComplete+0x120>
   217b4:	e3a01001 	mov	r1, #1
   217b8:	e59f0040 	ldr	r0, [pc, #64]	; 21800 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x124>
   217bc:	eb0015e0 	bl	26f44 <LogWrite>
   217c0:	e8bd4070 	pop	{r4, r5, r6, lr}
   217c4:	e3a02094 	mov	r2, #148	; 0x94
   217c8:	e59f1018 	ldr	r1, [pc, #24]	; 217e8 <DWHCIFrameSchedulerPeriodicTransactionComplete+0x10c>
   217cc:	e59f0018 	ldr	r0, [pc, #24]	; 217ec <DWHCIFrameSchedulerPeriodicTransactionComplete+0x110>
   217d0:	ea0015ed 	b	26f8c <uspi_assertion_failed>
   217d4:	e3a03005 	mov	r3, #5
   217d8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
   217dc:	e5843018 	str	r3, [r4, #24]
   217e0:	e8bd4070 	pop	{r4, r5, r6, lr}
   217e4:	ea001575 	b	26dc0 <usDelay>
   217e8:	0002b240 	andeq	fp, r2, r0, asr #4
   217ec:	000299fc 	strdeq	r9, [r2], -ip
   217f0:	00029a68 	andeq	r9, r2, r8, ror #20
   217f4:	0002b200 	andeq	fp, r2, r0, lsl #4
   217f8:	00000271 	andeq	r0, r0, r1, ror r2
   217fc:	0002b224 	andeq	fp, r2, r4, lsr #4
   21800:	0002b238 	andeq	fp, r2, r8, lsr r2

00021804 <DWHCIFrameSchedulerPeriodic>:
   21804:	e92d4010 	push	{r4, lr}
   21808:	e2504000 	subs	r4, r0, #0
   2180c:	0a00000e 	beq	2184c <DWHCIFrameSchedulerPeriodic+0x48>
   21810:	e3a01006 	mov	r1, #6
   21814:	e3a02008 	mov	r2, #8
   21818:	e59f3040 	ldr	r3, [pc, #64]	; 21860 <DWHCIFrameSchedulerPeriodic+0x5c>
   2181c:	e59fc040 	ldr	ip, [pc, #64]	; 21864 <DWHCIFrameSchedulerPeriodic+0x60>
   21820:	e59f0040 	ldr	r0, [pc, #64]	; 21868 <DWHCIFrameSchedulerPeriodic+0x64>
   21824:	e5841018 	str	r1, [r4, #24]
   21828:	e5842020 	str	r2, [r4, #32]
   2182c:	e59f1038 	ldr	r1, [pc, #56]	; 2186c <DWHCIFrameSchedulerPeriodic+0x68>
   21830:	e59f2038 	ldr	r2, [pc, #56]	; 21870 <DWHCIFrameSchedulerPeriodic+0x6c>
   21834:	e5843000 	str	r3, [r4]
   21838:	e59f3034 	ldr	r3, [pc, #52]	; 21874 <DWHCIFrameSchedulerPeriodic+0x70>
   2183c:	e584c004 	str	ip, [r4, #4]
   21840:	e1c400f8 	strd	r0, [r4, #8]
   21844:	e1c421f0 	strd	r2, [r4, #16]
   21848:	e8bd8010 	pop	{r4, pc}
   2184c:	e3a0202c 	mov	r2, #44	; 0x2c
   21850:	e59f1020 	ldr	r1, [pc, #32]	; 21878 <DWHCIFrameSchedulerPeriodic+0x74>
   21854:	e59f0020 	ldr	r0, [pc, #32]	; 2187c <DWHCIFrameSchedulerPeriodic+0x78>
   21858:	eb0015cb 	bl	26f8c <uspi_assertion_failed>
   2185c:	eaffffeb 	b	21810 <DWHCIFrameSchedulerPeriodic+0xc>
   21860:	000214e8 	andeq	r1, r2, r8, ror #9
   21864:	0002151c 	andeq	r1, r2, ip, lsl r5
   21868:	00021620 	andeq	r1, r2, r0, lsr #12
   2186c:	000216dc 	ldrdeq	r1, [r2], -ip
   21870:	0002158c 	andeq	r1, r2, ip, lsl #11
   21874:	00021558 	andeq	r1, r2, r8, asr r5
   21878:	0002b240 	andeq	fp, r2, r0, asr #4
   2187c:	00029a68 	andeq	r9, r2, r8, ror #20

00021880 <USBKeyboardDeviceStartRequest>:
   21880:	e92d4070 	push	{r4, r5, r6, lr}
   21884:	e2504000 	subs	r4, r0, #0
   21888:	e24dd008 	sub	sp, sp, #8
   2188c:	0a000017 	beq	218f0 <USBKeyboardDeviceStartRequest+0x70>
   21890:	e5943010 	ldr	r3, [r4, #16]
   21894:	e3530000 	cmp	r3, #0
   21898:	0a00001b 	beq	2190c <USBKeyboardDeviceStartRequest+0x8c>
   2189c:	e5942048 	ldr	r2, [r4, #72]	; 0x48
   218a0:	e3520000 	cmp	r2, #0
   218a4:	0a00001f 	beq	21928 <USBKeyboardDeviceStartRequest+0xa8>
   218a8:	e3a06000 	mov	r6, #0
   218ac:	e2845024 	add	r5, r4, #36	; 0x24
   218b0:	e58d6000 	str	r6, [sp]
   218b4:	e5941010 	ldr	r1, [r4, #16]
   218b8:	e1a00005 	mov	r0, r5
   218bc:	e3a03008 	mov	r3, #8
   218c0:	ebffe8cc 	bl	1bbf8 <USBRequest>
   218c4:	e1a03004 	mov	r3, r4
   218c8:	e1a02006 	mov	r2, r6
   218cc:	e1a00005 	mov	r0, r5
   218d0:	e59f1068 	ldr	r1, [pc, #104]	; 21940 <USBKeyboardDeviceStartRequest+0xc0>
   218d4:	ebffe99c 	bl	1bf4c <USBRequestSetCompletionRoutine>
   218d8:	e1a00004 	mov	r0, r4
   218dc:	ebffef31 	bl	1d5a8 <USBFunctionGetHost>
   218e0:	e1a01005 	mov	r1, r5
   218e4:	e28dd008 	add	sp, sp, #8
   218e8:	e8bd4070 	pop	{r4, r5, r6, lr}
   218ec:	eaffd681 	b	172f8 <DWHCIDeviceSubmitAsyncRequest>
   218f0:	e59f204c 	ldr	r2, [pc, #76]	; 21944 <USBKeyboardDeviceStartRequest+0xc4>
   218f4:	e59f104c 	ldr	r1, [pc, #76]	; 21948 <USBKeyboardDeviceStartRequest+0xc8>
   218f8:	e59f004c 	ldr	r0, [pc, #76]	; 2194c <USBKeyboardDeviceStartRequest+0xcc>
   218fc:	eb0015a2 	bl	26f8c <uspi_assertion_failed>
   21900:	e5943010 	ldr	r3, [r4, #16]
   21904:	e3530000 	cmp	r3, #0
   21908:	1affffe3 	bne	2189c <USBKeyboardDeviceStartRequest+0x1c>
   2190c:	e59f203c 	ldr	r2, [pc, #60]	; 21950 <USBKeyboardDeviceStartRequest+0xd0>
   21910:	e59f1030 	ldr	r1, [pc, #48]	; 21948 <USBKeyboardDeviceStartRequest+0xc8>
   21914:	e59f0038 	ldr	r0, [pc, #56]	; 21954 <USBKeyboardDeviceStartRequest+0xd4>
   21918:	eb00159b 	bl	26f8c <uspi_assertion_failed>
   2191c:	e5942048 	ldr	r2, [r4, #72]	; 0x48
   21920:	e3520000 	cmp	r2, #0
   21924:	1affffdf 	bne	218a8 <USBKeyboardDeviceStartRequest+0x28>
   21928:	e3a02f46 	mov	r2, #280	; 0x118
   2192c:	e59f1014 	ldr	r1, [pc, #20]	; 21948 <USBKeyboardDeviceStartRequest+0xc8>
   21930:	e59f0020 	ldr	r0, [pc, #32]	; 21958 <USBKeyboardDeviceStartRequest+0xd8>
   21934:	eb001594 	bl	26f8c <uspi_assertion_failed>
   21938:	e5942048 	ldr	r2, [r4, #72]	; 0x48
   2193c:	eaffffd9 	b	218a8 <USBKeyboardDeviceStartRequest+0x28>
   21940:	0002195c 	andeq	r1, r2, ip, asr r9
   21944:	00000115 	andeq	r0, r0, r5, lsl r1
   21948:	0002b258 	andeq	fp, r2, r8, asr r2
   2194c:	00029a68 	andeq	r9, r2, r8, ror #20
   21950:	00000117 	andeq	r0, r0, r7, lsl r1
   21954:	0002b268 	andeq	fp, r2, r8, ror #4
   21958:	0002b288 	andeq	fp, r2, r8, lsl #5

0002195c <USBKeyboardDeviceCompletionRoutine>:
   2195c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   21960:	e2525000 	subs	r5, r2, #0
   21964:	e24dd00c 	sub	sp, sp, #12
   21968:	e1a04000 	mov	r4, r0
   2196c:	0a00001d 	beq	219e8 <USBKeyboardDeviceCompletionRoutine+0x8c>
   21970:	e3540000 	cmp	r4, #0
   21974:	0a000021 	beq	21a00 <USBKeyboardDeviceCompletionRoutine+0xa4>
   21978:	e2856024 	add	r6, r5, #36	; 0x24
   2197c:	e1560004 	cmp	r6, r4
   21980:	0a000003 	beq	21994 <USBKeyboardDeviceCompletionRoutine+0x38>
   21984:	e59f21a8 	ldr	r2, [pc, #424]	; 21b34 <USBKeyboardDeviceCompletionRoutine+0x1d8>
   21988:	e59f11a8 	ldr	r1, [pc, #424]	; 21b38 <USBKeyboardDeviceCompletionRoutine+0x1dc>
   2198c:	e59f01a8 	ldr	r0, [pc, #424]	; 21b3c <USBKeyboardDeviceCompletionRoutine+0x1e0>
   21990:	eb00157d 	bl	26f8c <uspi_assertion_failed>
   21994:	e1a00004 	mov	r0, r4
   21998:	ebffe906 	bl	1bdb8 <USBRequestGetStatus>
   2199c:	e3500000 	cmp	r0, #0
   219a0:	1a000005 	bne	219bc <USBKeyboardDeviceCompletionRoutine+0x60>
   219a4:	e1a00006 	mov	r0, r6
   219a8:	ebffe8c2 	bl	1bcb8 <_USBRequest>
   219ac:	e1a00005 	mov	r0, r5
   219b0:	ebffffb2 	bl	21880 <USBKeyboardDeviceStartRequest>
   219b4:	e28dd00c 	add	sp, sp, #12
   219b8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   219bc:	e1a00004 	mov	r0, r4
   219c0:	ebffe909 	bl	1bdec <USBRequestGetResultLength>
   219c4:	e3500008 	cmp	r0, #8
   219c8:	1afffff5 	bne	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   219cc:	e5953020 	ldr	r3, [r5, #32]
   219d0:	e5951048 	ldr	r1, [r5, #72]	; 0x48
   219d4:	e3530000 	cmp	r3, #0
   219d8:	0a00000d 	beq	21a14 <USBKeyboardDeviceCompletionRoutine+0xb8>
   219dc:	e4d10002 	ldrb	r0, [r1], #2
   219e0:	e12fff33 	blx	r3
   219e4:	eaffffee 	b	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   219e8:	e59f2150 	ldr	r2, [pc, #336]	; 21b40 <USBKeyboardDeviceCompletionRoutine+0x1e4>
   219ec:	e59f1144 	ldr	r1, [pc, #324]	; 21b38 <USBKeyboardDeviceCompletionRoutine+0x1dc>
   219f0:	e59f014c 	ldr	r0, [pc, #332]	; 21b44 <USBKeyboardDeviceCompletionRoutine+0x1e8>
   219f4:	eb001564 	bl	26f8c <uspi_assertion_failed>
   219f8:	e3540000 	cmp	r4, #0
   219fc:	1affffdd 	bne	21978 <USBKeyboardDeviceCompletionRoutine+0x1c>
   21a00:	e59f2140 	ldr	r2, [pc, #320]	; 21b48 <USBKeyboardDeviceCompletionRoutine+0x1ec>
   21a04:	e59f112c 	ldr	r1, [pc, #300]	; 21b38 <USBKeyboardDeviceCompletionRoutine+0x1dc>
   21a08:	e59f013c 	ldr	r0, [pc, #316]	; 21b4c <USBKeyboardDeviceCompletionRoutine+0x1f0>
   21a0c:	eb00155e 	bl	26f8c <uspi_assertion_failed>
   21a10:	eaffffd8 	b	21978 <USBKeyboardDeviceCompletionRoutine+0x1c>
   21a14:	e2813008 	add	r3, r1, #8
   21a18:	e2810002 	add	r0, r1, #2
   21a1c:	e5732001 	ldrb	r2, [r3, #-1]!
   21a20:	e3520000 	cmp	r2, #0
   21a24:	1a00000b 	bne	21a58 <USBKeyboardDeviceCompletionRoutine+0xfc>
   21a28:	e1500003 	cmp	r0, r3
   21a2c:	1afffffa 	bne	21a1c <USBKeyboardDeviceCompletionRoutine+0xc0>
   21a30:	e5d5304c 	ldrb	r3, [r5, #76]	; 0x4c
   21a34:	e3530000 	cmp	r3, #0
   21a38:	15c5204c 	strbne	r2, [r5, #76]	; 0x4c
   21a3c:	e5950050 	ldr	r0, [r5, #80]	; 0x50
   21a40:	e3500000 	cmp	r0, #0
   21a44:	0affffd6 	beq	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21a48:	eb0014f0 	bl	26e10 <CancelKernelTimer>
   21a4c:	e3a03000 	mov	r3, #0
   21a50:	e5853050 	str	r3, [r5, #80]	; 0x50
   21a54:	eaffffd2 	b	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21a58:	e5d5304c 	ldrb	r3, [r5, #76]	; 0x4c
   21a5c:	e1530002 	cmp	r3, r2
   21a60:	0afffff5 	beq	21a3c <USBKeyboardDeviceCompletionRoutine+0xe0>
   21a64:	e5c5204c 	strb	r2, [r5, #76]	; 0x4c
   21a68:	e5d17000 	ldrb	r7, [r1]
   21a6c:	e2854054 	add	r4, r5, #84	; 0x54
   21a70:	e1a01002 	mov	r1, r2
   21a74:	e1a00004 	mov	r0, r4
   21a78:	e1a02007 	mov	r2, r7
   21a7c:	eb000c65 	bl	24c18 <KeyMapTranslate>
   21a80:	e2403e13 	sub	r3, r0, #304	; 0x130
   21a84:	e2433003 	sub	r3, r3, #3
   21a88:	e353000f 	cmp	r3, #15
   21a8c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   21a90:	ea00001b 	b	21b04 <USBKeyboardDeviceCompletionRoutine+0x1a8>
   21a94:	000219a4 	andeq	r1, r2, r4, lsr #19
   21a98:	000219a4 	andeq	r1, r2, r4, lsr #19
   21a9c:	000219a4 	andeq	r1, r2, r4, lsr #19
   21aa0:	00021ae8 	andeq	r1, r2, r8, ror #21
   21aa4:	00021ae8 	andeq	r1, r2, r8, ror #21
   21aa8:	00021ae8 	andeq	r1, r2, r8, ror #21
   21aac:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ab0:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ab4:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ab8:	00021ae8 	andeq	r1, r2, r8, ror #21
   21abc:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ac0:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ac4:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ac8:	00021ae8 	andeq	r1, r2, r8, ror #21
   21acc:	00021ae8 	andeq	r1, r2, r8, ror #21
   21ad0:	00021ad4 	ldrdeq	r1, [r2], -r4
   21ad4:	e595301c 	ldr	r3, [r5, #28]
   21ad8:	e3530000 	cmp	r3, #0
   21adc:	0affffb0 	beq	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21ae0:	e12fff33 	blx	r3
   21ae4:	eaffffae 	b	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21ae8:	e5953018 	ldr	r3, [r5, #24]
   21aec:	e3530000 	cmp	r3, #0
   21af0:	0affffab 	beq	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21af4:	e2400f4d 	sub	r0, r0, #308	; 0x134
   21af8:	e2400002 	sub	r0, r0, #2
   21afc:	e12fff33 	blx	r3
   21b00:	eaffffa7 	b	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21b04:	e1a01000 	mov	r1, r0
   21b08:	e1a02007 	mov	r2, r7
   21b0c:	e1a00004 	mov	r0, r4
   21b10:	e28d3004 	add	r3, sp, #4
   21b14:	eb000c93 	bl	24d68 <KeyMapGetString>
   21b18:	e3500000 	cmp	r0, #0
   21b1c:	0affffa0 	beq	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21b20:	e5953014 	ldr	r3, [r5, #20]
   21b24:	e3530000 	cmp	r3, #0
   21b28:	0affff9d 	beq	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21b2c:	e12fff33 	blx	r3
   21b30:	eaffff9b 	b	219a4 <USBKeyboardDeviceCompletionRoutine+0x48>
   21b34:	00000126 	andeq	r0, r0, r6, lsr #2
   21b38:	0002b258 	andeq	fp, r2, r8, asr r2
   21b3c:	0002b2a4 	andeq	fp, r2, r4, lsr #5
   21b40:	00000123 	andeq	r0, r0, r3, lsr #2
   21b44:	00029a68 	andeq	r9, r2, r8, ror #20
   21b48:	00000125 	andeq	r0, r0, r5, lsr #2
   21b4c:	00029b30 	andeq	r9, r2, r0, lsr fp

00021b50 <USBKeyboardDevice>:
   21b50:	e92d4070 	push	{r4, r5, r6, lr}
   21b54:	e2504000 	subs	r4, r0, #0
   21b58:	e1a05001 	mov	r5, r1
   21b5c:	0a00001a 	beq	21bcc <USBKeyboardDevice+0x7c>
   21b60:	e1a01005 	mov	r1, r5
   21b64:	e1a00004 	mov	r0, r4
   21b68:	ebffedc1 	bl	1d274 <USBFunctionCopy>
   21b6c:	e3a03000 	mov	r3, #0
   21b70:	e59f2068 	ldr	r2, [pc, #104]	; 21be0 <USBKeyboardDevice+0x90>
   21b74:	e5843010 	str	r3, [r4, #16]
   21b78:	e5843014 	str	r3, [r4, #20]
   21b7c:	e5843018 	str	r3, [r4, #24]
   21b80:	e584301c 	str	r3, [r4, #28]
   21b84:	e5843020 	str	r3, [r4, #32]
   21b88:	e5843048 	str	r3, [r4, #72]	; 0x48
   21b8c:	e5c4304c 	strb	r3, [r4, #76]	; 0x4c
   21b90:	e5843050 	str	r3, [r4, #80]	; 0x50
   21b94:	e5c43460 	strb	r3, [r4, #1120]	; 0x460
   21b98:	e5842000 	str	r2, [r4]
   21b9c:	e2840054 	add	r0, r4, #84	; 0x54
   21ba0:	eb000bce 	bl	24ae0 <KeyMap>
   21ba4:	e3a00008 	mov	r0, #8
   21ba8:	eb000ce0 	bl	24f30 <malloc>
   21bac:	e3500000 	cmp	r0, #0
   21bb0:	e5840048 	str	r0, [r4, #72]	; 0x48
   21bb4:	18bd8070 	popne	{r4, r5, r6, pc}
   21bb8:	e3a02044 	mov	r2, #68	; 0x44
   21bbc:	e8bd4070 	pop	{r4, r5, r6, lr}
   21bc0:	e59f101c 	ldr	r1, [pc, #28]	; 21be4 <USBKeyboardDevice+0x94>
   21bc4:	e59f001c 	ldr	r0, [pc, #28]	; 21be8 <USBKeyboardDevice+0x98>
   21bc8:	ea0014ef 	b	26f8c <uspi_assertion_failed>
   21bcc:	e3a02032 	mov	r2, #50	; 0x32
   21bd0:	e59f100c 	ldr	r1, [pc, #12]	; 21be4 <USBKeyboardDevice+0x94>
   21bd4:	e59f0010 	ldr	r0, [pc, #16]	; 21bec <USBKeyboardDevice+0x9c>
   21bd8:	eb0014eb 	bl	26f8c <uspi_assertion_failed>
   21bdc:	eaffffdf 	b	21b60 <USBKeyboardDevice+0x10>
   21be0:	00021e8c 	andeq	r1, r2, ip, lsl #29
   21be4:	0002b258 	andeq	fp, r2, r8, asr r2
   21be8:	0002b288 	andeq	fp, r2, r8, lsl #5
   21bec:	00029a68 	andeq	r9, r2, r8, ror #20

00021bf0 <_CUSBKeyboardDevice>:
   21bf0:	e92d4010 	push	{r4, lr}
   21bf4:	e2504000 	subs	r4, r0, #0
   21bf8:	0a000012 	beq	21c48 <_CUSBKeyboardDevice+0x58>
   21bfc:	e5940048 	ldr	r0, [r4, #72]	; 0x48
   21c00:	e3500000 	cmp	r0, #0
   21c04:	0a000002 	beq	21c14 <_CUSBKeyboardDevice+0x24>
   21c08:	eb000d2e 	bl	250c8 <free>
   21c0c:	e3a03000 	mov	r3, #0
   21c10:	e5843048 	str	r3, [r4, #72]	; 0x48
   21c14:	e5940010 	ldr	r0, [r4, #16]
   21c18:	e3500000 	cmp	r0, #0
   21c1c:	0a000004 	beq	21c34 <_CUSBKeyboardDevice+0x44>
   21c20:	ebffe714 	bl	1b878 <_USBEndpoint>
   21c24:	e5940010 	ldr	r0, [r4, #16]
   21c28:	eb000d26 	bl	250c8 <free>
   21c2c:	e3a03000 	mov	r3, #0
   21c30:	e5843010 	str	r3, [r4, #16]
   21c34:	e2840054 	add	r0, r4, #84	; 0x54
   21c38:	eb000bbd 	bl	24b34 <_KeyMap>
   21c3c:	e1a00004 	mov	r0, r4
   21c40:	e8bd4010 	pop	{r4, lr}
   21c44:	eaffedcc 	b	1d37c <_USBFunction>
   21c48:	e3a02049 	mov	r2, #73	; 0x49
   21c4c:	e59f1008 	ldr	r1, [pc, #8]	; 21c5c <_CUSBKeyboardDevice+0x6c>
   21c50:	e59f0008 	ldr	r0, [pc, #8]	; 21c60 <_CUSBKeyboardDevice+0x70>
   21c54:	eb0014cc 	bl	26f8c <uspi_assertion_failed>
   21c58:	eaffffe7 	b	21bfc <_CUSBKeyboardDevice+0xc>
   21c5c:	0002b258 	andeq	fp, r2, r8, asr r2
   21c60:	00029a68 	andeq	r9, r2, r8, ror #20

00021c64 <USBKeyboardDeviceRegisterKeyPressedHandler>:
   21c64:	e92d4070 	push	{r4, r5, r6, lr}
   21c68:	e2505000 	subs	r5, r0, #0
   21c6c:	e1a04001 	mov	r4, r1
   21c70:	0a000003 	beq	21c84 <USBKeyboardDeviceRegisterKeyPressedHandler+0x20>
   21c74:	e3540000 	cmp	r4, #0
   21c78:	0a000007 	beq	21c9c <USBKeyboardDeviceRegisterKeyPressedHandler+0x38>
   21c7c:	e5854014 	str	r4, [r5, #20]
   21c80:	e8bd8070 	pop	{r4, r5, r6, pc}
   21c84:	e3a020a2 	mov	r2, #162	; 0xa2
   21c88:	e59f1024 	ldr	r1, [pc, #36]	; 21cb4 <USBKeyboardDeviceRegisterKeyPressedHandler+0x50>
   21c8c:	e59f0024 	ldr	r0, [pc, #36]	; 21cb8 <USBKeyboardDeviceRegisterKeyPressedHandler+0x54>
   21c90:	eb0014bd 	bl	26f8c <uspi_assertion_failed>
   21c94:	e3540000 	cmp	r4, #0
   21c98:	1afffff7 	bne	21c7c <USBKeyboardDeviceRegisterKeyPressedHandler+0x18>
   21c9c:	e3a020a3 	mov	r2, #163	; 0xa3
   21ca0:	e59f100c 	ldr	r1, [pc, #12]	; 21cb4 <USBKeyboardDeviceRegisterKeyPressedHandler+0x50>
   21ca4:	e59f0010 	ldr	r0, [pc, #16]	; 21cbc <USBKeyboardDeviceRegisterKeyPressedHandler+0x58>
   21ca8:	eb0014b7 	bl	26f8c <uspi_assertion_failed>
   21cac:	e5854014 	str	r4, [r5, #20]
   21cb0:	e8bd8070 	pop	{r4, r5, r6, pc}
   21cb4:	0002b258 	andeq	fp, r2, r8, asr r2
   21cb8:	00029a68 	andeq	r9, r2, r8, ror #20
   21cbc:	0002b2bc 			; <UNDEFINED> instruction: 0x0002b2bc

00021cc0 <USBKeyboardDeviceRegisterSelectConsoleHandler>:
   21cc0:	e92d4070 	push	{r4, r5, r6, lr}
   21cc4:	e2505000 	subs	r5, r0, #0
   21cc8:	e1a04001 	mov	r4, r1
   21ccc:	0a000003 	beq	21ce0 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x20>
   21cd0:	e3540000 	cmp	r4, #0
   21cd4:	0a000007 	beq	21cf8 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x38>
   21cd8:	e5854018 	str	r4, [r5, #24]
   21cdc:	e8bd8070 	pop	{r4, r5, r6, pc}
   21ce0:	e3a020a9 	mov	r2, #169	; 0xa9
   21ce4:	e59f1024 	ldr	r1, [pc, #36]	; 21d10 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x50>
   21ce8:	e59f0024 	ldr	r0, [pc, #36]	; 21d14 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x54>
   21cec:	eb0014a6 	bl	26f8c <uspi_assertion_failed>
   21cf0:	e3540000 	cmp	r4, #0
   21cf4:	1afffff7 	bne	21cd8 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x18>
   21cf8:	e3a020aa 	mov	r2, #170	; 0xaa
   21cfc:	e59f100c 	ldr	r1, [pc, #12]	; 21d10 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x50>
   21d00:	e59f0010 	ldr	r0, [pc, #16]	; 21d18 <USBKeyboardDeviceRegisterSelectConsoleHandler+0x58>
   21d04:	eb0014a0 	bl	26f8c <uspi_assertion_failed>
   21d08:	e5854018 	str	r4, [r5, #24]
   21d0c:	e8bd8070 	pop	{r4, r5, r6, pc}
   21d10:	0002b258 	andeq	fp, r2, r8, asr r2
   21d14:	00029a68 	andeq	r9, r2, r8, ror #20
   21d18:	0002b2d4 	ldrdeq	fp, [r2], -r4

00021d1c <USBKeyboardDeviceRegisterShutdownHandler>:
   21d1c:	e92d4070 	push	{r4, r5, r6, lr}
   21d20:	e2505000 	subs	r5, r0, #0
   21d24:	e1a04001 	mov	r4, r1
   21d28:	0a000003 	beq	21d3c <USBKeyboardDeviceRegisterShutdownHandler+0x20>
   21d2c:	e3540000 	cmp	r4, #0
   21d30:	0a000007 	beq	21d54 <USBKeyboardDeviceRegisterShutdownHandler+0x38>
   21d34:	e585401c 	str	r4, [r5, #28]
   21d38:	e8bd8070 	pop	{r4, r5, r6, pc}
   21d3c:	e3a020b0 	mov	r2, #176	; 0xb0
   21d40:	e59f1024 	ldr	r1, [pc, #36]	; 21d6c <USBKeyboardDeviceRegisterShutdownHandler+0x50>
   21d44:	e59f0024 	ldr	r0, [pc, #36]	; 21d70 <USBKeyboardDeviceRegisterShutdownHandler+0x54>
   21d48:	eb00148f 	bl	26f8c <uspi_assertion_failed>
   21d4c:	e3540000 	cmp	r4, #0
   21d50:	1afffff7 	bne	21d34 <USBKeyboardDeviceRegisterShutdownHandler+0x18>
   21d54:	e3a020b1 	mov	r2, #177	; 0xb1
   21d58:	e59f100c 	ldr	r1, [pc, #12]	; 21d6c <USBKeyboardDeviceRegisterShutdownHandler+0x50>
   21d5c:	e59f0010 	ldr	r0, [pc, #16]	; 21d74 <USBKeyboardDeviceRegisterShutdownHandler+0x58>
   21d60:	eb001489 	bl	26f8c <uspi_assertion_failed>
   21d64:	e585401c 	str	r4, [r5, #28]
   21d68:	e8bd8070 	pop	{r4, r5, r6, pc}
   21d6c:	0002b258 	andeq	fp, r2, r8, asr r2
   21d70:	00029a68 	andeq	r9, r2, r8, ror #20
   21d74:	0002b2f0 	strdeq	fp, [r2], -r0

00021d78 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw>:
   21d78:	e92d4070 	push	{r4, r5, r6, lr}
   21d7c:	e2505000 	subs	r5, r0, #0
   21d80:	e1a04001 	mov	r4, r1
   21d84:	0a000003 	beq	21d98 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x20>
   21d88:	e3540000 	cmp	r4, #0
   21d8c:	0a000007 	beq	21db0 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x38>
   21d90:	e5854020 	str	r4, [r5, #32]
   21d94:	e8bd8070 	pop	{r4, r5, r6, pc}
   21d98:	e3a020c3 	mov	r2, #195	; 0xc3
   21d9c:	e59f1024 	ldr	r1, [pc, #36]	; 21dc8 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x50>
   21da0:	e59f0024 	ldr	r0, [pc, #36]	; 21dcc <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x54>
   21da4:	eb001478 	bl	26f8c <uspi_assertion_failed>
   21da8:	e3540000 	cmp	r4, #0
   21dac:	1afffff7 	bne	21d90 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x18>
   21db0:	e3a020c4 	mov	r2, #196	; 0xc4
   21db4:	e59f100c 	ldr	r1, [pc, #12]	; 21dc8 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x50>
   21db8:	e59f0010 	ldr	r0, [pc, #16]	; 21dd0 <USBKeyboardDeviceRegisterKeyStatusHandlerRaw+0x58>
   21dbc:	eb001472 	bl	26f8c <uspi_assertion_failed>
   21dc0:	e5854020 	str	r4, [r5, #32]
   21dc4:	e8bd8070 	pop	{r4, r5, r6, pc}
   21dc8:	0002b258 	andeq	fp, r2, r8, asr r2
   21dcc:	00029a68 	andeq	r9, r2, r8, ror #20
   21dd0:	0002b308 	andeq	fp, r2, r8, lsl #6

00021dd4 <USBKeyboardDeviceSetLEDs>:
   21dd4:	e92d4070 	push	{r4, r5, r6, lr}
   21dd8:	e2504000 	subs	r4, r0, #0
   21ddc:	e24dd018 	sub	sp, sp, #24
   21de0:	e1a05001 	mov	r5, r1
   21de4:	0a00001f 	beq	21e68 <USBKeyboardDeviceSetLEDs+0x94>
   21de8:	e1a00004 	mov	r0, r4
   21dec:	e5cd5014 	strb	r5, [sp, #20]
   21df0:	ebffedec 	bl	1d5a8 <USBFunctionGetHost>
   21df4:	e1a05000 	mov	r5, r0
   21df8:	e1a00004 	mov	r0, r4
   21dfc:	ebffedd0 	bl	1d544 <USBFunctionGetEndpoint0>
   21e00:	e1a06000 	mov	r6, r0
   21e04:	e1a00004 	mov	r0, r4
   21e08:	ebffeebe 	bl	1d908 <USBFunctionGetInterfaceNumber>
   21e0c:	e3a0c001 	mov	ip, #1
   21e10:	e3a02c02 	mov	r2, #512	; 0x200
   21e14:	e6ff0070 	uxth	r0, r0
   21e18:	e28d3014 	add	r3, sp, #20
   21e1c:	e58d0004 	str	r0, [sp, #4]
   21e20:	e58d2000 	str	r2, [sp]
   21e24:	e58d3008 	str	r3, [sp, #8]
   21e28:	e1a01006 	mov	r1, r6
   21e2c:	e1a00005 	mov	r0, r5
   21e30:	e58dc00c 	str	ip, [sp, #12]
   21e34:	e3a03009 	mov	r3, #9
   21e38:	e3a02021 	mov	r2, #33	; 0x21
   21e3c:	ebffd641 	bl	17748 <DWHCIDeviceControlMessage>
   21e40:	e3500000 	cmp	r0, #0
   21e44:	ba000001 	blt	21e50 <USBKeyboardDeviceSetLEDs+0x7c>
   21e48:	e28dd018 	add	sp, sp, #24
   21e4c:	e8bd8070 	pop	{r4, r5, r6, pc}
   21e50:	e59f2024 	ldr	r2, [pc, #36]	; 21e7c <USBKeyboardDeviceSetLEDs+0xa8>
   21e54:	e3a01002 	mov	r1, #2
   21e58:	e59f0020 	ldr	r0, [pc, #32]	; 21e80 <USBKeyboardDeviceSetLEDs+0xac>
   21e5c:	eb001438 	bl	26f44 <LogWrite>
   21e60:	e28dd018 	add	sp, sp, #24
   21e64:	e8bd8070 	pop	{r4, r5, r6, pc}
   21e68:	e3a020ca 	mov	r2, #202	; 0xca
   21e6c:	e59f1010 	ldr	r1, [pc, #16]	; 21e84 <USBKeyboardDeviceSetLEDs+0xb0>
   21e70:	e59f0010 	ldr	r0, [pc, #16]	; 21e88 <USBKeyboardDeviceSetLEDs+0xb4>
   21e74:	eb001444 	bl	26f8c <uspi_assertion_failed>
   21e78:	eaffffda 	b	21de8 <USBKeyboardDeviceSetLEDs+0x14>
   21e7c:	0002b324 	andeq	fp, r2, r4, lsr #6
   21e80:	00028598 	muleq	r2, r8, r5
   21e84:	0002b258 	andeq	fp, r2, r8, asr r2
   21e88:	00029a68 	andeq	r9, r2, r8, ror #20

00021e8c <USBKeyboardDeviceConfigure>:
   21e8c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   21e90:	e2504000 	subs	r4, r0, #0
   21e94:	e24dd024 	sub	sp, sp, #36	; 0x24
   21e98:	0a000068 	beq	22040 <USBKeyboardDeviceConfigure+0x1b4>
   21e9c:	e1a00004 	mov	r0, r4
   21ea0:	ebffed7a 	bl	1d490 <USBFunctionGetNumEndpoints>
   21ea4:	e2505000 	subs	r5, r0, #0
   21ea8:	0a00005e 	beq	22028 <USBKeyboardDeviceConfigure+0x19c>
   21eac:	e3a01005 	mov	r1, #5
   21eb0:	e1a00004 	mov	r0, r4
   21eb4:	ebffee0d 	bl	1d6f0 <USBFunctionGetDescriptor>
   21eb8:	e2505000 	subs	r5, r0, #0
   21ebc:	0a000019 	beq	21f28 <USBKeyboardDeviceConfigure+0x9c>
   21ec0:	e1d530d2 	ldrsb	r3, [r5, #2]
   21ec4:	e3530000 	cmp	r3, #0
   21ec8:	aafffff7 	bge	21eac <USBKeyboardDeviceConfigure+0x20>
   21ecc:	e5d53003 	ldrb	r3, [r5, #3]
   21ed0:	e203303f 	and	r3, r3, #63	; 0x3f
   21ed4:	e3530003 	cmp	r3, #3
   21ed8:	1afffff3 	bne	21eac <USBKeyboardDeviceConfigure+0x20>
   21edc:	e5943010 	ldr	r3, [r4, #16]
   21ee0:	e3530000 	cmp	r3, #0
   21ee4:	0a000003 	beq	21ef8 <USBKeyboardDeviceConfigure+0x6c>
   21ee8:	e3a02072 	mov	r2, #114	; 0x72
   21eec:	e59f11a8 	ldr	r1, [pc, #424]	; 2209c <USBKeyboardDeviceConfigure+0x210>
   21ef0:	e59f01a8 	ldr	r0, [pc, #424]	; 220a0 <USBKeyboardDeviceConfigure+0x214>
   21ef4:	eb001424 	bl	26f8c <uspi_assertion_failed>
   21ef8:	e3a00018 	mov	r0, #24
   21efc:	eb000c0b 	bl	24f30 <malloc>
   21f00:	e3500000 	cmp	r0, #0
   21f04:	e1a06000 	mov	r6, r0
   21f08:	e5840010 	str	r0, [r4, #16]
   21f0c:	0a000055 	beq	22068 <USBKeyboardDeviceConfigure+0x1dc>
   21f10:	e1a00004 	mov	r0, r4
   21f14:	ebffed76 	bl	1d4f4 <USBFunctionGetDevice>
   21f18:	e1a02005 	mov	r2, r5
   21f1c:	e1a01000 	mov	r1, r0
   21f20:	e1a00006 	mov	r0, r6
   21f24:	ebffe5b4 	bl	1b5fc <USBEndpoint2>
   21f28:	e5945010 	ldr	r5, [r4, #16]
   21f2c:	e1a00004 	mov	r0, r4
   21f30:	e3550000 	cmp	r5, #0
   21f34:	0a000046 	beq	22054 <USBKeyboardDeviceConfigure+0x1c8>
   21f38:	ebffedb3 	bl	1d60c <USBFunctionConfigure>
   21f3c:	e2505000 	subs	r5, r0, #0
   21f40:	0a000031 	beq	2200c <USBKeyboardDeviceConfigure+0x180>
   21f44:	e1a00004 	mov	r0, r4
   21f48:	ebffed96 	bl	1d5a8 <USBFunctionGetHost>
   21f4c:	e1a06000 	mov	r6, r0
   21f50:	e1a00004 	mov	r0, r4
   21f54:	ebffed7a 	bl	1d544 <USBFunctionGetEndpoint0>
   21f58:	e1a07000 	mov	r7, r0
   21f5c:	e1a00004 	mov	r0, r4
   21f60:	ebffee68 	bl	1d908 <USBFunctionGetInterfaceNumber>
   21f64:	e3a05000 	mov	r5, #0
   21f68:	e6ff0070 	uxth	r0, r0
   21f6c:	e58d0004 	str	r0, [sp, #4]
   21f70:	e1a01007 	mov	r1, r7
   21f74:	e1a00006 	mov	r0, r6
   21f78:	e58d500c 	str	r5, [sp, #12]
   21f7c:	e58d5008 	str	r5, [sp, #8]
   21f80:	e58d5000 	str	r5, [sp]
   21f84:	e3a0300b 	mov	r3, #11
   21f88:	e3a02021 	mov	r2, #33	; 0x21
   21f8c:	ebffd5ed 	bl	17748 <DWHCIDeviceControlMessage>
   21f90:	e1500005 	cmp	r0, r5
   21f94:	ba000039 	blt	22080 <USBKeyboardDeviceConfigure+0x1f4>
   21f98:	e5d41460 	ldrb	r1, [r4, #1120]	; 0x460
   21f9c:	e1a00004 	mov	r0, r4
   21fa0:	ebffff8b 	bl	21dd4 <USBKeyboardDeviceSetLEDs>
   21fa4:	e28d0014 	add	r0, sp, #20
   21fa8:	ebfff5d6 	bl	1f708 <String>
   21fac:	e59f30f0 	ldr	r3, [pc, #240]	; 220a4 <USBKeyboardDeviceConfigure+0x218>
   21fb0:	e59f10f0 	ldr	r1, [pc, #240]	; 220a8 <USBKeyboardDeviceConfigure+0x21c>
   21fb4:	e5932000 	ldr	r2, [r3]
   21fb8:	e28d0014 	add	r0, sp, #20
   21fbc:	e282c001 	add	ip, r2, #1
   21fc0:	e583c000 	str	ip, [r3]
   21fc4:	ebfff88e 	bl	20204 <StringFormat>
   21fc8:	ebffeb65 	bl	1cd64 <DeviceNameServiceGet>
   21fcc:	e1a06000 	mov	r6, r0
   21fd0:	e28d0014 	add	r0, sp, #20
   21fd4:	ebfff5fe 	bl	1f7d4 <StringGet>
   21fd8:	e1a03005 	mov	r3, r5
   21fdc:	e1a01000 	mov	r1, r0
   21fe0:	e1a02004 	mov	r2, r4
   21fe4:	e1a00006 	mov	r0, r6
   21fe8:	ebffeade 	bl	1cb68 <DeviceNameServiceAddDevice>
   21fec:	e28d0014 	add	r0, sp, #20
   21ff0:	ebfff5e6 	bl	1f790 <_String>
   21ff4:	e1a00004 	mov	r0, r4
   21ff8:	ebfffe20 	bl	21880 <USBKeyboardDeviceStartRequest>
   21ffc:	e1a05000 	mov	r5, r0
   22000:	e1a00005 	mov	r0, r5
   22004:	e28dd024 	add	sp, sp, #36	; 0x24
   22008:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2200c:	e59f2098 	ldr	r2, [pc, #152]	; 220ac <USBKeyboardDeviceConfigure+0x220>
   22010:	e3a01001 	mov	r1, #1
   22014:	e59f0094 	ldr	r0, [pc, #148]	; 220b0 <USBKeyboardDeviceConfigure+0x224>
   22018:	eb0013c9 	bl	26f44 <LogWrite>
   2201c:	e1a00005 	mov	r0, r5
   22020:	e28dd024 	add	sp, sp, #36	; 0x24
   22024:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22028:	e1a00004 	mov	r0, r4
   2202c:	e59f107c 	ldr	r1, [pc, #124]	; 220b0 <USBKeyboardDeviceConfigure+0x224>
   22030:	ebffedca 	bl	1d760 <USBFunctionConfigurationError>
   22034:	e1a00005 	mov	r0, r5
   22038:	e28dd024 	add	sp, sp, #36	; 0x24
   2203c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22040:	e3a0205f 	mov	r2, #95	; 0x5f
   22044:	e59f1050 	ldr	r1, [pc, #80]	; 2209c <USBKeyboardDeviceConfigure+0x210>
   22048:	e59f0064 	ldr	r0, [pc, #100]	; 220b4 <USBKeyboardDeviceConfigure+0x228>
   2204c:	eb0013ce 	bl	26f8c <uspi_assertion_failed>
   22050:	eaffff91 	b	21e9c <USBKeyboardDeviceConfigure+0x10>
   22054:	e59f1054 	ldr	r1, [pc, #84]	; 220b0 <USBKeyboardDeviceConfigure+0x224>
   22058:	ebffedc0 	bl	1d760 <USBFunctionConfigurationError>
   2205c:	e1a00005 	mov	r0, r5
   22060:	e28dd024 	add	sp, sp, #36	; 0x24
   22064:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22068:	e3a02074 	mov	r2, #116	; 0x74
   2206c:	e59f1028 	ldr	r1, [pc, #40]	; 2209c <USBKeyboardDeviceConfigure+0x210>
   22070:	e59f0040 	ldr	r0, [pc, #64]	; 220b8 <USBKeyboardDeviceConfigure+0x22c>
   22074:	eb0013c4 	bl	26f8c <uspi_assertion_failed>
   22078:	e5946010 	ldr	r6, [r4, #16]
   2207c:	eaffffa3 	b	21f10 <USBKeyboardDeviceConfigure+0x84>
   22080:	e59f2034 	ldr	r2, [pc, #52]	; 220bc <USBKeyboardDeviceConfigure+0x230>
   22084:	e3a01001 	mov	r1, #1
   22088:	e59f0020 	ldr	r0, [pc, #32]	; 220b0 <USBKeyboardDeviceConfigure+0x224>
   2208c:	eb0013ac 	bl	26f44 <LogWrite>
   22090:	e1a00005 	mov	r0, r5
   22094:	e28dd024 	add	sp, sp, #36	; 0x24
   22098:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   2209c:	0002b258 	andeq	fp, r2, r8, asr r2
   220a0:	0002b334 	andeq	fp, r2, r4, lsr r3
   220a4:	0002bcdc 	ldrdeq	fp, [r2], -ip
   220a8:	0002b370 	andeq	fp, r2, r0, ror r3
   220ac:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   220b0:	00028598 	muleq	r2, r8, r5
   220b4:	00029a68 	andeq	r9, r2, r8, ror #20
   220b8:	0002b268 	andeq	fp, r2, r8, ror #4
   220bc:	0002b354 	andeq	fp, r2, r4, asr r3

000220c0 <USBKeyboardDeviceUpdateLEDs>:
   220c0:	e92d4070 	push	{r4, r5, r6, lr}
   220c4:	e2504000 	subs	r4, r0, #0
   220c8:	0a00000a 	beq	220f8 <USBKeyboardDeviceUpdateLEDs+0x38>
   220cc:	e2840054 	add	r0, r4, #84	; 0x54
   220d0:	eb000b67 	bl	24e74 <KeyMapGetLEDStatus>
   220d4:	e5d43460 	ldrb	r3, [r4, #1120]	; 0x460
   220d8:	e1a05000 	mov	r5, r0
   220dc:	e1530000 	cmp	r3, r0
   220e0:	08bd8070 	popeq	{r4, r5, r6, pc}
   220e4:	e1a01000 	mov	r1, r0
   220e8:	e1a00004 	mov	r0, r4
   220ec:	ebffff38 	bl	21dd4 <USBKeyboardDeviceSetLEDs>
   220f0:	e5c45460 	strb	r5, [r4, #1120]	; 0x460
   220f4:	e8bd8070 	pop	{r4, r5, r6, pc}
   220f8:	e3a020b7 	mov	r2, #183	; 0xb7
   220fc:	e59f1008 	ldr	r1, [pc, #8]	; 2210c <USBKeyboardDeviceUpdateLEDs+0x4c>
   22100:	e59f0008 	ldr	r0, [pc, #8]	; 22110 <USBKeyboardDeviceUpdateLEDs+0x50>
   22104:	eb0013a0 	bl	26f8c <uspi_assertion_failed>
   22108:	eaffffef 	b	220cc <USBKeyboardDeviceUpdateLEDs+0xc>
   2210c:	0002b258 	andeq	fp, r2, r8, asr r2
   22110:	00029a68 	andeq	r9, r2, r8, ror #20

00022114 <DWHCIRootPort>:
   22114:	e92d4070 	push	{r4, r5, r6, lr}
   22118:	e2504000 	subs	r4, r0, #0
   2211c:	e1a05001 	mov	r5, r1
   22120:	0a000009 	beq	2214c <DWHCIRootPort+0x38>
   22124:	e3a03000 	mov	r3, #0
   22128:	e1550003 	cmp	r5, r3
   2212c:	e5845000 	str	r5, [r4]
   22130:	e5843004 	str	r3, [r4, #4]
   22134:	18bd8070 	popne	{r4, r5, r6, pc}
   22138:	e3a02024 	mov	r2, #36	; 0x24
   2213c:	e8bd4070 	pop	{r4, r5, r6, lr}
   22140:	e59f1018 	ldr	r1, [pc, #24]	; 22160 <DWHCIRootPort+0x4c>
   22144:	e59f0018 	ldr	r0, [pc, #24]	; 22164 <DWHCIRootPort+0x50>
   22148:	ea00138f 	b	26f8c <uspi_assertion_failed>
   2214c:	e3a0201f 	mov	r2, #31
   22150:	e59f1008 	ldr	r1, [pc, #8]	; 22160 <DWHCIRootPort+0x4c>
   22154:	e59f000c 	ldr	r0, [pc, #12]	; 22168 <DWHCIRootPort+0x54>
   22158:	eb00138b 	bl	26f8c <uspi_assertion_failed>
   2215c:	eafffff0 	b	22124 <DWHCIRootPort+0x10>
   22160:	0002b378 	andeq	fp, r2, r8, ror r3
   22164:	0002a1a0 	andeq	sl, r2, r0, lsr #3
   22168:	00029a68 	andeq	r9, r2, r8, ror #20

0002216c <_DWHCIRootPort>:
   2216c:	e92d4010 	push	{r4, lr}
   22170:	e2504000 	subs	r4, r0, #0
   22174:	0a00000a 	beq	221a4 <_DWHCIRootPort+0x38>
   22178:	e5940004 	ldr	r0, [r4, #4]
   2217c:	e3500000 	cmp	r0, #0
   22180:	0a000004 	beq	22198 <_DWHCIRootPort+0x2c>
   22184:	ebffe01b 	bl	1a1f8 <_USBDevice>
   22188:	e5940004 	ldr	r0, [r4, #4]
   2218c:	eb000bcd 	bl	250c8 <free>
   22190:	e3a03000 	mov	r3, #0
   22194:	e5843004 	str	r3, [r4, #4]
   22198:	e3a03000 	mov	r3, #0
   2219c:	e5843000 	str	r3, [r4]
   221a0:	e8bd8010 	pop	{r4, pc}
   221a4:	e3a02029 	mov	r2, #41	; 0x29
   221a8:	e59f1008 	ldr	r1, [pc, #8]	; 221b8 <_DWHCIRootPort+0x4c>
   221ac:	e59f0008 	ldr	r0, [pc, #8]	; 221bc <_DWHCIRootPort+0x50>
   221b0:	eb001375 	bl	26f8c <uspi_assertion_failed>
   221b4:	eaffffef 	b	22178 <_DWHCIRootPort+0xc>
   221b8:	0002b378 	andeq	fp, r2, r8, ror r3
   221bc:	00029a68 	andeq	r9, r2, r8, ror #20

000221c0 <DWHCIRootPortInitialize>:
   221c0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   221c4:	e2504000 	subs	r4, r0, #0
   221c8:	e24dd00c 	sub	sp, sp, #12
   221cc:	0a000039 	beq	222b8 <DWHCIRootPortInitialize+0xf8>
   221d0:	e5940000 	ldr	r0, [r4]
   221d4:	e3500000 	cmp	r0, #0
   221d8:	0a00003d 	beq	222d4 <DWHCIRootPortInitialize+0x114>
   221dc:	ebffda14 	bl	18a34 <DWHCIDeviceGetPortSpeed>
   221e0:	e3500003 	cmp	r0, #3
   221e4:	e1a05000 	mov	r5, r0
   221e8:	0a000042 	beq	222f8 <DWHCIRootPortInitialize+0x138>
   221ec:	e5943004 	ldr	r3, [r4, #4]
   221f0:	e3530000 	cmp	r3, #0
   221f4:	0a000003 	beq	22208 <DWHCIRootPortInitialize+0x48>
   221f8:	e3a02043 	mov	r2, #67	; 0x43
   221fc:	e59f1160 	ldr	r1, [pc, #352]	; 22364 <DWHCIRootPortInitialize+0x1a4>
   22200:	e59f0160 	ldr	r0, [pc, #352]	; 22368 <DWHCIRootPortInitialize+0x1a8>
   22204:	eb001360 	bl	26f8c <uspi_assertion_failed>
   22208:	e3a00060 	mov	r0, #96	; 0x60
   2220c:	eb000b47 	bl	24f30 <malloc>
   22210:	e3500000 	cmp	r0, #0
   22214:	e5840004 	str	r0, [r4, #4]
   22218:	0a00003e 	beq	22318 <DWHCIRootPortInitialize+0x158>
   2221c:	e3a06000 	mov	r6, #0
   22220:	e3a07001 	mov	r7, #1
   22224:	e1cd60f0 	strd	r6, [sp]
   22228:	e1a02005 	mov	r2, r5
   2222c:	e5941000 	ldr	r1, [r4]
   22230:	e1a03006 	mov	r3, r6
   22234:	ebffdf9f 	bl	1a0b8 <USBDevice>
   22238:	e5940004 	ldr	r0, [r4, #4]
   2223c:	ebffe1fd 	bl	1aa38 <USBDeviceInitialize>
   22240:	e2505000 	subs	r5, r0, #0
   22244:	e5940004 	ldr	r0, [r4, #4]
   22248:	0a000013 	beq	2229c <DWHCIRootPortInitialize+0xdc>
   2224c:	ebffe3be 	bl	1b14c <USBDeviceConfigure>
   22250:	e2505000 	subs	r5, r0, #0
   22254:	0a00000b 	beq	22288 <DWHCIRootPortInitialize+0xc8>
   22258:	e59f210c 	ldr	r2, [pc, #268]	; 2236c <DWHCIRootPortInitialize+0x1ac>
   2225c:	e3a01004 	mov	r1, #4
   22260:	e59f0108 	ldr	r0, [pc, #264]	; 22370 <DWHCIRootPortInitialize+0x1b0>
   22264:	eb001336 	bl	26f44 <LogWrite>
   22268:	e5940000 	ldr	r0, [r4]
   2226c:	ebffda0f 	bl	18ab0 <DWHCIDeviceOvercurrentDetected>
   22270:	e3500000 	cmp	r0, #0
   22274:	01a05007 	moveq	r5, r7
   22278:	1a00002c 	bne	22330 <DWHCIRootPortInitialize+0x170>
   2227c:	e1a00005 	mov	r0, r5
   22280:	e28dd00c 	add	sp, sp, #12
   22284:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22288:	e59f00e0 	ldr	r0, [pc, #224]	; 22370 <DWHCIRootPortInitialize+0x1b0>
   2228c:	e1a01007 	mov	r1, r7
   22290:	e59f20dc 	ldr	r2, [pc, #220]	; 22374 <DWHCIRootPortInitialize+0x1b4>
   22294:	eb00132a 	bl	26f44 <LogWrite>
   22298:	e5940004 	ldr	r0, [r4, #4]
   2229c:	ebffdfd5 	bl	1a1f8 <_USBDevice>
   222a0:	e5940004 	ldr	r0, [r4, #4]
   222a4:	eb000b87 	bl	250c8 <free>
   222a8:	e1a00005 	mov	r0, r5
   222ac:	e5845004 	str	r5, [r4, #4]
   222b0:	e28dd00c 	add	sp, sp, #12
   222b4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   222b8:	e59f00b8 	ldr	r0, [pc, #184]	; 22378 <DWHCIRootPortInitialize+0x1b8>
   222bc:	e3a02037 	mov	r2, #55	; 0x37
   222c0:	e59f109c 	ldr	r1, [pc, #156]	; 22364 <DWHCIRootPortInitialize+0x1a4>
   222c4:	eb001330 	bl	26f8c <uspi_assertion_failed>
   222c8:	e5940000 	ldr	r0, [r4]
   222cc:	e3500000 	cmp	r0, #0
   222d0:	1affffc1 	bne	221dc <DWHCIRootPortInitialize+0x1c>
   222d4:	e3a02039 	mov	r2, #57	; 0x39
   222d8:	e59f1084 	ldr	r1, [pc, #132]	; 22364 <DWHCIRootPortInitialize+0x1a4>
   222dc:	e59f0098 	ldr	r0, [pc, #152]	; 2237c <DWHCIRootPortInitialize+0x1bc>
   222e0:	eb001329 	bl	26f8c <uspi_assertion_failed>
   222e4:	e5940000 	ldr	r0, [r4]
   222e8:	ebffd9d1 	bl	18a34 <DWHCIDeviceGetPortSpeed>
   222ec:	e3500003 	cmp	r0, #3
   222f0:	e1a05000 	mov	r5, r0
   222f4:	1affffbc 	bne	221ec <DWHCIRootPortInitialize+0x2c>
   222f8:	e3a05000 	mov	r5, #0
   222fc:	e59f207c 	ldr	r2, [pc, #124]	; 22380 <DWHCIRootPortInitialize+0x1c0>
   22300:	e3a01001 	mov	r1, #1
   22304:	e59f0064 	ldr	r0, [pc, #100]	; 22370 <DWHCIRootPortInitialize+0x1b0>
   22308:	eb00130d 	bl	26f44 <LogWrite>
   2230c:	e1a00005 	mov	r0, r5
   22310:	e28dd00c 	add	sp, sp, #12
   22314:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22318:	e59f0064 	ldr	r0, [pc, #100]	; 22384 <DWHCIRootPortInitialize+0x1c4>
   2231c:	e3a02045 	mov	r2, #69	; 0x45
   22320:	e59f103c 	ldr	r1, [pc, #60]	; 22364 <DWHCIRootPortInitialize+0x1a4>
   22324:	eb001318 	bl	26f8c <uspi_assertion_failed>
   22328:	e5940004 	ldr	r0, [r4, #4]
   2232c:	eaffffba 	b	2221c <DWHCIRootPortInitialize+0x5c>
   22330:	e1a01007 	mov	r1, r7
   22334:	e59f204c 	ldr	r2, [pc, #76]	; 22388 <DWHCIRootPortInitialize+0x1c8>
   22338:	e59f0030 	ldr	r0, [pc, #48]	; 22370 <DWHCIRootPortInitialize+0x1b0>
   2233c:	eb001300 	bl	26f44 <LogWrite>
   22340:	e5940000 	ldr	r0, [r4]
   22344:	ebffd9f6 	bl	18b24 <DWHCIDeviceDisableRootPort>
   22348:	e5940004 	ldr	r0, [r4, #4]
   2234c:	ebffdfa9 	bl	1a1f8 <_USBDevice>
   22350:	e5940004 	ldr	r0, [r4, #4]
   22354:	eb000b5b 	bl	250c8 <free>
   22358:	e1a05006 	mov	r5, r6
   2235c:	e5846004 	str	r6, [r4, #4]
   22360:	eaffffc5 	b	2227c <DWHCIRootPortInitialize+0xbc>
   22364:	0002b378 	andeq	fp, r2, r8, ror r3
   22368:	0002b3a4 	andeq	fp, r2, r4, lsr #7
   2236c:	0002b3d4 	ldrdeq	fp, [r2], -r4
   22370:	000285a0 	andeq	r8, r2, r0, lsr #11
   22374:	0002b3bc 			; <UNDEFINED> instruction: 0x0002b3bc
   22378:	00029a68 	andeq	r9, r2, r8, ror #20
   2237c:	0002a1a0 	andeq	sl, r2, r0, lsr #3
   22380:	0002b388 	andeq	fp, r2, r8, lsl #7
   22384:	0002a108 	andeq	sl, r2, r8, lsl #2
   22388:	0002b3e8 	andeq	fp, r2, r8, ror #7

0002238c <USBMouseDeviceStartRequest>:
   2238c:	e92d4070 	push	{r4, r5, r6, lr}
   22390:	e2504000 	subs	r4, r0, #0
   22394:	e24dd008 	sub	sp, sp, #8
   22398:	0a000017 	beq	223fc <USBMouseDeviceStartRequest+0x70>
   2239c:	e5943010 	ldr	r3, [r4, #16]
   223a0:	e3530000 	cmp	r3, #0
   223a4:	0a00001b 	beq	22418 <USBMouseDeviceStartRequest+0x8c>
   223a8:	e5942044 	ldr	r2, [r4, #68]	; 0x44
   223ac:	e3520000 	cmp	r2, #0
   223b0:	0a00001f 	beq	22434 <USBMouseDeviceStartRequest+0xa8>
   223b4:	e3a06000 	mov	r6, #0
   223b8:	e2845020 	add	r5, r4, #32
   223bc:	e58d6000 	str	r6, [sp]
   223c0:	e5941010 	ldr	r1, [r4, #16]
   223c4:	e1a00005 	mov	r0, r5
   223c8:	e3a03003 	mov	r3, #3
   223cc:	ebffe609 	bl	1bbf8 <USBRequest>
   223d0:	e1a03004 	mov	r3, r4
   223d4:	e1a02006 	mov	r2, r6
   223d8:	e1a00005 	mov	r0, r5
   223dc:	e59f1068 	ldr	r1, [pc, #104]	; 2244c <USBMouseDeviceStartRequest+0xc0>
   223e0:	ebffe6d9 	bl	1bf4c <USBRequestSetCompletionRoutine>
   223e4:	e1a00004 	mov	r0, r4
   223e8:	ebffec6e 	bl	1d5a8 <USBFunctionGetHost>
   223ec:	e1a01005 	mov	r1, r5
   223f0:	e28dd008 	add	sp, sp, #8
   223f4:	e8bd4070 	pop	{r4, r5, r6, lr}
   223f8:	eaffd3be 	b	172f8 <DWHCIDeviceSubmitAsyncRequest>
   223fc:	e3a020b4 	mov	r2, #180	; 0xb4
   22400:	e59f1048 	ldr	r1, [pc, #72]	; 22450 <USBMouseDeviceStartRequest+0xc4>
   22404:	e59f0048 	ldr	r0, [pc, #72]	; 22454 <USBMouseDeviceStartRequest+0xc8>
   22408:	eb0012df 	bl	26f8c <uspi_assertion_failed>
   2240c:	e5943010 	ldr	r3, [r4, #16]
   22410:	e3530000 	cmp	r3, #0
   22414:	1affffe3 	bne	223a8 <USBMouseDeviceStartRequest+0x1c>
   22418:	e3a020b6 	mov	r2, #182	; 0xb6
   2241c:	e59f102c 	ldr	r1, [pc, #44]	; 22450 <USBMouseDeviceStartRequest+0xc4>
   22420:	e59f0030 	ldr	r0, [pc, #48]	; 22458 <USBMouseDeviceStartRequest+0xcc>
   22424:	eb0012d8 	bl	26f8c <uspi_assertion_failed>
   22428:	e5942044 	ldr	r2, [r4, #68]	; 0x44
   2242c:	e3520000 	cmp	r2, #0
   22430:	1affffdf 	bne	223b4 <USBMouseDeviceStartRequest+0x28>
   22434:	e3a020b7 	mov	r2, #183	; 0xb7
   22438:	e59f1010 	ldr	r1, [pc, #16]	; 22450 <USBMouseDeviceStartRequest+0xc4>
   2243c:	e59f0018 	ldr	r0, [pc, #24]	; 2245c <USBMouseDeviceStartRequest+0xd0>
   22440:	eb0012d1 	bl	26f8c <uspi_assertion_failed>
   22444:	e5942044 	ldr	r2, [r4, #68]	; 0x44
   22448:	eaffffd9 	b	223b4 <USBMouseDeviceStartRequest+0x28>
   2244c:	0002275c 	andeq	r2, r2, ip, asr r7
   22450:	0002b400 	andeq	fp, r2, r0, lsl #8
   22454:	00029a68 	andeq	r9, r2, r8, ror #20
   22458:	0002b268 	andeq	fp, r2, r8, ror #4
   2245c:	0002b288 	andeq	fp, r2, r8, lsl #5

00022460 <USBMouseDeviceConfigure>:
   22460:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   22464:	e2504000 	subs	r4, r0, #0
   22468:	e24dd020 	sub	sp, sp, #32
   2246c:	0a000095 	beq	226c8 <USBMouseDeviceConfigure+0x268>
   22470:	e1a00004 	mov	r0, r4
   22474:	ebffec05 	bl	1d490 <USBFunctionGetNumEndpoints>
   22478:	e2505000 	subs	r5, r0, #0
   2247c:	0a000083 	beq	22690 <USBMouseDeviceConfigure+0x230>
   22480:	e3a01021 	mov	r1, #33	; 0x21
   22484:	e1a00004 	mov	r0, r4
   22488:	ebffec98 	bl	1d6f0 <USBFunctionGetDescriptor>
   2248c:	e2506000 	subs	r6, r0, #0
   22490:	0a000077 	beq	22674 <USBMouseDeviceConfigure+0x214>
   22494:	e5d63007 	ldrb	r3, [r6, #7]
   22498:	e5d62008 	ldrb	r2, [r6, #8]
   2249c:	e1933402 	orrs	r3, r3, r2, lsl #8
   224a0:	0a000073 	beq	22674 <USBMouseDeviceConfigure+0x214>
   224a4:	e3a01005 	mov	r1, #5
   224a8:	e1a00004 	mov	r0, r4
   224ac:	ebffec8f 	bl	1d6f0 <USBFunctionGetDescriptor>
   224b0:	e2505000 	subs	r5, r0, #0
   224b4:	0a000019 	beq	22520 <USBMouseDeviceConfigure+0xc0>
   224b8:	e1d530d2 	ldrsb	r3, [r5, #2]
   224bc:	e3530000 	cmp	r3, #0
   224c0:	aafffff7 	bge	224a4 <USBMouseDeviceConfigure+0x44>
   224c4:	e5d53003 	ldrb	r3, [r5, #3]
   224c8:	e203303f 	and	r3, r3, #63	; 0x3f
   224cc:	e3530003 	cmp	r3, #3
   224d0:	1afffff3 	bne	224a4 <USBMouseDeviceConfigure+0x44>
   224d4:	e5943010 	ldr	r3, [r4, #16]
   224d8:	e3530000 	cmp	r3, #0
   224dc:	0a000003 	beq	224f0 <USBMouseDeviceConfigure+0x90>
   224e0:	e3a0206e 	mov	r2, #110	; 0x6e
   224e4:	e59f1244 	ldr	r1, [pc, #580]	; 22730 <USBMouseDeviceConfigure+0x2d0>
   224e8:	e59f0244 	ldr	r0, [pc, #580]	; 22734 <USBMouseDeviceConfigure+0x2d4>
   224ec:	eb0012a6 	bl	26f8c <uspi_assertion_failed>
   224f0:	e3a00018 	mov	r0, #24
   224f4:	eb000a8d 	bl	24f30 <malloc>
   224f8:	e3500000 	cmp	r0, #0
   224fc:	e1a07000 	mov	r7, r0
   22500:	e5840010 	str	r0, [r4, #16]
   22504:	0a000074 	beq	226dc <USBMouseDeviceConfigure+0x27c>
   22508:	e1a00004 	mov	r0, r4
   2250c:	ebffebf8 	bl	1d4f4 <USBFunctionGetDevice>
   22510:	e1a02005 	mov	r2, r5
   22514:	e1a01000 	mov	r1, r0
   22518:	e1a00007 	mov	r0, r7
   2251c:	ebffe436 	bl	1b5fc <USBEndpoint2>
   22520:	e5945010 	ldr	r5, [r4, #16]
   22524:	e3550000 	cmp	r5, #0
   22528:	0a000058 	beq	22690 <USBMouseDeviceConfigure+0x230>
   2252c:	e5d60007 	ldrb	r0, [r6, #7]
   22530:	e5d63008 	ldrb	r3, [r6, #8]
   22534:	e1800403 	orr	r0, r0, r3, lsl #8
   22538:	e1c401b8 	strh	r0, [r4, #24]
   2253c:	eb000a7b 	bl	24f30 <malloc>
   22540:	e3500000 	cmp	r0, #0
   22544:	e584001c 	str	r0, [r4, #28]
   22548:	0a000069 	beq	226f4 <USBMouseDeviceConfigure+0x294>
   2254c:	e1a00004 	mov	r0, r4
   22550:	ebffec14 	bl	1d5a8 <USBFunctionGetHost>
   22554:	e1a07000 	mov	r7, r0
   22558:	e1a00004 	mov	r0, r4
   2255c:	ebffebf8 	bl	1d544 <USBFunctionGetEndpoint0>
   22560:	e1a08000 	mov	r8, r0
   22564:	e1a00004 	mov	r0, r4
   22568:	e5d65006 	ldrb	r5, [r6, #6]
   2256c:	ebffece5 	bl	1d908 <USBFunctionGetInterfaceNumber>
   22570:	e1d421b8 	ldrh	r2, [r4, #24]
   22574:	e6ff3070 	uxth	r3, r0
   22578:	e58d200c 	str	r2, [sp, #12]
   2257c:	e594201c 	ldr	r2, [r4, #28]
   22580:	e1a05405 	lsl	r5, r5, #8
   22584:	e58d2008 	str	r2, [sp, #8]
   22588:	e58d3004 	str	r3, [sp, #4]
   2258c:	e1a01008 	mov	r1, r8
   22590:	e3a03006 	mov	r3, #6
   22594:	e1a00007 	mov	r0, r7
   22598:	e58d5000 	str	r5, [sp]
   2259c:	e3a02081 	mov	r2, #129	; 0x81
   225a0:	ebffd468 	bl	17748 <DWHCIDeviceControlMessage>
   225a4:	e1d431b8 	ldrh	r3, [r4, #24]
   225a8:	e1500003 	cmp	r0, r3
   225ac:	1a00003d 	bne	226a8 <USBMouseDeviceConfigure+0x248>
   225b0:	e1a00004 	mov	r0, r4
   225b4:	ebffec14 	bl	1d60c <USBFunctionConfigure>
   225b8:	e2505000 	subs	r5, r0, #0
   225bc:	0a000051 	beq	22708 <USBMouseDeviceConfigure+0x2a8>
   225c0:	e1a00004 	mov	r0, r4
   225c4:	ebffebf7 	bl	1d5a8 <USBFunctionGetHost>
   225c8:	e1a06000 	mov	r6, r0
   225cc:	e1a00004 	mov	r0, r4
   225d0:	ebffebdb 	bl	1d544 <USBFunctionGetEndpoint0>
   225d4:	e1a07000 	mov	r7, r0
   225d8:	e1a00004 	mov	r0, r4
   225dc:	ebffecc9 	bl	1d908 <USBFunctionGetInterfaceNumber>
   225e0:	e3a05000 	mov	r5, #0
   225e4:	e6ff0070 	uxth	r0, r0
   225e8:	e58d0004 	str	r0, [sp, #4]
   225ec:	e1a01007 	mov	r1, r7
   225f0:	e1a00006 	mov	r0, r6
   225f4:	e58d500c 	str	r5, [sp, #12]
   225f8:	e58d5008 	str	r5, [sp, #8]
   225fc:	e58d5000 	str	r5, [sp]
   22600:	e3a0300b 	mov	r3, #11
   22604:	e3a02021 	mov	r2, #33	; 0x21
   22608:	ebffd44e 	bl	17748 <DWHCIDeviceControlMessage>
   2260c:	e1500005 	cmp	r0, r5
   22610:	ba000041 	blt	2271c <USBMouseDeviceConfigure+0x2bc>
   22614:	e28d0014 	add	r0, sp, #20
   22618:	ebfff43a 	bl	1f708 <String>
   2261c:	e59f3114 	ldr	r3, [pc, #276]	; 22738 <USBMouseDeviceConfigure+0x2d8>
   22620:	e59f1114 	ldr	r1, [pc, #276]	; 2273c <USBMouseDeviceConfigure+0x2dc>
   22624:	e5932000 	ldr	r2, [r3]
   22628:	e28d0014 	add	r0, sp, #20
   2262c:	e282c001 	add	ip, r2, #1
   22630:	e583c000 	str	ip, [r3]
   22634:	ebfff6f2 	bl	20204 <StringFormat>
   22638:	ebffe9c9 	bl	1cd64 <DeviceNameServiceGet>
   2263c:	e1a06000 	mov	r6, r0
   22640:	e28d0014 	add	r0, sp, #20
   22644:	ebfff462 	bl	1f7d4 <StringGet>
   22648:	e1a03005 	mov	r3, r5
   2264c:	e1a01000 	mov	r1, r0
   22650:	e1a02004 	mov	r2, r4
   22654:	e1a00006 	mov	r0, r6
   22658:	ebffe942 	bl	1cb68 <DeviceNameServiceAddDevice>
   2265c:	e28d0014 	add	r0, sp, #20
   22660:	ebfff44a 	bl	1f790 <_String>
   22664:	e1a00004 	mov	r0, r4
   22668:	ebffff47 	bl	2238c <USBMouseDeviceStartRequest>
   2266c:	e1a05000 	mov	r5, r0
   22670:	ea000003 	b	22684 <USBMouseDeviceConfigure+0x224>
   22674:	e1a00004 	mov	r0, r4
   22678:	e59f10c0 	ldr	r1, [pc, #192]	; 22740 <USBMouseDeviceConfigure+0x2e0>
   2267c:	ebffec37 	bl	1d760 <USBFunctionConfigurationError>
   22680:	e3a05000 	mov	r5, #0
   22684:	e1a00005 	mov	r0, r5
   22688:	e28dd020 	add	sp, sp, #32
   2268c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   22690:	e1a00004 	mov	r0, r4
   22694:	e59f10a4 	ldr	r1, [pc, #164]	; 22740 <USBMouseDeviceConfigure+0x2e0>
   22698:	ebffec30 	bl	1d760 <USBFunctionConfigurationError>
   2269c:	e1a00005 	mov	r0, r5
   226a0:	e28dd020 	add	sp, sp, #32
   226a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   226a8:	e3a05000 	mov	r5, #0
   226ac:	e59f2090 	ldr	r2, [pc, #144]	; 22744 <USBMouseDeviceConfigure+0x2e4>
   226b0:	e3a01001 	mov	r1, #1
   226b4:	e59f0084 	ldr	r0, [pc, #132]	; 22740 <USBMouseDeviceConfigure+0x2e0>
   226b8:	eb001221 	bl	26f44 <LogWrite>
   226bc:	e1a00005 	mov	r0, r5
   226c0:	e28dd020 	add	sp, sp, #32
   226c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   226c8:	e3a02051 	mov	r2, #81	; 0x51
   226cc:	e59f105c 	ldr	r1, [pc, #92]	; 22730 <USBMouseDeviceConfigure+0x2d0>
   226d0:	e59f0070 	ldr	r0, [pc, #112]	; 22748 <USBMouseDeviceConfigure+0x2e8>
   226d4:	eb00122c 	bl	26f8c <uspi_assertion_failed>
   226d8:	eaffff64 	b	22470 <USBMouseDeviceConfigure+0x10>
   226dc:	e3a02070 	mov	r2, #112	; 0x70
   226e0:	e59f1048 	ldr	r1, [pc, #72]	; 22730 <USBMouseDeviceConfigure+0x2d0>
   226e4:	e59f0060 	ldr	r0, [pc, #96]	; 2274c <USBMouseDeviceConfigure+0x2ec>
   226e8:	eb001227 	bl	26f8c <uspi_assertion_failed>
   226ec:	e5947010 	ldr	r7, [r4, #16]
   226f0:	eaffff84 	b	22508 <USBMouseDeviceConfigure+0xa8>
   226f4:	e3a0207f 	mov	r2, #127	; 0x7f
   226f8:	e59f1030 	ldr	r1, [pc, #48]	; 22730 <USBMouseDeviceConfigure+0x2d0>
   226fc:	e59f004c 	ldr	r0, [pc, #76]	; 22750 <USBMouseDeviceConfigure+0x2f0>
   22700:	eb001221 	bl	26f8c <uspi_assertion_failed>
   22704:	eaffff90 	b	2254c <USBMouseDeviceConfigure+0xec>
   22708:	e59f2044 	ldr	r2, [pc, #68]	; 22754 <USBMouseDeviceConfigure+0x2f4>
   2270c:	e3a01001 	mov	r1, #1
   22710:	e59f0028 	ldr	r0, [pc, #40]	; 22740 <USBMouseDeviceConfigure+0x2e0>
   22714:	eb00120a 	bl	26f44 <LogWrite>
   22718:	eaffffd9 	b	22684 <USBMouseDeviceConfigure+0x224>
   2271c:	e59f2034 	ldr	r2, [pc, #52]	; 22758 <USBMouseDeviceConfigure+0x2f8>
   22720:	e3a01001 	mov	r1, #1
   22724:	e59f0014 	ldr	r0, [pc, #20]	; 22740 <USBMouseDeviceConfigure+0x2e0>
   22728:	eb001205 	bl	26f44 <LogWrite>
   2272c:	eaffffd4 	b	22684 <USBMouseDeviceConfigure+0x224>
   22730:	0002b400 	andeq	fp, r2, r0, lsl #8
   22734:	0002b334 	andeq	fp, r2, r4, lsr r3
   22738:	0002bce0 	andeq	fp, r2, r0, ror #25
   2273c:	0002b454 	andeq	fp, r2, r4, asr r4
   22740:	000285a8 	andeq	r8, r2, r8, lsr #11
   22744:	0002b430 	andeq	fp, r2, r0, lsr r4
   22748:	00029a68 	andeq	r9, r2, r8, ror #20
   2274c:	0002b268 	andeq	fp, r2, r8, ror #4
   22750:	0002b40c 	andeq	fp, r2, ip, lsl #8
   22754:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   22758:	0002b354 	andeq	fp, r2, r4, asr r3

0002275c <USBMouseDeviceCompletionRoutine>:
   2275c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   22760:	e2525000 	subs	r5, r2, #0
   22764:	e1a04000 	mov	r4, r0
   22768:	0a000027 	beq	2280c <USBMouseDeviceCompletionRoutine+0xb0>
   2276c:	e3540000 	cmp	r4, #0
   22770:	0a00002b 	beq	22824 <USBMouseDeviceCompletionRoutine+0xc8>
   22774:	e2856020 	add	r6, r5, #32
   22778:	e1560004 	cmp	r6, r4
   2277c:	0a000003 	beq	22790 <USBMouseDeviceCompletionRoutine+0x34>
   22780:	e3a020c5 	mov	r2, #197	; 0xc5
   22784:	e59f10c8 	ldr	r1, [pc, #200]	; 22854 <USBMouseDeviceCompletionRoutine+0xf8>
   22788:	e59f00c8 	ldr	r0, [pc, #200]	; 22858 <USBMouseDeviceCompletionRoutine+0xfc>
   2278c:	eb0011fe 	bl	26f8c <uspi_assertion_failed>
   22790:	e1a00004 	mov	r0, r4
   22794:	ebffe587 	bl	1bdb8 <USBRequestGetStatus>
   22798:	e3500000 	cmp	r0, #0
   2279c:	1a000004 	bne	227b4 <USBMouseDeviceCompletionRoutine+0x58>
   227a0:	e1a00006 	mov	r0, r6
   227a4:	ebffe543 	bl	1bcb8 <_USBRequest>
   227a8:	e1a00005 	mov	r0, r5
   227ac:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   227b0:	eafffef5 	b	2238c <USBMouseDeviceStartRequest>
   227b4:	e1a00004 	mov	r0, r4
   227b8:	ebffe58b 	bl	1bdec <USBRequestGetResultLength>
   227bc:	e3500003 	cmp	r0, #3
   227c0:	1afffff6 	bne	227a0 <USBMouseDeviceCompletionRoutine+0x44>
   227c4:	e5954014 	ldr	r4, [r5, #20]
   227c8:	e3540000 	cmp	r4, #0
   227cc:	0afffff3 	beq	227a0 <USBMouseDeviceCompletionRoutine+0x44>
   227d0:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   227d4:	e3530000 	cmp	r3, #0
   227d8:	0a000016 	beq	22838 <USBMouseDeviceCompletionRoutine+0xdc>
   227dc:	e1d300d1 	ldrsb	r0, [r3, #1]
   227e0:	e5d37000 	ldrb	r7, [r3]
   227e4:	ebfff749 	bl	20510 <uspi_char2int>
   227e8:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   227ec:	e1a08000 	mov	r8, r0
   227f0:	e1d300d2 	ldrsb	r0, [r3, #2]
   227f4:	ebfff745 	bl	20510 <uspi_char2int>
   227f8:	e1a01008 	mov	r1, r8
   227fc:	e1a02000 	mov	r2, r0
   22800:	e1a00007 	mov	r0, r7
   22804:	e12fff34 	blx	r4
   22808:	eaffffe4 	b	227a0 <USBMouseDeviceCompletionRoutine+0x44>
   2280c:	e3a020c2 	mov	r2, #194	; 0xc2
   22810:	e59f103c 	ldr	r1, [pc, #60]	; 22854 <USBMouseDeviceCompletionRoutine+0xf8>
   22814:	e59f0040 	ldr	r0, [pc, #64]	; 2285c <USBMouseDeviceCompletionRoutine+0x100>
   22818:	eb0011db 	bl	26f8c <uspi_assertion_failed>
   2281c:	e3540000 	cmp	r4, #0
   22820:	1affffd3 	bne	22774 <USBMouseDeviceCompletionRoutine+0x18>
   22824:	e3a020c4 	mov	r2, #196	; 0xc4
   22828:	e59f1024 	ldr	r1, [pc, #36]	; 22854 <USBMouseDeviceCompletionRoutine+0xf8>
   2282c:	e59f002c 	ldr	r0, [pc, #44]	; 22860 <USBMouseDeviceCompletionRoutine+0x104>
   22830:	eb0011d5 	bl	26f8c <uspi_assertion_failed>
   22834:	eaffffce 	b	22774 <USBMouseDeviceCompletionRoutine+0x18>
   22838:	e3a020cb 	mov	r2, #203	; 0xcb
   2283c:	e59f1010 	ldr	r1, [pc, #16]	; 22854 <USBMouseDeviceCompletionRoutine+0xf8>
   22840:	e59f001c 	ldr	r0, [pc, #28]	; 22864 <USBMouseDeviceCompletionRoutine+0x108>
   22844:	eb0011d0 	bl	26f8c <uspi_assertion_failed>
   22848:	e5954014 	ldr	r4, [r5, #20]
   2284c:	e5953044 	ldr	r3, [r5, #68]	; 0x44
   22850:	eaffffe1 	b	227dc <USBMouseDeviceCompletionRoutine+0x80>
   22854:	0002b400 	andeq	fp, r2, r0, lsl #8
   22858:	0002b2a4 	andeq	fp, r2, r4, lsr #5
   2285c:	00029a68 	andeq	r9, r2, r8, ror #20
   22860:	00029b30 	andeq	r9, r2, r0, lsr fp
   22864:	0002b288 	andeq	fp, r2, r8, lsl #5

00022868 <USBMouseDevice>:
   22868:	e92d4070 	push	{r4, r5, r6, lr}
   2286c:	e2504000 	subs	r4, r0, #0
   22870:	e1a05001 	mov	r5, r1
   22874:	0a000010 	beq	228bc <USBMouseDevice+0x54>
   22878:	e1a01005 	mov	r1, r5
   2287c:	e1a00004 	mov	r0, r4
   22880:	ebffea7b 	bl	1d274 <USBFunctionCopy>
   22884:	e3a03000 	mov	r3, #0
   22888:	e59f2054 	ldr	r2, [pc, #84]	; 228e4 <USBMouseDevice+0x7c>
   2288c:	e5843010 	str	r3, [r4, #16]
   22890:	e5843014 	str	r3, [r4, #20]
   22894:	e5843044 	str	r3, [r4, #68]	; 0x44
   22898:	e5842000 	str	r2, [r4]
   2289c:	e3a00003 	mov	r0, #3
   228a0:	eb0009a2 	bl	24f30 <malloc>
   228a4:	e3500000 	cmp	r0, #0
   228a8:	e5840044 	str	r0, [r4, #68]	; 0x44
   228ac:	0a000007 	beq	228d0 <USBMouseDevice+0x68>
   228b0:	e3a03000 	mov	r3, #0
   228b4:	e584301c 	str	r3, [r4, #28]
   228b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   228bc:	e3a02025 	mov	r2, #37	; 0x25
   228c0:	e59f1020 	ldr	r1, [pc, #32]	; 228e8 <USBMouseDevice+0x80>
   228c4:	e59f0020 	ldr	r0, [pc, #32]	; 228ec <USBMouseDevice+0x84>
   228c8:	eb0011af 	bl	26f8c <uspi_assertion_failed>
   228cc:	eaffffe9 	b	22878 <USBMouseDevice+0x10>
   228d0:	e3a0202f 	mov	r2, #47	; 0x2f
   228d4:	e59f100c 	ldr	r1, [pc, #12]	; 228e8 <USBMouseDevice+0x80>
   228d8:	e59f0010 	ldr	r0, [pc, #16]	; 228f0 <USBMouseDevice+0x88>
   228dc:	eb0011aa 	bl	26f8c <uspi_assertion_failed>
   228e0:	eafffff2 	b	228b0 <USBMouseDevice+0x48>
   228e4:	00022460 	andeq	r2, r2, r0, ror #8
   228e8:	0002b400 	andeq	fp, r2, r0, lsl #8
   228ec:	00029a68 	andeq	r9, r2, r8, ror #20
   228f0:	0002b288 	andeq	fp, r2, r8, lsl #5

000228f4 <_CUSBMouseDevice>:
   228f4:	e92d4010 	push	{r4, lr}
   228f8:	e2504000 	subs	r4, r0, #0
   228fc:	0a000016 	beq	2295c <_CUSBMouseDevice+0x68>
   22900:	e594001c 	ldr	r0, [r4, #28]
   22904:	e3500000 	cmp	r0, #0
   22908:	0a000002 	beq	22918 <_CUSBMouseDevice+0x24>
   2290c:	eb0009ed 	bl	250c8 <free>
   22910:	e3a03000 	mov	r3, #0
   22914:	e584301c 	str	r3, [r4, #28]
   22918:	e5940044 	ldr	r0, [r4, #68]	; 0x44
   2291c:	e3500000 	cmp	r0, #0
   22920:	0a000002 	beq	22930 <_CUSBMouseDevice+0x3c>
   22924:	eb0009e7 	bl	250c8 <free>
   22928:	e3a03000 	mov	r3, #0
   2292c:	e5843044 	str	r3, [r4, #68]	; 0x44
   22930:	e5940010 	ldr	r0, [r4, #16]
   22934:	e3500000 	cmp	r0, #0
   22938:	0a000004 	beq	22950 <_CUSBMouseDevice+0x5c>
   2293c:	ebffe3cd 	bl	1b878 <_USBEndpoint>
   22940:	e5940010 	ldr	r0, [r4, #16]
   22944:	eb0009df 	bl	250c8 <free>
   22948:	e3a03000 	mov	r3, #0
   2294c:	e5843010 	str	r3, [r4, #16]
   22950:	e1a00004 	mov	r0, r4
   22954:	e8bd4010 	pop	{r4, lr}
   22958:	eaffea87 	b	1d37c <_USBFunction>
   2295c:	e3a02036 	mov	r2, #54	; 0x36
   22960:	e59f1008 	ldr	r1, [pc, #8]	; 22970 <_CUSBMouseDevice+0x7c>
   22964:	e59f0008 	ldr	r0, [pc, #8]	; 22974 <_CUSBMouseDevice+0x80>
   22968:	eb001187 	bl	26f8c <uspi_assertion_failed>
   2296c:	eaffffe3 	b	22900 <_CUSBMouseDevice+0xc>
   22970:	0002b400 	andeq	fp, r2, r0, lsl #8
   22974:	00029a68 	andeq	r9, r2, r8, ror #20

00022978 <USBMouseDeviceRegisterStatusHandler>:
   22978:	e92d4070 	push	{r4, r5, r6, lr}
   2297c:	e2505000 	subs	r5, r0, #0
   22980:	e1a04001 	mov	r4, r1
   22984:	0a000003 	beq	22998 <USBMouseDeviceRegisterStatusHandler+0x20>
   22988:	e3540000 	cmp	r4, #0
   2298c:	0a000007 	beq	229b0 <USBMouseDeviceRegisterStatusHandler+0x38>
   22990:	e5854014 	str	r4, [r5, #20]
   22994:	e8bd8070 	pop	{r4, r5, r6, pc}
   22998:	e3a020ad 	mov	r2, #173	; 0xad
   2299c:	e59f1024 	ldr	r1, [pc, #36]	; 229c8 <USBMouseDeviceRegisterStatusHandler+0x50>
   229a0:	e59f0024 	ldr	r0, [pc, #36]	; 229cc <USBMouseDeviceRegisterStatusHandler+0x54>
   229a4:	eb001178 	bl	26f8c <uspi_assertion_failed>
   229a8:	e3540000 	cmp	r4, #0
   229ac:	1afffff7 	bne	22990 <USBMouseDeviceRegisterStatusHandler+0x18>
   229b0:	e3a020ae 	mov	r2, #174	; 0xae
   229b4:	e59f100c 	ldr	r1, [pc, #12]	; 229c8 <USBMouseDeviceRegisterStatusHandler+0x50>
   229b8:	e59f0010 	ldr	r0, [pc, #16]	; 229d0 <USBMouseDeviceRegisterStatusHandler+0x58>
   229bc:	eb001172 	bl	26f8c <uspi_assertion_failed>
   229c0:	e5854014 	str	r4, [r5, #20]
   229c4:	e8bd8070 	pop	{r4, r5, r6, pc}
   229c8:	0002b400 	andeq	fp, r2, r0, lsl #8
   229cc:	00029a68 	andeq	r9, r2, r8, ror #20
   229d0:	0002b460 	andeq	fp, r2, r0, ror #8

000229d4 <_DWHCIFrameSchedulerNoSplit>:
   229d4:	e12fff1e 	bx	lr

000229d8 <DWHCIFrameSchedulerNoSplitStartSplit>:
   229d8:	e3a02032 	mov	r2, #50	; 0x32
   229dc:	e59f1004 	ldr	r1, [pc, #4]	; 229e8 <DWHCIFrameSchedulerNoSplitStartSplit+0x10>
   229e0:	e59f0004 	ldr	r0, [pc, #4]	; 229ec <DWHCIFrameSchedulerNoSplitStartSplit+0x14>
   229e4:	ea001168 	b	26f8c <uspi_assertion_failed>
   229e8:	0002b474 	andeq	fp, r2, r4, ror r4
   229ec:	000299fc 	strdeq	r9, [r2], -ip

000229f0 <DWHCIFrameSchedulerNoSplitCompleteSplit>:
   229f0:	e92d4010 	push	{r4, lr}
   229f4:	e3a02037 	mov	r2, #55	; 0x37
   229f8:	e59f100c 	ldr	r1, [pc, #12]	; 22a0c <DWHCIFrameSchedulerNoSplitCompleteSplit+0x1c>
   229fc:	e59f000c 	ldr	r0, [pc, #12]	; 22a10 <DWHCIFrameSchedulerNoSplitCompleteSplit+0x20>
   22a00:	eb001161 	bl	26f8c <uspi_assertion_failed>
   22a04:	e3a00000 	mov	r0, #0
   22a08:	e8bd8010 	pop	{r4, pc}
   22a0c:	0002b474 	andeq	fp, r2, r4, ror r4
   22a10:	000299fc 	strdeq	r9, [r2], -ip

00022a14 <DWHCIFrameSchedulerNoSplitTransactionComplete>:
   22a14:	e3a0203d 	mov	r2, #61	; 0x3d
   22a18:	e59f1004 	ldr	r1, [pc, #4]	; 22a24 <DWHCIFrameSchedulerNoSplitTransactionComplete+0x10>
   22a1c:	e59f0004 	ldr	r0, [pc, #4]	; 22a28 <DWHCIFrameSchedulerNoSplitTransactionComplete+0x14>
   22a20:	ea001159 	b	26f8c <uspi_assertion_failed>
   22a24:	0002b474 	andeq	fp, r2, r4, ror r4
   22a28:	000299fc 	strdeq	r9, [r2], -ip

00022a2c <DWHCIFrameSchedulerNoSplitIsOddFrame>:
   22a2c:	e92d4010 	push	{r4, lr}
   22a30:	e2504000 	subs	r4, r0, #0
   22a34:	0a000002 	beq	22a44 <DWHCIFrameSchedulerNoSplitIsOddFrame+0x18>
   22a38:	e594001c 	ldr	r0, [r4, #28]
   22a3c:	e2000001 	and	r0, r0, #1
   22a40:	e8bd8010 	pop	{r4, pc}
   22a44:	e3a02058 	mov	r2, #88	; 0x58
   22a48:	e59f1008 	ldr	r1, [pc, #8]	; 22a58 <DWHCIFrameSchedulerNoSplitIsOddFrame+0x2c>
   22a4c:	e59f0008 	ldr	r0, [pc, #8]	; 22a5c <DWHCIFrameSchedulerNoSplitIsOddFrame+0x30>
   22a50:	eb00114d 	bl	26f8c <uspi_assertion_failed>
   22a54:	eafffff7 	b	22a38 <DWHCIFrameSchedulerNoSplitIsOddFrame+0xc>
   22a58:	0002b474 	andeq	fp, r2, r4, ror r4
   22a5c:	00029a68 	andeq	r9, r2, r8, ror #20

00022a60 <DWHCIFrameSchedulerNoSplitWaitForFrame>:
   22a60:	e92d4030 	push	{r4, r5, lr}
   22a64:	e2505000 	subs	r5, r0, #0
   22a68:	e24dd014 	sub	sp, sp, #20
   22a6c:	0a000016 	beq	22acc <DWHCIFrameSchedulerNoSplitWaitForFrame+0x6c>
   22a70:	e28d0004 	add	r0, sp, #4
   22a74:	e59f1064 	ldr	r1, [pc, #100]	; 22ae0 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x80>
   22a78:	ebffd8ed 	bl	18e34 <DWHCIRegister>
   22a7c:	e28d0004 	add	r0, sp, #4
   22a80:	ebffd917 	bl	18ee4 <DWHCIRegisterRead>
   22a84:	e59f4058 	ldr	r4, [pc, #88]	; 22ae4 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x84>
   22a88:	e5953018 	ldr	r3, [r5, #24]
   22a8c:	e2800001 	add	r0, r0, #1
   22a90:	e0000004 	and	r0, r0, r4
   22a94:	e3530000 	cmp	r3, #0
   22a98:	e585001c 	str	r0, [r5, #28]
   22a9c:	0a000003 	beq	22ab0 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x50>
   22aa0:	e28d0004 	add	r0, sp, #4
   22aa4:	ebffd901 	bl	18eb0 <_DWHCIRegister>
   22aa8:	e28dd014 	add	sp, sp, #20
   22aac:	e8bd8030 	pop	{r4, r5, pc}
   22ab0:	e28d0004 	add	r0, sp, #4
   22ab4:	ebffd90a 	bl	18ee4 <DWHCIRegisterRead>
   22ab8:	e595301c 	ldr	r3, [r5, #28]
   22abc:	e0000004 	and	r0, r0, r4
   22ac0:	e1500003 	cmp	r0, r3
   22ac4:	1afffff9 	bne	22ab0 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x50>
   22ac8:	eafffff4 	b	22aa0 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x40>
   22acc:	e3a02043 	mov	r2, #67	; 0x43
   22ad0:	e59f1010 	ldr	r1, [pc, #16]	; 22ae8 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x88>
   22ad4:	e59f0010 	ldr	r0, [pc, #16]	; 22aec <DWHCIFrameSchedulerNoSplitWaitForFrame+0x8c>
   22ad8:	eb00112b 	bl	26f8c <uspi_assertion_failed>
   22adc:	eaffffe3 	b	22a70 <DWHCIFrameSchedulerNoSplitWaitForFrame+0x10>
   22ae0:	20980408 	addscs	r0, r8, r8, lsl #8
   22ae4:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   22ae8:	0002b474 	andeq	fp, r2, r4, ror r4
   22aec:	00029a68 	andeq	r9, r2, r8, ror #20

00022af0 <DWHCIFrameSchedulerNoSplit>:
   22af0:	e92d4070 	push	{r4, r5, r6, lr}
   22af4:	e2504000 	subs	r4, r0, #0
   22af8:	e1a05001 	mov	r5, r1
   22afc:	0a00000d 	beq	22b38 <DWHCIFrameSchedulerNoSplit+0x48>
   22b00:	e3a02901 	mov	r2, #16384	; 0x4000
   22b04:	e59f3040 	ldr	r3, [pc, #64]	; 22b4c <DWHCIFrameSchedulerNoSplit+0x5c>
   22b08:	e59fc040 	ldr	ip, [pc, #64]	; 22b50 <DWHCIFrameSchedulerNoSplit+0x60>
   22b0c:	e59f0040 	ldr	r0, [pc, #64]	; 22b54 <DWHCIFrameSchedulerNoSplit+0x64>
   22b10:	e59f1040 	ldr	r1, [pc, #64]	; 22b58 <DWHCIFrameSchedulerNoSplit+0x68>
   22b14:	e584201c 	str	r2, [r4, #28]
   22b18:	e5843000 	str	r3, [r4]
   22b1c:	e59f2038 	ldr	r2, [pc, #56]	; 22b5c <DWHCIFrameSchedulerNoSplit+0x6c>
   22b20:	e59f3038 	ldr	r3, [pc, #56]	; 22b60 <DWHCIFrameSchedulerNoSplit+0x70>
   22b24:	e5845018 	str	r5, [r4, #24]
   22b28:	e584c004 	str	ip, [r4, #4]
   22b2c:	e1c400f8 	strd	r0, [r4, #8]
   22b30:	e1c421f0 	strd	r2, [r4, #16]
   22b34:	e8bd8070 	pop	{r4, r5, r6, pc}
   22b38:	e3a0201c 	mov	r2, #28
   22b3c:	e59f1020 	ldr	r1, [pc, #32]	; 22b64 <DWHCIFrameSchedulerNoSplit+0x74>
   22b40:	e59f0020 	ldr	r0, [pc, #32]	; 22b68 <DWHCIFrameSchedulerNoSplit+0x78>
   22b44:	eb001110 	bl	26f8c <uspi_assertion_failed>
   22b48:	eaffffec 	b	22b00 <DWHCIFrameSchedulerNoSplit+0x10>
   22b4c:	000229d4 	ldrdeq	r2, [r2], -r4
   22b50:	000229d8 	ldrdeq	r2, [r2], -r8
   22b54:	000229f0 	strdeq	r2, [r2], -r0
   22b58:	00022a14 	andeq	r2, r2, r4, lsl sl
   22b5c:	00022a60 	andeq	r2, r2, r0, ror #20
   22b60:	00022a2c 	andeq	r2, r2, ip, lsr #20
   22b64:	0002b474 	andeq	fp, r2, r4, ror r4
   22b68:	00029a68 	andeq	r9, r2, r8, ror #20

00022b6c <BitGetUnsigned>:
   22b6c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b70:	e0814002 	add	r4, r1, r2
   22b74:	e2847007 	add	r7, r4, #7
   22b78:	e1a071a7 	lsr	r7, r7, #3
   22b7c:	e1a051a1 	lsr	r5, r1, #3
   22b80:	e1550007 	cmp	r5, r7
   22b84:	e24dd00c 	sub	sp, sp, #12
   22b88:	2a000031 	bcs	22c54 <BitGetUnsigned+0xe8>
   22b8c:	e3a03001 	mov	r3, #1
   22b90:	e3a06000 	mov	r6, #0
   22b94:	e2011007 	and	r1, r1, #7
   22b98:	e0818002 	add	r8, r1, r2
   22b9c:	e1a08813 	lsl	r8, r3, r8
   22ba0:	e6ef8078 	uxtb	r8, r8
   22ba4:	e1a03113 	lsl	r3, r3, r1
   22ba8:	e6ef3073 	uxtb	r3, r3
   22bac:	e248c001 	sub	ip, r8, #1
   22bb0:	e6efc07c 	uxtb	ip, ip
   22bb4:	e0488003 	sub	r8, r8, r3
   22bb8:	e2444001 	sub	r4, r4, #1
   22bbc:	e2633000 	rsb	r3, r3, #0
   22bc0:	e58dc004 	str	ip, [sp, #4]
   22bc4:	e1a0e006 	mov	lr, r6
   22bc8:	e1e0a000 	mvn	sl, r0
   22bcc:	e1a041a4 	lsr	r4, r4, #3
   22bd0:	e0807007 	add	r7, r0, r7
   22bd4:	e6ef8078 	uxtb	r8, r8
   22bd8:	e6ef9073 	uxtb	r9, r3
   22bdc:	e261b008 	rsb	fp, r1, #8
   22be0:	e080c005 	add	ip, r0, r5
   22be4:	ea000008 	b	22c0c <BitGetUnsigned+0xa0>
   22be8:	e1540000 	cmp	r4, r0
   22bec:	059d0004 	ldreq	r0, [sp, #4]
   22bf0:	12866008 	addne	r6, r6, #8
   22bf4:	00033000 	andeq	r3, r3, r0
   22bf8:	10420006 	subne	r0, r2, r6
   22bfc:	018ee003 	orreq	lr, lr, r3
   22c00:	118ee013 	orrne	lr, lr, r3, lsl r0
   22c04:	e157000c 	cmp	r7, ip
   22c08:	0a00000e 	beq	22c48 <BitGetUnsigned+0xdc>
   22c0c:	e4dc3001 	ldrb	r3, [ip], #1
   22c10:	e1540005 	cmp	r4, r5
   22c14:	0008e003 	andeq	lr, r8, r3
   22c18:	01a0e15e 	asreq	lr, lr, r1
   22c1c:	0afffff8 	beq	22c04 <BitGetUnsigned+0x98>
   22c20:	e08a000c 	add	r0, sl, ip
   22c24:	e1500005 	cmp	r0, r5
   22c28:	1affffee 	bne	22be8 <BitGetUnsigned+0x7c>
   22c2c:	e009e003 	and	lr, r9, r3
   22c30:	e086600b 	add	r6, r6, fp
   22c34:	e1a0e15e 	asr	lr, lr, r1
   22c38:	e0423006 	sub	r3, r2, r6
   22c3c:	e157000c 	cmp	r7, ip
   22c40:	e1a0e31e 	lsl	lr, lr, r3
   22c44:	1afffff0 	bne	22c0c <BitGetUnsigned+0xa0>
   22c48:	e1a0000e 	mov	r0, lr
   22c4c:	e28dd00c 	add	sp, sp, #12
   22c50:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c54:	e3a0e000 	mov	lr, #0
   22c58:	e1a0000e 	mov	r0, lr
   22c5c:	e28dd00c 	add	sp, sp, #12
   22c60:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022c64 <USBGamePadDeviceDecodeReport>:
   22c64:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c68:	e1d089b0 	ldrh	r8, [r0, #144]	; 0x90
   22c6c:	e59020bc 	ldr	r2, [r0, #188]	; 0xbc
   22c70:	e24dd04c 	sub	sp, sp, #76	; 0x4c
   22c74:	e3580000 	cmp	r8, #0
   22c78:	e58d0018 	str	r0, [sp, #24]
   22c7c:	e58d2008 	str	r2, [sp, #8]
   22c80:	e5904094 	ldr	r4, [r0, #148]	; 0x94
   22c84:	0a000108 	beq	230ac <USBGamePadDeviceDecodeReport+0x448>
   22c88:	e3a06000 	mov	r6, #0
   22c8c:	e59f9430 	ldr	r9, [pc, #1072]	; 230c4 <USBGamePadDeviceDecodeReport+0x460>
   22c90:	e1a07006 	mov	r7, r6
   22c94:	e58d6020 	str	r6, [sp, #32]
   22c98:	e58d601c 	str	r6, [sp, #28]
   22c9c:	e1a0b006 	mov	fp, r6
   22ca0:	e58d600c 	str	r6, [sp, #12]
   22ca4:	e1a0a006 	mov	sl, r6
   22ca8:	e58d9014 	str	r9, [sp, #20]
   22cac:	e58d9004 	str	r9, [sp, #4]
   22cb0:	e1a05009 	mov	r5, r9
   22cb4:	ea000009 	b	22ce0 <USBGamePadDeviceDecodeReport+0x7c>
   22cb8:	e3530008 	cmp	r3, #8
   22cbc:	0a000062 	beq	22e4c <USBGamePadDeviceDecodeReport+0x1e8>
   22cc0:	da00003d 	ble	22dbc <USBGamePadDeviceDecodeReport+0x158>
   22cc4:	e3530014 	cmp	r3, #20
   22cc8:	058dc004 	streq	ip, [sp, #4]
   22ccc:	0a000001 	beq	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22cd0:	e3530024 	cmp	r3, #36	; 0x24
   22cd4:	01a0500c 	moveq	r5, ip
   22cd8:	e3580000 	cmp	r8, #0
   22cdc:	0a00002b 	beq	22d90 <USBGamePadDeviceDecodeReport+0x12c>
   22ce0:	e1d430d0 	ldrsb	r3, [r4]
   22ce4:	e203c003 	and	ip, r3, #3
   22ce8:	e35c0001 	cmp	ip, #1
   22cec:	0a000051 	beq	22e38 <USBGamePadDeviceDecodeReport+0x1d4>
   22cf0:	e35c0002 	cmp	ip, #2
   22cf4:	0a000048 	beq	22e1c <USBGamePadDeviceDecodeReport+0x1b8>
   22cf8:	e35c0000 	cmp	ip, #0
   22cfc:	02488001 	subeq	r8, r8, #1
   22d00:	06ff8078 	uxtheq	r8, r8
   22d04:	02844001 	addeq	r4, r4, #1
   22d08:	0a00000a 	beq	22d38 <USBGamePadDeviceDecodeReport+0xd4>
   22d0c:	e1d4c0d3 	ldrsb	ip, [r4, #3]
   22d10:	e1d420d2 	ldrsb	r2, [r4, #2]
   22d14:	e1d410d1 	ldrsb	r1, [r4, #1]
   22d18:	e1a0c80c 	lsl	ip, ip, #16
   22d1c:	e18cc402 	orr	ip, ip, r2, lsl #8
   22d20:	e1d420d4 	ldrsb	r2, [r4, #4]
   22d24:	e2488005 	sub	r8, r8, #5
   22d28:	e18cc001 	orr	ip, ip, r1
   22d2c:	e6ff8078 	uxth	r8, r8
   22d30:	e18ccc02 	orr	ip, ip, r2, lsl #24
   22d34:	e2844005 	add	r4, r4, #5
   22d38:	e20330fc 	and	r3, r3, #252	; 0xfc
   22d3c:	e3530084 	cmp	r3, #132	; 0x84
   22d40:	0a000029 	beq	22dec <USBGamePadDeviceDecodeReport+0x188>
   22d44:	e3530034 	cmp	r3, #52	; 0x34
   22d48:	0a000047 	beq	22e6c <USBGamePadDeviceDecodeReport+0x208>
   22d4c:	daffffd9 	ble	22cb8 <USBGamePadDeviceDecodeReport+0x54>
   22d50:	e3530074 	cmp	r3, #116	; 0x74
   22d54:	058dc00c 	streq	ip, [sp, #12]
   22d58:	0affffde 	beq	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22d5c:	da00001f 	ble	22de0 <USBGamePadDeviceDecodeReport+0x17c>
   22d60:	e3530080 	cmp	r3, #128	; 0x80
   22d64:	1a00001a 	bne	22dd4 <USBGamePadDeviceDecodeReport+0x170>
   22d68:	e59d300c 	ldr	r3, [sp, #12]
   22d6c:	e20cc003 	and	ip, ip, #3
   22d70:	e0030b93 	mul	r3, r3, fp
   22d74:	e35c0002 	cmp	ip, #2
   22d78:	e58d3010 	str	r3, [sp, #16]
   22d7c:	0a000041 	beq	22e88 <USBGamePadDeviceDecodeReport+0x224>
   22d80:	e59d3010 	ldr	r3, [sp, #16]
   22d84:	e3580000 	cmp	r8, #0
   22d88:	e08aa003 	add	sl, sl, r3
   22d8c:	1affffd3 	bne	22ce0 <USBGamePadDeviceDecodeReport+0x7c>
   22d90:	e28a3007 	add	r3, sl, #7
   22d94:	e1a031a3 	lsr	r3, r3, #3
   22d98:	e6ff3073 	uxth	r3, r3
   22d9c:	e59d2018 	ldr	r2, [sp, #24]
   22da0:	e59d101c 	ldr	r1, [sp, #28]
   22da4:	e1c23cb0 	strh	r3, [r2, #192]	; 0xc0
   22da8:	e582101c 	str	r1, [r2, #28]
   22dac:	e59d1020 	ldr	r1, [sp, #32]
   22db0:	e5821068 	str	r1, [r2, #104]	; 0x68
   22db4:	e28dd04c 	add	sp, sp, #76	; 0x4c
   22db8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22dbc:	e3530004 	cmp	r3, #4
   22dc0:	1affffc4 	bne	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22dc4:	e3560001 	cmp	r6, #1
   22dc8:	035c0009 	cmpeq	ip, #9
   22dcc:	03a06002 	moveq	r6, #2
   22dd0:	eaffffc0 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22dd4:	e3530094 	cmp	r3, #148	; 0x94
   22dd8:	01a0b00c 	moveq	fp, ip
   22ddc:	eaffffbd 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22de0:	e3530044 	cmp	r3, #68	; 0x44
   22de4:	01a0900c 	moveq	r9, ip
   22de8:	eaffffba 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22dec:	e3570000 	cmp	r7, #0
   22df0:	1affffe6 	bne	22d90 <USBGamePadDeviceDecodeReport+0x12c>
   22df4:	e1a01007 	mov	r1, r7
   22df8:	e3a02008 	mov	r2, #8
   22dfc:	e59d0008 	ldr	r0, [sp, #8]
   22e00:	e1a0700c 	mov	r7, ip
   22e04:	ebffff58 	bl	22b6c <BitGetUnsigned>
   22e08:	e3500000 	cmp	r0, #0
   22e0c:	11570000 	cmpne	r7, r0
   22e10:	1affffe7 	bne	22db4 <USBGamePadDeviceDecodeReport+0x150>
   22e14:	e3a0a008 	mov	sl, #8
   22e18:	eaffffae 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22e1c:	e5d4c001 	ldrb	ip, [r4, #1]
   22e20:	e1d420d2 	ldrsb	r2, [r4, #2]
   22e24:	e2488003 	sub	r8, r8, #3
   22e28:	e6ff8078 	uxth	r8, r8
   22e2c:	e18cc402 	orr	ip, ip, r2, lsl #8
   22e30:	e2844003 	add	r4, r4, #3
   22e34:	eaffffbf 	b	22d38 <USBGamePadDeviceDecodeReport+0xd4>
   22e38:	e2488002 	sub	r8, r8, #2
   22e3c:	e1d4c0d1 	ldrsb	ip, [r4, #1]
   22e40:	e6ff8078 	uxth	r8, r8
   22e44:	e2844002 	add	r4, r4, #2
   22e48:	eaffffba 	b	22d38 <USBGamePadDeviceDecodeReport+0xd4>
   22e4c:	e35c0036 	cmp	ip, #54	; 0x36
   22e50:	ca000007 	bgt	22e74 <USBGamePadDeviceDecodeReport+0x210>
   22e54:	e35c0030 	cmp	ip, #48	; 0x30
   22e58:	aa00001a 	bge	22ec8 <USBGamePadDeviceDecodeReport+0x264>
   22e5c:	e24cc004 	sub	ip, ip, #4
   22e60:	e35c0001 	cmp	ip, #1
   22e64:	93a06001 	movls	r6, #1
   22e68:	eaffff9a 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22e6c:	e58dc014 	str	ip, [sp, #20]
   22e70:	eaffff98 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22e74:	e35c0039 	cmp	ip, #57	; 0x39
   22e78:	1affff96 	bne	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22e7c:	e3560001 	cmp	r6, #1
   22e80:	03a06004 	moveq	r6, #4
   22e84:	eaffff93 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22e88:	e3560003 	cmp	r6, #3
   22e8c:	0a000010 	beq	22ed4 <USBGamePadDeviceDecodeReport+0x270>
   22e90:	e3560004 	cmp	r6, #4
   22e94:	0a00005a 	beq	23004 <USBGamePadDeviceDecodeReport+0x3a0>
   22e98:	e3560002 	cmp	r6, #2
   22e9c:	1affffb7 	bne	22d80 <USBGamePadDeviceDecodeReport+0x11c>
   22ea0:	e59d3018 	ldr	r3, [sp, #24]
   22ea4:	e59d2010 	ldr	r2, [sp, #16]
   22ea8:	e583b084 	str	fp, [r3, #132]	; 0x84
   22eac:	e1a0100a 	mov	r1, sl
   22eb0:	e59d0008 	ldr	r0, [sp, #8]
   22eb4:	ebffff2c 	bl	22b6c <BitGetUnsigned>
   22eb8:	e59d3018 	ldr	r3, [sp, #24]
   22ebc:	e3a06001 	mov	r6, #1
   22ec0:	e5830088 	str	r0, [r3, #136]	; 0x88
   22ec4:	eaffffad 	b	22d80 <USBGamePadDeviceDecodeReport+0x11c>
   22ec8:	e3560001 	cmp	r6, #1
   22ecc:	03a06003 	moveq	r6, #3
   22ed0:	eaffff80 	b	22cd8 <USBGamePadDeviceDecodeReport+0x74>
   22ed4:	e35b0000 	cmp	fp, #0
   22ed8:	0a000077 	beq	230bc <USBGamePadDeviceDecodeReport+0x458>
   22edc:	e59d3004 	ldr	r3, [sp, #4]
   22ee0:	e59f21dc 	ldr	r2, [pc, #476]	; 230c4 <USBGamePadDeviceDecodeReport+0x460>
   22ee4:	e59d1014 	ldr	r1, [sp, #20]
   22ee8:	e1530002 	cmp	r3, r2
   22eec:	e1a00003 	mov	r0, r3
   22ef0:	01a00001 	moveq	r0, r1
   22ef4:	e1550002 	cmp	r5, r2
   22ef8:	11a03005 	movne	r3, r5
   22efc:	01a03009 	moveq	r3, r9
   22f00:	e3a0e001 	mov	lr, #1
   22f04:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   22f08:	e3a03000 	mov	r3, #0
   22f0c:	e59dc00c 	ldr	ip, [sp, #12]
   22f10:	e59d601c 	ldr	r6, [sp, #28]
   22f14:	e24c1001 	sub	r1, ip, #1
   22f18:	e1a02c1e 	lsl	r2, lr, ip
   22f1c:	e1a0111e 	lsl	r1, lr, r1
   22f20:	e58d1024 	str	r1, [sp, #36]	; 0x24
   22f24:	e2621000 	rsb	r1, r2, #0
   22f28:	e59d201c 	ldr	r2, [sp, #28]
   22f2c:	e58d1028 	str	r1, [sp, #40]	; 0x28
   22f30:	e59d1018 	ldr	r1, [sp, #24]
   22f34:	e0866e16 	add	r6, r6, r6, lsl lr
   22f38:	e082200e 	add	r2, r2, lr
   22f3c:	e58da030 	str	sl, [sp, #48]	; 0x30
   22f40:	e58d9034 	str	r9, [sp, #52]	; 0x34
   22f44:	e58d7038 	str	r7, [sp, #56]	; 0x38
   22f48:	e58d403c 	str	r4, [sp, #60]	; 0x3c
   22f4c:	e58d8040 	str	r8, [sp, #64]	; 0x40
   22f50:	e59d902c 	ldr	r9, [sp, #44]	; 0x2c
   22f54:	e58d5044 	str	r5, [sp, #68]	; 0x44
   22f58:	e58da02c 	str	sl, [sp, #44]	; 0x2c
   22f5c:	e1a0500a 	mov	r5, sl
   22f60:	e0816106 	add	r6, r1, r6, lsl #2
   22f64:	e1a07000 	mov	r7, r0
   22f68:	e1a0800c 	mov	r8, ip
   22f6c:	e1a04003 	mov	r4, r3
   22f70:	e1a0a002 	mov	sl, r2
   22f74:	ea00000c 	b	22fac <USBGamePadDeviceDecodeReport+0x348>
   22f78:	ebfffefb 	bl	22b6c <BitGetUnsigned>
   22f7c:	e08a1004 	add	r1, sl, r4
   22f80:	e2844001 	add	r4, r4, #1
   22f84:	e154000b 	cmp	r4, fp
   22f88:	23a02000 	movcs	r2, #0
   22f8c:	33a02001 	movcc	r2, #1
   22f90:	e3540005 	cmp	r4, #5
   22f94:	c3a02000 	movgt	r2, #0
   22f98:	e3520000 	cmp	r2, #0
   22f9c:	e5860020 	str	r0, [r6, #32]
   22fa0:	e0855008 	add	r5, r5, r8
   22fa4:	e286600c 	add	r6, r6, #12
   22fa8:	0a00000c 	beq	22fe0 <USBGamePadDeviceDecodeReport+0x37c>
   22fac:	e3570000 	cmp	r7, #0
   22fb0:	e1a02008 	mov	r2, r8
   22fb4:	e1a01005 	mov	r1, r5
   22fb8:	e5867024 	str	r7, [r6, #36]	; 0x24
   22fbc:	e5869028 	str	r9, [r6, #40]	; 0x28
   22fc0:	e59d0008 	ldr	r0, [sp, #8]
   22fc4:	aaffffeb 	bge	22f78 <USBGamePadDeviceDecodeReport+0x314>
   22fc8:	ebfffee7 	bl	22b6c <BitGetUnsigned>
   22fcc:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   22fd0:	e1100003 	tst	r0, r3
   22fd4:	159d3028 	ldrne	r3, [sp, #40]	; 0x28
   22fd8:	11800003 	orrne	r0, r0, r3
   22fdc:	eaffffe6 	b	22f7c <USBGamePadDeviceDecodeReport+0x318>
   22fe0:	e58d101c 	str	r1, [sp, #28]
   22fe4:	e59d9034 	ldr	r9, [sp, #52]	; 0x34
   22fe8:	e59d7038 	ldr	r7, [sp, #56]	; 0x38
   22fec:	e59d403c 	ldr	r4, [sp, #60]	; 0x3c
   22ff0:	e59d8040 	ldr	r8, [sp, #64]	; 0x40
   22ff4:	e59da02c 	ldr	sl, [sp, #44]	; 0x2c
   22ff8:	e59d5044 	ldr	r5, [sp, #68]	; 0x44
   22ffc:	e3a06001 	mov	r6, #1
   23000:	eaffff5e 	b	22d80 <USBGamePadDeviceDecodeReport+0x11c>
   23004:	e35b0000 	cmp	fp, #0
   23008:	0a00002b 	beq	230bc <USBGamePadDeviceDecodeReport+0x458>
   2300c:	e59d2020 	ldr	r2, [sp, #32]
   23010:	e59d1018 	ldr	r1, [sp, #24]
   23014:	e282301b 	add	r3, r2, #27
   23018:	e0813103 	add	r3, r1, r3, lsl #2
   2301c:	e2822001 	add	r2, r2, #1
   23020:	e58d9024 	str	r9, [sp, #36]	; 0x24
   23024:	e58d402c 	str	r4, [sp, #44]	; 0x2c
   23028:	e58d5038 	str	r5, [sp, #56]	; 0x38
   2302c:	e3a06000 	mov	r6, #0
   23030:	e1a0400a 	mov	r4, sl
   23034:	e1a05003 	mov	r5, r3
   23038:	e1a09002 	mov	r9, r2
   2303c:	e58d7028 	str	r7, [sp, #40]	; 0x28
   23040:	e58d8030 	str	r8, [sp, #48]	; 0x30
   23044:	e59d700c 	ldr	r7, [sp, #12]
   23048:	e59d8008 	ldr	r8, [sp, #8]
   2304c:	e58da034 	str	sl, [sp, #52]	; 0x34
   23050:	e1a02007 	mov	r2, r7
   23054:	e1a01004 	mov	r1, r4
   23058:	e1a00008 	mov	r0, r8
   2305c:	e089a006 	add	sl, r9, r6
   23060:	e2866001 	add	r6, r6, #1
   23064:	ebfffec0 	bl	22b6c <BitGetUnsigned>
   23068:	e156000b 	cmp	r6, fp
   2306c:	23a02000 	movcs	r2, #0
   23070:	33a02001 	movcc	r2, #1
   23074:	e3560005 	cmp	r6, #5
   23078:	c3a02000 	movgt	r2, #0
   2307c:	e3520000 	cmp	r2, #0
   23080:	e0844007 	add	r4, r4, r7
   23084:	e4850004 	str	r0, [r5], #4
   23088:	1afffff0 	bne	23050 <USBGamePadDeviceDecodeReport+0x3ec>
   2308c:	e28d402c 	add	r4, sp, #44	; 0x2c
   23090:	e58da020 	str	sl, [sp, #32]
   23094:	e59d9024 	ldr	r9, [sp, #36]	; 0x24
   23098:	e59d7028 	ldr	r7, [sp, #40]	; 0x28
   2309c:	e8940510 	ldm	r4, {r4, r8, sl}
   230a0:	e59d5038 	ldr	r5, [sp, #56]	; 0x38
   230a4:	e3a06001 	mov	r6, #1
   230a8:	eaffff34 	b	22d80 <USBGamePadDeviceDecodeReport+0x11c>
   230ac:	e1a03008 	mov	r3, r8
   230b0:	e58d8020 	str	r8, [sp, #32]
   230b4:	e58d801c 	str	r8, [sp, #28]
   230b8:	eaffff37 	b	22d9c <USBGamePadDeviceDecodeReport+0x138>
   230bc:	e3a06001 	mov	r6, #1
   230c0:	eaffff2e 	b	22d80 <USBGamePadDeviceDecodeReport+0x11c>
   230c4:	f8a432eb 			; <UNDEFINED> instruction: 0xf8a432eb

000230c8 <USBGamePadDeviceStartRequest>:
   230c8:	e92d4070 	push	{r4, r5, r6, lr}
   230cc:	e2504000 	subs	r4, r0, #0
   230d0:	e24dd008 	sub	sp, sp, #8
   230d4:	0a000017 	beq	23138 <USBGamePadDeviceStartRequest+0x70>
   230d8:	e5943014 	ldr	r3, [r4, #20]
   230dc:	e3530000 	cmp	r3, #0
   230e0:	0a00001b 	beq	23154 <USBGamePadDeviceStartRequest+0x8c>
   230e4:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   230e8:	e3520000 	cmp	r2, #0
   230ec:	0a00001f 	beq	23170 <USBGamePadDeviceStartRequest+0xa8>
   230f0:	e3a06000 	mov	r6, #0
   230f4:	e2845098 	add	r5, r4, #152	; 0x98
   230f8:	e58d6000 	str	r6, [sp]
   230fc:	e1d43cb0 	ldrh	r3, [r4, #192]	; 0xc0
   23100:	e5941014 	ldr	r1, [r4, #20]
   23104:	e1a00005 	mov	r0, r5
   23108:	ebffe2ba 	bl	1bbf8 <USBRequest>
   2310c:	e1a03004 	mov	r3, r4
   23110:	e1a02006 	mov	r2, r6
   23114:	e1a00005 	mov	r0, r5
   23118:	e59f1068 	ldr	r1, [pc, #104]	; 23188 <USBGamePadDeviceStartRequest+0xc0>
   2311c:	ebffe38a 	bl	1bf4c <USBRequestSetCompletionRoutine>
   23120:	e1a00004 	mov	r0, r4
   23124:	ebffe91f 	bl	1d5a8 <USBFunctionGetHost>
   23128:	e1a01005 	mov	r1, r5
   2312c:	e28dd008 	add	sp, sp, #8
   23130:	e8bd4070 	pop	{r4, r5, r6, lr}
   23134:	eaffd06f 	b	172f8 <DWHCIDeviceSubmitAsyncRequest>
   23138:	e59f204c 	ldr	r2, [pc, #76]	; 2318c <USBGamePadDeviceStartRequest+0xc4>
   2313c:	e59f104c 	ldr	r1, [pc, #76]	; 23190 <USBGamePadDeviceStartRequest+0xc8>
   23140:	e59f004c 	ldr	r0, [pc, #76]	; 23194 <USBGamePadDeviceStartRequest+0xcc>
   23144:	eb000f90 	bl	26f8c <uspi_assertion_failed>
   23148:	e5943014 	ldr	r3, [r4, #20]
   2314c:	e3530000 	cmp	r3, #0
   23150:	1affffe3 	bne	230e4 <USBGamePadDeviceStartRequest+0x1c>
   23154:	e59f203c 	ldr	r2, [pc, #60]	; 23198 <USBGamePadDeviceStartRequest+0xd0>
   23158:	e59f1030 	ldr	r1, [pc, #48]	; 23190 <USBGamePadDeviceStartRequest+0xc8>
   2315c:	e59f0038 	ldr	r0, [pc, #56]	; 2319c <USBGamePadDeviceStartRequest+0xd4>
   23160:	eb000f89 	bl	26f8c <uspi_assertion_failed>
   23164:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   23168:	e3520000 	cmp	r2, #0
   2316c:	1affffdf 	bne	230f0 <USBGamePadDeviceStartRequest+0x28>
   23170:	e3a02e1d 	mov	r2, #464	; 0x1d0
   23174:	e59f1014 	ldr	r1, [pc, #20]	; 23190 <USBGamePadDeviceStartRequest+0xc8>
   23178:	e59f0020 	ldr	r0, [pc, #32]	; 231a0 <USBGamePadDeviceStartRequest+0xd8>
   2317c:	eb000f82 	bl	26f8c <uspi_assertion_failed>
   23180:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   23184:	eaffffd9 	b	230f0 <USBGamePadDeviceStartRequest+0x28>
   23188:	00023608 	andeq	r3, r2, r8, lsl #12
   2318c:	000001cd 	andeq	r0, r0, sp, asr #3
   23190:	0002b48c 	andeq	fp, r2, ip, lsl #9
   23194:	00029a68 	andeq	r9, r2, r8, ror #20
   23198:	000001cf 	andeq	r0, r0, pc, asr #3
   2319c:	0002b070 	andeq	fp, r2, r0, ror r0
   231a0:	0002b288 	andeq	fp, r2, r8, lsl #5

000231a4 <USBGamePadDeviceConfigure>:
   231a4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   231a8:	e2504000 	subs	r4, r0, #0
   231ac:	e24dd020 	sub	sp, sp, #32
   231b0:	0a00009d 	beq	2342c <USBGamePadDeviceConfigure+0x288>
   231b4:	e1a00004 	mov	r0, r4
   231b8:	ebffe8b4 	bl	1d490 <USBFunctionGetNumEndpoints>
   231bc:	e2505000 	subs	r5, r0, #0
   231c0:	0a000078 	beq	233a8 <USBGamePadDeviceConfigure+0x204>
   231c4:	e3a01021 	mov	r1, #33	; 0x21
   231c8:	e1a00004 	mov	r0, r4
   231cc:	ebffe947 	bl	1d6f0 <USBFunctionGetDescriptor>
   231d0:	e2506000 	subs	r6, r0, #0
   231d4:	0a00006c 	beq	2338c <USBGamePadDeviceConfigure+0x1e8>
   231d8:	e5d63007 	ldrb	r3, [r6, #7]
   231dc:	e5d62008 	ldrb	r2, [r6, #8]
   231e0:	e1933402 	orrs	r3, r3, r2, lsl #8
   231e4:	0a000068 	beq	2338c <USBGamePadDeviceConfigure+0x1e8>
   231e8:	e59f73e0 	ldr	r7, [pc, #992]	; 235d0 <USBGamePadDeviceConfigure+0x42c>
   231ec:	e59f83e0 	ldr	r8, [pc, #992]	; 235d4 <USBGamePadDeviceConfigure+0x430>
   231f0:	e59f93e0 	ldr	r9, [pc, #992]	; 235d8 <USBGamePadDeviceConfigure+0x434>
   231f4:	ea000003 	b	23208 <USBGamePadDeviceConfigure+0x64>
   231f8:	e5d53003 	ldrb	r3, [r5, #3]
   231fc:	e203303f 	and	r3, r3, #63	; 0x3f
   23200:	e3530003 	cmp	r3, #3
   23204:	0a00006d 	beq	233c0 <USBGamePadDeviceConfigure+0x21c>
   23208:	e3a01005 	mov	r1, #5
   2320c:	e1a00004 	mov	r0, r4
   23210:	ebffe936 	bl	1d6f0 <USBFunctionGetDescriptor>
   23214:	e2505000 	subs	r5, r0, #0
   23218:	1afffff6 	bne	231f8 <USBGamePadDeviceConfigure+0x54>
   2321c:	e5945014 	ldr	r5, [r4, #20]
   23220:	e3550000 	cmp	r5, #0
   23224:	0a00005f 	beq	233a8 <USBGamePadDeviceConfigure+0x204>
   23228:	e5d60007 	ldrb	r0, [r6, #7]
   2322c:	e5d63008 	ldrb	r3, [r6, #8]
   23230:	e1800403 	orr	r0, r0, r3, lsl #8
   23234:	e1c409b0 	strh	r0, [r4, #144]	; 0x90
   23238:	eb00073c 	bl	24f30 <malloc>
   2323c:	e3500000 	cmp	r0, #0
   23240:	e5840094 	str	r0, [r4, #148]	; 0x94
   23244:	0a00008c 	beq	2347c <USBGamePadDeviceConfigure+0x2d8>
   23248:	e1a00004 	mov	r0, r4
   2324c:	ebffe8d5 	bl	1d5a8 <USBFunctionGetHost>
   23250:	e1a07000 	mov	r7, r0
   23254:	e1a00004 	mov	r0, r4
   23258:	ebffe8b9 	bl	1d544 <USBFunctionGetEndpoint0>
   2325c:	e1a08000 	mov	r8, r0
   23260:	e1a00004 	mov	r0, r4
   23264:	e5d65006 	ldrb	r5, [r6, #6]
   23268:	ebffe9a6 	bl	1d908 <USBFunctionGetInterfaceNumber>
   2326c:	e5d61008 	ldrb	r1, [r6, #8]
   23270:	e5d63007 	ldrb	r3, [r6, #7]
   23274:	e6ff2070 	uxth	r2, r0
   23278:	e1833401 	orr	r3, r3, r1, lsl #8
   2327c:	e58d300c 	str	r3, [sp, #12]
   23280:	e5943094 	ldr	r3, [r4, #148]	; 0x94
   23284:	e1a05405 	lsl	r5, r5, #8
   23288:	e1cd20f4 	strd	r2, [sp, #4]
   2328c:	e1a01008 	mov	r1, r8
   23290:	e3a03006 	mov	r3, #6
   23294:	e3a02081 	mov	r2, #129	; 0x81
   23298:	e1a00007 	mov	r0, r7
   2329c:	e58d5000 	str	r5, [sp]
   232a0:	ebffd128 	bl	17748 <DWHCIDeviceControlMessage>
   232a4:	e5d63007 	ldrb	r3, [r6, #7]
   232a8:	e5d62008 	ldrb	r2, [r6, #8]
   232ac:	e1833402 	orr	r3, r3, r2, lsl #8
   232b0:	e1500003 	cmp	r0, r3
   232b4:	1a000054 	bne	2340c <USBGamePadDeviceConfigure+0x268>
   232b8:	e3a02000 	mov	r2, #0
   232bc:	e59430bc 	ldr	r3, [r4, #188]	; 0xbc
   232c0:	e1a00004 	mov	r0, r4
   232c4:	e5c32000 	strb	r2, [r3]
   232c8:	ebfffe65 	bl	22c64 <USBGamePadDeviceDecodeReport>
   232cc:	e594301c 	ldr	r3, [r4, #28]
   232d0:	e3530000 	cmp	r3, #0
   232d4:	1a000005 	bne	232f0 <USBGamePadDeviceConfigure+0x14c>
   232d8:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   232dc:	e3530000 	cmp	r3, #0
   232e0:	1a000002 	bne	232f0 <USBGamePadDeviceConfigure+0x14c>
   232e4:	e5945084 	ldr	r5, [r4, #132]	; 0x84
   232e8:	e3550000 	cmp	r5, #0
   232ec:	0a00002a 	beq	2339c <USBGamePadDeviceConfigure+0x1f8>
   232f0:	e1a00004 	mov	r0, r4
   232f4:	ebffe8c4 	bl	1d60c <USBFunctionConfigure>
   232f8:	e2505000 	subs	r5, r0, #0
   232fc:	0a000069 	beq	234a8 <USBGamePadDeviceConfigure+0x304>
   23300:	e59f52d4 	ldr	r5, [pc, #724]	; 235dc <USBGamePadDeviceConfigure+0x438>
   23304:	e1a00004 	mov	r0, r4
   23308:	e5953000 	ldr	r3, [r5]
   2330c:	e5843010 	str	r3, [r4, #16]
   23310:	e2833001 	add	r3, r3, #1
   23314:	e5853000 	str	r3, [r5]
   23318:	ebffe875 	bl	1d4f4 <USBFunctionGetDevice>
   2331c:	e5902014 	ldr	r2, [r0, #20]
   23320:	e59f12b8 	ldr	r1, [pc, #696]	; 235e0 <USBGamePadDeviceConfigure+0x43c>
   23324:	e5d23008 	ldrb	r3, [r2, #8]
   23328:	e5d22009 	ldrb	r2, [r2, #9]
   2332c:	e1833402 	orr	r3, r3, r2, lsl #8
   23330:	e1530001 	cmp	r3, r1
   23334:	0a000060 	beq	234bc <USBGamePadDeviceConfigure+0x318>
   23338:	e28d0014 	add	r0, sp, #20
   2333c:	ebfff0f1 	bl	1f708 <String>
   23340:	e5942010 	ldr	r2, [r4, #16]
   23344:	e59f1298 	ldr	r1, [pc, #664]	; 235e4 <USBGamePadDeviceConfigure+0x440>
   23348:	e28d0014 	add	r0, sp, #20
   2334c:	ebfff3ac 	bl	20204 <StringFormat>
   23350:	ebffe683 	bl	1cd64 <DeviceNameServiceGet>
   23354:	e1a05000 	mov	r5, r0
   23358:	e28d0014 	add	r0, sp, #20
   2335c:	ebfff11c 	bl	1f7d4 <StringGet>
   23360:	e3a03000 	mov	r3, #0
   23364:	e1a01000 	mov	r1, r0
   23368:	e1a02004 	mov	r2, r4
   2336c:	e1a00005 	mov	r0, r5
   23370:	ebffe5fc 	bl	1cb68 <DeviceNameServiceAddDevice>
   23374:	e28d0014 	add	r0, sp, #20
   23378:	ebfff104 	bl	1f790 <_String>
   2337c:	e1a00004 	mov	r0, r4
   23380:	ebffff50 	bl	230c8 <USBGamePadDeviceStartRequest>
   23384:	e1a05000 	mov	r5, r0
   23388:	ea000003 	b	2339c <USBGamePadDeviceConfigure+0x1f8>
   2338c:	e1a00004 	mov	r0, r4
   23390:	e59f1250 	ldr	r1, [pc, #592]	; 235e8 <USBGamePadDeviceConfigure+0x444>
   23394:	ebffe8f1 	bl	1d760 <USBFunctionConfigurationError>
   23398:	e3a05000 	mov	r5, #0
   2339c:	e1a00005 	mov	r0, r5
   233a0:	e28dd020 	add	sp, sp, #32
   233a4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   233a8:	e1a00004 	mov	r0, r4
   233ac:	e59f1234 	ldr	r1, [pc, #564]	; 235e8 <USBGamePadDeviceConfigure+0x444>
   233b0:	ebffe8ea 	bl	1d760 <USBFunctionConfigurationError>
   233b4:	e1a00005 	mov	r0, r5
   233b8:	e28dd020 	add	sp, sp, #32
   233bc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   233c0:	e1d530d2 	ldrsb	r3, [r5, #2]
   233c4:	e3530000 	cmp	r3, #0
   233c8:	ba00001c 	blt	23440 <USBGamePadDeviceConfigure+0x29c>
   233cc:	e5943018 	ldr	r3, [r4, #24]
   233d0:	e3530000 	cmp	r3, #0
   233d4:	1affffec 	bne	2338c <USBGamePadDeviceConfigure+0x1e8>
   233d8:	e3a00018 	mov	r0, #24
   233dc:	eb0006d3 	bl	24f30 <malloc>
   233e0:	e3500000 	cmp	r0, #0
   233e4:	e1a0a000 	mov	sl, r0
   233e8:	e5840018 	str	r0, [r4, #24]
   233ec:	0a000027 	beq	23490 <USBGamePadDeviceConfigure+0x2ec>
   233f0:	e1a00004 	mov	r0, r4
   233f4:	ebffe83e 	bl	1d4f4 <USBFunctionGetDevice>
   233f8:	e1a02005 	mov	r2, r5
   233fc:	e1a01000 	mov	r1, r0
   23400:	e1a0000a 	mov	r0, sl
   23404:	ebffe07c 	bl	1b5fc <USBEndpoint2>
   23408:	eaffff7e 	b	23208 <USBGamePadDeviceConfigure+0x64>
   2340c:	e3a05000 	mov	r5, #0
   23410:	e59f21d4 	ldr	r2, [pc, #468]	; 235ec <USBGamePadDeviceConfigure+0x448>
   23414:	e3a01001 	mov	r1, #1
   23418:	e59f01c8 	ldr	r0, [pc, #456]	; 235e8 <USBGamePadDeviceConfigure+0x444>
   2341c:	eb000ec8 	bl	26f44 <LogWrite>
   23420:	e1a00005 	mov	r0, r5
   23424:	e28dd020 	add	sp, sp, #32
   23428:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2342c:	e59f21bc 	ldr	r2, [pc, #444]	; 235f0 <USBGamePadDeviceConfigure+0x44c>
   23430:	e59f1198 	ldr	r1, [pc, #408]	; 235d0 <USBGamePadDeviceConfigure+0x42c>
   23434:	e59f01b8 	ldr	r0, [pc, #440]	; 235f4 <USBGamePadDeviceConfigure+0x450>
   23438:	eb000ed3 	bl	26f8c <uspi_assertion_failed>
   2343c:	eaffff5c 	b	231b4 <USBGamePadDeviceConfigure+0x10>
   23440:	e5943014 	ldr	r3, [r4, #20]
   23444:	e3530000 	cmp	r3, #0
   23448:	1affffcf 	bne	2338c <USBGamePadDeviceConfigure+0x1e8>
   2344c:	e3a00018 	mov	r0, #24
   23450:	eb0006b6 	bl	24f30 <malloc>
   23454:	e3500000 	cmp	r0, #0
   23458:	e1a0a000 	mov	sl, r0
   2345c:	e5840014 	str	r0, [r4, #20]
   23460:	1affffe2 	bne	233f0 <USBGamePadDeviceConfigure+0x24c>
   23464:	e3a02f5d 	mov	r2, #372	; 0x174
   23468:	e1a01007 	mov	r1, r7
   2346c:	e1a00009 	mov	r0, r9
   23470:	eb000ec5 	bl	26f8c <uspi_assertion_failed>
   23474:	e594a014 	ldr	sl, [r4, #20]
   23478:	eaffffdc 	b	233f0 <USBGamePadDeviceConfigure+0x24c>
   2347c:	e3a02e19 	mov	r2, #400	; 0x190
   23480:	e59f1148 	ldr	r1, [pc, #328]	; 235d0 <USBGamePadDeviceConfigure+0x42c>
   23484:	e59f016c 	ldr	r0, [pc, #364]	; 235f8 <USBGamePadDeviceConfigure+0x454>
   23488:	eb000ebf 	bl	26f8c <uspi_assertion_failed>
   2348c:	eaffff6d 	b	23248 <USBGamePadDeviceConfigure+0xa4>
   23490:	e59f2164 	ldr	r2, [pc, #356]	; 235fc <USBGamePadDeviceConfigure+0x458>
   23494:	e1a01007 	mov	r1, r7
   23498:	e1a00008 	mov	r0, r8
   2349c:	eb000eba 	bl	26f8c <uspi_assertion_failed>
   234a0:	e594a018 	ldr	sl, [r4, #24]
   234a4:	eaffffd1 	b	233f0 <USBGamePadDeviceConfigure+0x24c>
   234a8:	e59f2150 	ldr	r2, [pc, #336]	; 23600 <USBGamePadDeviceConfigure+0x45c>
   234ac:	e3a01001 	mov	r1, #1
   234b0:	e59f0130 	ldr	r0, [pc, #304]	; 235e8 <USBGamePadDeviceConfigure+0x444>
   234b4:	eb000ea2 	bl	26f44 <LogWrite>
   234b8:	eaffffb7 	b	2339c <USBGamePadDeviceConfigure+0x1f8>
   234bc:	e1a00004 	mov	r0, r4
   234c0:	ebffe80b 	bl	1d4f4 <USBFunctionGetDevice>
   234c4:	e5902014 	ldr	r2, [r0, #20]
   234c8:	e5d2300a 	ldrb	r3, [r2, #10]
   234cc:	e5d2200b 	ldrb	r2, [r2, #11]
   234d0:	e1833402 	orr	r3, r3, r2, lsl #8
   234d4:	e3530f9a 	cmp	r3, #616	; 0x268
   234d8:	1affff96 	bne	23338 <USBGamePadDeviceConfigure+0x194>
   234dc:	e3a0c042 	mov	ip, #66	; 0x42
   234e0:	e3a0100c 	mov	r1, #12
   234e4:	e3a03000 	mov	r3, #0
   234e8:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   234ec:	e1a00004 	mov	r0, r4
   234f0:	e5c2c000 	strb	ip, [r2]
   234f4:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   234f8:	e2855004 	add	r5, r5, #4
   234fc:	e5c21001 	strb	r1, [r2, #1]
   23500:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   23504:	e5c23002 	strb	r3, [r2, #2]
   23508:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2350c:	e5c23003 	strb	r3, [r2, #3]
   23510:	ebffe824 	bl	1d5a8 <USBFunctionGetHost>
   23514:	e1a06000 	mov	r6, r0
   23518:	e1a00004 	mov	r0, r4
   2351c:	ebffe808 	bl	1d544 <USBFunctionGetEndpoint0>
   23520:	e1a07000 	mov	r7, r0
   23524:	e1a00004 	mov	r0, r4
   23528:	ebffe8f6 	bl	1d908 <USBFunctionGetInterfaceNumber>
   2352c:	e3a02004 	mov	r2, #4
   23530:	e3a03ffd 	mov	r3, #1012	; 0x3f4
   23534:	e58d200c 	str	r2, [sp, #12]
   23538:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2353c:	e6ffc070 	uxth	ip, r0
   23540:	e58dc004 	str	ip, [sp, #4]
   23544:	e1a01007 	mov	r1, r7
   23548:	e58d2008 	str	r2, [sp, #8]
   2354c:	e58d3000 	str	r3, [sp]
   23550:	e1a00006 	mov	r0, r6
   23554:	e3a03009 	mov	r3, #9
   23558:	e3a02021 	mov	r2, #33	; 0x21
   2355c:	ebffd079 	bl	17748 <DWHCIDeviceControlMessage>
   23560:	e5941010 	ldr	r1, [r4, #16]
   23564:	e59f207c 	ldr	r2, [pc, #124]	; 235e8 <USBGamePadDeviceConfigure+0x444>
   23568:	e5d53009 	ldrb	r3, [r5, #9]
   2356c:	e0822001 	add	r2, r2, r1
   23570:	e5d22008 	ldrb	r2, [r2, #8]
   23574:	e1a00004 	mov	r0, r4
   23578:	e1833082 	orr	r3, r3, r2, lsl #1
   2357c:	e5c53009 	strb	r3, [r5, #9]
   23580:	ebffe808 	bl	1d5a8 <USBFunctionGetHost>
   23584:	e1a06000 	mov	r6, r0
   23588:	e1a00004 	mov	r0, r4
   2358c:	ebffe7ec 	bl	1d544 <USBFunctionGetEndpoint0>
   23590:	e1a07000 	mov	r7, r0
   23594:	e1a00004 	mov	r0, r4
   23598:	ebffe8da 	bl	1d908 <USBFunctionGetInterfaceNumber>
   2359c:	e3a02030 	mov	r2, #48	; 0x30
   235a0:	e59f305c 	ldr	r3, [pc, #92]	; 23604 <USBGamePadDeviceConfigure+0x460>
   235a4:	e6ff0070 	uxth	r0, r0
   235a8:	e58d0004 	str	r0, [sp, #4]
   235ac:	e58d200c 	str	r2, [sp, #12]
   235b0:	e58d3000 	str	r3, [sp]
   235b4:	e1a01007 	mov	r1, r7
   235b8:	e1a00006 	mov	r0, r6
   235bc:	e58d5008 	str	r5, [sp, #8]
   235c0:	e3a03009 	mov	r3, #9
   235c4:	e3a02021 	mov	r2, #33	; 0x21
   235c8:	ebffd05e 	bl	17748 <DWHCIDeviceControlMessage>
   235cc:	eaffff59 	b	23338 <USBGamePadDeviceConfigure+0x194>
   235d0:	0002b48c 	andeq	fp, r2, ip, lsl #9
   235d4:	0002b08c 	andeq	fp, r2, ip, lsl #1
   235d8:	0002b070 	andeq	fp, r2, r0, ror r0
   235dc:	0002bce4 	andeq	fp, r2, r4, ror #25
   235e0:	0000054c 	andeq	r0, r0, ip, asr #10
   235e4:	0002999c 	muleq	r2, ip, r9
   235e8:	000285b0 			; <UNDEFINED> instruction: 0x000285b0
   235ec:	0002b430 	andeq	fp, r2, r0, lsr r4
   235f0:	00000153 	andeq	r0, r0, r3, asr r1
   235f4:	00029a68 	andeq	r9, r2, r8, ror #20
   235f8:	0002b40c 	andeq	fp, r2, ip, lsl #8
   235fc:	00000181 	andeq	r0, r0, r1, lsl #3
   23600:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   23604:	00000201 	andeq	r0, r0, r1, lsl #4

00023608 <USBGamePadDeviceCompletionRoutine>:
   23608:	e92d4070 	push	{r4, r5, r6, lr}
   2360c:	e2525000 	subs	r5, r2, #0
   23610:	e1a04000 	mov	r4, r0
   23614:	0a000023 	beq	236a8 <USBGamePadDeviceCompletionRoutine+0xa0>
   23618:	e3540000 	cmp	r4, #0
   2361c:	0a000027 	beq	236c0 <USBGamePadDeviceCompletionRoutine+0xb8>
   23620:	e2856098 	add	r6, r5, #152	; 0x98
   23624:	e1560004 	cmp	r6, r4
   23628:	0a000003 	beq	2363c <USBGamePadDeviceCompletionRoutine+0x34>
   2362c:	e59f20a0 	ldr	r2, [pc, #160]	; 236d4 <USBGamePadDeviceCompletionRoutine+0xcc>
   23630:	e59f10a0 	ldr	r1, [pc, #160]	; 236d8 <USBGamePadDeviceCompletionRoutine+0xd0>
   23634:	e59f00a0 	ldr	r0, [pc, #160]	; 236dc <USBGamePadDeviceCompletionRoutine+0xd4>
   23638:	eb000e53 	bl	26f8c <uspi_assertion_failed>
   2363c:	e1a00004 	mov	r0, r4
   23640:	ebffe1dc 	bl	1bdb8 <USBRequestGetStatus>
   23644:	e3500000 	cmp	r0, #0
   23648:	1a000004 	bne	23660 <USBGamePadDeviceCompletionRoutine+0x58>
   2364c:	e1a00006 	mov	r0, r6
   23650:	ebffe198 	bl	1bcb8 <_USBRequest>
   23654:	e1a00005 	mov	r0, r5
   23658:	e8bd4070 	pop	{r4, r5, r6, lr}
   2365c:	eafffe99 	b	230c8 <USBGamePadDeviceStartRequest>
   23660:	e1a00004 	mov	r0, r4
   23664:	ebffe1e0 	bl	1bdec <USBRequestGetResultLength>
   23668:	e3500000 	cmp	r0, #0
   2366c:	0afffff6 	beq	2364c <USBGamePadDeviceCompletionRoutine+0x44>
   23670:	e5953094 	ldr	r3, [r5, #148]	; 0x94
   23674:	e3530000 	cmp	r3, #0
   23678:	0afffff3 	beq	2364c <USBGamePadDeviceCompletionRoutine+0x44>
   2367c:	e595308c 	ldr	r3, [r5, #140]	; 0x8c
   23680:	e3530000 	cmp	r3, #0
   23684:	0afffff0 	beq	2364c <USBGamePadDeviceCompletionRoutine+0x44>
   23688:	e1a00005 	mov	r0, r5
   2368c:	ebfffd74 	bl	22c64 <USBGamePadDeviceDecodeReport>
   23690:	e5950010 	ldr	r0, [r5, #16]
   23694:	e595308c 	ldr	r3, [r5, #140]	; 0x8c
   23698:	e2400001 	sub	r0, r0, #1
   2369c:	e285101c 	add	r1, r5, #28
   236a0:	e12fff33 	blx	r3
   236a4:	eaffffe8 	b	2364c <USBGamePadDeviceCompletionRoutine+0x44>
   236a8:	e59f2030 	ldr	r2, [pc, #48]	; 236e0 <USBGamePadDeviceCompletionRoutine+0xd8>
   236ac:	e59f1024 	ldr	r1, [pc, #36]	; 236d8 <USBGamePadDeviceCompletionRoutine+0xd0>
   236b0:	e59f002c 	ldr	r0, [pc, #44]	; 236e4 <USBGamePadDeviceCompletionRoutine+0xdc>
   236b4:	eb000e34 	bl	26f8c <uspi_assertion_failed>
   236b8:	e3540000 	cmp	r4, #0
   236bc:	1affffd7 	bne	23620 <USBGamePadDeviceCompletionRoutine+0x18>
   236c0:	e59f2020 	ldr	r2, [pc, #32]	; 236e8 <USBGamePadDeviceCompletionRoutine+0xe0>
   236c4:	e59f100c 	ldr	r1, [pc, #12]	; 236d8 <USBGamePadDeviceCompletionRoutine+0xd0>
   236c8:	e59f001c 	ldr	r0, [pc, #28]	; 236ec <USBGamePadDeviceCompletionRoutine+0xe4>
   236cc:	eb000e2e 	bl	26f8c <uspi_assertion_failed>
   236d0:	eaffffd2 	b	23620 <USBGamePadDeviceCompletionRoutine+0x18>
   236d4:	000001de 	ldrdeq	r0, [r0], -lr
   236d8:	0002b48c 	andeq	fp, r2, ip, lsl #9
   236dc:	0002b2a4 	andeq	fp, r2, r4, lsr #5
   236e0:	000001db 	ldrdeq	r0, [r0], -fp
   236e4:	00029a68 	andeq	r9, r2, r8, ror #20
   236e8:	000001dd 	ldrdeq	r0, [r0], -sp
   236ec:	00029b30 	andeq	r9, r2, r0, lsr fp

000236f0 <USBGamePadDevice>:
   236f0:	e92d4070 	push	{r4, r5, r6, lr}
   236f4:	e2504000 	subs	r4, r0, #0
   236f8:	e1a05001 	mov	r5, r1
   236fc:	0a000028 	beq	237a4 <USBGamePadDevice+0xb4>
   23700:	e1a01005 	mov	r1, r5
   23704:	e1a00004 	mov	r0, r4
   23708:	ebffe6d9 	bl	1d274 <USBFunctionCopy>
   2370c:	e3a01000 	mov	r1, #0
   23710:	e1a03004 	mov	r3, r4
   23714:	e59f009c 	ldr	r0, [pc, #156]	; 237b8 <USBGamePadDevice+0xc8>
   23718:	e1a02001 	mov	r2, r1
   2371c:	e5841014 	str	r1, [r4, #20]
   23720:	e5841018 	str	r1, [r4, #24]
   23724:	e584108c 	str	r1, [r4, #140]	; 0x8c
   23728:	e5841094 	str	r1, [r4, #148]	; 0x94
   2372c:	e1c419b0 	strh	r1, [r4, #144]	; 0x90
   23730:	e1c41cb0 	strh	r1, [r4, #192]	; 0xc0
   23734:	e584101c 	str	r1, [r4, #28]
   23738:	e5840000 	str	r0, [r4]
   2373c:	e2841048 	add	r1, r4, #72	; 0x48
   23740:	e5832020 	str	r2, [r3, #32]
   23744:	e5832024 	str	r2, [r3, #36]	; 0x24
   23748:	e5832028 	str	r2, [r3, #40]	; 0x28
   2374c:	e283300c 	add	r3, r3, #12
   23750:	e1530001 	cmp	r3, r1
   23754:	1afffff9 	bne	23740 <USBGamePadDevice+0x50>
   23758:	e5842068 	str	r2, [r4, #104]	; 0x68
   2375c:	e584206c 	str	r2, [r4, #108]	; 0x6c
   23760:	e5842070 	str	r2, [r4, #112]	; 0x70
   23764:	e5842074 	str	r2, [r4, #116]	; 0x74
   23768:	e5842078 	str	r2, [r4, #120]	; 0x78
   2376c:	e584207c 	str	r2, [r4, #124]	; 0x7c
   23770:	e5842080 	str	r2, [r4, #128]	; 0x80
   23774:	e5842084 	str	r2, [r4, #132]	; 0x84
   23778:	e5842088 	str	r2, [r4, #136]	; 0x88
   2377c:	e3a00040 	mov	r0, #64	; 0x40
   23780:	eb0005ea 	bl	24f30 <malloc>
   23784:	e3500000 	cmp	r0, #0
   23788:	e58400bc 	str	r0, [r4, #188]	; 0xbc
   2378c:	18bd8070 	popne	{r4, r5, r6, pc}
   23790:	e3a02071 	mov	r2, #113	; 0x71
   23794:	e8bd4070 	pop	{r4, r5, r6, lr}
   23798:	e59f101c 	ldr	r1, [pc, #28]	; 237bc <USBGamePadDevice+0xcc>
   2379c:	e59f001c 	ldr	r0, [pc, #28]	; 237c0 <USBGamePadDevice+0xd0>
   237a0:	ea000df9 	b	26f8c <uspi_assertion_failed>
   237a4:	e3a02056 	mov	r2, #86	; 0x56
   237a8:	e59f100c 	ldr	r1, [pc, #12]	; 237bc <USBGamePadDevice+0xcc>
   237ac:	e59f0010 	ldr	r0, [pc, #16]	; 237c4 <USBGamePadDevice+0xd4>
   237b0:	eb000df5 	bl	26f8c <uspi_assertion_failed>
   237b4:	eaffffd1 	b	23700 <USBGamePadDevice+0x10>
   237b8:	000231a4 	andeq	r3, r2, r4, lsr #3
   237bc:	0002b48c 	andeq	fp, r2, ip, lsl #9
   237c0:	0002b288 	andeq	fp, r2, r8, lsl #5
   237c4:	00029a68 	andeq	r9, r2, r8, ror #20

000237c8 <_CUSBGamePadDevice>:
   237c8:	e92d4010 	push	{r4, lr}
   237cc:	e2504000 	subs	r4, r0, #0
   237d0:	0a00001e 	beq	23850 <_CUSBGamePadDevice+0x88>
   237d4:	e5940094 	ldr	r0, [r4, #148]	; 0x94
   237d8:	e3500000 	cmp	r0, #0
   237dc:	0a000002 	beq	237ec <_CUSBGamePadDevice+0x24>
   237e0:	eb000638 	bl	250c8 <free>
   237e4:	e3a03000 	mov	r3, #0
   237e8:	e5843094 	str	r3, [r4, #148]	; 0x94
   237ec:	e59400bc 	ldr	r0, [r4, #188]	; 0xbc
   237f0:	e3500000 	cmp	r0, #0
   237f4:	0a000002 	beq	23804 <_CUSBGamePadDevice+0x3c>
   237f8:	eb000632 	bl	250c8 <free>
   237fc:	e3a03000 	mov	r3, #0
   23800:	e58430bc 	str	r3, [r4, #188]	; 0xbc
   23804:	e5940014 	ldr	r0, [r4, #20]
   23808:	e3500000 	cmp	r0, #0
   2380c:	0a000004 	beq	23824 <_CUSBGamePadDevice+0x5c>
   23810:	ebffe018 	bl	1b878 <_USBEndpoint>
   23814:	e5940014 	ldr	r0, [r4, #20]
   23818:	eb00062a 	bl	250c8 <free>
   2381c:	e3a03000 	mov	r3, #0
   23820:	e5843014 	str	r3, [r4, #20]
   23824:	e5940018 	ldr	r0, [r4, #24]
   23828:	e3500000 	cmp	r0, #0
   2382c:	0a000004 	beq	23844 <_CUSBGamePadDevice+0x7c>
   23830:	ebffe010 	bl	1b878 <_USBEndpoint>
   23834:	e5940018 	ldr	r0, [r4, #24]
   23838:	eb000622 	bl	250c8 <free>
   2383c:	e3a03000 	mov	r3, #0
   23840:	e5843018 	str	r3, [r4, #24]
   23844:	e1a00004 	mov	r0, r4
   23848:	e8bd4010 	pop	{r4, lr}
   2384c:	eaffe6ca 	b	1d37c <_USBFunction>
   23850:	e3a02076 	mov	r2, #118	; 0x76
   23854:	e59f1008 	ldr	r1, [pc, #8]	; 23864 <_CUSBGamePadDevice+0x9c>
   23858:	e59f0008 	ldr	r0, [pc, #8]	; 23868 <_CUSBGamePadDevice+0xa0>
   2385c:	eb000dca 	bl	26f8c <uspi_assertion_failed>
   23860:	eaffffdb 	b	237d4 <_CUSBGamePadDevice+0xc>
   23864:	0002b48c 	andeq	fp, r2, ip, lsl #9
   23868:	00029a68 	andeq	r9, r2, r8, ror #20

0002386c <USBGamePadDeviceRegisterStatusHandler>:
   2386c:	e92d4070 	push	{r4, r5, r6, lr}
   23870:	e2505000 	subs	r5, r0, #0
   23874:	e1a04001 	mov	r4, r1
   23878:	0a000003 	beq	2388c <USBGamePadDeviceRegisterStatusHandler+0x20>
   2387c:	e3540000 	cmp	r4, #0
   23880:	0a000007 	beq	238a4 <USBGamePadDeviceRegisterStatusHandler+0x38>
   23884:	e585408c 	str	r4, [r5, #140]	; 0x8c
   23888:	e8bd8070 	pop	{r4, r5, r6, pc}
   2388c:	e59f2028 	ldr	r2, [pc, #40]	; 238bc <USBGamePadDeviceRegisterStatusHandler+0x50>
   23890:	e59f1028 	ldr	r1, [pc, #40]	; 238c0 <USBGamePadDeviceRegisterStatusHandler+0x54>
   23894:	e59f0028 	ldr	r0, [pc, #40]	; 238c4 <USBGamePadDeviceRegisterStatusHandler+0x58>
   23898:	eb000dbb 	bl	26f8c <uspi_assertion_failed>
   2389c:	e3540000 	cmp	r4, #0
   238a0:	1afffff7 	bne	23884 <USBGamePadDeviceRegisterStatusHandler+0x18>
   238a4:	e59f201c 	ldr	r2, [pc, #28]	; 238c8 <USBGamePadDeviceRegisterStatusHandler+0x5c>
   238a8:	e59f1010 	ldr	r1, [pc, #16]	; 238c0 <USBGamePadDeviceRegisterStatusHandler+0x54>
   238ac:	e59f0018 	ldr	r0, [pc, #24]	; 238cc <USBGamePadDeviceRegisterStatusHandler+0x60>
   238b0:	eb000db5 	bl	26f8c <uspi_assertion_failed>
   238b4:	e585408c 	str	r4, [r5, #140]	; 0x8c
   238b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   238bc:	000001c6 	andeq	r0, r0, r6, asr #3
   238c0:	0002b48c 	andeq	fp, r2, ip, lsl #9
   238c4:	00029a68 	andeq	r9, r2, r8, ror #20
   238c8:	000001c7 	andeq	r0, r0, r7, asr #3
   238cc:	0002b460 	andeq	fp, r2, r0, ror #8

000238d0 <USBGamePadDeviceGetReport>:
   238d0:	e92d4070 	push	{r4, r5, r6, lr}
   238d4:	e24dd010 	sub	sp, sp, #16
   238d8:	e1a04000 	mov	r4, r0
   238dc:	ebffe731 	bl	1d5a8 <USBFunctionGetHost>
   238e0:	e1a05000 	mov	r5, r0
   238e4:	e1a00004 	mov	r0, r4
   238e8:	ebffe715 	bl	1d544 <USBFunctionGetEndpoint0>
   238ec:	e1a06000 	mov	r6, r0
   238f0:	e1a00004 	mov	r0, r4
   238f4:	ebffe803 	bl	1d908 <USBFunctionGetInterfaceNumber>
   238f8:	e3a03c01 	mov	r3, #256	; 0x100
   238fc:	e6ff0070 	uxth	r0, r0
   23900:	e1d4ccb0 	ldrh	ip, [r4, #192]	; 0xc0
   23904:	e58d0004 	str	r0, [sp, #4]
   23908:	e59420bc 	ldr	r2, [r4, #188]	; 0xbc
   2390c:	e1a01006 	mov	r1, r6
   23910:	e58d2008 	str	r2, [sp, #8]
   23914:	e58d3000 	str	r3, [sp]
   23918:	e1a00005 	mov	r0, r5
   2391c:	e58dc00c 	str	ip, [sp, #12]
   23920:	e3a03001 	mov	r3, #1
   23924:	e3a020a1 	mov	r2, #161	; 0xa1
   23928:	ebffcf86 	bl	17748 <DWHCIDeviceControlMessage>
   2392c:	e3500000 	cmp	r0, #0
   23930:	ca000001 	bgt	2393c <USBGamePadDeviceGetReport+0x6c>
   23934:	e28dd010 	add	sp, sp, #16
   23938:	e8bd8070 	pop	{r4, r5, r6, pc}
   2393c:	e1a00004 	mov	r0, r4
   23940:	e28dd010 	add	sp, sp, #16
   23944:	e8bd4070 	pop	{r4, r5, r6, lr}
   23948:	eafffcc5 	b	22c64 <USBGamePadDeviceDecodeReport>

0002394c <uspi_EnterCritical>:
   2394c:	e10f2000 	mrs	r2, CPSR
   23950:	f10c0080 	cpsid	i
   23954:	e59f1028 	ldr	r1, [pc, #40]	; 23984 <uspi_EnterCritical+0x38>
   23958:	e5913000 	ldr	r3, [r1]
   2395c:	e3530000 	cmp	r3, #0
   23960:	01a023a2 	lsreq	r2, r2, #7
   23964:	02222001 	eoreq	r2, r2, #1
   23968:	e2833001 	add	r3, r3, #1
   2396c:	02022001 	andeq	r2, r2, #1
   23970:	e5813000 	str	r3, [r1]
   23974:	05812004 	streq	r2, [r1, #4]
   23978:	e3a03000 	mov	r3, #0
   2397c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   23980:	e12fff1e 	bx	lr
   23984:	0002d15c 	andeq	sp, r2, ip, asr r1

00023988 <uspi_LeaveCritical>:
   23988:	e92d4010 	push	{r4, lr}
   2398c:	e3a03000 	mov	r3, #0
   23990:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   23994:	e59f4044 	ldr	r4, [pc, #68]	; 239e0 <uspi_LeaveCritical+0x58>
   23998:	e5943000 	ldr	r3, [r4]
   2399c:	e3530000 	cmp	r3, #0
   239a0:	0a000009 	beq	239cc <uspi_LeaveCritical+0x44>
   239a4:	e5943000 	ldr	r3, [r4]
   239a8:	e2433001 	sub	r3, r3, #1
   239ac:	e3530000 	cmp	r3, #0
   239b0:	e5843000 	str	r3, [r4]
   239b4:	18bd8010 	popne	{r4, pc}
   239b8:	e5943004 	ldr	r3, [r4, #4]
   239bc:	e3530000 	cmp	r3, #0
   239c0:	08bd8010 	popeq	{r4, pc}
   239c4:	f1080080 	cpsie	i
   239c8:	e8bd8010 	pop	{r4, pc}
   239cc:	e3a0203b 	mov	r2, #59	; 0x3b
   239d0:	e59f100c 	ldr	r1, [pc, #12]	; 239e4 <uspi_LeaveCritical+0x5c>
   239d4:	e59f000c 	ldr	r0, [pc, #12]	; 239e8 <uspi_LeaveCritical+0x60>
   239d8:	eb000d6b 	bl	26f8c <uspi_assertion_failed>
   239dc:	eafffff0 	b	239a4 <uspi_LeaveCritical+0x1c>
   239e0:	0002d15c 	andeq	sp, r2, ip, asr r1
   239e4:	0002b49c 	muleq	r2, ip, r4
   239e8:	0002b4ac 	andeq	fp, r2, ip, lsr #9

000239ec <uspi_CleanAndInvalidateDataCacheRange>:
   239ec:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
   239f0:	e2813020 	add	r3, r1, #32
   239f4:	e353001f 	cmp	r3, #31
   239f8:	912fff1e 	bxls	lr
   239fc:	e2800020 	add	r0, r0, #32
   23a00:	e3c1101f 	bic	r1, r1, #31
   23a04:	e0801001 	add	r1, r0, r1
   23a08:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
   23a0c:	e1510000 	cmp	r1, r0
   23a10:	012fff1e 	bxeq	lr
   23a14:	e2800020 	add	r0, r0, #32
   23a18:	eafffffa 	b	23a08 <uspi_CleanAndInvalidateDataCacheRange+0x1c>

00023a1c <USBString>:
   23a1c:	e92d4070 	push	{r4, r5, r6, lr}
   23a20:	e2504000 	subs	r4, r0, #0
   23a24:	e1a05001 	mov	r5, r1
   23a28:	0a00000b 	beq	23a5c <USBString+0x40>
   23a2c:	e3550000 	cmp	r5, #0
   23a30:	e5845000 	str	r5, [r4]
   23a34:	0a00000f 	beq	23a78 <USBString+0x5c>
   23a38:	e3a03000 	mov	r3, #0
   23a3c:	e3a0000c 	mov	r0, #12
   23a40:	e5843004 	str	r3, [r4, #4]
   23a44:	eb000539 	bl	24f30 <malloc>
   23a48:	e3500000 	cmp	r0, #0
   23a4c:	e5840008 	str	r0, [r4, #8]
   23a50:	0a00000d 	beq	23a8c <USBString+0x70>
   23a54:	e8bd4070 	pop	{r4, r5, r6, lr}
   23a58:	eaffef2a 	b	1f708 <String>
   23a5c:	e3a02021 	mov	r2, #33	; 0x21
   23a60:	e59f1040 	ldr	r1, [pc, #64]	; 23aa8 <USBString+0x8c>
   23a64:	e59f0040 	ldr	r0, [pc, #64]	; 23aac <USBString+0x90>
   23a68:	eb000d47 	bl	26f8c <uspi_assertion_failed>
   23a6c:	e3550000 	cmp	r5, #0
   23a70:	e5845000 	str	r5, [r4]
   23a74:	1affffef 	bne	23a38 <USBString+0x1c>
   23a78:	e3a02024 	mov	r2, #36	; 0x24
   23a7c:	e59f1024 	ldr	r1, [pc, #36]	; 23aa8 <USBString+0x8c>
   23a80:	e59f0028 	ldr	r0, [pc, #40]	; 23ab0 <USBString+0x94>
   23a84:	eb000d40 	bl	26f8c <uspi_assertion_failed>
   23a88:	eaffffea 	b	23a38 <USBString+0x1c>
   23a8c:	e59f0020 	ldr	r0, [pc, #32]	; 23ab4 <USBString+0x98>
   23a90:	e3a02029 	mov	r2, #41	; 0x29
   23a94:	e59f100c 	ldr	r1, [pc, #12]	; 23aa8 <USBString+0x8c>
   23a98:	eb000d3b 	bl	26f8c <uspi_assertion_failed>
   23a9c:	e5940008 	ldr	r0, [r4, #8]
   23aa0:	e8bd4070 	pop	{r4, r5, r6, lr}
   23aa4:	eaffef17 	b	1f708 <String>
   23aa8:	0002b4c4 	andeq	fp, r2, r4, asr #9
   23aac:	00029a68 	andeq	r9, r2, r8, ror #20
   23ab0:	0002a108 	andeq	sl, r2, r8, lsl #2
   23ab4:	0002b4d0 	ldrdeq	fp, [r2], -r0

00023ab8 <USBStringCopy>:
   23ab8:	e92d4070 	push	{r4, r5, r6, lr}
   23abc:	e2505000 	subs	r5, r0, #0
   23ac0:	e1a04001 	mov	r4, r1
   23ac4:	0a000030 	beq	23b8c <USBStringCopy+0xd4>
   23ac8:	e3540000 	cmp	r4, #0
   23acc:	0a000034 	beq	23ba4 <USBStringCopy+0xec>
   23ad0:	e3a03000 	mov	r3, #0
   23ad4:	e5942000 	ldr	r2, [r4]
   23ad8:	e5853004 	str	r3, [r5, #4]
   23adc:	e5943004 	ldr	r3, [r4, #4]
   23ae0:	e5852000 	str	r2, [r5]
   23ae4:	e3530000 	cmp	r3, #0
   23ae8:	0a000007 	beq	23b0c <USBStringCopy+0x54>
   23aec:	e5d30000 	ldrb	r0, [r3]
   23af0:	eb00050e 	bl	24f30 <malloc>
   23af4:	e3500000 	cmp	r0, #0
   23af8:	e5850004 	str	r0, [r5, #4]
   23afc:	0a000011 	beq	23b48 <USBStringCopy+0x90>
   23b00:	e5941004 	ldr	r1, [r4, #4]
   23b04:	e5d12000 	ldrb	r2, [r1]
   23b08:	ebfff20c 	bl	20340 <uspi_memcpy>
   23b0c:	e5943008 	ldr	r3, [r4, #8]
   23b10:	e3530000 	cmp	r3, #0
   23b14:	0a000011 	beq	23b60 <USBStringCopy+0xa8>
   23b18:	e3a0000c 	mov	r0, #12
   23b1c:	eb000503 	bl	24f30 <malloc>
   23b20:	e3500000 	cmp	r0, #0
   23b24:	e1a06000 	mov	r6, r0
   23b28:	e5850008 	str	r0, [r5, #8]
   23b2c:	0a000010 	beq	23b74 <USBStringCopy+0xbc>
   23b30:	e5940008 	ldr	r0, [r4, #8]
   23b34:	ebffef26 	bl	1f7d4 <StringGet>
   23b38:	e1a01000 	mov	r1, r0
   23b3c:	e1a00006 	mov	r0, r6
   23b40:	e8bd4070 	pop	{r4, r5, r6, lr}
   23b44:	eaffeefd 	b	1f740 <String2>
   23b48:	e59f0068 	ldr	r0, [pc, #104]	; 23bb8 <USBStringCopy+0x100>
   23b4c:	e3a02037 	mov	r2, #55	; 0x37
   23b50:	e59f1064 	ldr	r1, [pc, #100]	; 23bbc <USBStringCopy+0x104>
   23b54:	eb000d0c 	bl	26f8c <uspi_assertion_failed>
   23b58:	e5950004 	ldr	r0, [r5, #4]
   23b5c:	eaffffe7 	b	23b00 <USBStringCopy+0x48>
   23b60:	e3a0203b 	mov	r2, #59	; 0x3b
   23b64:	e59f1050 	ldr	r1, [pc, #80]	; 23bbc <USBStringCopy+0x104>
   23b68:	e59f0050 	ldr	r0, [pc, #80]	; 23bc0 <USBStringCopy+0x108>
   23b6c:	eb000d06 	bl	26f8c <uspi_assertion_failed>
   23b70:	eaffffe8 	b	23b18 <USBStringCopy+0x60>
   23b74:	e3a0203d 	mov	r2, #61	; 0x3d
   23b78:	e59f103c 	ldr	r1, [pc, #60]	; 23bbc <USBStringCopy+0x104>
   23b7c:	e59f0040 	ldr	r0, [pc, #64]	; 23bc4 <USBStringCopy+0x10c>
   23b80:	eb000d01 	bl	26f8c <uspi_assertion_failed>
   23b84:	e5956008 	ldr	r6, [r5, #8]
   23b88:	eaffffe8 	b	23b30 <USBStringCopy+0x78>
   23b8c:	e3a0202f 	mov	r2, #47	; 0x2f
   23b90:	e59f1024 	ldr	r1, [pc, #36]	; 23bbc <USBStringCopy+0x104>
   23b94:	e59f002c 	ldr	r0, [pc, #44]	; 23bc8 <USBStringCopy+0x110>
   23b98:	eb000cfb 	bl	26f8c <uspi_assertion_failed>
   23b9c:	e3540000 	cmp	r4, #0
   23ba0:	1affffca 	bne	23ad0 <USBStringCopy+0x18>
   23ba4:	e3a02030 	mov	r2, #48	; 0x30
   23ba8:	e59f100c 	ldr	r1, [pc, #12]	; 23bbc <USBStringCopy+0x104>
   23bac:	e59f0018 	ldr	r0, [pc, #24]	; 23bcc <USBStringCopy+0x114>
   23bb0:	eb000cf5 	bl	26f8c <uspi_assertion_failed>
   23bb4:	eaffffc5 	b	23ad0 <USBStringCopy+0x18>
   23bb8:	0002b4e8 	andeq	fp, r2, r8, ror #9
   23bbc:	0002b4c4 	andeq	fp, r2, r4, asr #9
   23bc0:	0002b504 	andeq	fp, r2, r4, lsl #10
   23bc4:	0002b4d0 	ldrdeq	fp, [r2], -r0
   23bc8:	00029a68 	andeq	r9, r2, r8, ror #20
   23bcc:	0002a558 	andeq	sl, r2, r8, asr r5

00023bd0 <_USBString>:
   23bd0:	e92d4070 	push	{r4, r5, r6, lr}
   23bd4:	e2504000 	subs	r4, r0, #0
   23bd8:	0a00000f 	beq	23c1c <_USBString+0x4c>
   23bdc:	e5940008 	ldr	r0, [r4, #8]
   23be0:	e3500000 	cmp	r0, #0
   23be4:	0a000013 	beq	23c38 <_USBString+0x68>
   23be8:	e3a05000 	mov	r5, #0
   23bec:	ebffeee7 	bl	1f790 <_String>
   23bf0:	e5940008 	ldr	r0, [r4, #8]
   23bf4:	eb000533 	bl	250c8 <free>
   23bf8:	e5940004 	ldr	r0, [r4, #4]
   23bfc:	e5845008 	str	r5, [r4, #8]
   23c00:	e1500005 	cmp	r0, r5
   23c04:	0a000001 	beq	23c10 <_USBString+0x40>
   23c08:	eb00052e 	bl	250c8 <free>
   23c0c:	e5845004 	str	r5, [r4, #4]
   23c10:	e3a03000 	mov	r3, #0
   23c14:	e5843000 	str	r3, [r4]
   23c18:	e8bd8070 	pop	{r4, r5, r6, pc}
   23c1c:	e59f002c 	ldr	r0, [pc, #44]	; 23c50 <_USBString+0x80>
   23c20:	e3a02043 	mov	r2, #67	; 0x43
   23c24:	e59f1028 	ldr	r1, [pc, #40]	; 23c54 <_USBString+0x84>
   23c28:	eb000cd7 	bl	26f8c <uspi_assertion_failed>
   23c2c:	e5940008 	ldr	r0, [r4, #8]
   23c30:	e3500000 	cmp	r0, #0
   23c34:	1affffeb 	bne	23be8 <_USBString+0x18>
   23c38:	e59f0018 	ldr	r0, [pc, #24]	; 23c58 <_USBString+0x88>
   23c3c:	e3a02045 	mov	r2, #69	; 0x45
   23c40:	e59f100c 	ldr	r1, [pc, #12]	; 23c54 <_USBString+0x84>
   23c44:	eb000cd0 	bl	26f8c <uspi_assertion_failed>
   23c48:	e5940008 	ldr	r0, [r4, #8]
   23c4c:	eaffffe5 	b	23be8 <_USBString+0x18>
   23c50:	00029a68 	andeq	r9, r2, r8, ror #20
   23c54:	0002b4c4 	andeq	fp, r2, r4, asr #9
   23c58:	0002b4d0 	ldrdeq	fp, [r2], -r0

00023c5c <USBStringGetFromDescriptor>:
   23c5c:	e92d4bf0 	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23c60:	e2504000 	subs	r4, r0, #0
   23c64:	e28db01c 	add	fp, sp, #28
   23c68:	e24dd010 	sub	sp, sp, #16
   23c6c:	e1a05001 	mov	r5, r1
   23c70:	e1a07002 	mov	r7, r2
   23c74:	0a000088 	beq	23e9c <USBStringGetFromDescriptor+0x240>
   23c78:	e3550000 	cmp	r5, #0
   23c7c:	0a000074 	beq	23e54 <USBStringGetFromDescriptor+0x1f8>
   23c80:	e5940004 	ldr	r0, [r4, #4]
   23c84:	e3500000 	cmp	r0, #0
   23c88:	0a000000 	beq	23c90 <USBStringGetFromDescriptor+0x34>
   23c8c:	eb00050d 	bl	250c8 <free>
   23c90:	e3a00004 	mov	r0, #4
   23c94:	eb0004a5 	bl	24f30 <malloc>
   23c98:	e3500000 	cmp	r0, #0
   23c9c:	e5840004 	str	r0, [r4, #4]
   23ca0:	0a000070 	beq	23e68 <USBStringGetFromDescriptor+0x20c>
   23ca4:	e5940000 	ldr	r0, [r4]
   23ca8:	e3500000 	cmp	r0, #0
   23cac:	0a000074 	beq	23e84 <USBStringGetFromDescriptor+0x228>
   23cb0:	ebffda90 	bl	1a6f8 <USBDeviceGetHost>
   23cb4:	e1a06000 	mov	r6, r0
   23cb8:	e5940000 	ldr	r0, [r4]
   23cbc:	ebffda77 	bl	1a6a0 <USBDeviceGetEndpoint0>
   23cc0:	e3a03004 	mov	r3, #4
   23cc4:	e58d300c 	str	r3, [sp, #12]
   23cc8:	e5943004 	ldr	r3, [r4, #4]
   23ccc:	e3855c03 	orr	r5, r5, #768	; 0x300
   23cd0:	e1a01000 	mov	r1, r0
   23cd4:	e58d3008 	str	r3, [sp, #8]
   23cd8:	e1a00006 	mov	r0, r6
   23cdc:	e88d00a0 	stm	sp, {r5, r7}
   23ce0:	e3a03006 	mov	r3, #6
   23ce4:	e3a02080 	mov	r2, #128	; 0x80
   23ce8:	ebffce96 	bl	17748 <DWHCIDeviceControlMessage>
   23cec:	e3500000 	cmp	r0, #0
   23cf0:	ba000054 	blt	23e48 <USBStringGetFromDescriptor+0x1ec>
   23cf4:	e5940004 	ldr	r0, [r4, #4]
   23cf8:	e5d06000 	ldrb	r6, [r0]
   23cfc:	e3560001 	cmp	r6, #1
   23d00:	9a000050 	bls	23e48 <USBStringGetFromDescriptor+0x1ec>
   23d04:	e2168001 	ands	r8, r6, #1
   23d08:	1a00004e 	bne	23e48 <USBStringGetFromDescriptor+0x1ec>
   23d0c:	e5d03001 	ldrb	r3, [r0, #1]
   23d10:	e3530003 	cmp	r3, #3
   23d14:	1a00004b 	bne	23e48 <USBStringGetFromDescriptor+0x1ec>
   23d18:	e3560004 	cmp	r6, #4
   23d1c:	8a000026 	bhi	23dbc <USBStringGetFromDescriptor+0x160>
   23d20:	e2466002 	sub	r6, r6, #2
   23d24:	e1a0e0c6 	asr	lr, r6, #1
   23d28:	e28e3008 	add	r3, lr, #8
   23d2c:	e3c33007 	bic	r3, r3, #7
   23d30:	e35e0000 	cmp	lr, #0
   23d34:	e04dd003 	sub	sp, sp, r3
   23d38:	e28d5010 	add	r5, sp, #16
   23d3c:	13a02000 	movne	r2, #0
   23d40:	128dc00f 	addne	ip, sp, #15
   23d44:	0a00000a 	beq	23d74 <USBStringGetFromDescriptor+0x118>
   23d48:	e0801082 	add	r1, r0, r2, lsl #1
   23d4c:	e5d13002 	ldrb	r3, [r1, #2]
   23d50:	e5d11003 	ldrb	r1, [r1, #3]
   23d54:	e2822001 	add	r2, r2, #1
   23d58:	e1833401 	orr	r3, r3, r1, lsl #8
   23d5c:	e2431020 	sub	r1, r3, #32
   23d60:	e351005e 	cmp	r1, #94	; 0x5e
   23d64:	83a0305f 	movhi	r3, #95	; 0x5f
   23d68:	e152000e 	cmp	r2, lr
   23d6c:	e5ec3001 	strb	r3, [ip, #1]!
   23d70:	3afffff4 	bcc	23d48 <USBStringGetFromDescriptor+0xec>
   23d74:	e3a03000 	mov	r3, #0
   23d78:	e5940008 	ldr	r0, [r4, #8]
   23d7c:	e7c530c6 	strb	r3, [r5, r6, asr #1]
   23d80:	e1500003 	cmp	r0, r3
   23d84:	0a00004f 	beq	23ec8 <USBStringGetFromDescriptor+0x26c>
   23d88:	ebffee80 	bl	1f790 <_String>
   23d8c:	e5940008 	ldr	r0, [r4, #8]
   23d90:	eb0004cc 	bl	250c8 <free>
   23d94:	e3a0000c 	mov	r0, #12
   23d98:	eb000464 	bl	24f30 <malloc>
   23d9c:	e3500000 	cmp	r0, #0
   23da0:	e5840008 	str	r0, [r4, #8]
   23da4:	0a000041 	beq	23eb0 <USBStringGetFromDescriptor+0x254>
   23da8:	e1a01005 	mov	r1, r5
   23dac:	ebffee63 	bl	1f740 <String2>
   23db0:	e3a00001 	mov	r0, #1
   23db4:	e24bd01c 	sub	sp, fp, #28
   23db8:	e8bd8bf0 	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23dbc:	eb0004c1 	bl	250c8 <free>
   23dc0:	e1a00006 	mov	r0, r6
   23dc4:	eb000459 	bl	24f30 <malloc>
   23dc8:	e3500000 	cmp	r0, #0
   23dcc:	e5840004 	str	r0, [r4, #4]
   23dd0:	1a000003 	bne	23de4 <USBStringGetFromDescriptor+0x188>
   23dd4:	e3a02075 	mov	r2, #117	; 0x75
   23dd8:	e59f1100 	ldr	r1, [pc, #256]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23ddc:	e59f0100 	ldr	r0, [pc, #256]	; 23ee4 <USBStringGetFromDescriptor+0x288>
   23de0:	eb000c69 	bl	26f8c <uspi_assertion_failed>
   23de4:	e5940000 	ldr	r0, [r4]
   23de8:	ebffda42 	bl	1a6f8 <USBDeviceGetHost>
   23dec:	e1a09000 	mov	r9, r0
   23df0:	e5940000 	ldr	r0, [r4]
   23df4:	ebffda29 	bl	1a6a0 <USBDeviceGetEndpoint0>
   23df8:	e58d600c 	str	r6, [sp, #12]
   23dfc:	e5943004 	ldr	r3, [r4, #4]
   23e00:	e1a01000 	mov	r1, r0
   23e04:	e58d3008 	str	r3, [sp, #8]
   23e08:	e1a00009 	mov	r0, r9
   23e0c:	e88d00a0 	stm	sp, {r5, r7}
   23e10:	e3a03006 	mov	r3, #6
   23e14:	e3a02080 	mov	r2, #128	; 0x80
   23e18:	ebffce4a 	bl	17748 <DWHCIDeviceControlMessage>
   23e1c:	e1560000 	cmp	r6, r0
   23e20:	1a000008 	bne	23e48 <USBStringGetFromDescriptor+0x1ec>
   23e24:	e5940004 	ldr	r0, [r4, #4]
   23e28:	e5d03000 	ldrb	r3, [r0]
   23e2c:	e1530006 	cmp	r3, r6
   23e30:	1a000004 	bne	23e48 <USBStringGetFromDescriptor+0x1ec>
   23e34:	e3580000 	cmp	r8, #0
   23e38:	1a000002 	bne	23e48 <USBStringGetFromDescriptor+0x1ec>
   23e3c:	e5d03001 	ldrb	r3, [r0, #1]
   23e40:	e3530003 	cmp	r3, #3
   23e44:	0affffb5 	beq	23d20 <USBStringGetFromDescriptor+0xc4>
   23e48:	e3a00000 	mov	r0, #0
   23e4c:	e24bd01c 	sub	sp, fp, #28
   23e50:	e8bd8bf0 	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23e54:	e3a02056 	mov	r2, #86	; 0x56
   23e58:	e59f1080 	ldr	r1, [pc, #128]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23e5c:	e59f0084 	ldr	r0, [pc, #132]	; 23ee8 <USBStringGetFromDescriptor+0x28c>
   23e60:	eb000c49 	bl	26f8c <uspi_assertion_failed>
   23e64:	eaffff85 	b	23c80 <USBStringGetFromDescriptor+0x24>
   23e68:	e59f0074 	ldr	r0, [pc, #116]	; 23ee4 <USBStringGetFromDescriptor+0x288>
   23e6c:	e3a0205d 	mov	r2, #93	; 0x5d
   23e70:	e59f1068 	ldr	r1, [pc, #104]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23e74:	eb000c44 	bl	26f8c <uspi_assertion_failed>
   23e78:	e5940000 	ldr	r0, [r4]
   23e7c:	e3500000 	cmp	r0, #0
   23e80:	1affff8a 	bne	23cb0 <USBStringGetFromDescriptor+0x54>
   23e84:	e59f0060 	ldr	r0, [pc, #96]	; 23eec <USBStringGetFromDescriptor+0x290>
   23e88:	e3a0205f 	mov	r2, #95	; 0x5f
   23e8c:	e59f104c 	ldr	r1, [pc, #76]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23e90:	eb000c3d 	bl	26f8c <uspi_assertion_failed>
   23e94:	e5940000 	ldr	r0, [r4]
   23e98:	eaffff84 	b	23cb0 <USBStringGetFromDescriptor+0x54>
   23e9c:	e3a02055 	mov	r2, #85	; 0x55
   23ea0:	e59f1038 	ldr	r1, [pc, #56]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23ea4:	e59f0044 	ldr	r0, [pc, #68]	; 23ef0 <USBStringGetFromDescriptor+0x294>
   23ea8:	eb000c37 	bl	26f8c <uspi_assertion_failed>
   23eac:	eaffff71 	b	23c78 <USBStringGetFromDescriptor+0x1c>
   23eb0:	e59f003c 	ldr	r0, [pc, #60]	; 23ef4 <USBStringGetFromDescriptor+0x298>
   23eb4:	e3a020a2 	mov	r2, #162	; 0xa2
   23eb8:	e59f1020 	ldr	r1, [pc, #32]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23ebc:	eb000c32 	bl	26f8c <uspi_assertion_failed>
   23ec0:	e5940008 	ldr	r0, [r4, #8]
   23ec4:	eaffffb7 	b	23da8 <USBStringGetFromDescriptor+0x14c>
   23ec8:	e59f0024 	ldr	r0, [pc, #36]	; 23ef4 <USBStringGetFromDescriptor+0x298>
   23ecc:	e3a0209d 	mov	r2, #157	; 0x9d
   23ed0:	e59f1008 	ldr	r1, [pc, #8]	; 23ee0 <USBStringGetFromDescriptor+0x284>
   23ed4:	eb000c2c 	bl	26f8c <uspi_assertion_failed>
   23ed8:	e5940008 	ldr	r0, [r4, #8]
   23edc:	eaffffa9 	b	23d88 <USBStringGetFromDescriptor+0x12c>
   23ee0:	0002b4c4 	andeq	fp, r2, r4, asr #9
   23ee4:	0002b4e8 	andeq	fp, r2, r8, ror #9
   23ee8:	0002b51c 	andeq	fp, r2, ip, lsl r5
   23eec:	0002a108 	andeq	sl, r2, r8, lsl #2
   23ef0:	00029a68 	andeq	r9, r2, r8, ror #20
   23ef4:	0002b4d0 	ldrdeq	fp, [r2], -r0

00023ef8 <USBStringGet>:
   23ef8:	e92d4010 	push	{r4, lr}
   23efc:	e2504000 	subs	r4, r0, #0
   23f00:	0a000002 	beq	23f10 <USBStringGet+0x18>
   23f04:	e5940008 	ldr	r0, [r4, #8]
   23f08:	e8bd4010 	pop	{r4, lr}
   23f0c:	eaffee30 	b	1f7d4 <StringGet>
   23f10:	e59f0014 	ldr	r0, [pc, #20]	; 23f2c <USBStringGet+0x34>
   23f14:	e3a020aa 	mov	r2, #170	; 0xaa
   23f18:	e59f1010 	ldr	r1, [pc, #16]	; 23f30 <USBStringGet+0x38>
   23f1c:	eb000c1a 	bl	26f8c <uspi_assertion_failed>
   23f20:	e5940008 	ldr	r0, [r4, #8]
   23f24:	e8bd4010 	pop	{r4, lr}
   23f28:	eaffee29 	b	1f7d4 <StringGet>
   23f2c:	00029a68 	andeq	r9, r2, r8, ror #20
   23f30:	0002b4c4 	andeq	fp, r2, r4, asr #9

00023f34 <USBStringGetLanguageID>:
   23f34:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   23f38:	e2506000 	subs	r6, r0, #0
   23f3c:	e24dd010 	sub	sp, sp, #16
   23f40:	0a00005c 	beq	240b8 <USBStringGetLanguageID+0x184>
   23f44:	e3a00004 	mov	r0, #4
   23f48:	eb0003f8 	bl	24f30 <malloc>
   23f4c:	e2504000 	subs	r4, r0, #0
   23f50:	0a000060 	beq	240d8 <USBStringGetLanguageID+0x1a4>
   23f54:	e5960000 	ldr	r0, [r6]
   23f58:	e3500000 	cmp	r0, #0
   23f5c:	0a000064 	beq	240f4 <USBStringGetLanguageID+0x1c0>
   23f60:	ebffd9e4 	bl	1a6f8 <USBDeviceGetHost>
   23f64:	e1a05000 	mov	r5, r0
   23f68:	e5960000 	ldr	r0, [r6]
   23f6c:	ebffd9cb 	bl	1a6a0 <USBDeviceGetEndpoint0>
   23f70:	e3a02080 	mov	r2, #128	; 0x80
   23f74:	e3a03004 	mov	r3, #4
   23f78:	e1a01000 	mov	r1, r0
   23f7c:	e58d2008 	str	r2, [sp, #8]
   23f80:	e58d3004 	str	r3, [sp, #4]
   23f84:	e58d4000 	str	r4, [sp]
   23f88:	e1a00005 	mov	r0, r5
   23f8c:	e3a03000 	mov	r3, #0
   23f90:	e3a02003 	mov	r2, #3
   23f94:	ebffce17 	bl	177f8 <DWHCIDeviceGetDescriptor>
   23f98:	e3500000 	cmp	r0, #0
   23f9c:	ba00003f 	blt	240a0 <USBStringGetLanguageID+0x16c>
   23fa0:	e5d45000 	ldrb	r5, [r4]
   23fa4:	e3550003 	cmp	r5, #3
   23fa8:	9a00003c 	bls	240a0 <USBStringGetLanguageID+0x16c>
   23fac:	e2157001 	ands	r7, r5, #1
   23fb0:	1a00003a 	bne	240a0 <USBStringGetLanguageID+0x16c>
   23fb4:	e5d43001 	ldrb	r3, [r4, #1]
   23fb8:	e3530003 	cmp	r3, #3
   23fbc:	1a000037 	bne	240a0 <USBStringGetLanguageID+0x16c>
   23fc0:	e3550004 	cmp	r5, #4
   23fc4:	1a000017 	bne	24028 <USBStringGetLanguageID+0xf4>
   23fc8:	e5d46002 	ldrb	r6, [r4, #2]
   23fcc:	e5d43003 	ldrb	r3, [r4, #3]
   23fd0:	e59f0148 	ldr	r0, [pc, #328]	; 24120 <USBStringGetLanguageID+0x1ec>
   23fd4:	e1866403 	orr	r6, r6, r3, lsl #8
   23fd8:	e2455002 	sub	r5, r5, #2
   23fdc:	e1560000 	cmp	r6, r0
   23fe0:	e1a050c5 	asr	r5, r5, #1
   23fe4:	0a00002d 	beq	240a0 <USBStringGetLanguageID+0x16c>
   23fe8:	e3a03000 	mov	r3, #0
   23fec:	ea000004 	b	24004 <USBStringGetLanguageID+0xd0>
   23ff0:	e5d12002 	ldrb	r2, [r1, #2]
   23ff4:	e5d11003 	ldrb	r1, [r1, #3]
   23ff8:	e1822401 	orr	r2, r2, r1, lsl #8
   23ffc:	e1520000 	cmp	r2, r0
   24000:	0a000026 	beq	240a0 <USBStringGetLanguageID+0x16c>
   24004:	e2833001 	add	r3, r3, #1
   24008:	e1530005 	cmp	r3, r5
   2400c:	e0841083 	add	r1, r4, r3, lsl #1
   24010:	1afffff6 	bne	23ff0 <USBStringGetLanguageID+0xbc>
   24014:	e1a00004 	mov	r0, r4
   24018:	eb00042a 	bl	250c8 <free>
   2401c:	e1a00006 	mov	r0, r6
   24020:	e28dd010 	add	sp, sp, #16
   24024:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   24028:	e1a00004 	mov	r0, r4
   2402c:	eb000425 	bl	250c8 <free>
   24030:	e1a00005 	mov	r0, r5
   24034:	eb0003bd 	bl	24f30 <malloc>
   24038:	e2504000 	subs	r4, r0, #0
   2403c:	0a000032 	beq	2410c <USBStringGetLanguageID+0x1d8>
   24040:	e5960000 	ldr	r0, [r6]
   24044:	ebffd9ab 	bl	1a6f8 <USBDeviceGetHost>
   24048:	e1a08000 	mov	r8, r0
   2404c:	e5960000 	ldr	r0, [r6]
   24050:	ebffd992 	bl	1a6a0 <USBDeviceGetEndpoint0>
   24054:	e3a03080 	mov	r3, #128	; 0x80
   24058:	e1a01000 	mov	r1, r0
   2405c:	e58d3008 	str	r3, [sp, #8]
   24060:	e58d5004 	str	r5, [sp, #4]
   24064:	e1a00008 	mov	r0, r8
   24068:	e58d4000 	str	r4, [sp]
   2406c:	e3a03000 	mov	r3, #0
   24070:	e3a02003 	mov	r2, #3
   24074:	ebffcddf 	bl	177f8 <DWHCIDeviceGetDescriptor>
   24078:	e1550000 	cmp	r5, r0
   2407c:	1a000007 	bne	240a0 <USBStringGetLanguageID+0x16c>
   24080:	e5d43000 	ldrb	r3, [r4]
   24084:	e1530005 	cmp	r3, r5
   24088:	1a000004 	bne	240a0 <USBStringGetLanguageID+0x16c>
   2408c:	e3570000 	cmp	r7, #0
   24090:	1a000002 	bne	240a0 <USBStringGetLanguageID+0x16c>
   24094:	e5d43001 	ldrb	r3, [r4, #1]
   24098:	e3530003 	cmp	r3, #3
   2409c:	0affffc9 	beq	23fc8 <USBStringGetLanguageID+0x94>
   240a0:	e59f6078 	ldr	r6, [pc, #120]	; 24120 <USBStringGetLanguageID+0x1ec>
   240a4:	e1a00004 	mov	r0, r4
   240a8:	eb000406 	bl	250c8 <free>
   240ac:	e1a00006 	mov	r0, r6
   240b0:	e28dd010 	add	sp, sp, #16
   240b4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   240b8:	e3a020b0 	mov	r2, #176	; 0xb0
   240bc:	e59f1060 	ldr	r1, [pc, #96]	; 24124 <USBStringGetLanguageID+0x1f0>
   240c0:	e59f0060 	ldr	r0, [pc, #96]	; 24128 <USBStringGetLanguageID+0x1f4>
   240c4:	eb000bb0 	bl	26f8c <uspi_assertion_failed>
   240c8:	e3a00004 	mov	r0, #4
   240cc:	eb000397 	bl	24f30 <malloc>
   240d0:	e2504000 	subs	r4, r0, #0
   240d4:	1affff9e 	bne	23f54 <USBStringGetLanguageID+0x20>
   240d8:	e59f004c 	ldr	r0, [pc, #76]	; 2412c <USBStringGetLanguageID+0x1f8>
   240dc:	e3a020b3 	mov	r2, #179	; 0xb3
   240e0:	e59f103c 	ldr	r1, [pc, #60]	; 24124 <USBStringGetLanguageID+0x1f0>
   240e4:	eb000ba8 	bl	26f8c <uspi_assertion_failed>
   240e8:	e5960000 	ldr	r0, [r6]
   240ec:	e3500000 	cmp	r0, #0
   240f0:	1affff9a 	bne	23f60 <USBStringGetLanguageID+0x2c>
   240f4:	e59f0034 	ldr	r0, [pc, #52]	; 24130 <USBStringGetLanguageID+0x1fc>
   240f8:	e3a020b5 	mov	r2, #181	; 0xb5
   240fc:	e59f1020 	ldr	r1, [pc, #32]	; 24124 <USBStringGetLanguageID+0x1f0>
   24100:	eb000ba1 	bl	26f8c <uspi_assertion_failed>
   24104:	e5960000 	ldr	r0, [r6]
   24108:	eaffff94 	b	23f60 <USBStringGetLanguageID+0x2c>
   2410c:	e3a020ce 	mov	r2, #206	; 0xce
   24110:	e59f100c 	ldr	r1, [pc, #12]	; 24124 <USBStringGetLanguageID+0x1f0>
   24114:	e59f0010 	ldr	r0, [pc, #16]	; 2412c <USBStringGetLanguageID+0x1f8>
   24118:	eb000b9b 	bl	26f8c <uspi_assertion_failed>
   2411c:	eaffffc7 	b	24040 <USBStringGetLanguageID+0x10c>
   24120:	00000409 	andeq	r0, r0, r9, lsl #8
   24124:	0002b4c4 	andeq	fp, r2, r4, asr #9
   24128:	00029a68 	andeq	r9, r2, r8, ror #20
   2412c:	0002b528 	andeq	fp, r2, r8, lsr #10
   24130:	0002a108 	andeq	sl, r2, r8, lsl #2

00024134 <USBMIDIDeviceStartRequest>:
   24134:	e92d4070 	push	{r4, r5, r6, lr}
   24138:	e2504000 	subs	r4, r0, #0
   2413c:	e24dd008 	sub	sp, sp, #8
   24140:	0a000017 	beq	241a4 <USBMIDIDeviceStartRequest+0x70>
   24144:	e5943010 	ldr	r3, [r4, #16]
   24148:	e3530000 	cmp	r3, #0
   2414c:	0a00001b 	beq	241c0 <USBMIDIDeviceStartRequest+0x8c>
   24150:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   24154:	e3520000 	cmp	r2, #0
   24158:	0a00001f 	beq	241dc <USBMIDIDeviceStartRequest+0xa8>
   2415c:	e3a06000 	mov	r6, #0
   24160:	e2845018 	add	r5, r4, #24
   24164:	e58d6000 	str	r6, [sp]
   24168:	e1d433bc 	ldrh	r3, [r4, #60]	; 0x3c
   2416c:	e5941010 	ldr	r1, [r4, #16]
   24170:	e1a00005 	mov	r0, r5
   24174:	ebffde9f 	bl	1bbf8 <USBRequest>
   24178:	e1a03004 	mov	r3, r4
   2417c:	e1a02006 	mov	r2, r6
   24180:	e1a00005 	mov	r0, r5
   24184:	e59f1068 	ldr	r1, [pc, #104]	; 241f4 <USBMIDIDeviceStartRequest+0xc0>
   24188:	ebffdf6f 	bl	1bf4c <USBRequestSetCompletionRoutine>
   2418c:	e1a00004 	mov	r0, r4
   24190:	ebffe504 	bl	1d5a8 <USBFunctionGetHost>
   24194:	e1a01005 	mov	r1, r5
   24198:	e28dd008 	add	sp, sp, #8
   2419c:	e8bd4070 	pop	{r4, r5, r6, lr}
   241a0:	eaffcc54 	b	172f8 <DWHCIDeviceSubmitAsyncRequest>
   241a4:	e3a0209e 	mov	r2, #158	; 0x9e
   241a8:	e59f1048 	ldr	r1, [pc, #72]	; 241f8 <USBMIDIDeviceStartRequest+0xc4>
   241ac:	e59f0048 	ldr	r0, [pc, #72]	; 241fc <USBMIDIDeviceStartRequest+0xc8>
   241b0:	eb000b75 	bl	26f8c <uspi_assertion_failed>
   241b4:	e5943010 	ldr	r3, [r4, #16]
   241b8:	e3530000 	cmp	r3, #0
   241bc:	1affffe3 	bne	24150 <USBMIDIDeviceStartRequest+0x1c>
   241c0:	e3a020a0 	mov	r2, #160	; 0xa0
   241c4:	e59f102c 	ldr	r1, [pc, #44]	; 241f8 <USBMIDIDeviceStartRequest+0xc4>
   241c8:	e59f0030 	ldr	r0, [pc, #48]	; 24200 <USBMIDIDeviceStartRequest+0xcc>
   241cc:	eb000b6e 	bl	26f8c <uspi_assertion_failed>
   241d0:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   241d4:	e3520000 	cmp	r2, #0
   241d8:	1affffdf 	bne	2415c <USBMIDIDeviceStartRequest+0x28>
   241dc:	e3a020a1 	mov	r2, #161	; 0xa1
   241e0:	e59f1010 	ldr	r1, [pc, #16]	; 241f8 <USBMIDIDeviceStartRequest+0xc4>
   241e4:	e59f0018 	ldr	r0, [pc, #24]	; 24204 <USBMIDIDeviceStartRequest+0xd0>
   241e8:	eb000b67 	bl	26f8c <uspi_assertion_failed>
   241ec:	e5942040 	ldr	r2, [r4, #64]	; 0x40
   241f0:	eaffffd9 	b	2415c <USBMIDIDeviceStartRequest+0x28>
   241f4:	00024458 	andeq	r4, r2, r8, asr r4
   241f8:	0002b53c 	andeq	fp, r2, ip, lsr r5
   241fc:	00029a68 	andeq	r9, r2, r8, ror #20
   24200:	0002b070 	andeq	fp, r2, r0, ror r0
   24204:	0002b548 	andeq	fp, r2, r8, asr #10

00024208 <USBMIDIDeviceConfigure>:
   24208:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2420c:	e2505000 	subs	r5, r0, #0
   24210:	e24dd014 	sub	sp, sp, #20
   24214:	0a000071 	beq	243e0 <USBMIDIDeviceConfigure+0x1d8>
   24218:	e1a00005 	mov	r0, r5
   2421c:	ebffe49b 	bl	1d490 <USBFunctionGetNumEndpoints>
   24220:	e2506000 	subs	r6, r0, #0
   24224:	0a000067 	beq	243c8 <USBMIDIDeviceConfigure+0x1c0>
   24228:	e59f6200 	ldr	r6, [pc, #512]	; 24430 <USBMIDIDeviceConfigure+0x228>
   2422c:	e59fa200 	ldr	sl, [pc, #512]	; 24434 <USBMIDIDeviceConfigure+0x22c>
   24230:	e59f8200 	ldr	r8, [pc, #512]	; 24438 <USBMIDIDeviceConfigure+0x230>
   24234:	e59f9200 	ldr	r9, [pc, #512]	; 2443c <USBMIDIDeviceConfigure+0x234>
   24238:	e59f7200 	ldr	r7, [pc, #512]	; 24440 <USBMIDIDeviceConfigure+0x238>
   2423c:	e3a01005 	mov	r1, #5
   24240:	e1a00005 	mov	r0, r5
   24244:	ebffe529 	bl	1d6f0 <USBFunctionGetDescriptor>
   24248:	e2504000 	subs	r4, r0, #0
   2424c:	0a000035 	beq	24328 <USBMIDIDeviceConfigure+0x120>
   24250:	e1d430d2 	ldrsb	r3, [r4, #2]
   24254:	e3530000 	cmp	r3, #0
   24258:	aafffff7 	bge	2423c <USBMIDIDeviceConfigure+0x34>
   2425c:	e5d43003 	ldrb	r3, [r4, #3]
   24260:	e203303f 	and	r3, r3, #63	; 0x3f
   24264:	e3530002 	cmp	r3, #2
   24268:	1afffff3 	bne	2423c <USBMIDIDeviceConfigure+0x34>
   2426c:	e3a01025 	mov	r1, #37	; 0x25
   24270:	e1a00005 	mov	r0, r5
   24274:	ebffe51d 	bl	1d6f0 <USBFunctionGetDescriptor>
   24278:	e3500000 	cmp	r0, #0
   2427c:	0affffee 	beq	2423c <USBMIDIDeviceConfigure+0x34>
   24280:	e5d43000 	ldrb	r3, [r4]
   24284:	e0843003 	add	r3, r4, r3
   24288:	e1500003 	cmp	r0, r3
   2428c:	1affffea 	bne	2423c <USBMIDIDeviceConfigure+0x34>
   24290:	e5953010 	ldr	r3, [r5, #16]
   24294:	e3530000 	cmp	r3, #0
   24298:	0a000003 	beq	242ac <USBMIDIDeviceConfigure+0xa4>
   2429c:	e3a02070 	mov	r2, #112	; 0x70
   242a0:	e1a01006 	mov	r1, r6
   242a4:	e1a00007 	mov	r0, r7
   242a8:	eb000b37 	bl	26f8c <uspi_assertion_failed>
   242ac:	e3a00018 	mov	r0, #24
   242b0:	eb00031e 	bl	24f30 <malloc>
   242b4:	e3500000 	cmp	r0, #0
   242b8:	e5850010 	str	r0, [r5, #16]
   242bc:	0a000056 	beq	2441c <USBMIDIDeviceConfigure+0x214>
   242c0:	e5d40004 	ldrb	r0, [r4, #4]
   242c4:	e5d42005 	ldrb	r2, [r4, #5]
   242c8:	e5953040 	ldr	r3, [r5, #64]	; 0x40
   242cc:	e1800402 	orr	r0, r0, r2, lsl #8
   242d0:	e3c00003 	bic	r0, r0, #3
   242d4:	e6ff0070 	uxth	r0, r0
   242d8:	e3530000 	cmp	r3, #0
   242dc:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
   242e0:	0a000004 	beq	242f8 <USBMIDIDeviceConfigure+0xf0>
   242e4:	e1a00008 	mov	r0, r8
   242e8:	e3a02076 	mov	r2, #118	; 0x76
   242ec:	e1a01006 	mov	r1, r6
   242f0:	eb000b25 	bl	26f8c <uspi_assertion_failed>
   242f4:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
   242f8:	eb00030c 	bl	24f30 <malloc>
   242fc:	e3500000 	cmp	r0, #0
   24300:	e5850040 	str	r0, [r5, #64]	; 0x40
   24304:	0a00003f 	beq	24408 <USBMIDIDeviceConfigure+0x200>
   24308:	e1a00005 	mov	r0, r5
   2430c:	e595b010 	ldr	fp, [r5, #16]
   24310:	ebffe477 	bl	1d4f4 <USBFunctionGetDevice>
   24314:	e1a02004 	mov	r2, r4
   24318:	e1a01000 	mov	r1, r0
   2431c:	e1a0000b 	mov	r0, fp
   24320:	ebffdcb5 	bl	1b5fc <USBEndpoint2>
   24324:	eaffffc4 	b	2423c <USBMIDIDeviceConfigure+0x34>
   24328:	e5956010 	ldr	r6, [r5, #16]
   2432c:	e1a00005 	mov	r0, r5
   24330:	e3560000 	cmp	r6, #0
   24334:	0a00002e 	beq	243f4 <USBMIDIDeviceConfigure+0x1ec>
   24338:	ebffe4b3 	bl	1d60c <USBFunctionConfigure>
   2433c:	e2506000 	subs	r6, r0, #0
   24340:	0a000019 	beq	243ac <USBMIDIDeviceConfigure+0x1a4>
   24344:	e28d0004 	add	r0, sp, #4
   24348:	ebffecee 	bl	1f708 <String>
   2434c:	e59f30f0 	ldr	r3, [pc, #240]	; 24444 <USBMIDIDeviceConfigure+0x23c>
   24350:	e59f10f0 	ldr	r1, [pc, #240]	; 24448 <USBMIDIDeviceConfigure+0x240>
   24354:	e5932000 	ldr	r2, [r3]
   24358:	e28d0004 	add	r0, sp, #4
   2435c:	e282c001 	add	ip, r2, #1
   24360:	e583c000 	str	ip, [r3]
   24364:	ebffefa6 	bl	20204 <StringFormat>
   24368:	ebffe27d 	bl	1cd64 <DeviceNameServiceGet>
   2436c:	e1a06000 	mov	r6, r0
   24370:	e28d0004 	add	r0, sp, #4
   24374:	ebffed16 	bl	1f7d4 <StringGet>
   24378:	e1a03004 	mov	r3, r4
   2437c:	e1a01000 	mov	r1, r0
   24380:	e1a02005 	mov	r2, r5
   24384:	e1a00006 	mov	r0, r6
   24388:	ebffe1f6 	bl	1cb68 <DeviceNameServiceAddDevice>
   2438c:	e28d0004 	add	r0, sp, #4
   24390:	ebffecfe 	bl	1f790 <_String>
   24394:	e1a00005 	mov	r0, r5
   24398:	ebffff65 	bl	24134 <USBMIDIDeviceStartRequest>
   2439c:	e1a06000 	mov	r6, r0
   243a0:	e1a00006 	mov	r0, r6
   243a4:	e28dd014 	add	sp, sp, #20
   243a8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243ac:	e59f2098 	ldr	r2, [pc, #152]	; 2444c <USBMIDIDeviceConfigure+0x244>
   243b0:	e3a01001 	mov	r1, #1
   243b4:	e59f0094 	ldr	r0, [pc, #148]	; 24450 <USBMIDIDeviceConfigure+0x248>
   243b8:	eb000ae1 	bl	26f44 <LogWrite>
   243bc:	e1a00006 	mov	r0, r6
   243c0:	e28dd014 	add	sp, sp, #20
   243c4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243c8:	e1a00005 	mov	r0, r5
   243cc:	e59f107c 	ldr	r1, [pc, #124]	; 24450 <USBMIDIDeviceConfigure+0x248>
   243d0:	ebffe4e2 	bl	1d760 <USBFunctionConfigurationError>
   243d4:	e1a00006 	mov	r0, r6
   243d8:	e28dd014 	add	sp, sp, #20
   243dc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243e0:	e3a0204f 	mov	r2, #79	; 0x4f
   243e4:	e59f1044 	ldr	r1, [pc, #68]	; 24430 <USBMIDIDeviceConfigure+0x228>
   243e8:	e59f0064 	ldr	r0, [pc, #100]	; 24454 <USBMIDIDeviceConfigure+0x24c>
   243ec:	eb000ae6 	bl	26f8c <uspi_assertion_failed>
   243f0:	eaffff88 	b	24218 <USBMIDIDeviceConfigure+0x10>
   243f4:	e59f1054 	ldr	r1, [pc, #84]	; 24450 <USBMIDIDeviceConfigure+0x248>
   243f8:	ebffe4d8 	bl	1d760 <USBFunctionConfigurationError>
   243fc:	e1a00006 	mov	r0, r6
   24400:	e28dd014 	add	sp, sp, #20
   24404:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24408:	e3a02078 	mov	r2, #120	; 0x78
   2440c:	e1a01006 	mov	r1, r6
   24410:	e1a0000a 	mov	r0, sl
   24414:	eb000adc 	bl	26f8c <uspi_assertion_failed>
   24418:	eaffffba 	b	24308 <USBMIDIDeviceConfigure+0x100>
   2441c:	e3a02072 	mov	r2, #114	; 0x72
   24420:	e1a01006 	mov	r1, r6
   24424:	e1a00009 	mov	r0, r9
   24428:	eb000ad7 	bl	26f8c <uspi_assertion_failed>
   2442c:	eaffffa3 	b	242c0 <USBMIDIDeviceConfigure+0xb8>
   24430:	0002b53c 	andeq	fp, r2, ip, lsr r5
   24434:	0002b548 	andeq	fp, r2, r8, asr #10
   24438:	0002b580 	andeq	fp, r2, r0, lsl #11
   2443c:	0002b070 	andeq	fp, r2, r0, ror r0
   24440:	0002b564 	andeq	fp, r2, r4, ror #10
   24444:	0002bd18 	andeq	fp, r2, r8, lsl sp
   24448:	0002b59c 	muleq	r2, ip, r5
   2444c:	0002aa8c 	andeq	sl, r2, ip, lsl #21
   24450:	000285c0 	andeq	r8, r2, r0, asr #11
   24454:	00029a68 	andeq	r9, r2, r8, ror #20

00024458 <USBMIDIDeviceCompletionRoutine>:
   24458:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2445c:	e2525000 	subs	r5, r2, #0
   24460:	e1a04000 	mov	r4, r0
   24464:	0a000035 	beq	24540 <USBMIDIDeviceCompletionRoutine+0xe8>
   24468:	e3540000 	cmp	r4, #0
   2446c:	0a000039 	beq	24558 <USBMIDIDeviceCompletionRoutine+0x100>
   24470:	e2857018 	add	r7, r5, #24
   24474:	e1570004 	cmp	r7, r4
   24478:	0a000003 	beq	2448c <USBMIDIDeviceCompletionRoutine+0x34>
   2447c:	e3a020af 	mov	r2, #175	; 0xaf
   24480:	e59f10fc 	ldr	r1, [pc, #252]	; 24584 <USBMIDIDeviceCompletionRoutine+0x12c>
   24484:	e59f00fc 	ldr	r0, [pc, #252]	; 24588 <USBMIDIDeviceCompletionRoutine+0x130>
   24488:	eb000abf 	bl	26f8c <uspi_assertion_failed>
   2448c:	e1a00004 	mov	r0, r4
   24490:	ebffde48 	bl	1bdb8 <USBRequestGetStatus>
   24494:	e3500000 	cmp	r0, #0
   24498:	1a000004 	bne	244b0 <USBMIDIDeviceCompletionRoutine+0x58>
   2449c:	e1a00007 	mov	r0, r7
   244a0:	ebffde04 	bl	1bcb8 <_USBRequest>
   244a4:	e1a00005 	mov	r0, r5
   244a8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   244ac:	eaffff20 	b	24134 <USBMIDIDeviceStartRequest>
   244b0:	e1a00004 	mov	r0, r4
   244b4:	ebffde4c 	bl	1bdec <USBRequestGetResultLength>
   244b8:	e3100003 	tst	r0, #3
   244bc:	1afffff6 	bne	2449c <USBMIDIDeviceCompletionRoutine+0x44>
   244c0:	e5956040 	ldr	r6, [r5, #64]	; 0x40
   244c4:	e3560000 	cmp	r6, #0
   244c8:	0a000027 	beq	2456c <USBMIDIDeviceCompletionRoutine+0x114>
   244cc:	e1a00004 	mov	r0, r4
   244d0:	ebffde45 	bl	1bdec <USBRequestGetResultLength>
   244d4:	e5954040 	ldr	r4, [r5, #64]	; 0x40
   244d8:	e0860000 	add	r0, r6, r0
   244dc:	e1500004 	cmp	r0, r4
   244e0:	9affffed 	bls	2449c <USBMIDIDeviceCompletionRoutine+0x44>
   244e4:	e1e06004 	mvn	r6, r4
   244e8:	e0806006 	add	r6, r0, r6
   244ec:	e2843005 	add	r3, r4, #5
   244f0:	e3c66003 	bic	r6, r6, #3
   244f4:	e59f8090 	ldr	r8, [pc, #144]	; 2458c <USBMIDIDeviceCompletionRoutine+0x134>
   244f8:	e0866003 	add	r6, r6, r3
   244fc:	e2844001 	add	r4, r4, #1
   24500:	e5540001 	ldrb	r0, [r4, #-1]
   24504:	e3500000 	cmp	r0, #0
   24508:	0a000008 	beq	24530 <USBMIDIDeviceCompletionRoutine+0xd8>
   2450c:	e5959014 	ldr	r9, [r5, #20]
   24510:	e200300f 	and	r3, r0, #15
   24514:	e3590000 	cmp	r9, #0
   24518:	e0883103 	add	r3, r8, r3, lsl #2
   2451c:	e1a00220 	lsr	r0, r0, #4
   24520:	0a000002 	beq	24530 <USBMIDIDeviceCompletionRoutine+0xd8>
   24524:	e5931008 	ldr	r1, [r3, #8]
   24528:	e1a02004 	mov	r2, r4
   2452c:	e12fff39 	blx	r9
   24530:	e2844004 	add	r4, r4, #4
   24534:	e1540006 	cmp	r4, r6
   24538:	1afffff0 	bne	24500 <USBMIDIDeviceCompletionRoutine+0xa8>
   2453c:	eaffffd6 	b	2449c <USBMIDIDeviceCompletionRoutine+0x44>
   24540:	e3a020ac 	mov	r2, #172	; 0xac
   24544:	e59f1038 	ldr	r1, [pc, #56]	; 24584 <USBMIDIDeviceCompletionRoutine+0x12c>
   24548:	e59f0040 	ldr	r0, [pc, #64]	; 24590 <USBMIDIDeviceCompletionRoutine+0x138>
   2454c:	eb000a8e 	bl	26f8c <uspi_assertion_failed>
   24550:	e3540000 	cmp	r4, #0
   24554:	1affffc5 	bne	24470 <USBMIDIDeviceCompletionRoutine+0x18>
   24558:	e3a020ae 	mov	r2, #174	; 0xae
   2455c:	e59f1020 	ldr	r1, [pc, #32]	; 24584 <USBMIDIDeviceCompletionRoutine+0x12c>
   24560:	e59f002c 	ldr	r0, [pc, #44]	; 24594 <USBMIDIDeviceCompletionRoutine+0x13c>
   24564:	eb000a88 	bl	26f8c <uspi_assertion_failed>
   24568:	eaffffc0 	b	24470 <USBMIDIDeviceCompletionRoutine+0x18>
   2456c:	e3a020b4 	mov	r2, #180	; 0xb4
   24570:	e59f100c 	ldr	r1, [pc, #12]	; 24584 <USBMIDIDeviceCompletionRoutine+0x12c>
   24574:	e59f001c 	ldr	r0, [pc, #28]	; 24598 <USBMIDIDeviceCompletionRoutine+0x140>
   24578:	eb000a83 	bl	26f8c <uspi_assertion_failed>
   2457c:	e5956040 	ldr	r6, [r5, #64]	; 0x40
   24580:	eaffffd1 	b	244cc <USBMIDIDeviceCompletionRoutine+0x74>
   24584:	0002b53c 	andeq	fp, r2, ip, lsr r5
   24588:	0002b2a4 	andeq	fp, r2, r4, lsr #5
   2458c:	000285c0 	andeq	r8, r2, r0, asr #11
   24590:	00029a68 	andeq	r9, r2, r8, ror #20
   24594:	00029b30 	andeq	r9, r2, r0, lsr fp
   24598:	0002b548 	andeq	fp, r2, r8, asr #10

0002459c <USBMIDIDevice>:
   2459c:	e92d4070 	push	{r4, r5, r6, lr}
   245a0:	e2504000 	subs	r4, r0, #0
   245a4:	e1a05001 	mov	r5, r1
   245a8:	0a000009 	beq	245d4 <USBMIDIDevice+0x38>
   245ac:	e1a01005 	mov	r1, r5
   245b0:	e1a00004 	mov	r0, r4
   245b4:	ebffe32e 	bl	1d274 <USBFunctionCopy>
   245b8:	e3a03000 	mov	r3, #0
   245bc:	e59f2024 	ldr	r2, [pc, #36]	; 245e8 <USBMIDIDevice+0x4c>
   245c0:	e5843010 	str	r3, [r4, #16]
   245c4:	e5843014 	str	r3, [r4, #20]
   245c8:	e5843040 	str	r3, [r4, #64]	; 0x40
   245cc:	e5842000 	str	r2, [r4]
   245d0:	e8bd8070 	pop	{r4, r5, r6, pc}
   245d4:	e3a0202e 	mov	r2, #46	; 0x2e
   245d8:	e59f100c 	ldr	r1, [pc, #12]	; 245ec <USBMIDIDevice+0x50>
   245dc:	e59f000c 	ldr	r0, [pc, #12]	; 245f0 <USBMIDIDevice+0x54>
   245e0:	eb000a69 	bl	26f8c <uspi_assertion_failed>
   245e4:	eafffff0 	b	245ac <USBMIDIDevice+0x10>
   245e8:	00024208 	andeq	r4, r2, r8, lsl #4
   245ec:	0002b53c 	andeq	fp, r2, ip, lsr r5
   245f0:	00029a68 	andeq	r9, r2, r8, ror #20

000245f4 <_CUSBMIDIDevice>:
   245f4:	e92d4010 	push	{r4, lr}
   245f8:	e2504000 	subs	r4, r0, #0
   245fc:	0a000010 	beq	24644 <_CUSBMIDIDevice+0x50>
   24600:	e5940040 	ldr	r0, [r4, #64]	; 0x40
   24604:	e3500000 	cmp	r0, #0
   24608:	0a000002 	beq	24618 <_CUSBMIDIDevice+0x24>
   2460c:	eb0002ad 	bl	250c8 <free>
   24610:	e3a03000 	mov	r3, #0
   24614:	e5843040 	str	r3, [r4, #64]	; 0x40
   24618:	e5940010 	ldr	r0, [r4, #16]
   2461c:	e3500000 	cmp	r0, #0
   24620:	0a000004 	beq	24638 <_CUSBMIDIDevice+0x44>
   24624:	ebffdc93 	bl	1b878 <_USBEndpoint>
   24628:	e5940010 	ldr	r0, [r4, #16]
   2462c:	eb0002a5 	bl	250c8 <free>
   24630:	e3a03000 	mov	r3, #0
   24634:	e5843010 	str	r3, [r4, #16]
   24638:	e1a00004 	mov	r0, r4
   2463c:	e8bd4010 	pop	{r4, lr}
   24640:	eaffe34d 	b	1d37c <_USBFunction>
   24644:	e3a0203a 	mov	r2, #58	; 0x3a
   24648:	e59f1008 	ldr	r1, [pc, #8]	; 24658 <_CUSBMIDIDevice+0x64>
   2464c:	e59f0008 	ldr	r0, [pc, #8]	; 2465c <_CUSBMIDIDevice+0x68>
   24650:	eb000a4d 	bl	26f8c <uspi_assertion_failed>
   24654:	eaffffe9 	b	24600 <_CUSBMIDIDevice+0xc>
   24658:	0002b53c 	andeq	fp, r2, ip, lsr r5
   2465c:	00029a68 	andeq	r9, r2, r8, ror #20

00024660 <USBMIDIDeviceRegisterPacketHandler>:
   24660:	e92d4070 	push	{r4, r5, r6, lr}
   24664:	e2505000 	subs	r5, r0, #0
   24668:	e1a04001 	mov	r4, r1
   2466c:	0a000003 	beq	24680 <USBMIDIDeviceRegisterPacketHandler+0x20>
   24670:	e3540000 	cmp	r4, #0
   24674:	0a000007 	beq	24698 <USBMIDIDeviceRegisterPacketHandler+0x38>
   24678:	e5854014 	str	r4, [r5, #20]
   2467c:	e8bd8070 	pop	{r4, r5, r6, pc}
   24680:	e3a02097 	mov	r2, #151	; 0x97
   24684:	e59f1024 	ldr	r1, [pc, #36]	; 246b0 <USBMIDIDeviceRegisterPacketHandler+0x50>
   24688:	e59f0024 	ldr	r0, [pc, #36]	; 246b4 <USBMIDIDeviceRegisterPacketHandler+0x54>
   2468c:	eb000a3e 	bl	26f8c <uspi_assertion_failed>
   24690:	e3540000 	cmp	r4, #0
   24694:	1afffff7 	bne	24678 <USBMIDIDeviceRegisterPacketHandler+0x18>
   24698:	e3a02098 	mov	r2, #152	; 0x98
   2469c:	e59f100c 	ldr	r1, [pc, #12]	; 246b0 <USBMIDIDeviceRegisterPacketHandler+0x50>
   246a0:	e59f0010 	ldr	r0, [pc, #16]	; 246b8 <USBMIDIDeviceRegisterPacketHandler+0x58>
   246a4:	eb000a38 	bl	26f8c <uspi_assertion_failed>
   246a8:	e5854014 	str	r4, [r5, #20]
   246ac:	e8bd8070 	pop	{r4, r5, r6, pc}
   246b0:	0002b53c 	andeq	fp, r2, ip, lsr r5
   246b4:	00029a68 	andeq	r9, r2, r8, ror #20
   246b8:	0002b5a4 	andeq	fp, r2, r4, lsr #11

000246bc <USBConfigurationParser>:
   246bc:	e92d4070 	push	{r4, r5, r6, lr}
   246c0:	e2504000 	subs	r4, r0, #0
   246c4:	e1a05001 	mov	r5, r1
   246c8:	e1a06002 	mov	r6, r2
   246cc:	0a000044 	beq	247e4 <USBConfigurationParser+0x128>
   246d0:	e3a03000 	mov	r3, #0
   246d4:	e0852006 	add	r2, r5, r6
   246d8:	e1550003 	cmp	r5, r3
   246dc:	e5843008 	str	r3, [r4, #8]
   246e0:	e5843014 	str	r3, [r4, #20]
   246e4:	e8840060 	stm	r4, {r5, r6}
   246e8:	e5845010 	str	r5, [r4, #16]
   246ec:	e5845018 	str	r5, [r4, #24]
   246f0:	e584200c 	str	r2, [r4, #12]
   246f4:	11a03006 	movne	r3, r6
   246f8:	0a00003e 	beq	247f8 <USBConfigurationParser+0x13c>
   246fc:	e2433004 	sub	r3, r3, #4
   24700:	e3530f7f 	cmp	r3, #508	; 0x1fc
   24704:	88bd8070 	pophi	{r4, r5, r6, pc}
   24708:	e5943000 	ldr	r3, [r4]
   2470c:	e5d32000 	ldrb	r2, [r3]
   24710:	e3520009 	cmp	r2, #9
   24714:	18bd8070 	popne	{r4, r5, r6, pc}
   24718:	e5d32001 	ldrb	r2, [r3, #1]
   2471c:	e3520002 	cmp	r2, #2
   24720:	18bd8070 	popne	{r4, r5, r6, pc}
   24724:	e5d3c002 	ldrb	ip, [r3, #2]
   24728:	e5d32003 	ldrb	r2, [r3, #3]
   2472c:	e18cc402 	orr	ip, ip, r2, lsl #8
   24730:	e15c0006 	cmp	ip, r6
   24734:	88bd8070 	pophi	{r4, r5, r6, pc}
   24738:	e3a05000 	mov	r5, #0
   2473c:	3083c00c 	addcc	ip, r3, ip
   24740:	2594c00c 	ldrcs	ip, [r4, #12]
   24744:	3584c00c 	strcc	ip, [r4, #12]
   24748:	e1a0e005 	mov	lr, r5
   2474c:	ea000003 	b	24760 <USBConfigurationParser+0xa4>
   24750:	e3520002 	cmp	r2, #2
   24754:	0a00001e 	beq	247d4 <USBConfigurationParser+0x118>
   24758:	e1a0e002 	mov	lr, r2
   2475c:	e1a03001 	mov	r3, r1
   24760:	e2832002 	add	r2, r3, #2
   24764:	e15c0002 	cmp	ip, r2
   24768:	9a000028 	bls	24810 <USBConfigurationParser+0x154>
   2476c:	e5d30000 	ldrb	r0, [r3]
   24770:	e5d32001 	ldrb	r2, [r3, #1]
   24774:	e0831000 	add	r1, r3, r0
   24778:	e15c0001 	cmp	ip, r1
   2477c:	3a00000a 	bcc	247ac <USBConfigurationParser+0xf0>
   24780:	e3520004 	cmp	r2, #4
   24784:	0a00000a 	beq	247b4 <USBConfigurationParser+0xf8>
   24788:	e3520005 	cmp	r2, #5
   2478c:	1affffef 	bne	24750 <USBConfigurationParser+0x94>
   24790:	e31e00fd 	tst	lr, #253	; 0xfd
   24794:	0a000004 	beq	247ac <USBConfigurationParser+0xf0>
   24798:	e3550000 	cmp	r5, #0
   2479c:	13a0e009 	movne	lr, #9
   247a0:	03a0e007 	moveq	lr, #7
   247a4:	e15e0000 	cmp	lr, r0
   247a8:	0affffea 	beq	24758 <USBConfigurationParser+0x9c>
   247ac:	e5843018 	str	r3, [r4, #24]
   247b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   247b4:	e35e0000 	cmp	lr, #0
   247b8:	0afffffb 	beq	247ac <USBConfigurationParser+0xf0>
   247bc:	e5d35005 	ldrb	r5, [r3, #5]
   247c0:	e3a0e009 	mov	lr, #9
   247c4:	e2455001 	sub	r5, r5, #1
   247c8:	e16f5f15 	clz	r5, r5
   247cc:	e1a052a5 	lsr	r5, r5, #5
   247d0:	eafffff3 	b	247a4 <USBConfigurationParser+0xe8>
   247d4:	e35e0000 	cmp	lr, #0
   247d8:	1afffff3 	bne	247ac <USBConfigurationParser+0xf0>
   247dc:	e3a0e009 	mov	lr, #9
   247e0:	eaffffef 	b	247a4 <USBConfigurationParser+0xe8>
   247e4:	e3a0201c 	mov	r2, #28
   247e8:	e59f1034 	ldr	r1, [pc, #52]	; 24824 <USBConfigurationParser+0x168>
   247ec:	e59f0034 	ldr	r0, [pc, #52]	; 24828 <USBConfigurationParser+0x16c>
   247f0:	eb0009e5 	bl	26f8c <uspi_assertion_failed>
   247f4:	eaffffb5 	b	246d0 <USBConfigurationParser+0x14>
   247f8:	e3a02025 	mov	r2, #37	; 0x25
   247fc:	e59f1020 	ldr	r1, [pc, #32]	; 24824 <USBConfigurationParser+0x168>
   24800:	e59f0024 	ldr	r0, [pc, #36]	; 2482c <USBConfigurationParser+0x170>
   24804:	eb0009e0 	bl	26f8c <uspi_assertion_failed>
   24808:	e5943004 	ldr	r3, [r4, #4]
   2480c:	eaffffba 	b	246fc <USBConfigurationParser+0x40>
   24810:	e15c0003 	cmp	ip, r3
   24814:	1affffe4 	bne	247ac <USBConfigurationParser+0xf0>
   24818:	e3a03001 	mov	r3, #1
   2481c:	e5843008 	str	r3, [r4, #8]
   24820:	e8bd8070 	pop	{r4, r5, r6, pc}
   24824:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   24828:	00029a68 	andeq	r9, r2, r8, ror #20
   2482c:	0002b5cc 	andeq	fp, r2, ip, asr #11

00024830 <USBConfigurationParserCopy>:
   24830:	e92d4070 	push	{r4, r5, r6, lr}
   24834:	e2505000 	subs	r5, r0, #0
   24838:	e1a04001 	mov	r4, r1
   2483c:	0a00000c 	beq	24874 <USBConfigurationParserCopy+0x44>
   24840:	e3540000 	cmp	r4, #0
   24844:	0a000010 	beq	2488c <USBConfigurationParserCopy+0x5c>
   24848:	e1c420d0 	ldrd	r2, [r4]
   2484c:	e594c008 	ldr	ip, [r4, #8]
   24850:	e594000c 	ldr	r0, [r4, #12]
   24854:	e5941010 	ldr	r1, [r4, #16]
   24858:	e5852000 	str	r2, [r5]
   2485c:	e5853004 	str	r3, [r5, #4]
   24860:	e1c421d4 	ldrd	r2, [r4, #20]
   24864:	e585c008 	str	ip, [r5, #8]
   24868:	e1c500fc 	strd	r0, [r5, #12]
   2486c:	e1c521f4 	strd	r2, [r5, #20]
   24870:	e8bd8070 	pop	{r4, r5, r6, pc}
   24874:	e3a02082 	mov	r2, #130	; 0x82
   24878:	e59f1020 	ldr	r1, [pc, #32]	; 248a0 <USBConfigurationParserCopy+0x70>
   2487c:	e59f0020 	ldr	r0, [pc, #32]	; 248a4 <USBConfigurationParserCopy+0x74>
   24880:	eb0009c1 	bl	26f8c <uspi_assertion_failed>
   24884:	e3540000 	cmp	r4, #0
   24888:	1affffee 	bne	24848 <USBConfigurationParserCopy+0x18>
   2488c:	e3a02083 	mov	r2, #131	; 0x83
   24890:	e59f1008 	ldr	r1, [pc, #8]	; 248a0 <USBConfigurationParserCopy+0x70>
   24894:	e59f000c 	ldr	r0, [pc, #12]	; 248a8 <USBConfigurationParserCopy+0x78>
   24898:	eb0009bb 	bl	26f8c <uspi_assertion_failed>
   2489c:	eaffffe9 	b	24848 <USBConfigurationParserCopy+0x18>
   248a0:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   248a4:	00029a68 	andeq	r9, r2, r8, ror #20
   248a8:	0002b5e4 	andeq	fp, r2, r4, ror #11

000248ac <_USBConfigurationParser>:
   248ac:	e92d4010 	push	{r4, lr}
   248b0:	e2504000 	subs	r4, r0, #0
   248b4:	0a000002 	beq	248c4 <_USBConfigurationParser+0x18>
   248b8:	e3a03000 	mov	r3, #0
   248bc:	e5843000 	str	r3, [r4]
   248c0:	e8bd8010 	pop	{r4, pc}
   248c4:	e3a02090 	mov	r2, #144	; 0x90
   248c8:	e59f1008 	ldr	r1, [pc, #8]	; 248d8 <_USBConfigurationParser+0x2c>
   248cc:	e59f0008 	ldr	r0, [pc, #8]	; 248dc <_USBConfigurationParser+0x30>
   248d0:	eb0009ad 	bl	26f8c <uspi_assertion_failed>
   248d4:	eafffff7 	b	248b8 <_USBConfigurationParser+0xc>
   248d8:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   248dc:	00029a68 	andeq	r9, r2, r8, ror #20

000248e0 <USBConfigurationParserIsValid>:
   248e0:	e92d4010 	push	{r4, lr}
   248e4:	e2504000 	subs	r4, r0, #0
   248e8:	0a000001 	beq	248f4 <USBConfigurationParserIsValid+0x14>
   248ec:	e5940008 	ldr	r0, [r4, #8]
   248f0:	e8bd8010 	pop	{r4, pc}
   248f4:	e3a02096 	mov	r2, #150	; 0x96
   248f8:	e59f100c 	ldr	r1, [pc, #12]	; 2490c <USBConfigurationParserIsValid+0x2c>
   248fc:	e59f000c 	ldr	r0, [pc, #12]	; 24910 <USBConfigurationParserIsValid+0x30>
   24900:	eb0009a1 	bl	26f8c <uspi_assertion_failed>
   24904:	e5940008 	ldr	r0, [r4, #8]
   24908:	e8bd8010 	pop	{r4, pc}
   2490c:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   24910:	00029a68 	andeq	r9, r2, r8, ror #20

00024914 <USBConfigurationParserGetDescriptor>:
   24914:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24918:	e2506000 	subs	r6, r0, #0
   2491c:	e1a07001 	mov	r7, r1
   24920:	0a00002f 	beq	249e4 <USBConfigurationParserGetDescriptor+0xd0>
   24924:	e5963008 	ldr	r3, [r6, #8]
   24928:	e3530000 	cmp	r3, #0
   2492c:	0a000027 	beq	249d0 <USBConfigurationParserGetDescriptor+0xbc>
   24930:	e5964010 	ldr	r4, [r6, #16]
   24934:	e596300c 	ldr	r3, [r6, #12]
   24938:	e1540003 	cmp	r4, r3
   2493c:	2a000020 	bcs	249c4 <USBConfigurationParserGetDescriptor+0xb0>
   24940:	e247a005 	sub	sl, r7, #5
   24944:	e16faf1a 	clz	sl, sl
   24948:	e59f90a8 	ldr	r9, [pc, #168]	; 249f8 <USBConfigurationParserGetDescriptor+0xe4>
   2494c:	e1a0a2aa 	lsr	sl, sl, #5
   24950:	e59f80a4 	ldr	r8, [pc, #164]	; 249fc <USBConfigurationParserGetDescriptor+0xe8>
   24954:	ea00000a 	b	24984 <USBConfigurationParserGetDescriptor+0x70>
   24958:	e3550004 	cmp	r5, #4
   2495c:	13a03000 	movne	r3, #0
   24960:	020a3001 	andeq	r3, sl, #1
   24964:	e3530000 	cmp	r3, #0
   24968:	1a000015 	bne	249c4 <USBConfigurationParserGetDescriptor+0xb0>
   2496c:	e1550007 	cmp	r5, r7
   24970:	0a00000d 	beq	249ac <USBConfigurationParserGetDescriptor+0x98>
   24974:	e596300c 	ldr	r3, [r6, #12]
   24978:	e5864010 	str	r4, [r6, #16]
   2497c:	e1530004 	cmp	r3, r4
   24980:	9a00000f 	bls	249c4 <USBConfigurationParserGetDescriptor+0xb0>
   24984:	e5d42000 	ldrb	r2, [r4]
   24988:	e5d45001 	ldrb	r5, [r4, #1]
   2498c:	e0844002 	add	r4, r4, r2
   24990:	e1530004 	cmp	r3, r4
   24994:	2affffef 	bcs	24958 <USBConfigurationParserGetDescriptor+0x44>
   24998:	e3a020a7 	mov	r2, #167	; 0xa7
   2499c:	e1a01009 	mov	r1, r9
   249a0:	e1a00008 	mov	r0, r8
   249a4:	eb000978 	bl	26f8c <uspi_assertion_failed>
   249a8:	eaffffea 	b	24958 <USBConfigurationParserGetDescriptor+0x44>
   249ac:	e5960010 	ldr	r0, [r6, #16]
   249b0:	e5864010 	str	r4, [r6, #16]
   249b4:	e3500000 	cmp	r0, #0
   249b8:	15860018 	strne	r0, [r6, #24]
   249bc:	e5860014 	str	r0, [r6, #20]
   249c0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   249c4:	e3a00000 	mov	r0, #0
   249c8:	e5860014 	str	r0, [r6, #20]
   249cc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   249d0:	e3a0209d 	mov	r2, #157	; 0x9d
   249d4:	e59f101c 	ldr	r1, [pc, #28]	; 249f8 <USBConfigurationParserGetDescriptor+0xe4>
   249d8:	e59f0020 	ldr	r0, [pc, #32]	; 24a00 <USBConfigurationParserGetDescriptor+0xec>
   249dc:	eb00096a 	bl	26f8c <uspi_assertion_failed>
   249e0:	eaffffd2 	b	24930 <USBConfigurationParserGetDescriptor+0x1c>
   249e4:	e3a0209c 	mov	r2, #156	; 0x9c
   249e8:	e59f1008 	ldr	r1, [pc, #8]	; 249f8 <USBConfigurationParserGetDescriptor+0xe4>
   249ec:	e59f0010 	ldr	r0, [pc, #16]	; 24a04 <USBConfigurationParserGetDescriptor+0xf0>
   249f0:	eb000965 	bl	26f8c <uspi_assertion_failed>
   249f4:	eaffffca 	b	24924 <USBConfigurationParserGetDescriptor+0x10>
   249f8:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   249fc:	0002b5f4 	strdeq	fp, [r2], -r4
   24a00:	00029fcc 	andeq	r9, r2, ip, asr #31
   24a04:	00029a68 	andeq	r9, r2, r8, ror #20

00024a08 <USBConfigurationParserGetCurrentDescriptor>:
   24a08:	e5903008 	ldr	r3, [r0, #8]
   24a0c:	e92d4010 	push	{r4, lr}
   24a10:	e3530000 	cmp	r3, #0
   24a14:	e1a04000 	mov	r4, r0
   24a18:	0a000008 	beq	24a40 <USBConfigurationParserGetCurrentDescriptor+0x38>
   24a1c:	e5940014 	ldr	r0, [r4, #20]
   24a20:	e3500000 	cmp	r0, #0
   24a24:	18bd8010 	popne	{r4, pc}
   24a28:	e3a020c6 	mov	r2, #198	; 0xc6
   24a2c:	e59f1020 	ldr	r1, [pc, #32]	; 24a54 <USBConfigurationParserGetCurrentDescriptor+0x4c>
   24a30:	e59f0020 	ldr	r0, [pc, #32]	; 24a58 <USBConfigurationParserGetCurrentDescriptor+0x50>
   24a34:	eb000954 	bl	26f8c <uspi_assertion_failed>
   24a38:	e5940014 	ldr	r0, [r4, #20]
   24a3c:	e8bd8010 	pop	{r4, pc}
   24a40:	e3a020c5 	mov	r2, #197	; 0xc5
   24a44:	e59f1008 	ldr	r1, [pc, #8]	; 24a54 <USBConfigurationParserGetCurrentDescriptor+0x4c>
   24a48:	e59f000c 	ldr	r0, [pc, #12]	; 24a5c <USBConfigurationParserGetCurrentDescriptor+0x54>
   24a4c:	eb00094e 	bl	26f8c <uspi_assertion_failed>
   24a50:	eafffff1 	b	24a1c <USBConfigurationParserGetCurrentDescriptor+0x14>
   24a54:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   24a58:	0002b618 	andeq	fp, r2, r8, lsl r6
   24a5c:	00029fcc 	andeq	r9, r2, ip, asr #31

00024a60 <USBConfigurationParserError>:
   24a60:	e92d4070 	push	{r4, r5, r6, lr}
   24a64:	e2504000 	subs	r4, r0, #0
   24a68:	e1a05001 	mov	r5, r1
   24a6c:	0a00000c 	beq	24aa4 <USBConfigurationParserError+0x44>
   24a70:	e3550000 	cmp	r5, #0
   24a74:	0a000010 	beq	24abc <USBConfigurationParserError+0x5c>
   24a78:	e5941018 	ldr	r1, [r4, #24]
   24a7c:	e5943000 	ldr	r3, [r4]
   24a80:	e1a00005 	mov	r0, r5
   24a84:	e59f2044 	ldr	r2, [pc, #68]	; 24ad0 <USBConfigurationParserError+0x70>
   24a88:	e0413003 	sub	r3, r1, r3
   24a8c:	e3a01001 	mov	r1, #1
   24a90:	eb00092b 	bl	26f44 <LogWrite>
   24a94:	e1c400d0 	ldrd	r0, [r4]
   24a98:	e1a02005 	mov	r2, r5
   24a9c:	e8bd4070 	pop	{r4, r5, r6, lr}
   24aa0:	ea00093a 	b	26f90 <DebugHexdump>
   24aa4:	e3a020cd 	mov	r2, #205	; 0xcd
   24aa8:	e59f1024 	ldr	r1, [pc, #36]	; 24ad4 <USBConfigurationParserError+0x74>
   24aac:	e59f0024 	ldr	r0, [pc, #36]	; 24ad8 <USBConfigurationParserError+0x78>
   24ab0:	eb000935 	bl	26f8c <uspi_assertion_failed>
   24ab4:	e3550000 	cmp	r5, #0
   24ab8:	1affffee 	bne	24a78 <USBConfigurationParserError+0x18>
   24abc:	e3a020ce 	mov	r2, #206	; 0xce
   24ac0:	e59f100c 	ldr	r1, [pc, #12]	; 24ad4 <USBConfigurationParserError+0x74>
   24ac4:	e59f0010 	ldr	r0, [pc, #16]	; 24adc <USBConfigurationParserError+0x7c>
   24ac8:	eb00092f 	bl	26f8c <uspi_assertion_failed>
   24acc:	eaffffe9 	b	24a78 <USBConfigurationParserError+0x18>
   24ad0:	0002b63c 	andeq	fp, r2, ip, lsr r6
   24ad4:	0002b5b8 			; <UNDEFINED> instruction: 0x0002b5b8
   24ad8:	00029a68 	andeq	r9, r2, r8, ror #20
   24adc:	0002ac54 	andeq	sl, r2, r4, asr ip

00024ae0 <KeyMap>:
   24ae0:	e92d4010 	push	{r4, lr}
   24ae4:	e2504000 	subs	r4, r0, #0
   24ae8:	0a000009 	beq	24b14 <KeyMap+0x34>
   24aec:	e3a03000 	mov	r3, #0
   24af0:	e3a02001 	mov	r2, #1
   24af4:	e5843400 	str	r3, [r4, #1024]	; 0x400
   24af8:	e5842404 	str	r2, [r4, #1028]	; 0x404
   24afc:	e5843408 	str	r3, [r4, #1032]	; 0x408
   24b00:	e1a00004 	mov	r0, r4
   24b04:	e8bd4010 	pop	{r4, lr}
   24b08:	e3a02b01 	mov	r2, #1024	; 0x400
   24b0c:	e59f1014 	ldr	r1, [pc, #20]	; 24b28 <KeyMap+0x48>
   24b10:	eaffee0a 	b	20340 <uspi_memcpy>
   24b14:	e3a0206c 	mov	r2, #108	; 0x6c
   24b18:	e59f100c 	ldr	r1, [pc, #12]	; 24b2c <KeyMap+0x4c>
   24b1c:	e59f000c 	ldr	r0, [pc, #12]	; 24b30 <KeyMap+0x50>
   24b20:	eb000919 	bl	26f8c <uspi_assertion_failed>
   24b24:	eafffff0 	b	24aec <KeyMap+0xc>
   24b28:	00028608 	andeq	r8, r2, r8, lsl #12
   24b2c:	0002b66c 	andeq	fp, r2, ip, ror #12
   24b30:	00029a68 	andeq	r9, r2, r8, ror #20

00024b34 <_KeyMap>:
   24b34:	e12fff1e 	bx	lr

00024b38 <KeyMapClearTable>:
   24b38:	e92d4070 	push	{r4, r5, r6, lr}
   24b3c:	e2504000 	subs	r4, r0, #0
   24b40:	e1a05001 	mov	r5, r1
   24b44:	0a00000b 	beq	24b78 <KeyMapClearTable+0x40>
   24b48:	e3550003 	cmp	r5, #3
   24b4c:	8a000007 	bhi	24b70 <KeyMapClearTable+0x38>
   24b50:	e3a01000 	mov	r1, #0
   24b54:	e0843085 	add	r3, r4, r5, lsl #1
   24b58:	e2832b01 	add	r2, r3, #1024	; 0x400
   24b5c:	e0c310b8 	strh	r1, [r3], #8
   24b60:	e1530002 	cmp	r3, r2
   24b64:	1afffffc 	bne	24b5c <KeyMapClearTable+0x24>
   24b68:	e3a00001 	mov	r0, #1
   24b6c:	e8bd8070 	pop	{r4, r5, r6, pc}
   24b70:	e3a00000 	mov	r0, #0
   24b74:	e8bd8070 	pop	{r4, r5, r6, pc}
   24b78:	e3a0207c 	mov	r2, #124	; 0x7c
   24b7c:	e59f1008 	ldr	r1, [pc, #8]	; 24b8c <KeyMapClearTable+0x54>
   24b80:	e59f0008 	ldr	r0, [pc, #8]	; 24b90 <KeyMapClearTable+0x58>
   24b84:	eb000900 	bl	26f8c <uspi_assertion_failed>
   24b88:	eaffffee 	b	24b48 <KeyMapClearTable+0x10>
   24b8c:	0002b66c 	andeq	fp, r2, ip, ror #12
   24b90:	00029a68 	andeq	r9, r2, r8, ror #20

00024b94 <KeyMapSetEntry>:
   24b94:	e92d4070 	push	{r4, r5, r6, lr}
   24b98:	e2506000 	subs	r6, r0, #0
   24b9c:	e24dd008 	sub	sp, sp, #8
   24ba0:	e1a04001 	mov	r4, r1
   24ba4:	e1a05002 	mov	r5, r2
   24ba8:	0a000010 	beq	24bf0 <KeyMapSetEntry+0x5c>
   24bac:	e6af0075 	sxtb	r0, r5
   24bb0:	e3500000 	cmp	r0, #0
   24bb4:	c3a00000 	movgt	r0, #0
   24bb8:	d3a00001 	movle	r0, #1
   24bbc:	e3540003 	cmp	r4, #3
   24bc0:	83800001 	orrhi	r0, r0, #1
   24bc4:	e3500000 	cmp	r0, #0
   24bc8:	13a00000 	movne	r0, #0
   24bcc:	1a000005 	bne	24be8 <KeyMapSetEntry+0x54>
   24bd0:	e59f2034 	ldr	r2, [pc, #52]	; 24c0c <KeyMapSetEntry+0x78>
   24bd4:	e1530002 	cmp	r3, r2
   24bd8:	93a00001 	movls	r0, #1
   24bdc:	90844105 	addls	r4, r4, r5, lsl #2
   24be0:	91a04084 	lslls	r4, r4, #1
   24be4:	918630b4 	strhls	r3, [r6, r4]
   24be8:	e28dd008 	add	sp, sp, #8
   24bec:	e8bd8070 	pop	{r4, r5, r6, pc}
   24bf0:	e3a0208d 	mov	r2, #141	; 0x8d
   24bf4:	e59f1014 	ldr	r1, [pc, #20]	; 24c10 <KeyMapSetEntry+0x7c>
   24bf8:	e59f0014 	ldr	r0, [pc, #20]	; 24c14 <KeyMapSetEntry+0x80>
   24bfc:	e58d3004 	str	r3, [sp, #4]
   24c00:	eb0008e1 	bl	26f8c <uspi_assertion_failed>
   24c04:	e59d3004 	ldr	r3, [sp, #4]
   24c08:	eaffffe7 	b	24bac <KeyMapSetEntry+0x18>
   24c0c:	00000132 	andeq	r0, r0, r2, lsr r1
   24c10:	0002b66c 	andeq	fp, r2, ip, ror #12
   24c14:	00029a68 	andeq	r9, r2, r8, ror #20

00024c18 <KeyMapTranslate>:
   24c18:	e92d4070 	push	{r4, r5, r6, lr}
   24c1c:	e2505000 	subs	r5, r0, #0
   24c20:	e1a06001 	mov	r6, r1
   24c24:	e1a04002 	mov	r4, r2
   24c28:	0a000032 	beq	24cf8 <KeyMapTranslate+0xe0>
   24c2c:	e6af3076 	sxtb	r3, r6
   24c30:	e3530000 	cmp	r3, #0
   24c34:	da000029 	ble	24ce0 <KeyMapTranslate+0xc8>
   24c38:	e1a03186 	lsl	r3, r6, #3
   24c3c:	e19500b3 	ldrh	r0, [r5, r3]
   24c40:	e3500f42 	cmp	r0, #264	; 0x108
   24c44:	0a00001f 	beq	24cc8 <KeyMapTranslate+0xb0>
   24c48:	e2403f43 	sub	r3, r0, #268	; 0x10c
   24c4c:	e2433003 	sub	r3, r3, #3
   24c50:	e353000b 	cmp	r3, #11
   24c54:	8a000001 	bhi	24c60 <KeyMapTranslate+0x48>
   24c58:	e3140004 	tst	r4, #4
   24c5c:	1a00002a 	bne	24d0c <KeyMapTranslate+0xf4>
   24c60:	e314008c 	tst	r4, #140	; 0x8c
   24c64:	1a00001d 	bne	24ce0 <KeyMapTranslate+0xc8>
   24c68:	e2463053 	sub	r3, r6, #83	; 0x53
   24c6c:	e3530010 	cmp	r3, #16
   24c70:	9a00001c 	bls	24ce8 <KeyMapTranslate+0xd0>
   24c74:	e3140040 	tst	r4, #64	; 0x40
   24c78:	e2044022 	and	r4, r4, #34	; 0x22
   24c7c:	0a000031 	beq	24d48 <KeyMapTranslate+0x130>
   24c80:	e3540000 	cmp	r4, #0
   24c84:	13a04003 	movne	r4, #3
   24c88:	03a04002 	moveq	r4, #2
   24c8c:	e0844106 	add	r4, r4, r6, lsl #2
   24c90:	e1a04084 	lsl	r4, r4, #1
   24c94:	e19500b4 	ldrh	r0, [r5, r4]
   24c98:	e59f30b4 	ldr	r3, [pc, #180]	; 24d54 <KeyMapTranslate+0x13c>
   24c9c:	e1500003 	cmp	r0, r3
   24ca0:	0a000022 	beq	24d30 <KeyMapTranslate+0x118>
   24ca4:	e3500e12 	cmp	r0, #288	; 0x120
   24ca8:	0a00001a 	beq	24d18 <KeyMapTranslate+0x100>
   24cac:	e3500f47 	cmp	r0, #284	; 0x11c
   24cb0:	05953400 	ldreq	r3, [r5, #1024]	; 0x400
   24cb4:	02800017 	addeq	r0, r0, #23
   24cb8:	016f3f13 	clzeq	r3, r3
   24cbc:	01a032a3 	lsreq	r3, r3, #5
   24cc0:	05853400 	streq	r3, [r5, #1024]	; 0x400
   24cc4:	e8bd8070 	pop	{r4, r5, r6, pc}
   24cc8:	e3140011 	tst	r4, #17
   24ccc:	0affffe3 	beq	24c60 <KeyMapTranslate+0x48>
   24cd0:	e3140004 	tst	r4, #4
   24cd4:	0affffe1 	beq	24c60 <KeyMapTranslate+0x48>
   24cd8:	e59f0078 	ldr	r0, [pc, #120]	; 24d58 <KeyMapTranslate+0x140>
   24cdc:	e8bd8070 	pop	{r4, r5, r6, pc}
   24ce0:	e3a00000 	mov	r0, #0
   24ce4:	e8bd8070 	pop	{r4, r5, r6, pc}
   24ce8:	e5954404 	ldr	r4, [r5, #1028]	; 0x404
   24cec:	e2944000 	adds	r4, r4, #0
   24cf0:	13a04001 	movne	r4, #1
   24cf4:	eaffffe4 	b	24c8c <KeyMapTranslate+0x74>
   24cf8:	e3a0209e 	mov	r2, #158	; 0x9e
   24cfc:	e59f1058 	ldr	r1, [pc, #88]	; 24d5c <KeyMapTranslate+0x144>
   24d00:	e59f0058 	ldr	r0, [pc, #88]	; 24d60 <KeyMapTranslate+0x148>
   24d04:	eb0008a0 	bl	26f8c <uspi_assertion_failed>
   24d08:	eaffffc7 	b	24c2c <KeyMapTranslate+0x14>
   24d0c:	e2800027 	add	r0, r0, #39	; 0x27
   24d10:	e6ff0070 	uxth	r0, r0
   24d14:	e8bd8070 	pop	{r4, r5, r6, pc}
   24d18:	e5953404 	ldr	r3, [r5, #1028]	; 0x404
   24d1c:	e3a00f4d 	mov	r0, #308	; 0x134
   24d20:	e16f3f13 	clz	r3, r3
   24d24:	e1a032a3 	lsr	r3, r3, #5
   24d28:	e5853404 	str	r3, [r5, #1028]	; 0x404
   24d2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   24d30:	e5953408 	ldr	r3, [r5, #1032]	; 0x408
   24d34:	e59f0028 	ldr	r0, [pc, #40]	; 24d64 <KeyMapTranslate+0x14c>
   24d38:	e16f3f13 	clz	r3, r3
   24d3c:	e1a032a3 	lsr	r3, r3, #5
   24d40:	e5853408 	str	r3, [r5, #1032]	; 0x408
   24d44:	e8bd8070 	pop	{r4, r5, r6, pc}
   24d48:	e2944000 	adds	r4, r4, #0
   24d4c:	13a04001 	movne	r4, #1
   24d50:	eaffffcd 	b	24c8c <KeyMapTranslate+0x74>
   24d54:	0000011e 	andeq	r0, r0, lr, lsl r1
   24d58:	00000142 	andeq	r0, r0, r2, asr #2
   24d5c:	0002b66c 	andeq	fp, r2, ip, ror #12
   24d60:	00029a68 	andeq	r9, r2, r8, ror #20
   24d64:	00000135 	andeq	r0, r0, r5, lsr r1

00024d68 <KeyMapGetString>:
   24d68:	e92d4070 	push	{r4, r5, r6, lr}
   24d6c:	e2506000 	subs	r6, r0, #0
   24d70:	e24dd008 	sub	sp, sp, #8
   24d74:	e1a04001 	mov	r4, r1
   24d78:	e1a05002 	mov	r5, r2
   24d7c:	0a000031 	beq	24e48 <KeyMapGetString+0xe0>
   24d80:	e2442021 	sub	r2, r4, #33	; 0x21
   24d84:	e59f10d8 	ldr	r1, [pc, #216]	; 24e64 <KeyMapGetString+0xfc>
   24d88:	e6ff2072 	uxth	r2, r2
   24d8c:	e1520001 	cmp	r2, r1
   24d90:	8a000024 	bhi	24e28 <KeyMapGetString+0xc0>
   24d94:	e2442c01 	sub	r2, r4, #256	; 0x100
   24d98:	e6ff1072 	uxth	r1, r2
   24d9c:	e3510032 	cmp	r1, #50	; 0x32
   24da0:	9a000023 	bls	24e34 <KeyMapGetString+0xcc>
   24da4:	e3150011 	tst	r5, #17
   24da8:	e6af2074 	sxtb	r2, r4
   24dac:	0a00000a 	beq	24ddc <KeyMapGetString+0x74>
   24db0:	e6ef4074 	uxtb	r4, r4
   24db4:	e2442061 	sub	r2, r4, #97	; 0x61
   24db8:	e3520019 	cmp	r2, #25
   24dbc:	8a000019 	bhi	24e28 <KeyMapGetString+0xc0>
   24dc0:	e3a02000 	mov	r2, #0
   24dc4:	e1a00003 	mov	r0, r3
   24dc8:	e2444060 	sub	r4, r4, #96	; 0x60
   24dcc:	e5c34000 	strb	r4, [r3]
   24dd0:	e5c32001 	strb	r2, [r3, #1]
   24dd4:	e28dd008 	add	sp, sp, #8
   24dd8:	e8bd8070 	pop	{r4, r5, r6, pc}
   24ddc:	e5961400 	ldr	r1, [r6, #1024]	; 0x400
   24de0:	e3510000 	cmp	r1, #0
   24de4:	0a000009 	beq	24e10 <KeyMapGetString+0xa8>
   24de8:	e6ef4074 	uxtb	r4, r4
   24dec:	e2441041 	sub	r1, r4, #65	; 0x41
   24df0:	e3510019 	cmp	r1, #25
   24df4:	92844020 	addls	r4, r4, #32
   24df8:	96af2074 	sxtbls	r2, r4
   24dfc:	9a000003 	bls	24e10 <KeyMapGetString+0xa8>
   24e00:	e2441061 	sub	r1, r4, #97	; 0x61
   24e04:	e3510019 	cmp	r1, #25
   24e08:	92444020 	subls	r4, r4, #32
   24e0c:	96af2074 	sxtbls	r2, r4
   24e10:	e3a01000 	mov	r1, #0
   24e14:	e1a00003 	mov	r0, r3
   24e18:	e5c32000 	strb	r2, [r3]
   24e1c:	e5c31001 	strb	r1, [r3, #1]
   24e20:	e28dd008 	add	sp, sp, #8
   24e24:	e8bd8070 	pop	{r4, r5, r6, pc}
   24e28:	e3a00000 	mov	r0, #0
   24e2c:	e28dd008 	add	sp, sp, #8
   24e30:	e8bd8070 	pop	{r4, r5, r6, pc}
   24e34:	e59f302c 	ldr	r3, [pc, #44]	; 24e68 <KeyMapGetString+0x100>
   24e38:	e0832102 	add	r2, r3, r2, lsl #2
   24e3c:	e5920400 	ldr	r0, [r2, #1024]	; 0x400
   24e40:	e28dd008 	add	sp, sp, #8
   24e44:	e8bd8070 	pop	{r4, r5, r6, pc}
   24e48:	e3a020ea 	mov	r2, #234	; 0xea
   24e4c:	e59f1018 	ldr	r1, [pc, #24]	; 24e6c <KeyMapGetString+0x104>
   24e50:	e59f0018 	ldr	r0, [pc, #24]	; 24e70 <KeyMapGetString+0x108>
   24e54:	e58d3004 	str	r3, [sp, #4]
   24e58:	eb00084b 	bl	26f8c <uspi_assertion_failed>
   24e5c:	e59d3004 	ldr	r3, [sp, #4]
   24e60:	eaffffc6 	b	24d80 <KeyMapGetString+0x18>
   24e64:	00000111 	andeq	r0, r0, r1, lsl r1
   24e68:	00028608 	andeq	r8, r2, r8, lsl #12
   24e6c:	0002b66c 	andeq	fp, r2, ip, ror #12
   24e70:	00029a68 	andeq	r9, r2, r8, ror #20

00024e74 <KeyMapGetLEDStatus>:
   24e74:	e92d4010 	push	{r4, lr}
   24e78:	e2504000 	subs	r4, r0, #0
   24e7c:	0a00000a 	beq	24eac <KeyMapGetLEDStatus+0x38>
   24e80:	e5942400 	ldr	r2, [r4, #1024]	; 0x400
   24e84:	e5943404 	ldr	r3, [r4, #1028]	; 0x404
   24e88:	e3520000 	cmp	r2, #0
   24e8c:	13a00002 	movne	r0, #2
   24e90:	03a00000 	moveq	r0, #0
   24e94:	e3530000 	cmp	r3, #0
   24e98:	e5943408 	ldr	r3, [r4, #1032]	; 0x408
   24e9c:	13800001 	orrne	r0, r0, #1
   24ea0:	e3530000 	cmp	r3, #0
   24ea4:	13800004 	orrne	r0, r0, #4
   24ea8:	e8bd8010 	pop	{r4, pc}
   24eac:	e59f200c 	ldr	r2, [pc, #12]	; 24ec0 <KeyMapGetLEDStatus+0x4c>
   24eb0:	e59f100c 	ldr	r1, [pc, #12]	; 24ec4 <KeyMapGetLEDStatus+0x50>
   24eb4:	e59f000c 	ldr	r0, [pc, #12]	; 24ec8 <KeyMapGetLEDStatus+0x54>
   24eb8:	eb000833 	bl	26f8c <uspi_assertion_failed>
   24ebc:	eaffffef 	b	24e80 <KeyMapGetLEDStatus+0xc>
   24ec0:	0000011b 	andeq	r0, r0, fp, lsl r1
   24ec4:	0002b66c 	andeq	fp, r2, ip, ror #12
   24ec8:	00029a68 	andeq	r9, r2, r8, ror #20

00024ecc <mem_init>:
   24ecc:	e3500501 	cmp	r0, #4194304	; 0x400000
   24ed0:	21a0c000 	movcs	ip, r0
   24ed4:	33a0c501 	movcc	ip, #4194304	; 0x400000
   24ed8:	e0801001 	add	r1, r0, r1
   24edc:	e041000c 	sub	r0, r1, ip
   24ee0:	e08c0120 	add	r0, ip, r0, lsr #2
   24ee4:	e2803a01 	add	r3, r0, #4096	; 0x1000
   24ee8:	e59f2014 	ldr	r2, [pc, #20]	; 24f04 <mem_init+0x38>
   24eec:	e3c33eff 	bic	r3, r3, #4080	; 0xff0
   24ef0:	e3c3300f 	bic	r3, r3, #15
   24ef4:	e582c000 	str	ip, [r2]
   24ef8:	e9820009 	stmib	r2, {r0, r3}
   24efc:	e582100c 	str	r1, [r2, #12]
   24f00:	e12fff1e 	bx	lr
   24f04:	0002d164 	andeq	sp, r2, r4, ror #2

00024f08 <mem_get_size>:
   24f08:	e59f301c 	ldr	r3, [pc, #28]	; 24f2c <mem_get_size+0x24>
   24f0c:	e5930004 	ldr	r0, [r3, #4]
   24f10:	e5931000 	ldr	r1, [r3]
   24f14:	e593200c 	ldr	r2, [r3, #12]
   24f18:	e5933008 	ldr	r3, [r3, #8]
   24f1c:	e0400001 	sub	r0, r0, r1
   24f20:	e0423003 	sub	r3, r2, r3
   24f24:	e0800003 	add	r0, r0, r3
   24f28:	e12fff1e 	bx	lr
   24f2c:	0002d164 	andeq	sp, r2, r4, ror #2

00024f30 <malloc>:
   24f30:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   24f34:	e59f7170 	ldr	r7, [pc, #368]	; 250ac <malloc+0x17c>
   24f38:	e1a06000 	mov	r6, r0
   24f3c:	e5973000 	ldr	r3, [r7]
   24f40:	e3530000 	cmp	r3, #0
   24f44:	0a000050 	beq	2508c <malloc+0x15c>
   24f48:	e59f4160 	ldr	r4, [pc, #352]	; 250b0 <malloc+0x180>
   24f4c:	eb000583 	bl	26560 <EnterCritical>
   24f50:	e5943000 	ldr	r3, [r4]
   24f54:	e3530000 	cmp	r3, #0
   24f58:	0a000007 	beq	24f7c <malloc+0x4c>
   24f5c:	e1560003 	cmp	r6, r3
   24f60:	8a000002 	bhi	24f70 <malloc+0x40>
   24f64:	ea000026 	b	25004 <malloc+0xd4>
   24f68:	e1530006 	cmp	r3, r6
   24f6c:	2a000024 	bcs	25004 <malloc+0xd4>
   24f70:	e5b43008 	ldr	r3, [r4, #8]!
   24f74:	e3530000 	cmp	r3, #0
   24f78:	1afffffa 	bne	24f68 <malloc+0x38>
   24f7c:	e5975000 	ldr	r5, [r7]
   24f80:	e286301f 	add	r3, r6, #31
   24f84:	e3c3300f 	bic	r3, r3, #15
   24f88:	e5972004 	ldr	r2, [r7, #4]
   24f8c:	e0853003 	add	r3, r5, r3
   24f90:	e1530002 	cmp	r3, r2
   24f94:	e5873000 	str	r3, [r7]
   24f98:	8a000040 	bhi	250a0 <malloc+0x170>
   24f9c:	e3a02043 	mov	r2, #67	; 0x43
   24fa0:	e3a0304d 	mov	r3, #77	; 0x4d
   24fa4:	e3a0004c 	mov	r0, #76	; 0x4c
   24fa8:	e3a01042 	mov	r1, #66	; 0x42
   24fac:	e5c56004 	strb	r6, [r5, #4]
   24fb0:	e5c52000 	strb	r2, [r5]
   24fb4:	e5c53001 	strb	r3, [r5, #1]
   24fb8:	e1a02426 	lsr	r2, r6, #8
   24fbc:	e1a03826 	lsr	r3, r6, #16
   24fc0:	e1a06c26 	lsr	r6, r6, #24
   24fc4:	e5c50002 	strb	r0, [r5, #2]
   24fc8:	e5c51003 	strb	r1, [r5, #3]
   24fcc:	e5c52005 	strb	r2, [r5, #5]
   24fd0:	e5c53006 	strb	r3, [r5, #6]
   24fd4:	e5c56007 	strb	r6, [r5, #7]
   24fd8:	eb00056f 	bl	2659c <LeaveCritical>
   24fdc:	e3a03000 	mov	r3, #0
   24fe0:	e2854010 	add	r4, r5, #16
   24fe4:	e314000f 	tst	r4, #15
   24fe8:	e5c53008 	strb	r3, [r5, #8]
   24fec:	e5c53009 	strb	r3, [r5, #9]
   24ff0:	e5c5300a 	strb	r3, [r5, #10]
   24ff4:	e5c5300b 	strb	r3, [r5, #11]
   24ff8:	1a000018 	bne	25060 <malloc+0x130>
   24ffc:	e1a00004 	mov	r0, r4
   25000:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   25004:	e5945004 	ldr	r5, [r4, #4]
   25008:	e3550000 	cmp	r5, #0
   2500c:	01a06003 	moveq	r6, r3
   25010:	0affffd9 	beq	24f7c <malloc+0x4c>
   25014:	e5d51001 	ldrb	r1, [r5, #1]
   25018:	e5d53000 	ldrb	r3, [r5]
   2501c:	e5d52002 	ldrb	r2, [r5, #2]
   25020:	e1833401 	orr	r3, r3, r1, lsl #8
   25024:	e5d51003 	ldrb	r1, [r5, #3]
   25028:	e1833802 	orr	r3, r3, r2, lsl #16
   2502c:	e59f2080 	ldr	r2, [pc, #128]	; 250b4 <malloc+0x184>
   25030:	e1833c01 	orr	r3, r3, r1, lsl #24
   25034:	e1530002 	cmp	r3, r2
   25038:	1a00000e 	bne	25078 <malloc+0x148>
   2503c:	e5d52009 	ldrb	r2, [r5, #9]
   25040:	e5d53008 	ldrb	r3, [r5, #8]
   25044:	e5d5100a 	ldrb	r1, [r5, #10]
   25048:	e1833402 	orr	r3, r3, r2, lsl #8
   2504c:	e5d5200b 	ldrb	r2, [r5, #11]
   25050:	e1833801 	orr	r3, r3, r1, lsl #16
   25054:	e1833c02 	orr	r3, r3, r2, lsl #24
   25058:	e5843004 	str	r3, [r4, #4]
   2505c:	eaffffdd 	b	24fd8 <malloc+0xa8>
   25060:	e3a020b3 	mov	r2, #179	; 0xb3
   25064:	e59f104c 	ldr	r1, [pc, #76]	; 250b8 <malloc+0x188>
   25068:	e59f004c 	ldr	r0, [pc, #76]	; 250bc <malloc+0x18c>
   2506c:	eb00008f 	bl	252b0 <assertion_failed>
   25070:	e1a00004 	mov	r0, r4
   25074:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   25078:	e3a0209b 	mov	r2, #155	; 0x9b
   2507c:	e59f1034 	ldr	r1, [pc, #52]	; 250b8 <malloc+0x188>
   25080:	e59f0038 	ldr	r0, [pc, #56]	; 250c0 <malloc+0x190>
   25084:	eb000089 	bl	252b0 <assertion_failed>
   25088:	eaffffeb 	b	2503c <malloc+0x10c>
   2508c:	e3a02081 	mov	r2, #129	; 0x81
   25090:	e59f1020 	ldr	r1, [pc, #32]	; 250b8 <malloc+0x188>
   25094:	e59f0028 	ldr	r0, [pc, #40]	; 250c4 <malloc+0x194>
   25098:	eb000084 	bl	252b0 <assertion_failed>
   2509c:	eaffffa9 	b	24f48 <malloc+0x18>
   250a0:	eb00053d 	bl	2659c <LeaveCritical>
   250a4:	e3a04000 	mov	r4, #0
   250a8:	eaffffd3 	b	24ffc <malloc+0xcc>
   250ac:	0002d164 	andeq	sp, r2, r4, ror #2
   250b0:	0002bd1c 	andeq	fp, r2, ip, lsl sp
   250b4:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
   250b8:	0002b750 	andeq	fp, r2, r0, asr r7
   250bc:	0002b790 	muleq	r2, r0, r7
   250c0:	0002b76c 	andeq	fp, r2, ip, ror #14
   250c4:	0002b758 	andeq	fp, r2, r8, asr r7

000250c8 <free>:
   250c8:	e92d4070 	push	{r4, r5, r6, lr}
   250cc:	e2504000 	subs	r4, r0, #0
   250d0:	0a00002c 	beq	25188 <free+0xc0>
   250d4:	e2445010 	sub	r5, r4, #16
   250d8:	e5d51001 	ldrb	r1, [r5, #1]
   250dc:	e5543010 	ldrb	r3, [r4, #-16]
   250e0:	e5d52002 	ldrb	r2, [r5, #2]
   250e4:	e1833401 	orr	r3, r3, r1, lsl #8
   250e8:	e5d51003 	ldrb	r1, [r5, #3]
   250ec:	e1833802 	orr	r3, r3, r2, lsl #16
   250f0:	e59f20a4 	ldr	r2, [pc, #164]	; 2519c <free+0xd4>
   250f4:	e1833c01 	orr	r3, r3, r1, lsl #24
   250f8:	e1530002 	cmp	r3, r2
   250fc:	0a000003 	beq	25110 <free+0x48>
   25100:	e3a020bc 	mov	r2, #188	; 0xbc
   25104:	e59f1094 	ldr	r1, [pc, #148]	; 251a0 <free+0xd8>
   25108:	e59f0094 	ldr	r0, [pc, #148]	; 251a4 <free+0xdc>
   2510c:	eb000067 	bl	252b0 <assertion_failed>
   25110:	e59f4090 	ldr	r4, [pc, #144]	; 251a8 <free+0xe0>
   25114:	e5943000 	ldr	r3, [r4]
   25118:	e3530000 	cmp	r3, #0
   2511c:	08bd8070 	popeq	{r4, r5, r6, pc}
   25120:	e5d51005 	ldrb	r1, [r5, #5]
   25124:	e5d52004 	ldrb	r2, [r5, #4]
   25128:	e5d50006 	ldrb	r0, [r5, #6]
   2512c:	e1822401 	orr	r2, r2, r1, lsl #8
   25130:	e5d51007 	ldrb	r1, [r5, #7]
   25134:	e1822800 	orr	r2, r2, r0, lsl #16
   25138:	e1822c01 	orr	r2, r2, r1, lsl #24
   2513c:	e1520003 	cmp	r2, r3
   25140:	0a000004 	beq	25158 <free+0x90>
   25144:	e5b43008 	ldr	r3, [r4, #8]!
   25148:	e3530000 	cmp	r3, #0
   2514c:	08bd8070 	popeq	{r4, r5, r6, pc}
   25150:	e1530002 	cmp	r3, r2
   25154:	1afffffa 	bne	25144 <free+0x7c>
   25158:	eb000500 	bl	26560 <EnterCritical>
   2515c:	e5d40004 	ldrb	r0, [r4, #4]
   25160:	e5d41005 	ldrb	r1, [r4, #5]
   25164:	e5d42006 	ldrb	r2, [r4, #6]
   25168:	e5d43007 	ldrb	r3, [r4, #7]
   2516c:	e5c50008 	strb	r0, [r5, #8]
   25170:	e5c51009 	strb	r1, [r5, #9]
   25174:	e5c5200a 	strb	r2, [r5, #10]
   25178:	e5c5300b 	strb	r3, [r5, #11]
   2517c:	e5845004 	str	r5, [r4, #4]
   25180:	e8bd4070 	pop	{r4, r5, r6, lr}
   25184:	ea000504 	b	2659c <LeaveCritical>
   25188:	e3a020ba 	mov	r2, #186	; 0xba
   2518c:	e59f100c 	ldr	r1, [pc, #12]	; 251a0 <free+0xd8>
   25190:	e59f0014 	ldr	r0, [pc, #20]	; 251ac <free+0xe4>
   25194:	eb000045 	bl	252b0 <assertion_failed>
   25198:	eaffffcd 	b	250d4 <free+0xc>
   2519c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
   251a0:	0002b750 	andeq	fp, r2, r0, asr r7
   251a4:	0002b76c 	andeq	fp, r2, ip, ror #14
   251a8:	0002bd1c 	andeq	fp, r2, ip, lsl sp
   251ac:	0002b7bc 			; <UNDEFINED> instruction: 0x0002b7bc

000251b0 <palloc>:
   251b0:	e92d4070 	push	{r4, r5, r6, lr}
   251b4:	e59f5090 	ldr	r5, [pc, #144]	; 2524c <palloc+0x9c>
   251b8:	e5953008 	ldr	r3, [r5, #8]
   251bc:	e3530000 	cmp	r3, #0
   251c0:	0a00001c 	beq	25238 <palloc+0x88>
   251c4:	eb0004e5 	bl	26560 <EnterCritical>
   251c8:	e5954010 	ldr	r4, [r5, #16]
   251cc:	e3540000 	cmp	r4, #0
   251d0:	0a00000f 	beq	25214 <palloc+0x64>
   251d4:	e59f3074 	ldr	r3, [pc, #116]	; 25250 <palloc+0xa0>
   251d8:	e5942000 	ldr	r2, [r4]
   251dc:	e1520003 	cmp	r2, r3
   251e0:	1a000006 	bne	25200 <palloc+0x50>
   251e4:	e3a02000 	mov	r2, #0
   251e8:	e5943004 	ldr	r3, [r4, #4]
   251ec:	e5842000 	str	r2, [r4]
   251f0:	e5853010 	str	r3, [r5, #16]
   251f4:	eb0004e8 	bl	2659c <LeaveCritical>
   251f8:	e1a00004 	mov	r0, r4
   251fc:	e8bd8070 	pop	{r4, r5, r6, pc}
   25200:	e3a020e4 	mov	r2, #228	; 0xe4
   25204:	e59f1048 	ldr	r1, [pc, #72]	; 25254 <palloc+0xa4>
   25208:	e59f0048 	ldr	r0, [pc, #72]	; 25258 <palloc+0xa8>
   2520c:	eb000027 	bl	252b0 <assertion_failed>
   25210:	eafffff3 	b	251e4 <palloc+0x34>
   25214:	e5954008 	ldr	r4, [r5, #8]
   25218:	e595200c 	ldr	r2, [r5, #12]
   2521c:	e2843a01 	add	r3, r4, #4096	; 0x1000
   25220:	e1530002 	cmp	r3, r2
   25224:	e5853008 	str	r3, [r5, #8]
   25228:	9afffff1 	bls	251f4 <palloc+0x44>
   2522c:	eb0004da 	bl	2659c <LeaveCritical>
   25230:	e3a04000 	mov	r4, #0
   25234:	eaffffef 	b	251f8 <palloc+0x48>
   25238:	e3a020d6 	mov	r2, #214	; 0xd6
   2523c:	e59f1010 	ldr	r1, [pc, #16]	; 25254 <palloc+0xa4>
   25240:	e59f0014 	ldr	r0, [pc, #20]	; 2525c <palloc+0xac>
   25244:	eb000019 	bl	252b0 <assertion_failed>
   25248:	eaffffdd 	b	251c4 <palloc+0x14>
   2524c:	0002d164 	andeq	sp, r2, r4, ror #2
   25250:	50474d43 	subpl	r4, r7, r3, asr #26
   25254:	0002b750 	andeq	fp, r2, r0, asr r7
   25258:	0002b7dc 	ldrdeq	fp, [r2], -ip
   2525c:	0002b7c8 	andeq	fp, r2, r8, asr #15

00025260 <pfree>:
   25260:	e92d4010 	push	{r4, lr}
   25264:	e2504000 	subs	r4, r0, #0
   25268:	0a000007 	beq	2528c <pfree+0x2c>
   2526c:	eb0004bb 	bl	26560 <EnterCritical>
   25270:	e59f3028 	ldr	r3, [pc, #40]	; 252a0 <pfree+0x40>
   25274:	e59f1028 	ldr	r1, [pc, #40]	; 252a4 <pfree+0x44>
   25278:	e5932010 	ldr	r2, [r3, #16]
   2527c:	e5834010 	str	r4, [r3, #16]
   25280:	e8840006 	stm	r4, {r1, r2}
   25284:	e8bd4010 	pop	{r4, lr}
   25288:	ea0004c3 	b	2659c <LeaveCritical>
   2528c:	e3a020fd 	mov	r2, #253	; 0xfd
   25290:	e59f1010 	ldr	r1, [pc, #16]	; 252a8 <pfree+0x48>
   25294:	e59f0010 	ldr	r0, [pc, #16]	; 252ac <pfree+0x4c>
   25298:	eb000004 	bl	252b0 <assertion_failed>
   2529c:	eafffff2 	b	2526c <pfree+0xc>
   252a0:	0002d164 	andeq	sp, r2, r4, ror #2
   252a4:	50474d43 	subpl	r4, r7, r3, asr #26
   252a8:	0002b750 	andeq	fp, r2, r0, asr r7
   252ac:	0002b800 	andeq	fp, r2, r0, lsl #16

000252b0 <assertion_failed>:
   252b0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   252b4:	e1a05000 	mov	r5, r0
   252b8:	e24dd01c 	sub	sp, sp, #28
   252bc:	e1a06001 	mov	r6, r1
   252c0:	e1a07002 	mov	r7, r2
   252c4:	e1a0400d 	mov	r4, sp
   252c8:	e28d000c 	add	r0, sp, #12
   252cc:	ebffe90d 	bl	1f708 <String>
   252d0:	e1a03007 	mov	r3, r7
   252d4:	e1a02006 	mov	r2, r6
   252d8:	e28d000c 	add	r0, sp, #12
   252dc:	e59f104c 	ldr	r1, [pc, #76]	; 25330 <assertion_failed+0x80>
   252e0:	ebffebc7 	bl	20204 <StringFormat>
   252e4:	e28d000c 	add	r0, sp, #12
   252e8:	ebffe939 	bl	1f7d4 <StringGet>
   252ec:	e1a01000 	mov	r1, r0
   252f0:	e1a00004 	mov	r0, r4
   252f4:	eb000054 	bl	2544c <debug_stacktrace>
   252f8:	eb00008f 	bl	2553c <LoggerGet>
   252fc:	e1a04000 	mov	r4, r0
   25300:	e28d000c 	add	r0, sp, #12
   25304:	ebffe932 	bl	1f7d4 <StringGet>
   25308:	e59f3024 	ldr	r3, [pc, #36]	; 25334 <assertion_failed+0x84>
   2530c:	e1a01000 	mov	r1, r0
   25310:	e3a02000 	mov	r2, #0
   25314:	e1a00004 	mov	r0, r4
   25318:	e58d5000 	str	r5, [sp]
   2531c:	eb0000fa 	bl	2570c <LoggerWrite>
   25320:	e28d000c 	add	r0, sp, #12
   25324:	ebffe919 	bl	1f790 <_String>
   25328:	e28dd01c 	add	sp, sp, #28
   2532c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25330:	0002b80c 	andeq	fp, r2, ip, lsl #16
   25334:	0002b814 	andeq	fp, r2, r4, lsl r8

00025338 <debug_hexdump>:
   25338:	e3520000 	cmp	r2, #0
   2533c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   25340:	e1a06001 	mov	r6, r1
   25344:	e59f80f4 	ldr	r8, [pc, #244]	; 25440 <debug_hexdump+0x108>
   25348:	e1a07000 	mov	r7, r0
   2534c:	11a08002 	movne	r8, r2
   25350:	e24dd04c 	sub	sp, sp, #76	; 0x4c
   25354:	eb000078 	bl	2553c <LoggerGet>
   25358:	e1cd60f0 	strd	r6, [sp]
   2535c:	e1a01008 	mov	r1, r8
   25360:	e59f30dc 	ldr	r3, [pc, #220]	; 25444 <debug_hexdump+0x10c>
   25364:	e3a02004 	mov	r2, #4
   25368:	eb0000e7 	bl	2570c <LoggerWrite>
   2536c:	e3560000 	cmp	r6, #0
   25370:	0a000030 	beq	25438 <debug_hexdump+0x100>
   25374:	e3c6300f 	bic	r3, r6, #15
   25378:	e1a04007 	mov	r4, r7
   2537c:	e0876006 	add	r6, r7, r6
   25380:	e59f90c0 	ldr	r9, [pc, #192]	; 25448 <debug_hexdump+0x110>
   25384:	e0877003 	add	r7, r7, r3
   25388:	ea000001 	b	25394 <debug_hexdump+0x5c>
   2538c:	e1540006 	cmp	r4, r6
   25390:	0a000028 	beq	25438 <debug_hexdump+0x100>
   25394:	eb000068 	bl	2553c <LoggerGet>
   25398:	e5d4300f 	ldrb	r3, [r4, #15]
   2539c:	e5d45000 	ldrb	r5, [r4]
   253a0:	e58d3040 	str	r3, [sp, #64]	; 0x40
   253a4:	e5d4300e 	ldrb	r3, [r4, #14]
   253a8:	e6ffc074 	uxth	ip, r4
   253ac:	e58d303c 	str	r3, [sp, #60]	; 0x3c
   253b0:	e5d4200d 	ldrb	r2, [r4, #13]
   253b4:	e1a03009 	mov	r3, r9
   253b8:	e58d2038 	str	r2, [sp, #56]	; 0x38
   253bc:	e5d4100c 	ldrb	r1, [r4, #12]
   253c0:	e3a02004 	mov	r2, #4
   253c4:	e58d1034 	str	r1, [sp, #52]	; 0x34
   253c8:	e5d4e00b 	ldrb	lr, [r4, #11]
   253cc:	e1a01008 	mov	r1, r8
   253d0:	e58de030 	str	lr, [sp, #48]	; 0x30
   253d4:	e5d4e00a 	ldrb	lr, [r4, #10]
   253d8:	e58de02c 	str	lr, [sp, #44]	; 0x2c
   253dc:	e5d4e009 	ldrb	lr, [r4, #9]
   253e0:	e58de028 	str	lr, [sp, #40]	; 0x28
   253e4:	e5d4e008 	ldrb	lr, [r4, #8]
   253e8:	e58de024 	str	lr, [sp, #36]	; 0x24
   253ec:	e5d4e007 	ldrb	lr, [r4, #7]
   253f0:	e58de020 	str	lr, [sp, #32]
   253f4:	e5d4e006 	ldrb	lr, [r4, #6]
   253f8:	e58de01c 	str	lr, [sp, #28]
   253fc:	e5d4e005 	ldrb	lr, [r4, #5]
   25400:	e58de018 	str	lr, [sp, #24]
   25404:	e5d4e004 	ldrb	lr, [r4, #4]
   25408:	e58de014 	str	lr, [sp, #20]
   2540c:	e5d4e003 	ldrb	lr, [r4, #3]
   25410:	e58de010 	str	lr, [sp, #16]
   25414:	e5d4e002 	ldrb	lr, [r4, #2]
   25418:	e58de00c 	str	lr, [sp, #12]
   2541c:	e5d4e001 	ldrb	lr, [r4, #1]
   25420:	e98d4020 	stmib	sp, {r5, lr}
   25424:	e58dc000 	str	ip, [sp]
   25428:	eb0000b7 	bl	2570c <LoggerWrite>
   2542c:	e1540007 	cmp	r4, r7
   25430:	e2844010 	add	r4, r4, #16
   25434:	1affffd4 	bne	2538c <debug_hexdump+0x54>
   25438:	e28dd04c 	add	sp, sp, #76	; 0x4c
   2543c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   25440:	00028ad4 	ldrdeq	r8, [r2], -r4
   25444:	0002b82c 	andeq	fp, r2, ip, lsr #16
   25448:	0002b850 	andeq	fp, r2, r0, asr r8

0002544c <debug_stacktrace>:
   2544c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   25450:	e3a04000 	mov	r4, #0
   25454:	e1510004 	cmp	r1, r4
   25458:	e59f806c 	ldr	r8, [pc, #108]	; 254cc <debug_stacktrace+0x80>
   2545c:	e24dd00c 	sub	sp, sp, #12
   25460:	11a08001 	movne	r8, r1
   25464:	e59f6064 	ldr	r6, [pc, #100]	; 254d0 <debug_stacktrace+0x84>
   25468:	e59f7064 	ldr	r7, [pc, #100]	; 254d4 <debug_stacktrace+0x88>
   2546c:	e59f9064 	ldr	r9, [pc, #100]	; 254d8 <debug_stacktrace+0x8c>
   25470:	e2405004 	sub	r5, r0, #4
   25474:	ea000002 	b	25484 <debug_stacktrace+0x38>
   25478:	e2844001 	add	r4, r4, #1
   2547c:	e3540040 	cmp	r4, #64	; 0x40
   25480:	0a00000f 	beq	254c4 <debug_stacktrace+0x78>
   25484:	e5b53004 	ldr	r3, [r5, #4]!
   25488:	e1530006 	cmp	r3, r6
   2548c:	9afffff9 	bls	25478 <debug_stacktrace+0x2c>
   25490:	e1530007 	cmp	r3, r7
   25494:	2afffff7 	bcs	25478 <debug_stacktrace+0x2c>
   25498:	eb000027 	bl	2553c <LoggerGet>
   2549c:	e5952000 	ldr	r2, [r5]
   254a0:	e1a03009 	mov	r3, r9
   254a4:	e58d2004 	str	r2, [sp, #4]
   254a8:	e58d4000 	str	r4, [sp]
   254ac:	e3a02004 	mov	r2, #4
   254b0:	e1a01008 	mov	r1, r8
   254b4:	e2844001 	add	r4, r4, #1
   254b8:	eb000093 	bl	2570c <LoggerWrite>
   254bc:	e3540040 	cmp	r4, #64	; 0x40
   254c0:	1affffef 	bne	25484 <debug_stacktrace+0x38>
   254c4:	e28dd00c 	add	sp, sp, #12
   254c8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   254cc:	00028ad4 	ldrdeq	r8, [r2], -r4
   254d0:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   254d4:	0002826c 	andeq	r8, r2, ip, ror #4
   254d8:	0002b8a8 	andeq	fp, r2, r8, lsr #17

000254dc <__aeabi_uidiv>:
   254dc:	e92d4008 	push	{r3, lr}
   254e0:	e3a02000 	mov	r2, #0
   254e4:	eb0009b3 	bl	27bb8 <Divide>
   254e8:	e8bd8008 	pop	{r3, pc}

000254ec <__aeabi_uidivmod>:
   254ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   254f0:	e24dd00c 	sub	sp, sp, #12
   254f4:	e28d2004 	add	r2, sp, #4
   254f8:	eb0009ae 	bl	27bb8 <Divide>
   254fc:	e59d1004 	ldr	r1, [sp, #4]
   25500:	e28dd00c 	add	sp, sp, #12
   25504:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00025508 <Logger>:
   25508:	e3a0c000 	mov	ip, #0
   2550c:	e59f3008 	ldr	r3, [pc, #8]	; 2551c <Logger+0x14>
   25510:	e8801006 	stm	r0, {r1, r2, ip}
   25514:	e5830000 	str	r0, [r3]
   25518:	e12fff1e 	bx	lr
   2551c:	0002d178 	andeq	sp, r2, r8, ror r1

00025520 <_Logger>:
   25520:	e3a03000 	mov	r3, #0
   25524:	e59f200c 	ldr	r2, [pc, #12]	; 25538 <_Logger+0x18>
   25528:	e5803008 	str	r3, [r0, #8]
   2552c:	e5803004 	str	r3, [r0, #4]
   25530:	e5823000 	str	r3, [r2]
   25534:	e12fff1e 	bx	lr
   25538:	0002d178 	andeq	sp, r2, r8, ror r1

0002553c <LoggerGet>:
   2553c:	e59f3004 	ldr	r3, [pc, #4]	; 25548 <LoggerGet+0xc>
   25540:	e5930000 	ldr	r0, [r3]
   25544:	e12fff1e 	bx	lr
   25548:	0002d178 	andeq	sp, r2, r8, ror r1

0002554c <LoggerWrite2>:
   2554c:	e92d4070 	push	{r4, r5, r6, lr}
   25550:	e1a05000 	mov	r5, r0
   25554:	e1a00001 	mov	r0, r1
   25558:	e1a04001 	mov	r4, r1
   2555c:	ebffbda4 	bl	14bf4 <strlen>
   25560:	e1a01004 	mov	r1, r4
   25564:	e1a02000 	mov	r2, r0
   25568:	e5950008 	ldr	r0, [r5, #8]
   2556c:	e8bd4070 	pop	{r4, r5, r6, lr}
   25570:	ea00038e 	b	263b0 <ScreenDeviceWrite>

00025574 <LoggerWriteV>:
   25574:	e590c000 	ldr	ip, [r0]
   25578:	e152000c 	cmp	r2, ip
   2557c:	812fff1e 	bxhi	lr
   25580:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   25584:	e3520000 	cmp	r2, #0
   25588:	e24dd014 	sub	sp, sp, #20
   2558c:	e1a04000 	mov	r4, r0
   25590:	e1a05001 	mov	r5, r1
   25594:	e1a06003 	mov	r6, r3
   25598:	0a00002a 	beq	25648 <LoggerWriteV+0xd4>
   2559c:	e5903004 	ldr	r3, [r0, #4]
   255a0:	e3530000 	cmp	r3, #0
   255a4:	0a000010 	beq	255ec <LoggerWriteV+0x78>
   255a8:	e1a00003 	mov	r0, r3
   255ac:	eb00047c 	bl	267a4 <TimerGetTimeString>
   255b0:	e2507000 	subs	r7, r0, #0
   255b4:	0a00000a 	beq	255e4 <LoggerWriteV+0x70>
   255b8:	ebffe885 	bl	1f7d4 <StringGet>
   255bc:	e1a01000 	mov	r1, r0
   255c0:	e1a00004 	mov	r0, r4
   255c4:	ebffffe0 	bl	2554c <LoggerWrite2>
   255c8:	e59f1128 	ldr	r1, [pc, #296]	; 256f8 <LoggerWriteV+0x184>
   255cc:	e1a00004 	mov	r0, r4
   255d0:	ebffffdd 	bl	2554c <LoggerWrite2>
   255d4:	e1a00007 	mov	r0, r7
   255d8:	ebffe86c 	bl	1f790 <_String>
   255dc:	e1a00007 	mov	r0, r7
   255e0:	ebfffeb8 	bl	250c8 <free>
   255e4:	e1a01005 	mov	r1, r5
   255e8:	e1a00004 	mov	r0, r4
   255ec:	ebffffd6 	bl	2554c <LoggerWrite2>
   255f0:	e28d5004 	add	r5, sp, #4
   255f4:	e59f1100 	ldr	r1, [pc, #256]	; 256fc <LoggerWriteV+0x188>
   255f8:	e1a00004 	mov	r0, r4
   255fc:	ebffffd2 	bl	2554c <LoggerWrite2>
   25600:	e1a00005 	mov	r0, r5
   25604:	ebffe83f 	bl	1f708 <String>
   25608:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
   2560c:	e1a01006 	mov	r1, r6
   25610:	e1a00005 	mov	r0, r5
   25614:	ebffe953 	bl	1fb68 <StringFormatV>
   25618:	e1a00005 	mov	r0, r5
   2561c:	ebffe86c 	bl	1f7d4 <StringGet>
   25620:	e1a01000 	mov	r1, r0
   25624:	e1a00004 	mov	r0, r4
   25628:	ebffffc7 	bl	2554c <LoggerWrite2>
   2562c:	e1a00004 	mov	r0, r4
   25630:	e59f10c8 	ldr	r1, [pc, #200]	; 25700 <LoggerWriteV+0x18c>
   25634:	ebffffc4 	bl	2554c <LoggerWrite2>
   25638:	e1a00005 	mov	r0, r5
   2563c:	ebffe853 	bl	1f790 <_String>
   25640:	e28dd014 	add	sp, sp, #20
   25644:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25648:	e59f10b4 	ldr	r1, [pc, #180]	; 25704 <LoggerWriteV+0x190>
   2564c:	ebffffbe 	bl	2554c <LoggerWrite2>
   25650:	e5940004 	ldr	r0, [r4, #4]
   25654:	e3500000 	cmp	r0, #0
   25658:	0a00000d 	beq	25694 <LoggerWriteV+0x120>
   2565c:	eb000450 	bl	267a4 <TimerGetTimeString>
   25660:	e2507000 	subs	r7, r0, #0
   25664:	0a00000a 	beq	25694 <LoggerWriteV+0x120>
   25668:	ebffe859 	bl	1f7d4 <StringGet>
   2566c:	e1a01000 	mov	r1, r0
   25670:	e1a00004 	mov	r0, r4
   25674:	ebffffb4 	bl	2554c <LoggerWrite2>
   25678:	e59f1078 	ldr	r1, [pc, #120]	; 256f8 <LoggerWriteV+0x184>
   2567c:	e1a00004 	mov	r0, r4
   25680:	ebffffb1 	bl	2554c <LoggerWrite2>
   25684:	e1a00007 	mov	r0, r7
   25688:	ebffe840 	bl	1f790 <_String>
   2568c:	e1a00007 	mov	r0, r7
   25690:	ebfffe8c 	bl	250c8 <free>
   25694:	e1a01005 	mov	r1, r5
   25698:	e1a00004 	mov	r0, r4
   2569c:	ebffffaa 	bl	2554c <LoggerWrite2>
   256a0:	e59f1054 	ldr	r1, [pc, #84]	; 256fc <LoggerWriteV+0x188>
   256a4:	e1a00004 	mov	r0, r4
   256a8:	ebffffa7 	bl	2554c <LoggerWrite2>
   256ac:	e28d0004 	add	r0, sp, #4
   256b0:	ebffe814 	bl	1f708 <String>
   256b4:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
   256b8:	e1a01006 	mov	r1, r6
   256bc:	e28d0004 	add	r0, sp, #4
   256c0:	ebffe928 	bl	1fb68 <StringFormatV>
   256c4:	e28d0004 	add	r0, sp, #4
   256c8:	ebffe841 	bl	1f7d4 <StringGet>
   256cc:	e1a01000 	mov	r1, r0
   256d0:	e1a00004 	mov	r0, r4
   256d4:	ebffff9c 	bl	2554c <LoggerWrite2>
   256d8:	e1a00004 	mov	r0, r4
   256dc:	e59f1024 	ldr	r1, [pc, #36]	; 25708 <LoggerWriteV+0x194>
   256e0:	ebffff99 	bl	2554c <LoggerWrite2>
   256e4:	e1a00004 	mov	r0, r4
   256e8:	e59f1010 	ldr	r1, [pc, #16]	; 25700 <LoggerWriteV+0x18c>
   256ec:	ebffff96 	bl	2554c <LoggerWrite2>
   256f0:	f10c0080 	cpsid	i
   256f4:	eafffffe 	b	256f4 <LoggerWriteV+0x180>
   256f8:	0002b678 	andeq	fp, r2, r8, ror r6
   256fc:	0002b8cc 	andeq	fp, r2, ip, asr #17
   25700:	0002b688 	andeq	fp, r2, r8, lsl #13
   25704:	0002b8bc 			; <UNDEFINED> instruction: 0x0002b8bc
   25708:	0002b8c4 	andeq	fp, r2, r4, asr #17

0002570c <LoggerWrite>:
   2570c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
   25710:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25714:	e24dd010 	sub	sp, sp, #16
   25718:	e28dc018 	add	ip, sp, #24
   2571c:	e58dc000 	str	ip, [sp]
   25720:	e59d3014 	ldr	r3, [sp, #20]
   25724:	e58dc00c 	str	ip, [sp, #12]
   25728:	ebffff91 	bl	25574 <LoggerWriteV>
   2572c:	e28dd010 	add	sp, sp, #16
   25730:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   25734:	e28dd004 	add	sp, sp, #4
   25738:	e12fff1e 	bx	lr

0002573c <LoggerInitialize>:
   2573c:	e92d4010 	push	{r4, lr}
   25740:	e59f3014 	ldr	r3, [pc, #20]	; 2575c <LoggerInitialize+0x20>
   25744:	e5801008 	str	r1, [r0, #8]
   25748:	e3a02003 	mov	r2, #3
   2574c:	e59f100c 	ldr	r1, [pc, #12]	; 25760 <LoggerInitialize+0x24>
   25750:	ebffffed 	bl	2570c <LoggerWrite>
   25754:	e3a00001 	mov	r0, #1
   25758:	e8bd8010 	pop	{r4, pc}
   2575c:	0002b8d0 	ldrdeq	fp, [r2], -r0
   25760:	0002b8e0 	andeq	fp, r2, r0, ror #17

00025764 <ScreenDeviceSetPixel.part.0>:
   25764:	e590c020 	ldr	ip, [r0, #32]
   25768:	e15c0002 	cmp	ip, r2
   2576c:	8590c018 	ldrhi	ip, [r0, #24]
   25770:	85900010 	ldrhi	r0, [r0, #16]
   25774:	8022029c 	mlahi	r2, ip, r2, r0
   25778:	87c23001 	strbhi	r3, [r2, r1]
   2577c:	e12fff1e 	bx	lr

00025780 <ScreenDeviceInvertCursor.part.5>:
   25780:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   25784:	e280600c 	add	r6, r0, #12
   25788:	e1a04000 	mov	r4, r0
   2578c:	e1a00006 	mov	r0, r6
   25790:	eb000785 	bl	275ac <CharGeneratorGetUnderline>
   25794:	e1a07000 	mov	r7, r0
   25798:	e1a00006 	mov	r0, r6
   2579c:	eb000775 	bl	27578 <CharGeneratorGetCharHeight>
   257a0:	e1570000 	cmp	r7, r0
   257a4:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
   257a8:	e3a05000 	mov	r5, #0
   257ac:	ea000003 	b	257c0 <ScreenDeviceInvertCursor.part.5+0x40>
   257b0:	e5d43038 	ldrb	r3, [r4, #56]	; 0x38
   257b4:	e1a00004 	mov	r0, r4
   257b8:	ebffffe9 	bl	25764 <ScreenDeviceSetPixel.part.0>
   257bc:	e2855001 	add	r5, r5, #1
   257c0:	e1a00006 	mov	r0, r6
   257c4:	eb00075e 	bl	27544 <CharGeneratorGetCharWidth>
   257c8:	e1550000 	cmp	r5, r0
   257cc:	2a000013 	bcs	25820 <ScreenDeviceInvertCursor.part.5+0xa0>
   257d0:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
   257d4:	e594301c 	ldr	r3, [r4, #28]
   257d8:	e0851001 	add	r1, r5, r1
   257dc:	e1510003 	cmp	r1, r3
   257e0:	2afffff5 	bcs	257bc <ScreenDeviceInvertCursor.part.5+0x3c>
   257e4:	e5942030 	ldr	r2, [r4, #48]	; 0x30
   257e8:	e5943020 	ldr	r3, [r4, #32]
   257ec:	e0872002 	add	r2, r7, r2
   257f0:	e1520003 	cmp	r2, r3
   257f4:	2affffed 	bcs	257b0 <ScreenDeviceInvertCursor.part.5+0x30>
   257f8:	e5943018 	ldr	r3, [r4, #24]
   257fc:	e5940010 	ldr	r0, [r4, #16]
   25800:	e0230293 	mla	r3, r3, r2, r0
   25804:	e7d33001 	ldrb	r3, [r3, r1]
   25808:	e3530000 	cmp	r3, #0
   2580c:	0affffe7 	beq	257b0 <ScreenDeviceInvertCursor.part.5+0x30>
   25810:	e3a03000 	mov	r3, #0
   25814:	e1a00004 	mov	r0, r4
   25818:	ebffffd1 	bl	25764 <ScreenDeviceSetPixel.part.0>
   2581c:	eaffffe6 	b	257bc <ScreenDeviceInvertCursor.part.5+0x3c>
   25820:	e2877001 	add	r7, r7, #1
   25824:	eaffffdb 	b	25798 <ScreenDeviceInvertCursor.part.5+0x18>

00025828 <ScreenDevice>:
   25828:	e92d4070 	push	{r4, r5, r6, lr}
   2582c:	e1a04000 	mov	r4, r0
   25830:	e280000c 	add	r0, r0, #12
   25834:	e1a06001 	mov	r6, r1
   25838:	e1a05002 	mov	r5, r2
   2583c:	eb000732 	bl	2750c <CharGenerator>
   25840:	e3a03000 	mov	r3, #0
   25844:	e3a00001 	mov	r0, #1
   25848:	e5846000 	str	r6, [r4]
   2584c:	e5845004 	str	r5, [r4, #4]
   25850:	e5843008 	str	r3, [r4, #8]
   25854:	e5843010 	str	r3, [r4, #16]
   25858:	e5843028 	str	r3, [r4, #40]	; 0x28
   2585c:	e584302c 	str	r3, [r4, #44]	; 0x2c
   25860:	e5843030 	str	r3, [r4, #48]	; 0x30
   25864:	e584303c 	str	r3, [r4, #60]	; 0x3c
   25868:	e5840034 	str	r0, [r4, #52]	; 0x34
   2586c:	e5c40038 	strb	r0, [r4, #56]	; 0x38
   25870:	e8bd8070 	pop	{r4, r5, r6, pc}

00025874 <_ScreenDevice>:
   25874:	e92d4070 	push	{r4, r5, r6, lr}
   25878:	e1a04000 	mov	r4, r0
   2587c:	e3a05000 	mov	r5, #0
   25880:	e5900008 	ldr	r0, [r0, #8]
   25884:	e5845010 	str	r5, [r4, #16]
   25888:	eb000614 	bl	270e0 <_BcmFrameBuffer>
   2588c:	e5940008 	ldr	r0, [r4, #8]
   25890:	ebfffe0c 	bl	250c8 <free>
   25894:	e5845008 	str	r5, [r4, #8]
   25898:	e284000c 	add	r0, r4, #12
   2589c:	e8bd4070 	pop	{r4, r5, r6, lr}
   258a0:	ea000726 	b	27540 <_CharGenerator>

000258a4 <ScreenDeviceGetWidth>:
   258a4:	e590001c 	ldr	r0, [r0, #28]
   258a8:	e12fff1e 	bx	lr

000258ac <ScreenDeviceGetHeight>:
   258ac:	e5900020 	ldr	r0, [r0, #32]
   258b0:	e12fff1e 	bx	lr

000258b4 <ScreenDeviceSetPixel>:
   258b4:	e590c01c 	ldr	ip, [r0, #28]
   258b8:	e15c0001 	cmp	ip, r1
   258bc:	912fff1e 	bxls	lr
   258c0:	eaffffa7 	b	25764 <ScreenDeviceSetPixel.part.0>

000258c4 <ScreenDeviceGetPixel>:
   258c4:	e590301c 	ldr	r3, [r0, #28]
   258c8:	e1530001 	cmp	r3, r1
   258cc:	9a000002 	bls	258dc <ScreenDeviceGetPixel+0x18>
   258d0:	e5903020 	ldr	r3, [r0, #32]
   258d4:	e1530002 	cmp	r3, r2
   258d8:	8a000001 	bhi	258e4 <ScreenDeviceGetPixel+0x20>
   258dc:	e3a00000 	mov	r0, #0
   258e0:	e12fff1e 	bx	lr
   258e4:	e590c018 	ldr	ip, [r0, #24]
   258e8:	e5903010 	ldr	r3, [r0, #16]
   258ec:	e022329c 	mla	r2, ip, r2, r3
   258f0:	e7d20001 	ldrb	r0, [r2, r1]
   258f4:	e12fff1e 	bx	lr

000258f8 <ScreenDeviceCarriageReturn>:
   258f8:	e3a03000 	mov	r3, #0
   258fc:	e580302c 	str	r3, [r0, #44]	; 0x2c
   25900:	e12fff1e 	bx	lr

00025904 <ScreenDeviceCursorHome>:
   25904:	e3a03000 	mov	r3, #0
   25908:	e580302c 	str	r3, [r0, #44]	; 0x2c
   2590c:	e5803030 	str	r3, [r0, #48]	; 0x30
   25910:	e12fff1e 	bx	lr

00025914 <ScreenDeviceCursorLeft>:
   25914:	e590302c 	ldr	r3, [r0, #44]	; 0x2c
   25918:	e92d4070 	push	{r4, r5, r6, lr}
   2591c:	e3530000 	cmp	r3, #0
   25920:	e1a04000 	mov	r4, r0
   25924:	1a00000e 	bne	25964 <ScreenDeviceCursorLeft+0x50>
   25928:	e5903030 	ldr	r3, [r0, #48]	; 0x30
   2592c:	e3530000 	cmp	r3, #0
   25930:	08bd8070 	popeq	{r4, r5, r6, pc}
   25934:	e280600c 	add	r6, r0, #12
   25938:	e1a00006 	mov	r0, r6
   2593c:	e594501c 	ldr	r5, [r4, #28]
   25940:	eb0006ff 	bl	27544 <CharGeneratorGetCharWidth>
   25944:	e0450000 	sub	r0, r5, r0
   25948:	e584002c 	str	r0, [r4, #44]	; 0x2c
   2594c:	e1a00006 	mov	r0, r6
   25950:	eb000708 	bl	27578 <CharGeneratorGetCharHeight>
   25954:	e5943030 	ldr	r3, [r4, #48]	; 0x30
   25958:	e0430000 	sub	r0, r3, r0
   2595c:	e5840030 	str	r0, [r4, #48]	; 0x30
   25960:	e8bd8070 	pop	{r4, r5, r6, pc}
   25964:	e280000c 	add	r0, r0, #12
   25968:	eb0006f5 	bl	27544 <CharGeneratorGetCharWidth>
   2596c:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   25970:	e0430000 	sub	r0, r3, r0
   25974:	e584002c 	str	r0, [r4, #44]	; 0x2c
   25978:	e8bd8070 	pop	{r4, r5, r6, pc}

0002597c <ScreenDeviceCursorMove>:
   2597c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   25980:	e280600c 	add	r6, r0, #12
   25984:	e1a04002 	mov	r4, r2
   25988:	e1a05000 	mov	r5, r0
   2598c:	e1a00006 	mov	r0, r6
   25990:	e1a07001 	mov	r7, r1
   25994:	eb0006ea 	bl	27544 <CharGeneratorGetCharWidth>
   25998:	e2444001 	sub	r4, r4, #1
   2599c:	e0040490 	mul	r4, r0, r4
   259a0:	e1a00006 	mov	r0, r6
   259a4:	eb0006f3 	bl	27578 <CharGeneratorGetCharHeight>
   259a8:	e595301c 	ldr	r3, [r5, #28]
   259ac:	e1530004 	cmp	r3, r4
   259b0:	98bd81f0 	popls	{r4, r5, r6, r7, r8, pc}
   259b4:	e2477001 	sub	r7, r7, #1
   259b8:	e0000790 	mul	r0, r0, r7
   259bc:	e5953024 	ldr	r3, [r5, #36]	; 0x24
   259c0:	e1530000 	cmp	r3, r0
   259c4:	8585402c 	strhi	r4, [r5, #44]	; 0x2c
   259c8:	85850030 	strhi	r0, [r5, #48]	; 0x30
   259cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000259d0 <ScreenDeviceCursorUp>:
   259d0:	e92d4070 	push	{r4, r5, r6, lr}
   259d4:	e1a04000 	mov	r4, r0
   259d8:	e280500c 	add	r5, r0, #12
   259dc:	e1a00005 	mov	r0, r5
   259e0:	e5946030 	ldr	r6, [r4, #48]	; 0x30
   259e4:	eb0006e3 	bl	27578 <CharGeneratorGetCharHeight>
   259e8:	e1560000 	cmp	r6, r0
   259ec:	38bd8070 	popcc	{r4, r5, r6, pc}
   259f0:	e1a00005 	mov	r0, r5
   259f4:	eb0006df 	bl	27578 <CharGeneratorGetCharHeight>
   259f8:	e5943030 	ldr	r3, [r4, #48]	; 0x30
   259fc:	e0430000 	sub	r0, r3, r0
   25a00:	e5840030 	str	r0, [r4, #48]	; 0x30
   25a04:	e8bd8070 	pop	{r4, r5, r6, pc}

00025a08 <ScreenDeviceDeleteChars>:
   25a08:	e12fff1e 	bx	lr

00025a0c <ScreenDeviceDeleteLines>:
   25a0c:	e12fff1e 	bx	lr

00025a10 <ScreenDeviceInsertLines>:
   25a10:	e12fff1e 	bx	lr

00025a14 <ScreenDeviceInsertMode>:
   25a14:	e580103c 	str	r1, [r0, #60]	; 0x3c
   25a18:	e12fff1e 	bx	lr

00025a1c <ScreenDeviceReverseScroll>:
   25a1c:	e12fff1e 	bx	lr

00025a20 <ScreenDeviceSetCursorMode>:
   25a20:	e5801034 	str	r1, [r0, #52]	; 0x34
   25a24:	e12fff1e 	bx	lr

00025a28 <ScreenDeviceSetStandoutMode>:
   25a28:	e351001b 	cmp	r1, #27
   25a2c:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   25a30:	ea00001d 	b	25aac <ScreenDeviceSetStandoutMode+0x84>
   25a34:	00025abc 			; <UNDEFINED> instruction: 0x00025abc
   25a38:	00025ab0 			; <UNDEFINED> instruction: 0x00025ab0
   25a3c:	00025aa4 	andeq	r5, r2, r4, lsr #21
   25a40:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a44:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a48:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a4c:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a50:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a54:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a58:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a5c:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a60:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a64:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a68:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a6c:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a70:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a74:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a78:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a7c:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a80:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a84:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a88:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a8c:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a90:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a94:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a98:	00025aac 	andeq	r5, r2, ip, lsr #21
   25a9c:	00025aac 	andeq	r5, r2, ip, lsr #21
   25aa0:	00025abc 			; <UNDEFINED> instruction: 0x00025abc
   25aa4:	e3a03003 	mov	r3, #3
   25aa8:	e5c03038 	strb	r3, [r0, #56]	; 0x38
   25aac:	e12fff1e 	bx	lr
   25ab0:	e3a03002 	mov	r3, #2
   25ab4:	e5c03038 	strb	r3, [r0, #56]	; 0x38
   25ab8:	e12fff1e 	bx	lr
   25abc:	e3a03001 	mov	r3, #1
   25ac0:	e5c03038 	strb	r3, [r0, #56]	; 0x38
   25ac4:	e12fff1e 	bx	lr

00025ac8 <ScreenDeviceScroll>:
   25ac8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25acc:	e1a05000 	mov	r5, r0
   25ad0:	e280000c 	add	r0, r0, #12
   25ad4:	eb0006a7 	bl	27578 <CharGeneratorGetCharHeight>
   25ad8:	e1a08000 	mov	r8, r0
   25adc:	e5954024 	ldr	r4, [r5, #36]	; 0x24
   25ae0:	e5956018 	ldr	r6, [r5, #24]
   25ae4:	e5957010 	ldr	r7, [r5, #16]
   25ae8:	e0444000 	sub	r4, r4, r0
   25aec:	e0040496 	mul	r4, r6, r4
   25af0:	e0267690 	mla	r6, r0, r6, r7
   25af4:	e3c490ff 	bic	r9, r4, #255	; 0xff
   25af8:	e1a02009 	mov	r2, r9
   25afc:	e1a01006 	mov	r1, r6
   25b00:	e1a00007 	mov	r0, r7
   25b04:	eb000522 	bl	26f94 <memcpyblk>
   25b08:	e0861009 	add	r1, r6, r9
   25b0c:	e6ef2074 	uxtb	r2, r4
   25b10:	e0870009 	add	r0, r7, r9
   25b14:	eb001822 	bl	2bba4 <memcpy>
   25b18:	e5952018 	ldr	r2, [r5, #24]
   25b1c:	e3c40003 	bic	r0, r4, #3
   25b20:	e0020892 	mul	r2, r2, r8
   25b24:	e0870000 	add	r0, r7, r0
   25b28:	e3c22003 	bic	r2, r2, #3
   25b2c:	e3a01000 	mov	r1, #0
   25b30:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   25b34:	eaffbb5e 	b	148b4 <memset>

00025b38 <ScreenDeviceCursorDown>:
   25b38:	e92d4070 	push	{r4, r5, r6, lr}
   25b3c:	e1a04000 	mov	r4, r0
   25b40:	e280500c 	add	r5, r0, #12
   25b44:	e1a00005 	mov	r0, r5
   25b48:	eb00068a 	bl	27578 <CharGeneratorGetCharHeight>
   25b4c:	e5943030 	ldr	r3, [r4, #48]	; 0x30
   25b50:	e5942024 	ldr	r2, [r4, #36]	; 0x24
   25b54:	e0800003 	add	r0, r0, r3
   25b58:	e1500002 	cmp	r0, r2
   25b5c:	e5840030 	str	r0, [r4, #48]	; 0x30
   25b60:	38bd8070 	popcc	{r4, r5, r6, pc}
   25b64:	e1a00004 	mov	r0, r4
   25b68:	ebffffd6 	bl	25ac8 <ScreenDeviceScroll>
   25b6c:	e1a00005 	mov	r0, r5
   25b70:	eb000680 	bl	27578 <CharGeneratorGetCharHeight>
   25b74:	e5943030 	ldr	r3, [r4, #48]	; 0x30
   25b78:	e0430000 	sub	r0, r3, r0
   25b7c:	e5840030 	str	r0, [r4, #48]	; 0x30
   25b80:	e8bd8070 	pop	{r4, r5, r6, pc}

00025b84 <ScreenDeviceNewLine>:
   25b84:	e3a02000 	mov	r2, #0
   25b88:	e580202c 	str	r2, [r0, #44]	; 0x2c
   25b8c:	eaffffe9 	b	25b38 <ScreenDeviceCursorDown>

00025b90 <ScreenDeviceCursorRight>:
   25b90:	e92d4010 	push	{r4, lr}
   25b94:	e1a04000 	mov	r4, r0
   25b98:	e280000c 	add	r0, r0, #12
   25b9c:	eb000668 	bl	27544 <CharGeneratorGetCharWidth>
   25ba0:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   25ba4:	e594201c 	ldr	r2, [r4, #28]
   25ba8:	e0800003 	add	r0, r0, r3
   25bac:	e1500002 	cmp	r0, r2
   25bb0:	e584002c 	str	r0, [r4, #44]	; 0x2c
   25bb4:	38bd8010 	popcc	{r4, pc}
   25bb8:	e3a03000 	mov	r3, #0
   25bbc:	e1a00004 	mov	r0, r4
   25bc0:	e584302c 	str	r3, [r4, #44]	; 0x2c
   25bc4:	e8bd4010 	pop	{r4, lr}
   25bc8:	eaffffda 	b	25b38 <ScreenDeviceCursorDown>

00025bcc <ScreenDeviceTabulator>:
   25bcc:	e92d4070 	push	{r4, r5, r6, lr}
   25bd0:	e1a05000 	mov	r5, r0
   25bd4:	e280000c 	add	r0, r0, #12
   25bd8:	eb000659 	bl	27544 <CharGeneratorGetCharWidth>
   25bdc:	e595302c 	ldr	r3, [r5, #44]	; 0x2c
   25be0:	e1a04180 	lsl	r4, r0, #3
   25be4:	e0840003 	add	r0, r4, r3
   25be8:	e1a01004 	mov	r1, r4
   25bec:	ebfffe3a 	bl	254dc <__aeabi_uidiv>
   25bf0:	e0000094 	mul	r0, r4, r0
   25bf4:	e595301c 	ldr	r3, [r5, #28]
   25bf8:	e585002c 	str	r0, [r5, #44]	; 0x2c
   25bfc:	e1500003 	cmp	r0, r3
   25c00:	38bd8070 	popcc	{r4, r5, r6, pc}
   25c04:	e3a03000 	mov	r3, #0
   25c08:	e1a00005 	mov	r0, r5
   25c0c:	e585302c 	str	r3, [r5, #44]	; 0x2c
   25c10:	e8bd4070 	pop	{r4, r5, r6, lr}
   25c14:	eaffffc7 	b	25b38 <ScreenDeviceCursorDown>

00025c18 <ScreenDeviceDisplayChar2>:
   25c18:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c1c:	e280600c 	add	r6, r0, #12
   25c20:	e24dd00c 	sub	sp, sp, #12
   25c24:	e1a07000 	mov	r7, r0
   25c28:	e1a00006 	mov	r0, r6
   25c2c:	e1a0b001 	mov	fp, r1
   25c30:	e1a09002 	mov	r9, r2
   25c34:	e58d3004 	str	r3, [sp, #4]
   25c38:	e5dda030 	ldrb	sl, [sp, #48]	; 0x30
   25c3c:	e3a08000 	mov	r8, #0
   25c40:	eb00064c 	bl	27578 <CharGeneratorGetCharHeight>
   25c44:	e1500008 	cmp	r0, r8
   25c48:	9a00001e 	bls	25cc8 <ScreenDeviceDisplayChar2+0xb0>
   25c4c:	e3a04000 	mov	r4, #0
   25c50:	ea00000f 	b	25c94 <ScreenDeviceDisplayChar2+0x7c>
   25c54:	e1a03008 	mov	r3, r8
   25c58:	e1a02004 	mov	r2, r4
   25c5c:	e1a0100b 	mov	r1, fp
   25c60:	e1a00006 	mov	r0, r6
   25c64:	eb00065d 	bl	275e0 <CharGeneratorGetPixel>
   25c68:	e597201c 	ldr	r2, [r7, #28]
   25c6c:	e3500000 	cmp	r0, #0
   25c70:	11a0300a 	movne	r3, sl
   25c74:	03a03000 	moveq	r3, #0
   25c78:	e1550002 	cmp	r5, r2
   25c7c:	2a000003 	bcs	25c90 <ScreenDeviceDisplayChar2+0x78>
   25c80:	e1a01005 	mov	r1, r5
   25c84:	e59d2004 	ldr	r2, [sp, #4]
   25c88:	e1a00007 	mov	r0, r7
   25c8c:	ebfffeb4 	bl	25764 <ScreenDeviceSetPixel.part.0>
   25c90:	e2844001 	add	r4, r4, #1
   25c94:	e1a00006 	mov	r0, r6
   25c98:	eb000629 	bl	27544 <CharGeneratorGetCharWidth>
   25c9c:	e1500004 	cmp	r0, r4
   25ca0:	e0845009 	add	r5, r4, r9
   25ca4:	8affffea 	bhi	25c54 <ScreenDeviceDisplayChar2+0x3c>
   25ca8:	e59d3004 	ldr	r3, [sp, #4]
   25cac:	e1a00006 	mov	r0, r6
   25cb0:	e2833001 	add	r3, r3, #1
   25cb4:	e58d3004 	str	r3, [sp, #4]
   25cb8:	eb00062e 	bl	27578 <CharGeneratorGetCharHeight>
   25cbc:	e2888001 	add	r8, r8, #1
   25cc0:	e1500008 	cmp	r0, r8
   25cc4:	8affffe0 	bhi	25c4c <ScreenDeviceDisplayChar2+0x34>
   25cc8:	e28dd00c 	add	sp, sp, #12
   25ccc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025cd0 <ScreenDeviceRotor>:
   25cd0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   25cd4:	e1a06000 	mov	r6, r0
   25cd8:	e1a04001 	mov	r4, r1
   25cdc:	e24dd00c 	sub	sp, sp, #12
   25ce0:	e280000c 	add	r0, r0, #12
   25ce4:	e1a05002 	mov	r5, r2
   25ce8:	e596701c 	ldr	r7, [r6, #28]
   25cec:	eb000614 	bl	27544 <CharGeneratorGetCharWidth>
   25cf0:	e3a03002 	mov	r3, #2
   25cf4:	e2044003 	and	r4, r4, #3
   25cf8:	e2844001 	add	r4, r4, #1
   25cfc:	e0040490 	mul	r4, r0, r4
   25d00:	e59f1020 	ldr	r1, [pc, #32]	; 25d28 <ScreenDeviceRotor+0x58>
   25d04:	e2055003 	and	r5, r5, #3
   25d08:	e58d3000 	str	r3, [sp]
   25d0c:	e0472004 	sub	r2, r7, r4
   25d10:	e1a00006 	mov	r0, r6
   25d14:	e19110d5 	ldrsb	r1, [r1, r5]
   25d18:	e3a03000 	mov	r3, #0
   25d1c:	ebffffbd 	bl	25c18 <ScreenDeviceDisplayChar2>
   25d20:	e28dd00c 	add	sp, sp, #12
   25d24:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   25d28:	00028adc 	ldrdeq	r8, [r2], -ip

00025d2c <ScreenDeviceDisplayChar>:
   25d2c:	e6ef3071 	uxtb	r3, r1
   25d30:	e353001f 	cmp	r3, #31
   25d34:	912fff1e 	bxls	lr
   25d38:	e92d4010 	push	{r4, lr}
   25d3c:	e1a04000 	mov	r4, r0
   25d40:	e5d02038 	ldrb	r2, [r0, #56]	; 0x38
   25d44:	e24dd008 	sub	sp, sp, #8
   25d48:	e5903030 	ldr	r3, [r0, #48]	; 0x30
   25d4c:	e58d2000 	str	r2, [sp]
   25d50:	e590202c 	ldr	r2, [r0, #44]	; 0x2c
   25d54:	ebffffaf 	bl	25c18 <ScreenDeviceDisplayChar2>
   25d58:	e1a00004 	mov	r0, r4
   25d5c:	e28dd008 	add	sp, sp, #8
   25d60:	e8bd4010 	pop	{r4, lr}
   25d64:	eaffff89 	b	25b90 <ScreenDeviceCursorRight>

00025d68 <ScreenDeviceEraseChar>:
   25d68:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25d6c:	e1a05000 	mov	r5, r0
   25d70:	e1a07001 	mov	r7, r1
   25d74:	e1a08002 	mov	r8, r2
   25d78:	e3a09000 	mov	r9, #0
   25d7c:	e280600c 	add	r6, r0, #12
   25d80:	e1a00006 	mov	r0, r6
   25d84:	eb0005fb 	bl	27578 <CharGeneratorGetCharHeight>
   25d88:	e1500009 	cmp	r0, r9
   25d8c:	98bd87f0 	popls	{r4, r5, r6, r7, r8, r9, sl, pc}
   25d90:	e3a04000 	mov	r4, #0
   25d94:	e1a00006 	mov	r0, r6
   25d98:	eb0005e9 	bl	27544 <CharGeneratorGetCharWidth>
   25d9c:	e1500004 	cmp	r0, r4
   25da0:	e0841007 	add	r1, r4, r7
   25da4:	9a000008 	bls	25dcc <ScreenDeviceEraseChar+0x64>
   25da8:	e595301c 	ldr	r3, [r5, #28]
   25dac:	e2844001 	add	r4, r4, #1
   25db0:	e1510003 	cmp	r1, r3
   25db4:	2afffff6 	bcs	25d94 <ScreenDeviceEraseChar+0x2c>
   25db8:	e3a03000 	mov	r3, #0
   25dbc:	e1a02008 	mov	r2, r8
   25dc0:	e1a00005 	mov	r0, r5
   25dc4:	ebfffe66 	bl	25764 <ScreenDeviceSetPixel.part.0>
   25dc8:	eafffff1 	b	25d94 <ScreenDeviceEraseChar+0x2c>
   25dcc:	e2899001 	add	r9, r9, #1
   25dd0:	e2888001 	add	r8, r8, #1
   25dd4:	eaffffe9 	b	25d80 <ScreenDeviceEraseChar+0x18>

00025dd8 <ScreenDeviceClearLineEnd>:
   25dd8:	e92d4070 	push	{r4, r5, r6, lr}
   25ddc:	e590301c 	ldr	r3, [r0, #28]
   25de0:	e590402c 	ldr	r4, [r0, #44]	; 0x2c
   25de4:	e1540003 	cmp	r4, r3
   25de8:	28bd8070 	popcs	{r4, r5, r6, pc}
   25dec:	e1a05000 	mov	r5, r0
   25df0:	e280600c 	add	r6, r0, #12
   25df4:	e1a01004 	mov	r1, r4
   25df8:	e5952030 	ldr	r2, [r5, #48]	; 0x30
   25dfc:	e1a00005 	mov	r0, r5
   25e00:	ebffffd8 	bl	25d68 <ScreenDeviceEraseChar>
   25e04:	e1a00006 	mov	r0, r6
   25e08:	eb0005cd 	bl	27544 <CharGeneratorGetCharWidth>
   25e0c:	e595301c 	ldr	r3, [r5, #28]
   25e10:	e0844000 	add	r4, r4, r0
   25e14:	e1530004 	cmp	r3, r4
   25e18:	8afffff5 	bhi	25df4 <ScreenDeviceClearLineEnd+0x1c>
   25e1c:	e8bd8070 	pop	{r4, r5, r6, pc}

00025e20 <ScreenDeviceEraseChars.part.4>:
   25e20:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   25e24:	e1a05000 	mov	r5, r0
   25e28:	e280700c 	add	r7, r0, #12
   25e2c:	e1a00007 	mov	r0, r7
   25e30:	e1a06001 	mov	r6, r1
   25e34:	e595402c 	ldr	r4, [r5, #44]	; 0x2c
   25e38:	eb0005c1 	bl	27544 <CharGeneratorGetCharWidth>
   25e3c:	e0204096 	mla	r0, r6, r0, r4
   25e40:	e595601c 	ldr	r6, [r5, #28]
   25e44:	e595402c 	ldr	r4, [r5, #44]	; 0x2c
   25e48:	e1500006 	cmp	r0, r6
   25e4c:	31a06000 	movcc	r6, r0
   25e50:	e1540006 	cmp	r4, r6
   25e54:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
   25e58:	e1a01004 	mov	r1, r4
   25e5c:	e5952030 	ldr	r2, [r5, #48]	; 0x30
   25e60:	e1a00005 	mov	r0, r5
   25e64:	ebffffbf 	bl	25d68 <ScreenDeviceEraseChar>
   25e68:	e1a00007 	mov	r0, r7
   25e6c:	eb0005b4 	bl	27544 <CharGeneratorGetCharWidth>
   25e70:	e0844000 	add	r4, r4, r0
   25e74:	e1540006 	cmp	r4, r6
   25e78:	3afffff6 	bcc	25e58 <ScreenDeviceEraseChars.part.4+0x38>
   25e7c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00025e80 <ScreenDeviceEraseChars>:
   25e80:	e3510000 	cmp	r1, #0
   25e84:	012fff1e 	bxeq	lr
   25e88:	eaffffe4 	b	25e20 <ScreenDeviceEraseChars.part.4>

00025e8c <ScreenDeviceClearDisplayEnd>:
   25e8c:	e92d4070 	push	{r4, r5, r6, lr}
   25e90:	e590301c 	ldr	r3, [r0, #28]
   25e94:	e590502c 	ldr	r5, [r0, #44]	; 0x2c
   25e98:	e1a04000 	mov	r4, r0
   25e9c:	e1530005 	cmp	r3, r5
   25ea0:	e280600c 	add	r6, r0, #12
   25ea4:	9a000009 	bls	25ed0 <ScreenDeviceClearDisplayEnd+0x44>
   25ea8:	e1a01005 	mov	r1, r5
   25eac:	e5942030 	ldr	r2, [r4, #48]	; 0x30
   25eb0:	e1a00004 	mov	r0, r4
   25eb4:	ebffffab 	bl	25d68 <ScreenDeviceEraseChar>
   25eb8:	e1a00006 	mov	r0, r6
   25ebc:	eb0005a0 	bl	27544 <CharGeneratorGetCharWidth>
   25ec0:	e594301c 	ldr	r3, [r4, #28]
   25ec4:	e0855000 	add	r5, r5, r0
   25ec8:	e1550003 	cmp	r5, r3
   25ecc:	3afffff5 	bcc	25ea8 <ScreenDeviceClearDisplayEnd+0x1c>
   25ed0:	e1a00006 	mov	r0, r6
   25ed4:	e5945030 	ldr	r5, [r4, #48]	; 0x30
   25ed8:	eb0005a6 	bl	27578 <CharGeneratorGetCharHeight>
   25edc:	e5943018 	ldr	r3, [r4, #24]
   25ee0:	e0850000 	add	r0, r5, r0
   25ee4:	e0000093 	mul	r0, r3, r0
   25ee8:	e5942014 	ldr	r2, [r4, #20]
   25eec:	e5943010 	ldr	r3, [r4, #16]
   25ef0:	e0422000 	sub	r2, r2, r0
   25ef4:	e3a01000 	mov	r1, #0
   25ef8:	e8bd4070 	pop	{r4, r5, r6, lr}
   25efc:	e0830000 	add	r0, r3, r0
   25f00:	eaffba6b 	b	148b4 <memset>

00025f04 <ScreenDeviceWrite2>:
   25f04:	e92d4010 	push	{r4, lr}
   25f08:	e5903028 	ldr	r3, [r0, #40]	; 0x28
   25f0c:	e24dd008 	sub	sp, sp, #8
   25f10:	e1a04000 	mov	r4, r0
   25f14:	e3530007 	cmp	r3, #7
   25f18:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   25f1c:	ea00000b 	b	25f50 <ScreenDeviceWrite2+0x4c>
   25f20:	00025f9c 	muleq	r2, ip, pc	; <UNPREDICTABLE>
   25f24:	00025ffc 	strdeq	r5, [r2], -ip
   25f28:	00026010 	andeq	r6, r2, r0, lsl r0
   25f2c:	00026068 	andeq	r6, r2, r8, rrx
   25f30:	00026144 	andeq	r6, r2, r4, asr #2
   25f34:	00026164 	andeq	r6, r2, r4, ror #2
   25f38:	00026184 	andeq	r6, r2, r4, lsl #3
   25f3c:	00025f60 	andeq	r5, r2, r0, ror #30
   25f40:	e5901040 	ldr	r1, [r0, #64]	; 0x40
   25f44:	e3510000 	cmp	r1, #0
   25f48:	0a000000 	beq	25f50 <ScreenDeviceWrite2+0x4c>
   25f4c:	ebffffb3 	bl	25e20 <ScreenDeviceEraseChars.part.4>
   25f50:	e3a03000 	mov	r3, #0
   25f54:	e5843028 	str	r3, [r4, #40]	; 0x28
   25f58:	e28dd008 	add	sp, sp, #8
   25f5c:	e8bd8010 	pop	{r4, pc}
   25f60:	e3510068 	cmp	r1, #104	; 0x68
   25f64:	0a000093 	beq	261b8 <ScreenDeviceWrite2+0x2b4>
   25f68:	e351006c 	cmp	r1, #108	; 0x6c
   25f6c:	0a000091 	beq	261b8 <ScreenDeviceWrite2+0x2b4>
   25f70:	e2411030 	sub	r1, r1, #48	; 0x30
   25f74:	e6ef3071 	uxtb	r3, r1
   25f78:	e3530009 	cmp	r3, #9
   25f7c:	8afffff3 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   25f80:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   25f84:	e0833103 	add	r3, r3, r3, lsl #2
   25f88:	e0811083 	add	r1, r1, r3, lsl #1
   25f8c:	e3510063 	cmp	r1, #99	; 0x63
   25f90:	e5841040 	str	r1, [r4, #64]	; 0x40
   25f94:	8affffed 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   25f98:	eaffffee 	b	25f58 <ScreenDeviceWrite2+0x54>
   25f9c:	e2413008 	sub	r3, r1, #8
   25fa0:	e3530013 	cmp	r3, #19
   25fa4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   25fa8:	ea0000e0 	b	26330 <ScreenDeviceWrite2+0x42c>
   25fac:	000261d4 	ldrdeq	r6, [r2], -r4
   25fb0:	0002620c 	andeq	r6, r2, ip, lsl #4
   25fb4:	000261f8 	strdeq	r6, [r2], -r8
   25fb8:	00026330 	andeq	r6, r2, r0, lsr r3
   25fbc:	00026330 	andeq	r6, r2, r0, lsr r3
   25fc0:	000261ec 	andeq	r6, r2, ip, ror #3
   25fc4:	00026330 	andeq	r6, r2, r0, lsr r3
   25fc8:	00026330 	andeq	r6, r2, r0, lsr r3
   25fcc:	00026330 	andeq	r6, r2, r0, lsr r3
   25fd0:	00026330 	andeq	r6, r2, r0, lsr r3
   25fd4:	00026330 	andeq	r6, r2, r0, lsr r3
   25fd8:	00026330 	andeq	r6, r2, r0, lsr r3
   25fdc:	00026330 	andeq	r6, r2, r0, lsr r3
   25fe0:	00026330 	andeq	r6, r2, r0, lsr r3
   25fe4:	00026330 	andeq	r6, r2, r0, lsr r3
   25fe8:	00026330 	andeq	r6, r2, r0, lsr r3
   25fec:	00026330 	andeq	r6, r2, r0, lsr r3
   25ff0:	00026330 	andeq	r6, r2, r0, lsr r3
   25ff4:	00026330 	andeq	r6, r2, r0, lsr r3
   25ff8:	000261e0 	andeq	r6, r2, r0, ror #3
   25ffc:	e351005b 	cmp	r1, #91	; 0x5b
   26000:	1affffd2 	bne	25f50 <ScreenDeviceWrite2+0x4c>
   26004:	e3a03002 	mov	r3, #2
   26008:	e5803028 	str	r3, [r0, #40]	; 0x28
   2600c:	eaffffd1 	b	25f58 <ScreenDeviceWrite2+0x54>
   26010:	e241303f 	sub	r3, r1, #63	; 0x3f
   26014:	e3530011 	cmp	r3, #17
   26018:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   2601c:	ea0000ce 	b	2635c <ScreenDeviceWrite2+0x458>
   26020:	000262e0 	andeq	r6, r2, r0, ror #5
   26024:	0002635c 	andeq	r6, r2, ip, asr r3
   26028:	000262d0 	ldrdeq	r6, [r2], -r0
   2602c:	00026320 	andeq	r6, r2, r0, lsr #6
   26030:	00026310 	andeq	r6, r2, r0, lsl r3
   26034:	0002635c 	andeq	r6, r2, ip, asr r3
   26038:	0002635c 	andeq	r6, r2, ip, asr r3
   2603c:	0002635c 	andeq	r6, r2, ip, asr r3
   26040:	0002635c 	andeq	r6, r2, ip, asr r3
   26044:	000262fc 	strdeq	r6, [r2], -ip
   26048:	0002635c 	andeq	r6, r2, ip, asr r3
   2604c:	000262ec 	andeq	r6, r2, ip, ror #5
   26050:	000262c0 	andeq	r6, r2, r0, asr #5
   26054:	00025f50 	andeq	r5, r2, r0, asr pc
   26058:	00025f50 	andeq	r5, r2, r0, asr pc
   2605c:	0002635c 	andeq	r6, r2, ip, asr r3
   26060:	0002635c 	andeq	r6, r2, ip, asr r3
   26064:	00025f50 	andeq	r5, r2, r0, asr pc
   26068:	e241303b 	sub	r3, r1, #59	; 0x3b
   2606c:	e3530032 	cmp	r3, #50	; 0x32
   26070:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   26074:	eaffffbd 	b	25f70 <ScreenDeviceWrite2+0x6c>
   26078:	000262b4 			; <UNDEFINED> instruction: 0x000262b4
   2607c:	00025f70 	andeq	r5, r2, r0, ror pc
   26080:	00025f70 	andeq	r5, r2, r0, ror pc
   26084:	00025f70 	andeq	r5, r2, r0, ror pc
   26088:	00025f70 	andeq	r5, r2, r0, ror pc
   2608c:	00025f70 	andeq	r5, r2, r0, ror pc
   26090:	00025f70 	andeq	r5, r2, r0, ror pc
   26094:	00025f70 	andeq	r5, r2, r0, ror pc
   26098:	00025f70 	andeq	r5, r2, r0, ror pc
   2609c:	00025f70 	andeq	r5, r2, r0, ror pc
   260a0:	00025f70 	andeq	r5, r2, r0, ror pc
   260a4:	00025f70 	andeq	r5, r2, r0, ror pc
   260a8:	00025f70 	andeq	r5, r2, r0, ror pc
   260ac:	00025f70 	andeq	r5, r2, r0, ror pc
   260b0:	00025f70 	andeq	r5, r2, r0, ror pc
   260b4:	00025f70 	andeq	r5, r2, r0, ror pc
   260b8:	00025f70 	andeq	r5, r2, r0, ror pc
   260bc:	00025f50 	andeq	r5, r2, r0, asr pc
   260c0:	00025f50 	andeq	r5, r2, r0, asr pc
   260c4:	00025f70 	andeq	r5, r2, r0, ror pc
   260c8:	00025f70 	andeq	r5, r2, r0, ror pc
   260cc:	00025f50 	andeq	r5, r2, r0, asr pc
   260d0:	00025f70 	andeq	r5, r2, r0, ror pc
   260d4:	00025f70 	andeq	r5, r2, r0, ror pc
   260d8:	00025f70 	andeq	r5, r2, r0, ror pc
   260dc:	00025f70 	andeq	r5, r2, r0, ror pc
   260e0:	00025f70 	andeq	r5, r2, r0, ror pc
   260e4:	00025f70 	andeq	r5, r2, r0, ror pc
   260e8:	00025f70 	andeq	r5, r2, r0, ror pc
   260ec:	00025f40 	andeq	r5, r2, r0, asr #30
   260f0:	00025f70 	andeq	r5, r2, r0, ror pc
   260f4:	00025f70 	andeq	r5, r2, r0, ror pc
   260f8:	00025f70 	andeq	r5, r2, r0, ror pc
   260fc:	00025f70 	andeq	r5, r2, r0, ror pc
   26100:	00025f70 	andeq	r5, r2, r0, ror pc
   26104:	00025f70 	andeq	r5, r2, r0, ror pc
   26108:	00025f70 	andeq	r5, r2, r0, ror pc
   2610c:	00025f70 	andeq	r5, r2, r0, ror pc
   26110:	00025f70 	andeq	r5, r2, r0, ror pc
   26114:	00025f70 	andeq	r5, r2, r0, ror pc
   26118:	00025f70 	andeq	r5, r2, r0, ror pc
   2611c:	00025f70 	andeq	r5, r2, r0, ror pc
   26120:	00025f70 	andeq	r5, r2, r0, ror pc
   26124:	00025f70 	andeq	r5, r2, r0, ror pc
   26128:	00025f70 	andeq	r5, r2, r0, ror pc
   2612c:	00026218 	andeq	r6, r2, r8, lsl r2
   26130:	00025f70 	andeq	r5, r2, r0, ror pc
   26134:	00025f70 	andeq	r5, r2, r0, ror pc
   26138:	00025f70 	andeq	r5, r2, r0, ror pc
   2613c:	00026218 	andeq	r6, r2, r8, lsl r2
   26140:	00026234 	andeq	r6, r2, r4, lsr r2
   26144:	e2411030 	sub	r1, r1, #48	; 0x30
   26148:	e6ef3071 	uxtb	r3, r1
   2614c:	e3530009 	cmp	r3, #9
   26150:	8affff7e 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   26154:	e3a03007 	mov	r3, #7
   26158:	e5801040 	str	r1, [r0, #64]	; 0x40
   2615c:	e5803028 	str	r3, [r0, #40]	; 0x28
   26160:	eaffff7c 	b	25f58 <ScreenDeviceWrite2+0x54>
   26164:	e2411030 	sub	r1, r1, #48	; 0x30
   26168:	e6ef3071 	uxtb	r3, r1
   2616c:	e3530009 	cmp	r3, #9
   26170:	8affff76 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   26174:	e3a03006 	mov	r3, #6
   26178:	e5801044 	str	r1, [r0, #68]	; 0x44
   2617c:	e5803028 	str	r3, [r0, #40]	; 0x28
   26180:	eaffff74 	b	25f58 <ScreenDeviceWrite2+0x54>
   26184:	e3510048 	cmp	r1, #72	; 0x48
   26188:	0a000084 	beq	263a0 <ScreenDeviceWrite2+0x49c>
   2618c:	e2411030 	sub	r1, r1, #48	; 0x30
   26190:	e6ef3071 	uxtb	r3, r1
   26194:	e3530009 	cmp	r3, #9
   26198:	8affff6c 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   2619c:	e5903044 	ldr	r3, [r0, #68]	; 0x44
   261a0:	e0833103 	add	r3, r3, r3, lsl #2
   261a4:	e0811083 	add	r1, r1, r3, lsl #1
   261a8:	e35100c7 	cmp	r1, #199	; 0xc7
   261ac:	e5801044 	str	r1, [r0, #68]	; 0x44
   261b0:	8affff66 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   261b4:	eaffff67 	b	25f58 <ScreenDeviceWrite2+0x54>
   261b8:	e5943040 	ldr	r3, [r4, #64]	; 0x40
   261bc:	e3530019 	cmp	r3, #25
   261c0:	02411068 	subeq	r1, r1, #104	; 0x68
   261c4:	016f1f11 	clzeq	r1, r1
   261c8:	01a012a1 	lsreq	r1, r1, #5
   261cc:	05841034 	streq	r1, [r4, #52]	; 0x34
   261d0:	eaffff5e 	b	25f50 <ScreenDeviceWrite2+0x4c>
   261d4:	e28dd008 	add	sp, sp, #8
   261d8:	e8bd4010 	pop	{r4, lr}
   261dc:	eafffdcc 	b	25914 <ScreenDeviceCursorLeft>
   261e0:	e3a03001 	mov	r3, #1
   261e4:	e5803028 	str	r3, [r0, #40]	; 0x28
   261e8:	eaffff5a 	b	25f58 <ScreenDeviceWrite2+0x54>
   261ec:	e3a03000 	mov	r3, #0
   261f0:	e580302c 	str	r3, [r0, #44]	; 0x2c
   261f4:	eaffff57 	b	25f58 <ScreenDeviceWrite2+0x54>
   261f8:	e3a03000 	mov	r3, #0
   261fc:	e580302c 	str	r3, [r0, #44]	; 0x2c
   26200:	e28dd008 	add	sp, sp, #8
   26204:	e8bd4010 	pop	{r4, lr}
   26208:	eafffe4a 	b	25b38 <ScreenDeviceCursorDown>
   2620c:	e28dd008 	add	sp, sp, #8
   26210:	e8bd4010 	pop	{r4, lr}
   26214:	eafffe6c 	b	25bcc <ScreenDeviceTabulator>
   26218:	e5903040 	ldr	r3, [r0, #64]	; 0x40
   2621c:	e3530004 	cmp	r3, #4
   26220:	02411068 	subeq	r1, r1, #104	; 0x68
   26224:	016f1f11 	clzeq	r1, r1
   26228:	01a012a1 	lsreq	r1, r1, #5
   2622c:	0580103c 	streq	r1, [r0, #60]	; 0x3c
   26230:	eaffff46 	b	25f50 <ScreenDeviceWrite2+0x4c>
   26234:	e5903040 	ldr	r3, [r0, #64]	; 0x40
   26238:	e353001b 	cmp	r3, #27
   2623c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   26240:	eaffff42 	b	25f50 <ScreenDeviceWrite2+0x4c>
   26244:	00026394 	muleq	r2, r4, r3
   26248:	00026388 	andeq	r6, r2, r8, lsl #7
   2624c:	0002637c 	andeq	r6, r2, ip, ror r3
   26250:	00025f50 	andeq	r5, r2, r0, asr pc
   26254:	00025f50 	andeq	r5, r2, r0, asr pc
   26258:	00025f50 	andeq	r5, r2, r0, asr pc
   2625c:	00025f50 	andeq	r5, r2, r0, asr pc
   26260:	00025f50 	andeq	r5, r2, r0, asr pc
   26264:	00025f50 	andeq	r5, r2, r0, asr pc
   26268:	00025f50 	andeq	r5, r2, r0, asr pc
   2626c:	00025f50 	andeq	r5, r2, r0, asr pc
   26270:	00025f50 	andeq	r5, r2, r0, asr pc
   26274:	00025f50 	andeq	r5, r2, r0, asr pc
   26278:	00025f50 	andeq	r5, r2, r0, asr pc
   2627c:	00025f50 	andeq	r5, r2, r0, asr pc
   26280:	00025f50 	andeq	r5, r2, r0, asr pc
   26284:	00025f50 	andeq	r5, r2, r0, asr pc
   26288:	00025f50 	andeq	r5, r2, r0, asr pc
   2628c:	00025f50 	andeq	r5, r2, r0, asr pc
   26290:	00025f50 	andeq	r5, r2, r0, asr pc
   26294:	00025f50 	andeq	r5, r2, r0, asr pc
   26298:	00025f50 	andeq	r5, r2, r0, asr pc
   2629c:	00025f50 	andeq	r5, r2, r0, asr pc
   262a0:	00025f50 	andeq	r5, r2, r0, asr pc
   262a4:	00025f50 	andeq	r5, r2, r0, asr pc
   262a8:	00025f50 	andeq	r5, r2, r0, asr pc
   262ac:	00025f50 	andeq	r5, r2, r0, asr pc
   262b0:	00026394 	muleq	r2, r4, r3
   262b4:	e3a03005 	mov	r3, #5
   262b8:	e5803028 	str	r3, [r0, #40]	; 0x28
   262bc:	eaffff25 	b	25f58 <ScreenDeviceWrite2+0x54>
   262c0:	ebfffec4 	bl	25dd8 <ScreenDeviceClearLineEnd>
   262c4:	e3a03000 	mov	r3, #0
   262c8:	e5843028 	str	r3, [r4, #40]	; 0x28
   262cc:	eaffff21 	b	25f58 <ScreenDeviceWrite2+0x54>
   262d0:	ebfffdbe 	bl	259d0 <ScreenDeviceCursorUp>
   262d4:	e3a03000 	mov	r3, #0
   262d8:	e5843028 	str	r3, [r4, #40]	; 0x28
   262dc:	eaffff1d 	b	25f58 <ScreenDeviceWrite2+0x54>
   262e0:	e3a03004 	mov	r3, #4
   262e4:	e5803028 	str	r3, [r0, #40]	; 0x28
   262e8:	eaffff1a 	b	25f58 <ScreenDeviceWrite2+0x54>
   262ec:	ebfffee6 	bl	25e8c <ScreenDeviceClearDisplayEnd>
   262f0:	e3a03000 	mov	r3, #0
   262f4:	e5843028 	str	r3, [r4, #40]	; 0x28
   262f8:	eaffff16 	b	25f58 <ScreenDeviceWrite2+0x54>
   262fc:	e3a03000 	mov	r3, #0
   26300:	e580302c 	str	r3, [r0, #44]	; 0x2c
   26304:	e5803030 	str	r3, [r0, #48]	; 0x30
   26308:	e5803028 	str	r3, [r0, #40]	; 0x28
   2630c:	eaffff11 	b	25f58 <ScreenDeviceWrite2+0x54>
   26310:	ebfffe1e 	bl	25b90 <ScreenDeviceCursorRight>
   26314:	e3a03000 	mov	r3, #0
   26318:	e5843028 	str	r3, [r4, #40]	; 0x28
   2631c:	eaffff0d 	b	25f58 <ScreenDeviceWrite2+0x54>
   26320:	ebfffe04 	bl	25b38 <ScreenDeviceCursorDown>
   26324:	e3a03000 	mov	r3, #0
   26328:	e5843028 	str	r3, [r4, #40]	; 0x28
   2632c:	eaffff09 	b	25f58 <ScreenDeviceWrite2+0x54>
   26330:	e6ef3071 	uxtb	r3, r1
   26334:	e353001f 	cmp	r3, #31
   26338:	9affff06 	bls	25f58 <ScreenDeviceWrite2+0x54>
   2633c:	e5d03038 	ldrb	r3, [r0, #56]	; 0x38
   26340:	e58d3000 	str	r3, [sp]
   26344:	e1c022dc 	ldrd	r2, [r0, #44]	; 0x2c
   26348:	ebfffe32 	bl	25c18 <ScreenDeviceDisplayChar2>
   2634c:	e1a00004 	mov	r0, r4
   26350:	e28dd008 	add	sp, sp, #8
   26354:	e8bd4010 	pop	{r4, lr}
   26358:	eafffe0c 	b	25b90 <ScreenDeviceCursorRight>
   2635c:	e2411030 	sub	r1, r1, #48	; 0x30
   26360:	e6ef3071 	uxtb	r3, r1
   26364:	e3530009 	cmp	r3, #9
   26368:	8afffef8 	bhi	25f50 <ScreenDeviceWrite2+0x4c>
   2636c:	e3a03003 	mov	r3, #3
   26370:	e5801040 	str	r1, [r0, #64]	; 0x40
   26374:	e5803028 	str	r3, [r0, #40]	; 0x28
   26378:	eafffef6 	b	25f58 <ScreenDeviceWrite2+0x54>
   2637c:	e3a03003 	mov	r3, #3
   26380:	e5c03038 	strb	r3, [r0, #56]	; 0x38
   26384:	eafffef1 	b	25f50 <ScreenDeviceWrite2+0x4c>
   26388:	e3a03002 	mov	r3, #2
   2638c:	e5c03038 	strb	r3, [r0, #56]	; 0x38
   26390:	eafffeee 	b	25f50 <ScreenDeviceWrite2+0x4c>
   26394:	e3a03001 	mov	r3, #1
   26398:	e5c03038 	strb	r3, [r0, #56]	; 0x38
   2639c:	eafffeeb 	b	25f50 <ScreenDeviceWrite2+0x4c>
   263a0:	e5902044 	ldr	r2, [r0, #68]	; 0x44
   263a4:	e5901040 	ldr	r1, [r0, #64]	; 0x40
   263a8:	ebfffd73 	bl	2597c <ScreenDeviceCursorMove>
   263ac:	eafffee7 	b	25f50 <ScreenDeviceWrite2+0x4c>

000263b0 <ScreenDeviceWrite>:
   263b0:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   263b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   263b8:	e3530000 	cmp	r3, #0
   263bc:	e1a05000 	mov	r5, r0
   263c0:	e1a04001 	mov	r4, r1
   263c4:	e1a07002 	mov	r7, r2
   263c8:	1a000010 	bne	26410 <ScreenDeviceWrite+0x60>
   263cc:	e3520000 	cmp	r2, #0
   263d0:	0a00000a 	beq	26400 <ScreenDeviceWrite+0x50>
   263d4:	e0846007 	add	r6, r4, r7
   263d8:	e0d410d1 	ldrsb	r1, [r4], #1
   263dc:	e1a00005 	mov	r0, r5
   263e0:	ebfffec7 	bl	25f04 <ScreenDeviceWrite2>
   263e4:	e1540006 	cmp	r4, r6
   263e8:	1afffffa 	bne	263d8 <ScreenDeviceWrite+0x28>
   263ec:	e5953034 	ldr	r3, [r5, #52]	; 0x34
   263f0:	e3530000 	cmp	r3, #0
   263f4:	0a000001 	beq	26400 <ScreenDeviceWrite+0x50>
   263f8:	e1a00005 	mov	r0, r5
   263fc:	ebfffcdf 	bl	25780 <ScreenDeviceInvertCursor.part.5>
   26400:	e3a03000 	mov	r3, #0
   26404:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26408:	e1a00007 	mov	r0, r7
   2640c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   26410:	ebfffcda 	bl	25780 <ScreenDeviceInvertCursor.part.5>
   26414:	e3570000 	cmp	r7, #0
   26418:	1affffed 	bne	263d4 <ScreenDeviceWrite+0x24>
   2641c:	eafffff2 	b	263ec <ScreenDeviceWrite+0x3c>

00026420 <ScreenDeviceInitialize>:
   26420:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   26424:	e1a04000 	mov	r4, r0
   26428:	e3a00008 	mov	r0, #8
   2642c:	ebfffabf 	bl	24f30 <malloc>
   26430:	e3a03008 	mov	r3, #8
   26434:	e5942004 	ldr	r2, [r4, #4]
   26438:	e5840008 	str	r0, [r4, #8]
   2643c:	e5941000 	ldr	r1, [r4]
   26440:	eb0002db 	bl	26fb4 <BcmFrameBuffer>
   26444:	e5940008 	ldr	r0, [r4, #8]
   26448:	e59f20fc 	ldr	r2, [pc, #252]	; 2654c <ScreenDeviceInitialize+0x12c>
   2644c:	e3a01001 	mov	r1, #1
   26450:	eb000333 	bl	27124 <BcmFrameBufferSetPalette>
   26454:	e5940008 	ldr	r0, [r4, #8]
   26458:	e3a02b3e 	mov	r2, #63488	; 0xf800
   2645c:	e3a01002 	mov	r1, #2
   26460:	eb00032f 	bl	27124 <BcmFrameBufferSetPalette>
   26464:	e5940008 	ldr	r0, [r4, #8]
   26468:	e3a0201f 	mov	r2, #31
   2646c:	e3a01003 	mov	r1, #3
   26470:	eb00032b 	bl	27124 <BcmFrameBufferSetPalette>
   26474:	e5940008 	ldr	r0, [r4, #8]
   26478:	eb00033c 	bl	27170 <BcmFrameBufferInitialize>
   2647c:	e3500000 	cmp	r0, #0
   26480:	1a000001 	bne	2648c <ScreenDeviceInitialize+0x6c>
   26484:	e3a00000 	mov	r0, #0
   26488:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2648c:	e5940008 	ldr	r0, [r4, #8]
   26490:	eb000379 	bl	2727c <BcmFrameBufferGetDepth>
   26494:	e3500008 	cmp	r0, #8
   26498:	1afffff9 	bne	26484 <ScreenDeviceInitialize+0x64>
   2649c:	e5940008 	ldr	r0, [r4, #8]
   264a0:	eb000382 	bl	272b0 <BcmFrameBufferGetBuffer>
   264a4:	e5840010 	str	r0, [r4, #16]
   264a8:	e5940008 	ldr	r0, [r4, #8]
   264ac:	eb00038d 	bl	272e8 <BcmFrameBufferGetSize>
   264b0:	e5840014 	str	r0, [r4, #20]
   264b4:	e5940008 	ldr	r0, [r4, #8]
   264b8:	eb000348 	bl	271e0 <BcmFrameBufferGetWidth>
   264bc:	e584001c 	str	r0, [r4, #28]
   264c0:	e5940008 	ldr	r0, [r4, #8]
   264c4:	eb000352 	bl	27214 <BcmFrameBufferGetHeight>
   264c8:	e5840020 	str	r0, [r4, #32]
   264cc:	e5940008 	ldr	r0, [r4, #8]
   264d0:	eb00035c 	bl	27248 <BcmFrameBufferGetPitch>
   264d4:	e2106003 	ands	r6, r0, #3
   264d8:	1affffe9 	bne	26484 <ScreenDeviceInitialize+0x64>
   264dc:	e5940008 	ldr	r0, [r4, #8]
   264e0:	eb000358 	bl	27248 <BcmFrameBufferGetPitch>
   264e4:	e284500c 	add	r5, r4, #12
   264e8:	e5840018 	str	r0, [r4, #24]
   264ec:	e1a00005 	mov	r0, r5
   264f0:	e5947020 	ldr	r7, [r4, #32]
   264f4:	eb00041f 	bl	27578 <CharGeneratorGetCharHeight>
   264f8:	e1a01000 	mov	r1, r0
   264fc:	e1a00007 	mov	r0, r7
   26500:	ebfffbf5 	bl	254dc <__aeabi_uidiv>
   26504:	e1a07000 	mov	r7, r0
   26508:	e1a00005 	mov	r0, r5
   2650c:	eb000419 	bl	27578 <CharGeneratorGetCharHeight>
   26510:	e0000790 	mul	r0, r0, r7
   26514:	e584602c 	str	r6, [r4, #44]	; 0x2c
   26518:	e5840024 	str	r0, [r4, #36]	; 0x24
   2651c:	e5846030 	str	r6, [r4, #48]	; 0x30
   26520:	e1a00004 	mov	r0, r4
   26524:	ebfffe58 	bl	25e8c <ScreenDeviceClearDisplayEnd>
   26528:	e5943034 	ldr	r3, [r4, #52]	; 0x34
   2652c:	e3530000 	cmp	r3, #0
   26530:	1a000001 	bne	2653c <ScreenDeviceInitialize+0x11c>
   26534:	e3a00001 	mov	r0, #1
   26538:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2653c:	e1a00004 	mov	r0, r4
   26540:	ebfffc8e 	bl	25780 <ScreenDeviceInvertCursor.part.5>
   26544:	e3a00001 	mov	r0, #1
   26548:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2654c:	0000ffdf 	ldrdeq	pc, [r0], -pc	; <UNPREDICTABLE>

00026550 <ScreenDeviceInvertCursor>:
   26550:	e5903034 	ldr	r3, [r0, #52]	; 0x34
   26554:	e3530000 	cmp	r3, #0
   26558:	012fff1e 	bxeq	lr
   2655c:	eafffc87 	b	25780 <ScreenDeviceInvertCursor.part.5>

00026560 <EnterCritical>:
   26560:	e10f2000 	mrs	r2, CPSR
   26564:	f10c0080 	cpsid	i
   26568:	e59f1028 	ldr	r1, [pc, #40]	; 26598 <EnterCritical+0x38>
   2656c:	e5913000 	ldr	r3, [r1]
   26570:	e3530000 	cmp	r3, #0
   26574:	01a023a2 	lsreq	r2, r2, #7
   26578:	02222001 	eoreq	r2, r2, #1
   2657c:	e2833001 	add	r3, r3, #1
   26580:	02022001 	andeq	r2, r2, #1
   26584:	e5813000 	str	r3, [r1]
   26588:	05812004 	streq	r2, [r1, #4]
   2658c:	e3a03000 	mov	r3, #0
   26590:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26594:	e12fff1e 	bx	lr
   26598:	0002d17c 	andeq	sp, r2, ip, ror r1

0002659c <LeaveCritical>:
   2659c:	e92d4010 	push	{r4, lr}
   265a0:	e3a03000 	mov	r3, #0
   265a4:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   265a8:	e59f4044 	ldr	r4, [pc, #68]	; 265f4 <LeaveCritical+0x58>
   265ac:	e5943000 	ldr	r3, [r4]
   265b0:	e3530000 	cmp	r3, #0
   265b4:	0a000009 	beq	265e0 <LeaveCritical+0x44>
   265b8:	e5943000 	ldr	r3, [r4]
   265bc:	e2433001 	sub	r3, r3, #1
   265c0:	e3530000 	cmp	r3, #0
   265c4:	e5843000 	str	r3, [r4]
   265c8:	18bd8010 	popne	{r4, pc}
   265cc:	e5943004 	ldr	r3, [r4, #4]
   265d0:	e3530000 	cmp	r3, #0
   265d4:	08bd8010 	popeq	{r4, pc}
   265d8:	f1080080 	cpsie	i
   265dc:	e8bd8010 	pop	{r4, pc}
   265e0:	e3a0202e 	mov	r2, #46	; 0x2e
   265e4:	e59f100c 	ldr	r1, [pc, #12]	; 265f8 <LeaveCritical+0x5c>
   265e8:	e59f000c 	ldr	r0, [pc, #12]	; 265fc <LeaveCritical+0x60>
   265ec:	ebfffb2f 	bl	252b0 <assertion_failed>
   265f0:	eafffff0 	b	265b8 <LeaveCritical+0x1c>
   265f4:	0002d17c 	andeq	sp, r2, ip, ror r1
   265f8:	0002b49c 	muleq	r2, ip, r4
   265fc:	0002b4ac 	andeq	fp, r2, ip, lsr #9

00026600 <TimerSimpleusDelay.part.0>:
   26600:	e92d4070 	push	{r4, r5, r6, lr}
   26604:	e3a03000 	mov	r3, #0
   26608:	e1a06000 	mov	r6, r0
   2660c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26610:	e59f0028 	ldr	r0, [pc, #40]	; 26640 <TimerSimpleusDelay.part.0+0x40>
   26614:	eb00059e 	bl	27c94 <read32>
   26618:	e1a05000 	mov	r5, r0
   2661c:	e59f401c 	ldr	r4, [pc, #28]	; 26640 <TimerSimpleusDelay.part.0+0x40>
   26620:	e1a00004 	mov	r0, r4
   26624:	eb00059a 	bl	27c94 <read32>
   26628:	e0400005 	sub	r0, r0, r5
   2662c:	e1500006 	cmp	r0, r6
   26630:	3afffffa 	bcc	26620 <TimerSimpleusDelay.part.0+0x20>
   26634:	e3a03000 	mov	r3, #0
   26638:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   2663c:	e8bd8070 	pop	{r4, r5, r6, pc}
   26640:	20003004 	andcs	r3, r0, r4

00026644 <Timer>:
   26644:	e92d4070 	push	{r4, r5, r6, lr}
   26648:	e2504000 	subs	r4, r0, #0
   2664c:	e1a06001 	mov	r6, r1
   26650:	0a000018 	beq	266b8 <Timer+0x74>
   26654:	e3a03000 	mov	r3, #0
   26658:	e59f506c 	ldr	r5, [pc, #108]	; 266cc <Timer+0x88>
   2665c:	e59f106c 	ldr	r1, [pc, #108]	; 266d0 <Timer+0x8c>
   26660:	e5950000 	ldr	r0, [r5]
   26664:	e59f2068 	ldr	r2, [pc, #104]	; 266d4 <Timer+0x90>
   26668:	e1500003 	cmp	r0, r3
   2666c:	e5843004 	str	r3, [r4, #4]
   26670:	e5846000 	str	r6, [r4]
   26674:	e584114c 	str	r1, [r4, #332]	; 0x14c
   26678:	e5843008 	str	r3, [r4, #8]
   2667c:	e5842150 	str	r2, [r4, #336]	; 0x150
   26680:	0a000003 	beq	26694 <Timer+0x50>
   26684:	e3a02033 	mov	r2, #51	; 0x33
   26688:	e59f1048 	ldr	r1, [pc, #72]	; 266d8 <Timer+0x94>
   2668c:	e59f0048 	ldr	r0, [pc, #72]	; 266dc <Timer+0x98>
   26690:	ebfffb06 	bl	252b0 <assertion_failed>
   26694:	e3a03000 	mov	r3, #0
   26698:	e1a01003 	mov	r1, r3
   2669c:	e5854000 	str	r4, [r5]
   266a0:	e0842203 	add	r2, r4, r3, lsl #4
   266a4:	e2833001 	add	r3, r3, #1
   266a8:	e3530014 	cmp	r3, #20
   266ac:	e582100c 	str	r1, [r2, #12]
   266b0:	1afffffa 	bne	266a0 <Timer+0x5c>
   266b4:	e8bd8070 	pop	{r4, r5, r6, pc}
   266b8:	e3a02027 	mov	r2, #39	; 0x27
   266bc:	e59f1014 	ldr	r1, [pc, #20]	; 266d8 <Timer+0x94>
   266c0:	e59f0018 	ldr	r0, [pc, #24]	; 266e0 <Timer+0x9c>
   266c4:	ebfffaf9 	bl	252b0 <assertion_failed>
   266c8:	eaffffe1 	b	26654 <Timer+0x10>
   266cc:	0002d184 	andeq	sp, r2, r4, lsl #3
   266d0:	00055730 	andeq	r5, r5, r0, lsr r7
   266d4:	0000015e 	andeq	r0, r0, lr, asr r1
   266d8:	0002b8e8 	andeq	fp, r2, r8, ror #17
   266dc:	0002ab30 	andeq	sl, r2, r0, lsr fp
   266e0:	00029a68 	andeq	r9, r2, r8, ror #20

000266e4 <_Timer>:
   266e4:	e3a02000 	mov	r2, #0
   266e8:	e59f3004 	ldr	r3, [pc, #4]	; 266f4 <_Timer+0x10>
   266ec:	e5832000 	str	r2, [r3]
   266f0:	e12fff1e 	bx	lr
   266f4:	0002d184 	andeq	sp, r2, r4, lsl #3

000266f8 <TimerGetClockTicks>:
   266f8:	e3500000 	cmp	r0, #0
   266fc:	e92d4010 	push	{r4, lr}
   26700:	0a000005 	beq	2671c <TimerGetClockTicks+0x24>
   26704:	e3a04000 	mov	r4, #0
   26708:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   2670c:	e59f001c 	ldr	r0, [pc, #28]	; 26730 <TimerGetClockTicks+0x38>
   26710:	eb00055f 	bl	27c94 <read32>
   26714:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   26718:	e8bd8010 	pop	{r4, pc}
   2671c:	e3a02057 	mov	r2, #87	; 0x57
   26720:	e59f100c 	ldr	r1, [pc, #12]	; 26734 <TimerGetClockTicks+0x3c>
   26724:	e59f000c 	ldr	r0, [pc, #12]	; 26738 <TimerGetClockTicks+0x40>
   26728:	ebfffae0 	bl	252b0 <assertion_failed>
   2672c:	eafffff4 	b	26704 <TimerGetClockTicks+0xc>
   26730:	20003004 	andcs	r3, r0, r4
   26734:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26738:	00029a68 	andeq	r9, r2, r8, ror #20

0002673c <TimerGetTicks>:
   2673c:	e92d4010 	push	{r4, lr}
   26740:	e2504000 	subs	r4, r0, #0
   26744:	0a000001 	beq	26750 <TimerGetTicks+0x14>
   26748:	e5940004 	ldr	r0, [r4, #4]
   2674c:	e8bd8010 	pop	{r4, pc}
   26750:	e3a02064 	mov	r2, #100	; 0x64
   26754:	e59f100c 	ldr	r1, [pc, #12]	; 26768 <TimerGetTicks+0x2c>
   26758:	e59f000c 	ldr	r0, [pc, #12]	; 2676c <TimerGetTicks+0x30>
   2675c:	ebfffad3 	bl	252b0 <assertion_failed>
   26760:	e5940004 	ldr	r0, [r4, #4]
   26764:	e8bd8010 	pop	{r4, pc}
   26768:	0002b8e8 	andeq	fp, r2, r8, ror #17
   2676c:	00029a68 	andeq	r9, r2, r8, ror #20

00026770 <TimerGetTime>:
   26770:	e92d4010 	push	{r4, lr}
   26774:	e2504000 	subs	r4, r0, #0
   26778:	0a000001 	beq	26784 <TimerGetTime+0x14>
   2677c:	e5940008 	ldr	r0, [r4, #8]
   26780:	e8bd8010 	pop	{r4, pc}
   26784:	e3a0206b 	mov	r2, #107	; 0x6b
   26788:	e59f100c 	ldr	r1, [pc, #12]	; 2679c <TimerGetTime+0x2c>
   2678c:	e59f000c 	ldr	r0, [pc, #12]	; 267a0 <TimerGetTime+0x30>
   26790:	ebfffac6 	bl	252b0 <assertion_failed>
   26794:	e5940008 	ldr	r0, [r4, #8]
   26798:	e8bd8010 	pop	{r4, pc}
   2679c:	0002b8e8 	andeq	fp, r2, r8, ror #17
   267a0:	00029a68 	andeq	r9, r2, r8, ror #20

000267a4 <TimerGetTimeString>:
   267a4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   267a8:	e2504000 	subs	r4, r0, #0
   267ac:	e24dd00c 	sub	sp, sp, #12
   267b0:	0a000028 	beq	26858 <TimerGetTimeString+0xb4>
   267b4:	ebffff69 	bl	26560 <EnterCritical>
   267b8:	e5949008 	ldr	r9, [r4, #8]
   267bc:	e5945004 	ldr	r5, [r4, #4]
   267c0:	ebffff75 	bl	2659c <LeaveCritical>
   267c4:	e3550000 	cmp	r5, #0
   267c8:	0a00001f 	beq	2684c <TimerGetTimeString+0xa8>
   267cc:	e59f70ac 	ldr	r7, [pc, #172]	; 26880 <TimerGetTimeString+0xdc>
   267d0:	e3a0000c 	mov	r0, #12
   267d4:	e0823997 	umull	r3, r2, r7, r9
   267d8:	e1a082a2 	lsr	r8, r2, #5
   267dc:	e1a02008 	mov	r2, r8
   267e0:	e0873897 	umull	r3, r7, r7, r8
   267e4:	e1a072a7 	lsr	r7, r7, #5
   267e8:	e0677207 	rsb	r7, r7, r7, lsl #4
   267ec:	e0427107 	sub	r7, r2, r7, lsl #2
   267f0:	ebfff9ce 	bl	24f30 <malloc>
   267f4:	e59f4088 	ldr	r4, [pc, #136]	; 26884 <TimerGetTimeString+0xe0>
   267f8:	e59f6088 	ldr	r6, [pc, #136]	; 26888 <TimerGetTimeString+0xe4>
   267fc:	e0843594 	umull	r3, r4, r4, r5
   26800:	e0863996 	umull	r3, r6, r6, r9
   26804:	e1a042a4 	lsr	r4, r4, #5
   26808:	e0844104 	add	r4, r4, r4, lsl #2
   2680c:	e0844104 	add	r4, r4, r4, lsl #2
   26810:	e0688208 	rsb	r8, r8, r8, lsl #4
   26814:	e0454104 	sub	r4, r5, r4, lsl #2
   26818:	e2505000 	subs	r5, r0, #0
   2681c:	e0498108 	sub	r8, r9, r8, lsl #2
   26820:	e1a065a6 	lsr	r6, r6, #11
   26824:	0a000010 	beq	2686c <TimerGetTimeString+0xc8>
   26828:	e1a00005 	mov	r0, r5
   2682c:	ebffe3b5 	bl	1f708 <String>
   26830:	e58d4004 	str	r4, [sp, #4]
   26834:	e58d8000 	str	r8, [sp]
   26838:	e1a03007 	mov	r3, r7
   2683c:	e1a02006 	mov	r2, r6
   26840:	e59f1044 	ldr	r1, [pc, #68]	; 2688c <TimerGetTimeString+0xe8>
   26844:	e1a00005 	mov	r0, r5
   26848:	ebffe66d 	bl	20204 <StringFormat>
   2684c:	e1a00005 	mov	r0, r5
   26850:	e28dd00c 	add	sp, sp, #12
   26854:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   26858:	e3a02072 	mov	r2, #114	; 0x72
   2685c:	e59f102c 	ldr	r1, [pc, #44]	; 26890 <TimerGetTimeString+0xec>
   26860:	e59f002c 	ldr	r0, [pc, #44]	; 26894 <TimerGetTimeString+0xf0>
   26864:	ebfffa91 	bl	252b0 <assertion_failed>
   26868:	eaffffd1 	b	267b4 <TimerGetTimeString+0x10>
   2686c:	e3a0208c 	mov	r2, #140	; 0x8c
   26870:	e59f1018 	ldr	r1, [pc, #24]	; 26890 <TimerGetTimeString+0xec>
   26874:	e59f001c 	ldr	r0, [pc, #28]	; 26898 <TimerGetTimeString+0xf4>
   26878:	ebfffa8c 	bl	252b0 <assertion_failed>
   2687c:	eaffffe9 	b	26828 <TimerGetTimeString+0x84>
   26880:	88888889 	stmhi	r8, {r0, r3, r7, fp, pc}
   26884:	51eb851f 	mvnpl	r8, pc, lsl r5
   26888:	91a2b3c5 			; <UNDEFINED> instruction: 0x91a2b3c5
   2688c:	0002b8f0 	strdeq	fp, [r2], -r0
   26890:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26894:	00029a68 	andeq	r9, r2, r8, ror #20
   26898:	0002a204 	andeq	sl, r2, r4, lsl #4

0002689c <TimerStartKernelTimer>:
   2689c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   268a0:	e2506000 	subs	r6, r0, #0
   268a4:	e1a08001 	mov	r8, r1
   268a8:	e1a07002 	mov	r7, r2
   268ac:	e1a09003 	mov	r9, r3
   268b0:	0a000021 	beq	2693c <TimerStartKernelTimer+0xa0>
   268b4:	ebffff29 	bl	26560 <EnterCritical>
   268b8:	e3a00000 	mov	r0, #0
   268bc:	ea000002 	b	268cc <TimerStartKernelTimer+0x30>
   268c0:	e3540014 	cmp	r4, #20
   268c4:	e1a00004 	mov	r0, r4
   268c8:	0a000012 	beq	26918 <TimerStartKernelTimer+0x7c>
   268cc:	e1a05200 	lsl	r5, r0, #4
   268d0:	e0863005 	add	r3, r6, r5
   268d4:	e593300c 	ldr	r3, [r3, #12]
   268d8:	e2804001 	add	r4, r0, #1
   268dc:	e3530000 	cmp	r3, #0
   268e0:	1afffff6 	bne	268c0 <TimerStartKernelTimer+0x24>
   268e4:	e3570000 	cmp	r7, #0
   268e8:	0a000018 	beq	26950 <TimerStartKernelTimer+0xb4>
   268ec:	e0865005 	add	r5, r6, r5
   268f0:	e585700c 	str	r7, [r5, #12]
   268f4:	e5963004 	ldr	r3, [r6, #4]
   268f8:	e0838008 	add	r8, r3, r8
   268fc:	e59d3020 	ldr	r3, [sp, #32]
   26900:	e5858010 	str	r8, [r5, #16]
   26904:	e5859014 	str	r9, [r5, #20]
   26908:	e5853018 	str	r3, [r5, #24]
   2690c:	ebffff22 	bl	2659c <LeaveCritical>
   26910:	e1a00004 	mov	r0, r4
   26914:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26918:	e3a04000 	mov	r4, #0
   2691c:	ebffff1e 	bl	2659c <LeaveCritical>
   26920:	ebfffb05 	bl	2553c <LoggerGet>
   26924:	e59f3038 	ldr	r3, [pc, #56]	; 26964 <TimerStartKernelTimer+0xc8>
   26928:	e3a02000 	mov	r2, #0
   2692c:	e59f1034 	ldr	r1, [pc, #52]	; 26968 <TimerStartKernelTimer+0xcc>
   26930:	ebfffb75 	bl	2570c <LoggerWrite>
   26934:	e1a00004 	mov	r0, r4
   26938:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2693c:	e3a02096 	mov	r2, #150	; 0x96
   26940:	e59f1024 	ldr	r1, [pc, #36]	; 2696c <TimerStartKernelTimer+0xd0>
   26944:	e59f0024 	ldr	r0, [pc, #36]	; 26970 <TimerStartKernelTimer+0xd4>
   26948:	ebfffa58 	bl	252b0 <assertion_failed>
   2694c:	eaffffd8 	b	268b4 <TimerStartKernelTimer+0x18>
   26950:	e3a020ac 	mov	r2, #172	; 0xac
   26954:	e59f1010 	ldr	r1, [pc, #16]	; 2696c <TimerStartKernelTimer+0xd0>
   26958:	e59f0014 	ldr	r0, [pc, #20]	; 26974 <TimerStartKernelTimer+0xd8>
   2695c:	ebfffa53 	bl	252b0 <assertion_failed>
   26960:	eaffffe1 	b	268ec <TimerStartKernelTimer+0x50>
   26964:	0002b918 	andeq	fp, r2, r8, lsl r9
   26968:	0002b940 	andeq	fp, r2, r0, asr #18
   2696c:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26970:	00029a68 	andeq	r9, r2, r8, ror #20
   26974:	0002b908 	andeq	fp, r2, r8, lsl #18

00026978 <TimerCancelKernelTimer>:
   26978:	e92d4070 	push	{r4, r5, r6, lr}
   2697c:	e2505000 	subs	r5, r0, #0
   26980:	e1a04001 	mov	r4, r1
   26984:	0a00000b 	beq	269b8 <TimerCancelKernelTimer+0x40>
   26988:	e2444001 	sub	r4, r4, #1
   2698c:	e3540013 	cmp	r4, #19
   26990:	8a000003 	bhi	269a4 <TimerCancelKernelTimer+0x2c>
   26994:	e3a03000 	mov	r3, #0
   26998:	e0854204 	add	r4, r5, r4, lsl #4
   2699c:	e584300c 	str	r3, [r4, #12]
   269a0:	e8bd8070 	pop	{r4, r5, r6, pc}
   269a4:	e3a020bb 	mov	r2, #187	; 0xbb
   269a8:	e59f101c 	ldr	r1, [pc, #28]	; 269cc <TimerCancelKernelTimer+0x54>
   269ac:	e59f001c 	ldr	r0, [pc, #28]	; 269d0 <TimerCancelKernelTimer+0x58>
   269b0:	ebfffa3e 	bl	252b0 <assertion_failed>
   269b4:	eafffff6 	b	26994 <TimerCancelKernelTimer+0x1c>
   269b8:	e3a020b9 	mov	r2, #185	; 0xb9
   269bc:	e59f1008 	ldr	r1, [pc, #8]	; 269cc <TimerCancelKernelTimer+0x54>
   269c0:	e59f000c 	ldr	r0, [pc, #12]	; 269d4 <TimerCancelKernelTimer+0x5c>
   269c4:	ebfffa39 	bl	252b0 <assertion_failed>
   269c8:	eaffffee 	b	26988 <TimerCancelKernelTimer+0x10>
   269cc:	0002b8e8 	andeq	fp, r2, r8, ror #17
   269d0:	0002b948 	andeq	fp, r2, r8, asr #18
   269d4:	00029a68 	andeq	r9, r2, r8, ror #20

000269d8 <TimerMsDelay>:
   269d8:	e92d4070 	push	{r4, r5, r6, lr}
   269dc:	e2505000 	subs	r5, r0, #0
   269e0:	e1a04001 	mov	r4, r1
   269e4:	0a000005 	beq	26a00 <TimerMsDelay+0x28>
   269e8:	e3540000 	cmp	r4, #0
   269ec:	08bd8070 	popeq	{r4, r5, r6, pc}
   269f0:	e595014c 	ldr	r0, [r5, #332]	; 0x14c
   269f4:	e0000490 	mul	r0, r0, r4
   269f8:	e8bd4070 	pop	{r4, r5, r6, lr}
   269fc:	ea000321 	b	27688 <DelayLoop>
   26a00:	e3a020c1 	mov	r2, #193	; 0xc1
   26a04:	e59f1010 	ldr	r1, [pc, #16]	; 26a1c <TimerMsDelay+0x44>
   26a08:	e59f0010 	ldr	r0, [pc, #16]	; 26a20 <TimerMsDelay+0x48>
   26a0c:	ebfffa27 	bl	252b0 <assertion_failed>
   26a10:	e3540000 	cmp	r4, #0
   26a14:	08bd8070 	popeq	{r4, r5, r6, pc}
   26a18:	eafffff4 	b	269f0 <TimerMsDelay+0x18>
   26a1c:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26a20:	00029a68 	andeq	r9, r2, r8, ror #20

00026a24 <TimerusDelay>:
   26a24:	e92d4070 	push	{r4, r5, r6, lr}
   26a28:	e2505000 	subs	r5, r0, #0
   26a2c:	e1a04001 	mov	r4, r1
   26a30:	0a000005 	beq	26a4c <TimerusDelay+0x28>
   26a34:	e3540000 	cmp	r4, #0
   26a38:	08bd8070 	popeq	{r4, r5, r6, pc}
   26a3c:	e5950150 	ldr	r0, [r5, #336]	; 0x150
   26a40:	e0000490 	mul	r0, r0, r4
   26a44:	e8bd4070 	pop	{r4, r5, r6, lr}
   26a48:	ea00030e 	b	27688 <DelayLoop>
   26a4c:	e3a020cd 	mov	r2, #205	; 0xcd
   26a50:	e59f1010 	ldr	r1, [pc, #16]	; 26a68 <TimerusDelay+0x44>
   26a54:	e59f0010 	ldr	r0, [pc, #16]	; 26a6c <TimerusDelay+0x48>
   26a58:	ebfffa14 	bl	252b0 <assertion_failed>
   26a5c:	e3540000 	cmp	r4, #0
   26a60:	08bd8070 	popeq	{r4, r5, r6, pc}
   26a64:	eafffff4 	b	26a3c <TimerusDelay+0x18>
   26a68:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26a6c:	00029a68 	andeq	r9, r2, r8, ror #20

00026a70 <TimerGet>:
   26a70:	e92d4010 	push	{r4, lr}
   26a74:	e59f4020 	ldr	r4, [pc, #32]	; 26a9c <TimerGet+0x2c>
   26a78:	e5940000 	ldr	r0, [r4]
   26a7c:	e3500000 	cmp	r0, #0
   26a80:	18bd8010 	popne	{r4, pc}
   26a84:	e3a020d9 	mov	r2, #217	; 0xd9
   26a88:	e59f1010 	ldr	r1, [pc, #16]	; 26aa0 <TimerGet+0x30>
   26a8c:	e59f0010 	ldr	r0, [pc, #16]	; 26aa4 <TimerGet+0x34>
   26a90:	ebfffa06 	bl	252b0 <assertion_failed>
   26a94:	e5940000 	ldr	r0, [r4]
   26a98:	e8bd8010 	pop	{r4, pc}
   26a9c:	0002d184 	andeq	sp, r2, r4, lsl #3
   26aa0:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26aa4:	0002ab84 	andeq	sl, r2, r4, lsl #23

00026aa8 <TimerSimpleMsDelay>:
   26aa8:	e3500000 	cmp	r0, #0
   26aac:	012fff1e 	bxeq	lr
   26ab0:	e0603280 	rsb	r3, r0, r0, lsl #5
   26ab4:	e0800103 	add	r0, r0, r3, lsl #2
   26ab8:	e1b00180 	lsls	r0, r0, #3
   26abc:	012fff1e 	bxeq	lr
   26ac0:	eafffece 	b	26600 <TimerSimpleusDelay.part.0>

00026ac4 <TimerSimpleusDelay>:
   26ac4:	e3500000 	cmp	r0, #0
   26ac8:	012fff1e 	bxeq	lr
   26acc:	eafffecb 	b	26600 <TimerSimpleusDelay.part.0>

00026ad0 <TimerPollKernelTimers>:
   26ad0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   26ad4:	e2506000 	subs	r6, r0, #0
   26ad8:	0a000015 	beq	26b34 <TimerPollKernelTimers+0x64>
   26adc:	e3a04000 	mov	r4, #0
   26ae0:	ebfffe9e 	bl	26560 <EnterCritical>
   26ae4:	e1a07004 	mov	r7, r4
   26ae8:	e0863204 	add	r3, r6, r4, lsl #4
   26aec:	e593500c 	ldr	r5, [r3, #12]
   26af0:	e2844001 	add	r4, r4, #1
   26af4:	e3550000 	cmp	r5, #0
   26af8:	0a000009 	beq	26b24 <TimerPollKernelTimers+0x54>
   26afc:	e5932010 	ldr	r2, [r3, #16]
   26b00:	e5961004 	ldr	r1, [r6, #4]
   26b04:	e0422001 	sub	r2, r2, r1
   26b08:	e3520000 	cmp	r2, #0
   26b0c:	ca000004 	bgt	26b24 <TimerPollKernelTimers+0x54>
   26b10:	e583700c 	str	r7, [r3, #12]
   26b14:	e5931014 	ldr	r1, [r3, #20]
   26b18:	e1a00004 	mov	r0, r4
   26b1c:	e5932018 	ldr	r2, [r3, #24]
   26b20:	e12fff35 	blx	r5
   26b24:	e3540014 	cmp	r4, #20
   26b28:	1affffee 	bne	26ae8 <TimerPollKernelTimers+0x18>
   26b2c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   26b30:	eafffe99 	b	2659c <LeaveCritical>
   26b34:	e3a020f9 	mov	r2, #249	; 0xf9
   26b38:	e59f1008 	ldr	r1, [pc, #8]	; 26b48 <TimerPollKernelTimers+0x78>
   26b3c:	e59f0008 	ldr	r0, [pc, #8]	; 26b4c <TimerPollKernelTimers+0x7c>
   26b40:	ebfff9da 	bl	252b0 <assertion_failed>
   26b44:	eaffffe4 	b	26adc <TimerPollKernelTimers+0xc>
   26b48:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26b4c:	00029a68 	andeq	r9, r2, r8, ror #20

00026b50 <TimerInterruptHandler>:
   26b50:	e92d4070 	push	{r4, r5, r6, lr}
   26b54:	e2504000 	subs	r4, r0, #0
   26b58:	0a000030 	beq	26c20 <TimerInterruptHandler+0xd0>
   26b5c:	e3a03000 	mov	r3, #0
   26b60:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26b64:	e59f00c8 	ldr	r0, [pc, #200]	; 26c34 <TimerInterruptHandler+0xe4>
   26b68:	eb000449 	bl	27c94 <read32>
   26b6c:	e3100008 	tst	r0, #8
   26b70:	0a00001e 	beq	26bf0 <TimerInterruptHandler+0xa0>
   26b74:	e59f00bc 	ldr	r0, [pc, #188]	; 26c38 <TimerInterruptHandler+0xe8>
   26b78:	eb000445 	bl	27c94 <read32>
   26b7c:	e2805c27 	add	r5, r0, #9984	; 0x2700
   26b80:	e2855010 	add	r5, r5, #16
   26b84:	e1a01005 	mov	r1, r5
   26b88:	e59f00a8 	ldr	r0, [pc, #168]	; 26c38 <TimerInterruptHandler+0xe8>
   26b8c:	eb000442 	bl	27c9c <write32>
   26b90:	e59f00a4 	ldr	r0, [pc, #164]	; 26c3c <TimerInterruptHandler+0xec>
   26b94:	eb00043e 	bl	27c94 <read32>
   26b98:	e1500005 	cmp	r0, r5
   26b9c:	8a000018 	bhi	26c04 <TimerInterruptHandler+0xb4>
   26ba0:	e3a01008 	mov	r1, #8
   26ba4:	e59f0088 	ldr	r0, [pc, #136]	; 26c34 <TimerInterruptHandler+0xe4>
   26ba8:	eb00043b 	bl	27c9c <write32>
   26bac:	e3a03000 	mov	r3, #0
   26bb0:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   26bb4:	e5942004 	ldr	r2, [r4, #4]
   26bb8:	e59f3080 	ldr	r3, [pc, #128]	; 26c40 <TimerInterruptHandler+0xf0>
   26bbc:	e2822001 	add	r2, r2, #1
   26bc0:	e0831293 	umull	r1, r3, r3, r2
   26bc4:	e1a032a3 	lsr	r3, r3, #5
   26bc8:	e0833103 	add	r3, r3, r3, lsl #2
   26bcc:	e0833103 	add	r3, r3, r3, lsl #2
   26bd0:	e1520103 	cmp	r2, r3, lsl #2
   26bd4:	e5842004 	str	r2, [r4, #4]
   26bd8:	05943008 	ldreq	r3, [r4, #8]
   26bdc:	e1a00004 	mov	r0, r4
   26be0:	02833001 	addeq	r3, r3, #1
   26be4:	05843008 	streq	r3, [r4, #8]
   26be8:	e8bd4070 	pop	{r4, r5, r6, lr}
   26bec:	eaffffb7 	b	26ad0 <TimerPollKernelTimers>
   26bf0:	e59f204c 	ldr	r2, [pc, #76]	; 26c44 <TimerInterruptHandler+0xf4>
   26bf4:	e59f104c 	ldr	r1, [pc, #76]	; 26c48 <TimerInterruptHandler+0xf8>
   26bf8:	e59f004c 	ldr	r0, [pc, #76]	; 26c4c <TimerInterruptHandler+0xfc>
   26bfc:	ebfff9ab 	bl	252b0 <assertion_failed>
   26c00:	eaffffdb 	b	26b74 <TimerInterruptHandler+0x24>
   26c04:	e59f0030 	ldr	r0, [pc, #48]	; 26c3c <TimerInterruptHandler+0xec>
   26c08:	eb000421 	bl	27c94 <read32>
   26c0c:	e2801c27 	add	r1, r0, #9984	; 0x2700
   26c10:	e2811010 	add	r1, r1, #16
   26c14:	e59f001c 	ldr	r0, [pc, #28]	; 26c38 <TimerInterruptHandler+0xe8>
   26c18:	eb00041f 	bl	27c9c <write32>
   26c1c:	eaffffdf 	b	26ba0 <TimerInterruptHandler+0x50>
   26c20:	e59f2028 	ldr	r2, [pc, #40]	; 26c50 <TimerInterruptHandler+0x100>
   26c24:	e59f101c 	ldr	r1, [pc, #28]	; 26c48 <TimerInterruptHandler+0xf8>
   26c28:	e59f0024 	ldr	r0, [pc, #36]	; 26c54 <TimerInterruptHandler+0x104>
   26c2c:	ebfff99f 	bl	252b0 <assertion_failed>
   26c30:	eaffffc9 	b	26b5c <TimerInterruptHandler+0xc>
   26c34:	20003000 	andcs	r3, r0, r0
   26c38:	20003018 	andcs	r3, r0, r8, lsl r0
   26c3c:	20003004 	andcs	r3, r0, r4
   26c40:	51eb851f 	mvnpl	r8, pc, lsl r5
   26c44:	00000117 	andeq	r0, r0, r7, lsl r1
   26c48:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26c4c:	0002b970 	andeq	fp, r2, r0, ror r9
   26c50:	00000113 	andeq	r0, r0, r3, lsl r1
   26c54:	00029a68 	andeq	r9, r2, r8, ror #20

00026c58 <TimerTuneMsDelay>:
   26c58:	e92d4070 	push	{r4, r5, r6, lr}
   26c5c:	e2504000 	subs	r4, r0, #0
   26c60:	0a000013 	beq	26cb4 <TimerTuneMsDelay+0x5c>
   26c64:	e3a01ffa 	mov	r1, #1000	; 0x3e8
   26c68:	e1a00004 	mov	r0, r4
   26c6c:	e5945004 	ldr	r5, [r4, #4]
   26c70:	ebffff58 	bl	269d8 <TimerMsDelay>
   26c74:	e5941004 	ldr	r1, [r4, #4]
   26c78:	e59f0058 	ldr	r0, [pc, #88]	; 26cd8 <TimerTuneMsDelay+0x80>
   26c7c:	e0411005 	sub	r1, r1, r5
   26c80:	ebfffa15 	bl	254dc <__aeabi_uidiv>
   26c84:	e594314c 	ldr	r3, [r4, #332]	; 0x14c
   26c88:	e59f204c 	ldr	r2, [pc, #76]	; 26cdc <TimerTuneMsDelay+0x84>
   26c8c:	e0000093 	mul	r0, r3, r0
   26c90:	e0803092 	umull	r3, r0, r2, r0
   26c94:	e59f2044 	ldr	r2, [pc, #68]	; 26ce0 <TimerTuneMsDelay+0x88>
   26c98:	e1a002a0 	lsr	r0, r0, #5
   26c9c:	e2803f7d 	add	r3, r0, #500	; 0x1f4
   26ca0:	e0832392 	umull	r2, r3, r2, r3
   26ca4:	e1a03323 	lsr	r3, r3, #6
   26ca8:	e584014c 	str	r0, [r4, #332]	; 0x14c
   26cac:	e5843150 	str	r3, [r4, #336]	; 0x150
   26cb0:	e8bd8070 	pop	{r4, r5, r6, pc}
   26cb4:	e59f2028 	ldr	r2, [pc, #40]	; 26ce4 <TimerTuneMsDelay+0x8c>
   26cb8:	e59f1028 	ldr	r1, [pc, #40]	; 26ce8 <TimerTuneMsDelay+0x90>
   26cbc:	e59f0028 	ldr	r0, [pc, #40]	; 26cec <TimerTuneMsDelay+0x94>
   26cc0:	ebfff97a 	bl	252b0 <assertion_failed>
   26cc4:	e3a02064 	mov	r2, #100	; 0x64
   26cc8:	e59f1018 	ldr	r1, [pc, #24]	; 26ce8 <TimerTuneMsDelay+0x90>
   26ccc:	e59f0018 	ldr	r0, [pc, #24]	; 26cec <TimerTuneMsDelay+0x94>
   26cd0:	ebfff976 	bl	252b0 <assertion_failed>
   26cd4:	eaffffe2 	b	26c64 <TimerTuneMsDelay+0xc>
   26cd8:	00002710 	andeq	r2, r0, r0, lsl r7
   26cdc:	51eb851f 	mvnpl	r8, pc, lsl r5
   26ce0:	10624dd3 	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   26ce4:	0000012f 	andeq	r0, r0, pc, lsr #2
   26ce8:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26cec:	00029a68 	andeq	r9, r2, r8, ror #20

00026cf0 <TimerInitialize>:
   26cf0:	e92d4070 	push	{r4, r5, r6, lr}
   26cf4:	e2504000 	subs	r4, r0, #0
   26cf8:	0a000016 	beq	26d58 <TimerInitialize+0x68>
   26cfc:	e5940000 	ldr	r0, [r4]
   26d00:	e3500000 	cmp	r0, #0
   26d04:	0a00001a 	beq	26d74 <TimerInitialize+0x84>
   26d08:	e1a03004 	mov	r3, r4
   26d0c:	e59f2078 	ldr	r2, [pc, #120]	; 26d8c <TimerInitialize+0x9c>
   26d10:	e3a01003 	mov	r1, #3
   26d14:	eb0002d6 	bl	27874 <InterruptSystemConnectIRQ>
   26d18:	e3a05000 	mov	r5, #0
   26d1c:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   26d20:	e59f1068 	ldr	r1, [pc, #104]	; 26d90 <TimerInitialize+0xa0>
   26d24:	e59f0068 	ldr	r0, [pc, #104]	; 26d94 <TimerInitialize+0xa4>
   26d28:	eb0003db 	bl	27c9c <write32>
   26d2c:	e59f0060 	ldr	r0, [pc, #96]	; 26d94 <TimerInitialize+0xa4>
   26d30:	eb0003d7 	bl	27c94 <read32>
   26d34:	e2801c27 	add	r1, r0, #9984	; 0x2700
   26d38:	e2811010 	add	r1, r1, #16
   26d3c:	e59f0054 	ldr	r0, [pc, #84]	; 26d98 <TimerInitialize+0xa8>
   26d40:	eb0003d5 	bl	27c9c <write32>
   26d44:	e1a00004 	mov	r0, r4
   26d48:	ebffffc2 	bl	26c58 <TimerTuneMsDelay>
   26d4c:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   26d50:	e3a00001 	mov	r0, #1
   26d54:	e8bd8070 	pop	{r4, r5, r6, pc}
   26d58:	e59f003c 	ldr	r0, [pc, #60]	; 26d9c <TimerInitialize+0xac>
   26d5c:	e3a02043 	mov	r2, #67	; 0x43
   26d60:	e59f1038 	ldr	r1, [pc, #56]	; 26da0 <TimerInitialize+0xb0>
   26d64:	ebfff951 	bl	252b0 <assertion_failed>
   26d68:	e5940000 	ldr	r0, [r4]
   26d6c:	e3500000 	cmp	r0, #0
   26d70:	1affffe4 	bne	26d08 <TimerInitialize+0x18>
   26d74:	e59f0028 	ldr	r0, [pc, #40]	; 26da4 <TimerInitialize+0xb4>
   26d78:	e3a02045 	mov	r2, #69	; 0x45
   26d7c:	e59f101c 	ldr	r1, [pc, #28]	; 26da0 <TimerInitialize+0xb0>
   26d80:	ebfff94a 	bl	252b0 <assertion_failed>
   26d84:	e5940000 	ldr	r0, [r4]
   26d88:	eaffffde 	b	26d08 <TimerInitialize+0x18>
   26d8c:	00026b50 	andeq	r6, r2, r0, asr fp
   26d90:	fe363c80 	cdp2	12, 3, cr3, cr6, cr0, {4}
   26d94:	20003004 	andcs	r3, r0, r4
   26d98:	20003018 	andcs	r3, r0, r8, lsl r0
   26d9c:	00029a68 	andeq	r9, r2, r8, ror #20
   26da0:	0002b8e8 	andeq	fp, r2, r8, ror #17
   26da4:	0002b994 	muleq	r2, r4, r9

00026da8 <MsDelay>:
   26da8:	e92d4010 	push	{r4, lr}
   26dac:	e1a04000 	mov	r4, r0
   26db0:	ebffff2e 	bl	26a70 <TimerGet>
   26db4:	e1a01004 	mov	r1, r4
   26db8:	e8bd4010 	pop	{r4, lr}
   26dbc:	eaffff05 	b	269d8 <TimerMsDelay>

00026dc0 <usDelay>:
   26dc0:	e92d4010 	push	{r4, lr}
   26dc4:	e1a04000 	mov	r4, r0
   26dc8:	ebffff28 	bl	26a70 <TimerGet>
   26dcc:	e1a01004 	mov	r1, r4
   26dd0:	e8bd4010 	pop	{r4, lr}
   26dd4:	eaffff12 	b	26a24 <TimerusDelay>

00026dd8 <StartKernelTimer>:
   26dd8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   26ddc:	e1a05001 	mov	r5, r1
   26de0:	e1a06002 	mov	r6, r2
   26de4:	e1a07003 	mov	r7, r3
   26de8:	e1a04000 	mov	r4, r0
   26dec:	e24dd00c 	sub	sp, sp, #12
   26df0:	ebffff1e 	bl	26a70 <TimerGet>
   26df4:	e58d7000 	str	r7, [sp]
   26df8:	e1a03006 	mov	r3, r6
   26dfc:	e1a02005 	mov	r2, r5
   26e00:	e1a01004 	mov	r1, r4
   26e04:	ebfffea4 	bl	2689c <TimerStartKernelTimer>
   26e08:	e28dd00c 	add	sp, sp, #12
   26e0c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00026e10 <CancelKernelTimer>:
   26e10:	e92d4010 	push	{r4, lr}
   26e14:	e1a04000 	mov	r4, r0
   26e18:	ebffff14 	bl	26a70 <TimerGet>
   26e1c:	e1a01004 	mov	r1, r4
   26e20:	e8bd4010 	pop	{r4, lr}
   26e24:	eafffed3 	b	26978 <TimerCancelKernelTimer>

00026e28 <ConnectInterrupt>:
   26e28:	e92d4070 	push	{r4, r5, r6, lr}
   26e2c:	e1a05001 	mov	r5, r1
   26e30:	e1a06002 	mov	r6, r2
   26e34:	e1a04000 	mov	r4, r0
   26e38:	eb0002f6 	bl	27a18 <InterruptSystemGet>
   26e3c:	e1a03006 	mov	r3, r6
   26e40:	e1a02005 	mov	r2, r5
   26e44:	e1a01004 	mov	r1, r4
   26e48:	e8bd4070 	pop	{r4, r5, r6, lr}
   26e4c:	ea000288 	b	27874 <InterruptSystemConnectIRQ>

00026e50 <SetPowerStateOn>:
   26e50:	e92d4010 	push	{r4, lr}
   26e54:	e24dd020 	sub	sp, sp, #32
   26e58:	e1a04000 	mov	r4, r0
   26e5c:	e28d0008 	add	r0, sp, #8
   26e60:	eb00012d 	bl	2731c <BcmPropertyTags>
   26e64:	e3a03008 	mov	r3, #8
   26e68:	e3a0c003 	mov	ip, #3
   26e6c:	e08d0003 	add	r0, sp, r3
   26e70:	e58d3000 	str	r3, [sp]
   26e74:	e28d200c 	add	r2, sp, #12
   26e78:	e3a03014 	mov	r3, #20
   26e7c:	e59f1048 	ldr	r1, [pc, #72]	; 26ecc <SetPowerStateOn+0x7c>
   26e80:	e58d4018 	str	r4, [sp, #24]
   26e84:	e58dc01c 	str	ip, [sp, #28]
   26e88:	eb000143 	bl	2739c <BcmPropertyTagsGetTag>
   26e8c:	e3500000 	cmp	r0, #0
   26e90:	0a000003 	beq	26ea4 <SetPowerStateOn+0x54>
   26e94:	e59d001c 	ldr	r0, [sp, #28]
   26e98:	e2004003 	and	r4, r0, #3
   26e9c:	e3540001 	cmp	r4, #1
   26ea0:	0a000004 	beq	26eb8 <SetPowerStateOn+0x68>
   26ea4:	e28d0008 	add	r0, sp, #8
   26ea8:	eb00012c 	bl	27360 <_BcmPropertyTags>
   26eac:	e3a00000 	mov	r0, #0
   26eb0:	e28dd020 	add	sp, sp, #32
   26eb4:	e8bd8010 	pop	{r4, pc}
   26eb8:	e28d0008 	add	r0, sp, #8
   26ebc:	eb000127 	bl	27360 <_BcmPropertyTags>
   26ec0:	e1a00004 	mov	r0, r4
   26ec4:	e28dd020 	add	sp, sp, #32
   26ec8:	e8bd8010 	pop	{r4, pc}
   26ecc:	00028001 	andeq	r8, r2, r1

00026ed0 <GetMACAddress>:
   26ed0:	e92d4030 	push	{r4, r5, lr}
   26ed4:	e24dd024 	sub	sp, sp, #36	; 0x24
   26ed8:	e1a05000 	mov	r5, r0
   26edc:	e28d0008 	add	r0, sp, #8
   26ee0:	eb00010d 	bl	2731c <BcmPropertyTags>
   26ee4:	e3a03000 	mov	r3, #0
   26ee8:	e28d0008 	add	r0, sp, #8
   26eec:	e58d3000 	str	r3, [sp]
   26ef0:	e28d200c 	add	r2, sp, #12
   26ef4:	e3a03014 	mov	r3, #20
   26ef8:	e59f1040 	ldr	r1, [pc, #64]	; 26f40 <GetMACAddress+0x70>
   26efc:	eb000126 	bl	2739c <BcmPropertyTagsGetTag>
   26f00:	e2504000 	subs	r4, r0, #0
   26f04:	0a000008 	beq	26f2c <GetMACAddress+0x5c>
   26f08:	e3a02006 	mov	r2, #6
   26f0c:	e28d1018 	add	r1, sp, #24
   26f10:	e1a00005 	mov	r0, r5
   26f14:	eb001322 	bl	2bba4 <memcpy>
   26f18:	e28d0008 	add	r0, sp, #8
   26f1c:	eb00010f 	bl	27360 <_BcmPropertyTags>
   26f20:	e3a00001 	mov	r0, #1
   26f24:	e28dd024 	add	sp, sp, #36	; 0x24
   26f28:	e8bd8030 	pop	{r4, r5, pc}
   26f2c:	e28d0008 	add	r0, sp, #8
   26f30:	eb00010a 	bl	27360 <_BcmPropertyTags>
   26f34:	e1a00004 	mov	r0, r4
   26f38:	e28dd024 	add	sp, sp, #36	; 0x24
   26f3c:	e8bd8030 	pop	{r4, r5, pc}
   26f40:	00010003 	andeq	r0, r1, r3

00026f44 <LogWrite>:
   26f44:	e92d000c 	push	{r2, r3}
   26f48:	e92d4030 	push	{r4, r5, lr}
   26f4c:	e1a05001 	mov	r5, r1
   26f50:	e1a04000 	mov	r4, r0
   26f54:	e24dd014 	sub	sp, sp, #20
   26f58:	e28d3024 	add	r3, sp, #36	; 0x24
   26f5c:	e58d300c 	str	r3, [sp, #12]
   26f60:	ebfff975 	bl	2553c <LoggerGet>
   26f64:	e59dc00c 	ldr	ip, [sp, #12]
   26f68:	e6ef2075 	uxtb	r2, r5
   26f6c:	e1a01004 	mov	r1, r4
   26f70:	e59d3020 	ldr	r3, [sp, #32]
   26f74:	e58dc000 	str	ip, [sp]
   26f78:	ebfff97d 	bl	25574 <LoggerWriteV>
   26f7c:	e28dd014 	add	sp, sp, #20
   26f80:	e8bd4030 	pop	{r4, r5, lr}
   26f84:	e28dd008 	add	sp, sp, #8
   26f88:	e12fff1e 	bx	lr

00026f8c <uspi_assertion_failed>:
   26f8c:	eafff8c7 	b	252b0 <assertion_failed>

00026f90 <DebugHexdump>:
   26f90:	eafff8e8 	b	25338 <debug_hexdump>

00026f94 <memcpyblk>:
   26f94:	e92d0079 	push	{r0, r3, r4, r5, r6}
   26f98:	e8b10078 	ldm	r1!, {r3, r4, r5, r6}
   26f9c:	e2522010 	subs	r2, r2, #16
   26fa0:	e8a00078 	stmia	r0!, {r3, r4, r5, r6}
   26fa4:	f5d1f040 	pld	[r1, #64]	; 0x40
   26fa8:	1afffffa 	bne	26f98 <memcpyblk+0x4>
   26fac:	e8bd0079 	pop	{r0, r3, r4, r5, r6}
   26fb0:	e12fff1e 	bx	lr

00026fb4 <BcmFrameBuffer>:
   26fb4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   26fb8:	e2506000 	subs	r6, r0, #0
   26fbc:	e24dd024 	sub	sp, sp, #36	; 0x24
   26fc0:	e1a04001 	mov	r4, r1
   26fc4:	e1a05002 	mov	r5, r2
   26fc8:	e1a07003 	mov	r7, r3
   26fcc:	0a00003a 	beq	270bc <BcmFrameBuffer+0x108>
   26fd0:	e3a01001 	mov	r1, #1
   26fd4:	e2860004 	add	r0, r6, #4
   26fd8:	eb0003ef 	bl	27f9c <BcmMailBox>
   26fdc:	e3550000 	cmp	r5, #0
   26fe0:	13540000 	cmpne	r4, #0
   26fe4:	0a00001a 	beq	27054 <BcmFrameBuffer+0xa0>
   26fe8:	e3570008 	cmp	r7, #8
   26fec:	0a00000f 	beq	27030 <BcmFrameBuffer+0x7c>
   26ff0:	e3a00028 	mov	r0, #40	; 0x28
   26ff4:	ebfff7cd 	bl	24f30 <malloc>
   26ff8:	e5860000 	str	r0, [r6]
   26ffc:	e3a03000 	mov	r3, #0
   27000:	e5804000 	str	r4, [r0]
   27004:	e5805004 	str	r5, [r0, #4]
   27008:	e5804008 	str	r4, [r0, #8]
   2700c:	e580500c 	str	r5, [r0, #12]
   27010:	e5803010 	str	r3, [r0, #16]
   27014:	e5807014 	str	r7, [r0, #20]
   27018:	e5803018 	str	r3, [r0, #24]
   2701c:	e580301c 	str	r3, [r0, #28]
   27020:	e5803020 	str	r3, [r0, #32]
   27024:	e5803024 	str	r3, [r0, #36]	; 0x24
   27028:	e28dd024 	add	sp, sp, #36	; 0x24
   2702c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   27030:	e3a00f8a 	mov	r0, #552	; 0x228
   27034:	ebfff7bd 	bl	24f30 <malloc>
   27038:	e3a02c02 	mov	r2, #512	; 0x200
   2703c:	e5860000 	str	r0, [r6]
   27040:	e3a01000 	mov	r1, #0
   27044:	e2800028 	add	r0, r0, #40	; 0x28
   27048:	ebffb619 	bl	148b4 <memset>
   2704c:	e5960000 	ldr	r0, [r6]
   27050:	eaffffe9 	b	26ffc <BcmFrameBuffer+0x48>
   27054:	e28d0008 	add	r0, sp, #8
   27058:	eb0000af 	bl	2731c <BcmPropertyTags>
   2705c:	e3a03000 	mov	r3, #0
   27060:	e28d0008 	add	r0, sp, #8
   27064:	e58d3000 	str	r3, [sp]
   27068:	e28d200c 	add	r2, sp, #12
   2706c:	e3a03014 	mov	r3, #20
   27070:	e59f1058 	ldr	r1, [pc, #88]	; 270d0 <BcmFrameBuffer+0x11c>
   27074:	eb0000c8 	bl	2739c <BcmPropertyTagsGetTag>
   27078:	e3500000 	cmp	r0, #0
   2707c:	0a000009 	beq	270a8 <BcmFrameBuffer+0xf4>
   27080:	e1cd41d8 	ldrd	r4, [sp, #24]
   27084:	e2443d0a 	sub	r3, r4, #640	; 0x280
   27088:	e3530c05 	cmp	r3, #1280	; 0x500
   2708c:	8a000005 	bhi	270a8 <BcmFrameBuffer+0xf4>
   27090:	e59f303c 	ldr	r3, [pc, #60]	; 270d4 <BcmFrameBuffer+0x120>
   27094:	e2452e1e 	sub	r2, r5, #480	; 0x1e0
   27098:	e1520003 	cmp	r2, r3
   2709c:	23a05e1e 	movcs	r5, #480	; 0x1e0
   270a0:	23a04d0a 	movcs	r4, #640	; 0x280
   270a4:	ea000001 	b	270b0 <BcmFrameBuffer+0xfc>
   270a8:	e3a05e1e 	mov	r5, #480	; 0x1e0
   270ac:	e3a04d0a 	mov	r4, #640	; 0x280
   270b0:	e28d0008 	add	r0, sp, #8
   270b4:	eb0000a9 	bl	27360 <_BcmPropertyTags>
   270b8:	eaffffca 	b	26fe8 <BcmFrameBuffer+0x34>
   270bc:	e3a0201e 	mov	r2, #30
   270c0:	e59f1010 	ldr	r1, [pc, #16]	; 270d8 <BcmFrameBuffer+0x124>
   270c4:	e59f0010 	ldr	r0, [pc, #16]	; 270dc <BcmFrameBuffer+0x128>
   270c8:	ebfff878 	bl	252b0 <assertion_failed>
   270cc:	eaffffbf 	b	26fd0 <BcmFrameBuffer+0x1c>
   270d0:	00040003 	andeq	r0, r4, r3
   270d4:	00000259 	andeq	r0, r0, r9, asr r2
   270d8:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   270dc:	00029a68 	andeq	r9, r2, r8, ror #20

000270e0 <_BcmFrameBuffer>:
   270e0:	e92d4010 	push	{r4, lr}
   270e4:	e2504000 	subs	r4, r0, #0
   270e8:	0a000006 	beq	27108 <_BcmFrameBuffer+0x28>
   270ec:	e5940000 	ldr	r0, [r4]
   270f0:	ebfff7f4 	bl	250c8 <free>
   270f4:	e1a00004 	mov	r0, r4
   270f8:	e8bd4010 	pop	{r4, lr}
   270fc:	e3a03000 	mov	r3, #0
   27100:	e4803004 	str	r3, [r0], #4
   27104:	ea0003b2 	b	27fd4 <_BcmMailBox>
   27108:	e3a0205b 	mov	r2, #91	; 0x5b
   2710c:	e59f1008 	ldr	r1, [pc, #8]	; 2711c <_BcmFrameBuffer+0x3c>
   27110:	e59f0008 	ldr	r0, [pc, #8]	; 27120 <_BcmFrameBuffer+0x40>
   27114:	ebfff865 	bl	252b0 <assertion_failed>
   27118:	eafffff3 	b	270ec <_BcmFrameBuffer+0xc>
   2711c:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   27120:	00029a68 	andeq	r9, r2, r8, ror #20

00027124 <BcmFrameBufferSetPalette>:
   27124:	e92d4070 	push	{r4, r5, r6, lr}
   27128:	e2505000 	subs	r5, r0, #0
   2712c:	e1a04001 	mov	r4, r1
   27130:	e1a06002 	mov	r6, r2
   27134:	0a000006 	beq	27154 <BcmFrameBufferSetPalette+0x30>
   27138:	e5953000 	ldr	r3, [r5]
   2713c:	e5932014 	ldr	r2, [r3, #20]
   27140:	e3520008 	cmp	r2, #8
   27144:	02844014 	addeq	r4, r4, #20
   27148:	01a04084 	lsleq	r4, r4, #1
   2714c:	018360b4 	strheq	r6, [r3, r4]
   27150:	e8bd8070 	pop	{r4, r5, r6, pc}
   27154:	e3a02065 	mov	r2, #101	; 0x65
   27158:	e59f1008 	ldr	r1, [pc, #8]	; 27168 <BcmFrameBufferSetPalette+0x44>
   2715c:	e59f0008 	ldr	r0, [pc, #8]	; 2716c <BcmFrameBufferSetPalette+0x48>
   27160:	ebfff852 	bl	252b0 <assertion_failed>
   27164:	eafffff3 	b	27138 <BcmFrameBufferSetPalette+0x14>
   27168:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   2716c:	00029a68 	andeq	r9, r2, r8, ror #20

00027170 <BcmFrameBufferInitialize>:
   27170:	e92d4070 	push	{r4, r5, r6, lr}
   27174:	e2505000 	subs	r5, r0, #0
   27178:	0a000011 	beq	271c4 <BcmFrameBufferInitialize+0x54>
   2717c:	e3a04000 	mov	r4, #0
   27180:	ee074f1a 	mcr	15, 0, r4, cr7, cr10, {0}
   27184:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   27188:	e1a00005 	mov	r0, r5
   2718c:	e4901004 	ldr	r1, [r0], #4
   27190:	e3c11103 	bic	r1, r1, #-1073741824	; 0xc0000000
   27194:	e3811101 	orr	r1, r1, #1073741824	; 0x40000000
   27198:	eb0003e5 	bl	28134 <BcmMailBoxWriteRead>
   2719c:	ee074f16 	mcr	15, 0, r4, cr7, cr6, {0}
   271a0:	e1500004 	cmp	r0, r4
   271a4:	1a000004 	bne	271bc <BcmFrameBufferInitialize+0x4c>
   271a8:	e5953000 	ldr	r3, [r5]
   271ac:	e5930020 	ldr	r0, [r3, #32]
   271b0:	e0500004 	subs	r0, r0, r4
   271b4:	13a00001 	movne	r0, #1
   271b8:	e8bd8070 	pop	{r4, r5, r6, pc}
   271bc:	e1a00004 	mov	r0, r4
   271c0:	e8bd8070 	pop	{r4, r5, r6, pc}
   271c4:	e3a0206f 	mov	r2, #111	; 0x6f
   271c8:	e59f1008 	ldr	r1, [pc, #8]	; 271d8 <BcmFrameBufferInitialize+0x68>
   271cc:	e59f0008 	ldr	r0, [pc, #8]	; 271dc <BcmFrameBufferInitialize+0x6c>
   271d0:	ebfff836 	bl	252b0 <assertion_failed>
   271d4:	eaffffe8 	b	2717c <BcmFrameBufferInitialize+0xc>
   271d8:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   271dc:	00029a68 	andeq	r9, r2, r8, ror #20

000271e0 <BcmFrameBufferGetWidth>:
   271e0:	e92d4010 	push	{r4, lr}
   271e4:	e2504000 	subs	r4, r0, #0
   271e8:	0a000002 	beq	271f8 <BcmFrameBufferGetWidth+0x18>
   271ec:	e5943000 	ldr	r3, [r4]
   271f0:	e5930000 	ldr	r0, [r3]
   271f4:	e8bd8010 	pop	{r4, pc}
   271f8:	e3a02085 	mov	r2, #133	; 0x85
   271fc:	e59f1008 	ldr	r1, [pc, #8]	; 2720c <BcmFrameBufferGetWidth+0x2c>
   27200:	e59f0008 	ldr	r0, [pc, #8]	; 27210 <BcmFrameBufferGetWidth+0x30>
   27204:	ebfff829 	bl	252b0 <assertion_failed>
   27208:	eafffff7 	b	271ec <BcmFrameBufferGetWidth+0xc>
   2720c:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   27210:	00029a68 	andeq	r9, r2, r8, ror #20

00027214 <BcmFrameBufferGetHeight>:
   27214:	e92d4010 	push	{r4, lr}
   27218:	e2504000 	subs	r4, r0, #0
   2721c:	0a000002 	beq	2722c <BcmFrameBufferGetHeight+0x18>
   27220:	e5943000 	ldr	r3, [r4]
   27224:	e5930004 	ldr	r0, [r3, #4]
   27228:	e8bd8010 	pop	{r4, pc}
   2722c:	e3a0208b 	mov	r2, #139	; 0x8b
   27230:	e59f1008 	ldr	r1, [pc, #8]	; 27240 <BcmFrameBufferGetHeight+0x2c>
   27234:	e59f0008 	ldr	r0, [pc, #8]	; 27244 <BcmFrameBufferGetHeight+0x30>
   27238:	ebfff81c 	bl	252b0 <assertion_failed>
   2723c:	eafffff7 	b	27220 <BcmFrameBufferGetHeight+0xc>
   27240:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   27244:	00029a68 	andeq	r9, r2, r8, ror #20

00027248 <BcmFrameBufferGetPitch>:
   27248:	e92d4010 	push	{r4, lr}
   2724c:	e2504000 	subs	r4, r0, #0
   27250:	0a000002 	beq	27260 <BcmFrameBufferGetPitch+0x18>
   27254:	e5943000 	ldr	r3, [r4]
   27258:	e5930010 	ldr	r0, [r3, #16]
   2725c:	e8bd8010 	pop	{r4, pc}
   27260:	e3a02091 	mov	r2, #145	; 0x91
   27264:	e59f1008 	ldr	r1, [pc, #8]	; 27274 <BcmFrameBufferGetPitch+0x2c>
   27268:	e59f0008 	ldr	r0, [pc, #8]	; 27278 <BcmFrameBufferGetPitch+0x30>
   2726c:	ebfff80f 	bl	252b0 <assertion_failed>
   27270:	eafffff7 	b	27254 <BcmFrameBufferGetPitch+0xc>
   27274:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   27278:	00029a68 	andeq	r9, r2, r8, ror #20

0002727c <BcmFrameBufferGetDepth>:
   2727c:	e92d4010 	push	{r4, lr}
   27280:	e2504000 	subs	r4, r0, #0
   27284:	0a000002 	beq	27294 <BcmFrameBufferGetDepth+0x18>
   27288:	e5943000 	ldr	r3, [r4]
   2728c:	e5930014 	ldr	r0, [r3, #20]
   27290:	e8bd8010 	pop	{r4, pc}
   27294:	e3a02097 	mov	r2, #151	; 0x97
   27298:	e59f1008 	ldr	r1, [pc, #8]	; 272a8 <BcmFrameBufferGetDepth+0x2c>
   2729c:	e59f0008 	ldr	r0, [pc, #8]	; 272ac <BcmFrameBufferGetDepth+0x30>
   272a0:	ebfff802 	bl	252b0 <assertion_failed>
   272a4:	eafffff7 	b	27288 <BcmFrameBufferGetDepth+0xc>
   272a8:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   272ac:	00029a68 	andeq	r9, r2, r8, ror #20

000272b0 <BcmFrameBufferGetBuffer>:
   272b0:	e92d4010 	push	{r4, lr}
   272b4:	e2504000 	subs	r4, r0, #0
   272b8:	0a000003 	beq	272cc <BcmFrameBufferGetBuffer+0x1c>
   272bc:	e5943000 	ldr	r3, [r4]
   272c0:	e5930020 	ldr	r0, [r3, #32]
   272c4:	e3c00103 	bic	r0, r0, #-1073741824	; 0xc0000000
   272c8:	e8bd8010 	pop	{r4, pc}
   272cc:	e3a0209d 	mov	r2, #157	; 0x9d
   272d0:	e59f1008 	ldr	r1, [pc, #8]	; 272e0 <BcmFrameBufferGetBuffer+0x30>
   272d4:	e59f0008 	ldr	r0, [pc, #8]	; 272e4 <BcmFrameBufferGetBuffer+0x34>
   272d8:	ebfff7f4 	bl	252b0 <assertion_failed>
   272dc:	eafffff6 	b	272bc <BcmFrameBufferGetBuffer+0xc>
   272e0:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   272e4:	00029a68 	andeq	r9, r2, r8, ror #20

000272e8 <BcmFrameBufferGetSize>:
   272e8:	e92d4010 	push	{r4, lr}
   272ec:	e2504000 	subs	r4, r0, #0
   272f0:	0a000002 	beq	27300 <BcmFrameBufferGetSize+0x18>
   272f4:	e5943000 	ldr	r3, [r4]
   272f8:	e5930024 	ldr	r0, [r3, #36]	; 0x24
   272fc:	e8bd8010 	pop	{r4, pc}
   27300:	e3a020a3 	mov	r2, #163	; 0xa3
   27304:	e59f1008 	ldr	r1, [pc, #8]	; 27314 <BcmFrameBufferGetSize+0x2c>
   27308:	e59f0008 	ldr	r0, [pc, #8]	; 27318 <BcmFrameBufferGetSize+0x30>
   2730c:	ebfff7e7 	bl	252b0 <assertion_failed>
   27310:	eafffff7 	b	272f4 <BcmFrameBufferGetSize+0xc>
   27314:	0002b9b4 			; <UNDEFINED> instruction: 0x0002b9b4
   27318:	00029a68 	andeq	r9, r2, r8, ror #20

0002731c <BcmPropertyTags>:
   2731c:	e92d4010 	push	{r4, lr}
   27320:	e2504000 	subs	r4, r0, #0
   27324:	0a000003 	beq	27338 <BcmPropertyTags+0x1c>
   27328:	e1a00004 	mov	r0, r4
   2732c:	e8bd4010 	pop	{r4, lr}
   27330:	e3a01008 	mov	r1, #8
   27334:	ea000318 	b	27f9c <BcmMailBox>
   27338:	e59f1018 	ldr	r1, [pc, #24]	; 27358 <BcmPropertyTags+0x3c>
   2733c:	e59f0018 	ldr	r0, [pc, #24]	; 2735c <BcmPropertyTags+0x40>
   27340:	e3a02029 	mov	r2, #41	; 0x29
   27344:	ebfff7d9 	bl	252b0 <assertion_failed>
   27348:	e1a00004 	mov	r0, r4
   2734c:	e8bd4010 	pop	{r4, lr}
   27350:	e3a01008 	mov	r1, #8
   27354:	ea000310 	b	27f9c <BcmMailBox>
   27358:	0002b9c8 	andeq	fp, r2, r8, asr #19
   2735c:	00029a68 	andeq	r9, r2, r8, ror #20

00027360 <_BcmPropertyTags>:
   27360:	e92d4010 	push	{r4, lr}
   27364:	e2504000 	subs	r4, r0, #0
   27368:	0a000002 	beq	27378 <_BcmPropertyTags+0x18>
   2736c:	e1a00004 	mov	r0, r4
   27370:	e8bd4010 	pop	{r4, lr}
   27374:	ea000316 	b	27fd4 <_BcmMailBox>
   27378:	e59f0014 	ldr	r0, [pc, #20]	; 27394 <_BcmPropertyTags+0x34>
   2737c:	e3a02030 	mov	r2, #48	; 0x30
   27380:	e59f1010 	ldr	r1, [pc, #16]	; 27398 <_BcmPropertyTags+0x38>
   27384:	ebfff7c9 	bl	252b0 <assertion_failed>
   27388:	e1a00004 	mov	r0, r4
   2738c:	e8bd4010 	pop	{r4, lr}
   27390:	ea00030f 	b	27fd4 <_BcmMailBox>
   27394:	00029a68 	andeq	r9, r2, r8, ror #20
   27398:	0002b9c8 	andeq	fp, r2, r8, asr #19

0002739c <BcmPropertyTagsGetTag>:
   2739c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   273a0:	e250a000 	subs	sl, r0, #0
   273a4:	e28db020 	add	fp, sp, #32
   273a8:	e24dd00c 	sub	sp, sp, #12
   273ac:	e1a08002 	mov	r8, r2
   273b0:	e50b1028 	str	r1, [fp, #-40]	; 0xffffffd8
   273b4:	e1a06003 	mov	r6, r3
   273b8:	0a000043 	beq	274cc <BcmPropertyTagsGetTag+0x130>
   273bc:	e3580000 	cmp	r8, #0
   273c0:	0a000047 	beq	274e4 <BcmPropertyTagsGetTag+0x148>
   273c4:	e356000f 	cmp	r6, #15
   273c8:	9a00003a 	bls	274b8 <BcmPropertyTagsGetTag+0x11c>
   273cc:	e286300c 	add	r3, r6, #12
   273d0:	e3130003 	tst	r3, #3
   273d4:	1a000030 	bne	2749c <BcmPropertyTagsGetTag+0x100>
   273d8:	e3a07000 	mov	r7, #0
   273dc:	e2862022 	add	r2, r6, #34	; 0x22
   273e0:	e3c22007 	bic	r2, r2, #7
   273e4:	e04dd002 	sub	sp, sp, r2
   273e8:	e28d400f 	add	r4, sp, #15
   273ec:	e3c4500f 	bic	r5, r4, #15
   273f0:	e2859008 	add	r9, r5, #8
   273f4:	e1a02006 	mov	r2, r6
   273f8:	e1a01008 	mov	r1, r8
   273fc:	e8850088 	stm	r5, {r3, r7}
   27400:	e1a00009 	mov	r0, r9
   27404:	eb0011e6 	bl	2bba4 <memcpy>
   27408:	e59b3004 	ldr	r3, [fp, #4]
   2740c:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
   27410:	e3c33102 	bic	r3, r3, #-2147483648	; 0x80000000
   27414:	e246200c 	sub	r2, r6, #12
   27418:	e5851008 	str	r1, [r5, #8]
   2741c:	e1c520fc 	strd	r2, [r5, #12]
   27420:	e7897006 	str	r7, [r9, r6]
   27424:	ee077f1a 	mcr	15, 0, r7, cr7, cr10, {0}
   27428:	ee077f9a 	mcr	15, 0, r7, cr7, cr10, {4}
   2742c:	e3c4413f 	bic	r4, r4, #-1073741809	; 0xc000000f
   27430:	e3844101 	orr	r4, r4, #1073741824	; 0x40000000
   27434:	e1a0000a 	mov	r0, sl
   27438:	e1a01004 	mov	r1, r4
   2743c:	eb00033c 	bl	28134 <BcmMailBoxWriteRead>
   27440:	e1500004 	cmp	r0, r4
   27444:	0a000002 	beq	27454 <BcmPropertyTagsGetTag+0xb8>
   27448:	e3a00000 	mov	r0, #0
   2744c:	e24bd020 	sub	sp, fp, #32
   27450:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27454:	ee077f16 	mcr	15, 0, r7, cr7, cr6, {0}
   27458:	ee077f9a 	mcr	15, 0, r7, cr7, cr10, {4}
   2745c:	e5953004 	ldr	r3, [r5, #4]
   27460:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
   27464:	1afffff7 	bne	27448 <BcmPropertyTagsGetTag+0xac>
   27468:	e5953010 	ldr	r3, [r5, #16]
   2746c:	e3530000 	cmp	r3, #0
   27470:	aafffff4 	bge	27448 <BcmPropertyTagsGetTag+0xac>
   27474:	e3c33102 	bic	r3, r3, #-2147483648	; 0x80000000
   27478:	e3530000 	cmp	r3, #0
   2747c:	e5853010 	str	r3, [r5, #16]
   27480:	0afffff0 	beq	27448 <BcmPropertyTagsGetTag+0xac>
   27484:	e1a02006 	mov	r2, r6
   27488:	e1a01009 	mov	r1, r9
   2748c:	e1a00008 	mov	r0, r8
   27490:	eb0011c3 	bl	2bba4 <memcpy>
   27494:	e3a00001 	mov	r0, #1
   27498:	eaffffeb 	b	2744c <BcmPropertyTagsGetTag+0xb0>
   2749c:	e3a0203d 	mov	r2, #61	; 0x3d
   274a0:	e59f1050 	ldr	r1, [pc, #80]	; 274f8 <BcmPropertyTagsGetTag+0x15c>
   274a4:	e59f0050 	ldr	r0, [pc, #80]	; 274fc <BcmPropertyTagsGetTag+0x160>
   274a8:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
   274ac:	ebfff77f 	bl	252b0 <assertion_failed>
   274b0:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   274b4:	eaffffc7 	b	273d8 <BcmPropertyTagsGetTag+0x3c>
   274b8:	e3a0203b 	mov	r2, #59	; 0x3b
   274bc:	e59f1034 	ldr	r1, [pc, #52]	; 274f8 <BcmPropertyTagsGetTag+0x15c>
   274c0:	e59f0038 	ldr	r0, [pc, #56]	; 27500 <BcmPropertyTagsGetTag+0x164>
   274c4:	ebfff779 	bl	252b0 <assertion_failed>
   274c8:	eaffffbf 	b	273cc <BcmPropertyTagsGetTag+0x30>
   274cc:	e3a02038 	mov	r2, #56	; 0x38
   274d0:	e59f1020 	ldr	r1, [pc, #32]	; 274f8 <BcmPropertyTagsGetTag+0x15c>
   274d4:	e59f0028 	ldr	r0, [pc, #40]	; 27504 <BcmPropertyTagsGetTag+0x168>
   274d8:	ebfff774 	bl	252b0 <assertion_failed>
   274dc:	e3580000 	cmp	r8, #0
   274e0:	1affffb7 	bne	273c4 <BcmPropertyTagsGetTag+0x28>
   274e4:	e3a0203a 	mov	r2, #58	; 0x3a
   274e8:	e59f1008 	ldr	r1, [pc, #8]	; 274f8 <BcmPropertyTagsGetTag+0x15c>
   274ec:	e59f0014 	ldr	r0, [pc, #20]	; 27508 <BcmPropertyTagsGetTag+0x16c>
   274f0:	ebfff76e 	bl	252b0 <assertion_failed>
   274f4:	eaffffb2 	b	273c4 <BcmPropertyTagsGetTag+0x28>
   274f8:	0002b9c8 	andeq	fp, r2, r8, asr #19
   274fc:	0002ba10 	andeq	fp, r2, r0, lsl sl
   27500:	0002b9e8 	andeq	fp, r2, r8, ror #19
   27504:	00029a68 	andeq	r9, r2, r8, ror #20
   27508:	0002b9dc 	ldrdeq	fp, [r2], -ip

0002750c <CharGenerator>:
   2750c:	e92d4010 	push	{r4, lr}
   27510:	e2504000 	subs	r4, r0, #0
   27514:	0a000002 	beq	27524 <CharGenerator+0x18>
   27518:	e3a03008 	mov	r3, #8
   2751c:	e5843000 	str	r3, [r4]
   27520:	e8bd8010 	pop	{r4, pc}
   27524:	e3a02020 	mov	r2, #32
   27528:	e59f1008 	ldr	r1, [pc, #8]	; 27538 <CharGenerator+0x2c>
   2752c:	e59f0008 	ldr	r0, [pc, #8]	; 2753c <CharGenerator+0x30>
   27530:	ebfff75e 	bl	252b0 <assertion_failed>
   27534:	eafffff7 	b	27518 <CharGenerator+0xc>
   27538:	0002ba28 	andeq	fp, r2, r8, lsr #20
   2753c:	00029a68 	andeq	r9, r2, r8, ror #20

00027540 <_CharGenerator>:
   27540:	e12fff1e 	bx	lr

00027544 <CharGeneratorGetCharWidth>:
   27544:	e92d4010 	push	{r4, lr}
   27548:	e2504000 	subs	r4, r0, #0
   2754c:	0a000001 	beq	27558 <CharGeneratorGetCharWidth+0x14>
   27550:	e5940000 	ldr	r0, [r4]
   27554:	e8bd8010 	pop	{r4, pc}
   27558:	e3a0202f 	mov	r2, #47	; 0x2f
   2755c:	e59f100c 	ldr	r1, [pc, #12]	; 27570 <CharGeneratorGetCharWidth+0x2c>
   27560:	e59f000c 	ldr	r0, [pc, #12]	; 27574 <CharGeneratorGetCharWidth+0x30>
   27564:	ebfff751 	bl	252b0 <assertion_failed>
   27568:	e5940000 	ldr	r0, [r4]
   2756c:	e8bd8010 	pop	{r4, pc}
   27570:	0002ba28 	andeq	fp, r2, r8, lsr #20
   27574:	00029a68 	andeq	r9, r2, r8, ror #20

00027578 <CharGeneratorGetCharHeight>:
   27578:	e3500000 	cmp	r0, #0
   2757c:	0a000001 	beq	27588 <CharGeneratorGetCharHeight+0x10>
   27580:	e3a00013 	mov	r0, #19
   27584:	e12fff1e 	bx	lr
   27588:	e92d4010 	push	{r4, lr}
   2758c:	e3a02035 	mov	r2, #53	; 0x35
   27590:	e59f100c 	ldr	r1, [pc, #12]	; 275a4 <CharGeneratorGetCharHeight+0x2c>
   27594:	e59f000c 	ldr	r0, [pc, #12]	; 275a8 <CharGeneratorGetCharHeight+0x30>
   27598:	ebfff744 	bl	252b0 <assertion_failed>
   2759c:	e3a00013 	mov	r0, #19
   275a0:	e8bd8010 	pop	{r4, pc}
   275a4:	0002ba28 	andeq	fp, r2, r8, lsr #20
   275a8:	00029a68 	andeq	r9, r2, r8, ror #20

000275ac <CharGeneratorGetUnderline>:
   275ac:	e3500000 	cmp	r0, #0
   275b0:	0a000001 	beq	275bc <CharGeneratorGetUnderline+0x10>
   275b4:	e3a00010 	mov	r0, #16
   275b8:	e12fff1e 	bx	lr
   275bc:	e92d4010 	push	{r4, lr}
   275c0:	e3a02040 	mov	r2, #64	; 0x40
   275c4:	e59f100c 	ldr	r1, [pc, #12]	; 275d8 <CharGeneratorGetUnderline+0x2c>
   275c8:	e59f000c 	ldr	r0, [pc, #12]	; 275dc <CharGeneratorGetUnderline+0x30>
   275cc:	ebfff737 	bl	252b0 <assertion_failed>
   275d0:	e3a00010 	mov	r0, #16
   275d4:	e8bd8010 	pop	{r4, pc}
   275d8:	0002ba28 	andeq	fp, r2, r8, lsr #20
   275dc:	00029a68 	andeq	r9, r2, r8, ror #20

000275e0 <CharGeneratorGetPixel>:
   275e0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   275e4:	e2507000 	subs	r7, r0, #0
   275e8:	e1a04001 	mov	r4, r1
   275ec:	e1a05002 	mov	r5, r2
   275f0:	e1a06003 	mov	r6, r3
   275f4:	0a000019 	beq	27660 <CharGeneratorGetPixel+0x80>
   275f8:	e6ef4074 	uxtb	r4, r4
   275fc:	e2444021 	sub	r4, r4, #33	; 0x21
   27600:	e35400de 	cmp	r4, #222	; 0xde
   27604:	8a00000c 	bhi	2763c <CharGeneratorGetPixel+0x5c>
   27608:	e5973000 	ldr	r3, [r7]
   2760c:	e1530005 	cmp	r3, r5
   27610:	9a00000b 	bls	27644 <CharGeneratorGetPixel+0x64>
   27614:	e356000f 	cmp	r6, #15
   27618:	8a000007 	bhi	2763c <CharGeneratorGetPixel+0x5c>
   2761c:	e3a02080 	mov	r2, #128	; 0x80
   27620:	e59f304c 	ldr	r3, [pc, #76]	; 27674 <CharGeneratorGetPixel+0x94>
   27624:	e0834204 	add	r4, r3, r4, lsl #4
   27628:	e7d43006 	ldrb	r3, [r4, r6]
   2762c:	e0133552 	ands	r3, r3, r2, asr r5
   27630:	13a00001 	movne	r0, #1
   27634:	03a00000 	moveq	r0, #0
   27638:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2763c:	e3a00000 	mov	r0, #0
   27640:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   27644:	e3a02057 	mov	r2, #87	; 0x57
   27648:	e59f1028 	ldr	r1, [pc, #40]	; 27678 <CharGeneratorGetPixel+0x98>
   2764c:	e59f0028 	ldr	r0, [pc, #40]	; 2767c <CharGeneratorGetPixel+0x9c>
   27650:	ebfff716 	bl	252b0 <assertion_failed>
   27654:	e356000f 	cmp	r6, #15
   27658:	9affffef 	bls	2761c <CharGeneratorGetPixel+0x3c>
   2765c:	eafffff6 	b	2763c <CharGeneratorGetPixel+0x5c>
   27660:	e3a0204b 	mov	r2, #75	; 0x4b
   27664:	e59f100c 	ldr	r1, [pc, #12]	; 27678 <CharGeneratorGetPixel+0x98>
   27668:	e59f0010 	ldr	r0, [pc, #16]	; 27680 <CharGeneratorGetPixel+0xa0>
   2766c:	ebfff70f 	bl	252b0 <assertion_failed>
   27670:	eaffffe0 	b	275f8 <CharGeneratorGetPixel+0x18>
   27674:	00028ae4 	andeq	r8, r2, r4, ror #21
   27678:	0002ba28 	andeq	fp, r2, r8, lsr #20
   2767c:	0002ba38 	andeq	fp, r2, r8, lsr sl
   27680:	00029a68 	andeq	r9, r2, r8, ror #20
   27684:	00000000 	andeq	r0, r0, r0

00027688 <DelayLoop>:
   27688:	e2500001 	subs	r0, r0, #1
   2768c:	8afffffd 	bhi	27688 <DelayLoop>
   27690:	e1a0f00e 	mov	pc, lr

00027694 <InterruptSystem>:
   27694:	e92d4010 	push	{r4, lr}
   27698:	e2504000 	subs	r4, r0, #0
   2769c:	0a000009 	beq	276c8 <InterruptSystem+0x34>
   276a0:	e3a02000 	mov	r2, #0
   276a4:	e2443004 	sub	r3, r4, #4
   276a8:	e2841f47 	add	r1, r4, #284	; 0x11c
   276ac:	e5a32004 	str	r2, [r3, #4]!
   276b0:	e1530001 	cmp	r3, r1
   276b4:	e5832120 	str	r2, [r3, #288]	; 0x120
   276b8:	1afffffb 	bne	276ac <InterruptSystem+0x18>
   276bc:	e59f3018 	ldr	r3, [pc, #24]	; 276dc <InterruptSystem+0x48>
   276c0:	e5834000 	str	r4, [r3]
   276c4:	e8bd8010 	pop	{r4, pc}
   276c8:	e3a02032 	mov	r2, #50	; 0x32
   276cc:	e59f100c 	ldr	r1, [pc, #12]	; 276e0 <InterruptSystem+0x4c>
   276d0:	e59f000c 	ldr	r0, [pc, #12]	; 276e4 <InterruptSystem+0x50>
   276d4:	ebfff6f5 	bl	252b0 <assertion_failed>
   276d8:	eafffff0 	b	276a0 <InterruptSystem+0xc>
   276dc:	0002d188 	andeq	sp, r2, r8, lsl #3
   276e0:	0002ba54 	andeq	fp, r2, r4, asr sl
   276e4:	00029a68 	andeq	r9, r2, r8, ror #20

000276e8 <_InterruptSystem>:
   276e8:	e3a02000 	mov	r2, #0
   276ec:	e59f3004 	ldr	r3, [pc, #4]	; 276f8 <_InterruptSystem+0x10>
   276f0:	e5832000 	str	r2, [r3]
   276f4:	e12fff1e 	bx	lr
   276f8:	0002d188 	andeq	sp, r2, r8, lsl #3

000276fc <InterruptSystemInitialize>:
   276fc:	e3500000 	cmp	r0, #0
   27700:	e92d4010 	push	{r4, lr}
   27704:	0a00002b 	beq	277b8 <InterruptSystemInitialize+0xbc>
   27708:	e3a04000 	mov	r4, #0
   2770c:	e59f30b8 	ldr	r3, [pc, #184]	; 277cc <InterruptSystemInitialize+0xd0>
   27710:	e1a03143 	asr	r3, r3, #2
   27714:	e2433002 	sub	r3, r3, #2
   27718:	e38334ea 	orr	r3, r3, #-369098752	; 0xea000000
   2771c:	e5843018 	str	r3, [r4, #24]
   27720:	ee074f1a 	mcr	15, 0, r4, cr7, cr10, {0}
   27724:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   27728:	ee074f15 	mcr	15, 0, r4, cr7, cr5, {0}
   2772c:	ee074fd5 	mcr	15, 0, r4, cr7, cr5, {6}
   27730:	ee074f9a 	mcr	15, 0, r4, cr7, cr10, {4}
   27734:	ee074f95 	mcr	15, 0, r4, cr7, cr5, {4}
   27738:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   2773c:	e59f008c 	ldr	r0, [pc, #140]	; 277d0 <InterruptSystemInitialize+0xd4>
   27740:	e1a01004 	mov	r1, r4
   27744:	eb000154 	bl	27c9c <write32>
   27748:	e3e01000 	mvn	r1, #0
   2774c:	e59f0080 	ldr	r0, [pc, #128]	; 277d4 <InterruptSystemInitialize+0xd8>
   27750:	eb000151 	bl	27c9c <write32>
   27754:	e3e01000 	mvn	r1, #0
   27758:	e59f0078 	ldr	r0, [pc, #120]	; 277d8 <InterruptSystemInitialize+0xdc>
   2775c:	eb00014e 	bl	27c9c <write32>
   27760:	e3e01000 	mvn	r1, #0
   27764:	e59f0070 	ldr	r0, [pc, #112]	; 277dc <InterruptSystemInitialize+0xe0>
   27768:	eb00014b 	bl	27c9c <write32>
   2776c:	e59f006c 	ldr	r0, [pc, #108]	; 277e0 <InterruptSystemInitialize+0xe4>
   27770:	eb000147 	bl	27c94 <read32>
   27774:	e1a01000 	mov	r1, r0
   27778:	e59f0060 	ldr	r0, [pc, #96]	; 277e0 <InterruptSystemInitialize+0xe4>
   2777c:	eb000146 	bl	27c9c <write32>
   27780:	e59f005c 	ldr	r0, [pc, #92]	; 277e4 <InterruptSystemInitialize+0xe8>
   27784:	eb000142 	bl	27c94 <read32>
   27788:	e1a01000 	mov	r1, r0
   2778c:	e59f0050 	ldr	r0, [pc, #80]	; 277e4 <InterruptSystemInitialize+0xe8>
   27790:	eb000141 	bl	27c9c <write32>
   27794:	e59f004c 	ldr	r0, [pc, #76]	; 277e8 <InterruptSystemInitialize+0xec>
   27798:	eb00013d 	bl	27c94 <read32>
   2779c:	e1a01000 	mov	r1, r0
   277a0:	e59f0040 	ldr	r0, [pc, #64]	; 277e8 <InterruptSystemInitialize+0xec>
   277a4:	eb00013c 	bl	27c9c <write32>
   277a8:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   277ac:	f1080080 	cpsie	i
   277b0:	e3a00001 	mov	r0, #1
   277b4:	e8bd8010 	pop	{r4, pc}
   277b8:	e3a02044 	mov	r2, #68	; 0x44
   277bc:	e59f1028 	ldr	r1, [pc, #40]	; 277ec <InterruptSystemInitialize+0xf0>
   277c0:	e59f0028 	ldr	r0, [pc, #40]	; 277f0 <InterruptSystemInitialize+0xf4>
   277c4:	ebfff6b9 	bl	252b0 <assertion_failed>
   277c8:	eaffffce 	b	27708 <InterruptSystemInitialize+0xc>
   277cc:	00028240 	andeq	r8, r2, r0, asr #4
   277d0:	2000b20c 	andcs	fp, r0, ip, lsl #4
   277d4:	2000b21c 	andcs	fp, r0, ip, lsl r2
   277d8:	2000b220 	andcs	fp, r0, r0, lsr #4
   277dc:	2000b224 	andcs	fp, r0, r4, lsr #4
   277e0:	2000b200 	andcs	fp, r0, r0, lsl #4
   277e4:	2000b204 	andcs	fp, r0, r4, lsl #4
   277e8:	2000b208 	andcs	fp, r0, r8, lsl #4
   277ec:	0002ba54 	andeq	fp, r2, r4, asr sl
   277f0:	00029a68 	andeq	r9, r2, r8, ror #20

000277f4 <InterruptSystemEnableIRQ>:
   277f4:	e92d4010 	push	{r4, lr}
   277f8:	e3a03000 	mov	r3, #0
   277fc:	e1a04000 	mov	r4, r0
   27800:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27804:	e3500047 	cmp	r0, #71	; 0x47
   27808:	8a00000e 	bhi	27848 <InterruptSystemEnableIRQ+0x54>
   2780c:	e350001f 	cmp	r0, #31
   27810:	959f0048 	ldrls	r0, [pc, #72]	; 27860 <InterruptSystemEnableIRQ+0x6c>
   27814:	8a000006 	bhi	27834 <InterruptSystemEnableIRQ+0x40>
   27818:	e3a01001 	mov	r1, #1
   2781c:	e204401f 	and	r4, r4, #31
   27820:	e1a01411 	lsl	r1, r1, r4
   27824:	eb00011c 	bl	27c9c <write32>
   27828:	e3a03000 	mov	r3, #0
   2782c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27830:	e8bd8010 	pop	{r4, pc}
   27834:	e59f3028 	ldr	r3, [pc, #40]	; 27864 <InterruptSystemEnableIRQ+0x70>
   27838:	e354003f 	cmp	r4, #63	; 0x3f
   2783c:	e59f0024 	ldr	r0, [pc, #36]	; 27868 <InterruptSystemEnableIRQ+0x74>
   27840:	81a00003 	movhi	r0, r3
   27844:	eafffff3 	b	27818 <InterruptSystemEnableIRQ+0x24>
   27848:	e59f001c 	ldr	r0, [pc, #28]	; 2786c <InterruptSystemEnableIRQ+0x78>
   2784c:	e3a02084 	mov	r2, #132	; 0x84
   27850:	e59f1018 	ldr	r1, [pc, #24]	; 27870 <InterruptSystemEnableIRQ+0x7c>
   27854:	ebfff695 	bl	252b0 <assertion_failed>
   27858:	e59f0004 	ldr	r0, [pc, #4]	; 27864 <InterruptSystemEnableIRQ+0x70>
   2785c:	eaffffed 	b	27818 <InterruptSystemEnableIRQ+0x24>
   27860:	2000b210 	andcs	fp, r0, r0, lsl r2
   27864:	2000b218 	andcs	fp, r0, r8, lsl r2
   27868:	2000b214 	andcs	fp, r0, r4, lsl r2
   2786c:	0002ba60 	andeq	fp, r2, r0, ror #20
   27870:	0002ba54 	andeq	fp, r2, r4, asr sl

00027874 <InterruptSystemConnectIRQ>:
   27874:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   27878:	e2505000 	subs	r5, r0, #0
   2787c:	e1a04001 	mov	r4, r1
   27880:	e1a08002 	mov	r8, r2
   27884:	e1a07003 	mov	r7, r3
   27888:	0a000013 	beq	278dc <InterruptSystemConnectIRQ+0x68>
   2788c:	e3540047 	cmp	r4, #71	; 0x47
   27890:	8a00000c 	bhi	278c8 <InterruptSystemConnectIRQ+0x54>
   27894:	e7953104 	ldr	r3, [r5, r4, lsl #2]
   27898:	e0856104 	add	r6, r5, r4, lsl #2
   2789c:	e3530000 	cmp	r3, #0
   278a0:	0a000003 	beq	278b4 <InterruptSystemConnectIRQ+0x40>
   278a4:	e3a0206b 	mov	r2, #107	; 0x6b
   278a8:	e59f1040 	ldr	r1, [pc, #64]	; 278f0 <InterruptSystemConnectIRQ+0x7c>
   278ac:	e59f0040 	ldr	r0, [pc, #64]	; 278f4 <InterruptSystemConnectIRQ+0x80>
   278b0:	ebfff67e 	bl	252b0 <assertion_failed>
   278b4:	e7858104 	str	r8, [r5, r4, lsl #2]
   278b8:	e1a00004 	mov	r0, r4
   278bc:	e5867120 	str	r7, [r6, #288]	; 0x120
   278c0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   278c4:	eaffffca 	b	277f4 <InterruptSystemEnableIRQ>
   278c8:	e3a0206a 	mov	r2, #106	; 0x6a
   278cc:	e59f101c 	ldr	r1, [pc, #28]	; 278f0 <InterruptSystemConnectIRQ+0x7c>
   278d0:	e59f0020 	ldr	r0, [pc, #32]	; 278f8 <InterruptSystemConnectIRQ+0x84>
   278d4:	ebfff675 	bl	252b0 <assertion_failed>
   278d8:	eaffffed 	b	27894 <InterruptSystemConnectIRQ+0x20>
   278dc:	e3a02068 	mov	r2, #104	; 0x68
   278e0:	e59f1008 	ldr	r1, [pc, #8]	; 278f0 <InterruptSystemConnectIRQ+0x7c>
   278e4:	e59f0010 	ldr	r0, [pc, #16]	; 278fc <InterruptSystemConnectIRQ+0x88>
   278e8:	ebfff670 	bl	252b0 <assertion_failed>
   278ec:	eaffffe6 	b	2788c <InterruptSystemConnectIRQ+0x18>
   278f0:	0002ba54 	andeq	fp, r2, r4, asr sl
   278f4:	0002ba74 	andeq	fp, r2, r4, ror sl
   278f8:	0002ba60 	andeq	fp, r2, r0, ror #20
   278fc:	00029a68 	andeq	r9, r2, r8, ror #20

00027900 <InterruptSystemDisableIRQ>:
   27900:	e92d4010 	push	{r4, lr}
   27904:	e3a03000 	mov	r3, #0
   27908:	e1a04000 	mov	r4, r0
   2790c:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27910:	e3500047 	cmp	r0, #71	; 0x47
   27914:	8a00000e 	bhi	27954 <InterruptSystemDisableIRQ+0x54>
   27918:	e350001f 	cmp	r0, #31
   2791c:	959f0048 	ldrls	r0, [pc, #72]	; 2796c <InterruptSystemDisableIRQ+0x6c>
   27920:	8a000006 	bhi	27940 <InterruptSystemDisableIRQ+0x40>
   27924:	e3a01001 	mov	r1, #1
   27928:	e204401f 	and	r4, r4, #31
   2792c:	e1a01411 	lsl	r1, r1, r4
   27930:	eb0000d9 	bl	27c9c <write32>
   27934:	e3a03000 	mov	r3, #0
   27938:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   2793c:	e8bd8010 	pop	{r4, pc}
   27940:	e59f3028 	ldr	r3, [pc, #40]	; 27970 <InterruptSystemDisableIRQ+0x70>
   27944:	e354003f 	cmp	r4, #63	; 0x3f
   27948:	e59f0024 	ldr	r0, [pc, #36]	; 27974 <InterruptSystemDisableIRQ+0x74>
   2794c:	81a00003 	movhi	r0, r3
   27950:	eafffff3 	b	27924 <InterruptSystemDisableIRQ+0x24>
   27954:	e59f001c 	ldr	r0, [pc, #28]	; 27978 <InterruptSystemDisableIRQ+0x78>
   27958:	e3a0208f 	mov	r2, #143	; 0x8f
   2795c:	e59f1018 	ldr	r1, [pc, #24]	; 2797c <InterruptSystemDisableIRQ+0x7c>
   27960:	ebfff652 	bl	252b0 <assertion_failed>
   27964:	e59f0004 	ldr	r0, [pc, #4]	; 27970 <InterruptSystemDisableIRQ+0x70>
   27968:	eaffffed 	b	27924 <InterruptSystemDisableIRQ+0x24>
   2796c:	2000b21c 	andcs	fp, r0, ip, lsl r2
   27970:	2000b224 	andcs	fp, r0, r4, lsr #4
   27974:	2000b220 	andcs	fp, r0, r0, lsr #4
   27978:	0002ba60 	andeq	fp, r2, r0, ror #20
   2797c:	0002ba54 	andeq	fp, r2, r4, asr sl

00027980 <InterruptSystemDisconnectIRQ>:
   27980:	e92d4070 	push	{r4, r5, r6, lr}
   27984:	e2505000 	subs	r5, r0, #0
   27988:	e1a04001 	mov	r4, r1
   2798c:	0a000018 	beq	279f4 <InterruptSystemDisconnectIRQ+0x74>
   27990:	e3540047 	cmp	r4, #71	; 0x47
   27994:	8a000009 	bhi	279c0 <InterruptSystemDisconnectIRQ+0x40>
   27998:	e7953104 	ldr	r3, [r5, r4, lsl #2]
   2799c:	e0856104 	add	r6, r5, r4, lsl #2
   279a0:	e3530000 	cmp	r3, #0
   279a4:	0a00000d 	beq	279e0 <InterruptSystemDisconnectIRQ+0x60>
   279a8:	e1a00004 	mov	r0, r4
   279ac:	ebffffd3 	bl	27900 <InterruptSystemDisableIRQ>
   279b0:	e3a03000 	mov	r3, #0
   279b4:	e7853104 	str	r3, [r5, r4, lsl #2]
   279b8:	e5863120 	str	r3, [r6, #288]	; 0x120
   279bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   279c0:	e3a02077 	mov	r2, #119	; 0x77
   279c4:	e59f103c 	ldr	r1, [pc, #60]	; 27a08 <InterruptSystemDisconnectIRQ+0x88>
   279c8:	e59f003c 	ldr	r0, [pc, #60]	; 27a0c <InterruptSystemDisconnectIRQ+0x8c>
   279cc:	ebfff637 	bl	252b0 <assertion_failed>
   279d0:	e7953104 	ldr	r3, [r5, r4, lsl #2]
   279d4:	e0856104 	add	r6, r5, r4, lsl #2
   279d8:	e3530000 	cmp	r3, #0
   279dc:	1afffff1 	bne	279a8 <InterruptSystemDisconnectIRQ+0x28>
   279e0:	e3a02078 	mov	r2, #120	; 0x78
   279e4:	e59f101c 	ldr	r1, [pc, #28]	; 27a08 <InterruptSystemDisconnectIRQ+0x88>
   279e8:	e59f0020 	ldr	r0, [pc, #32]	; 27a10 <InterruptSystemDisconnectIRQ+0x90>
   279ec:	ebfff62f 	bl	252b0 <assertion_failed>
   279f0:	eaffffec 	b	279a8 <InterruptSystemDisconnectIRQ+0x28>
   279f4:	e3a02075 	mov	r2, #117	; 0x75
   279f8:	e59f1008 	ldr	r1, [pc, #8]	; 27a08 <InterruptSystemDisconnectIRQ+0x88>
   279fc:	e59f0010 	ldr	r0, [pc, #16]	; 27a14 <InterruptSystemDisconnectIRQ+0x94>
   27a00:	ebfff62a 	bl	252b0 <assertion_failed>
   27a04:	eaffffe1 	b	27990 <InterruptSystemDisconnectIRQ+0x10>
   27a08:	0002ba54 	andeq	fp, r2, r4, asr sl
   27a0c:	0002ba60 	andeq	fp, r2, r0, ror #20
   27a10:	0002ba98 	muleq	r2, r8, sl
   27a14:	00029a68 	andeq	r9, r2, r8, ror #20

00027a18 <InterruptSystemGet>:
   27a18:	e92d4010 	push	{r4, lr}
   27a1c:	e59f4020 	ldr	r4, [pc, #32]	; 27a44 <InterruptSystemGet+0x2c>
   27a20:	e5940000 	ldr	r0, [r4]
   27a24:	e3500000 	cmp	r0, #0
   27a28:	18bd8010 	popne	{r4, pc}
   27a2c:	e3a02098 	mov	r2, #152	; 0x98
   27a30:	e59f1010 	ldr	r1, [pc, #16]	; 27a48 <InterruptSystemGet+0x30>
   27a34:	e59f0010 	ldr	r0, [pc, #16]	; 27a4c <InterruptSystemGet+0x34>
   27a38:	ebfff61c 	bl	252b0 <assertion_failed>
   27a3c:	e5940000 	ldr	r0, [r4]
   27a40:	e8bd8010 	pop	{r4, pc}
   27a44:	0002d188 	andeq	sp, r2, r8, lsl #3
   27a48:	0002ba54 	andeq	fp, r2, r4, asr sl
   27a4c:	0002ab84 	andeq	sl, r2, r4, lsl #23

00027a50 <InterruptSystemCallIRQHandler>:
   27a50:	e92d4070 	push	{r4, r5, r6, lr}
   27a54:	e2505000 	subs	r5, r0, #0
   27a58:	e1a06001 	mov	r6, r1
   27a5c:	0a000015 	beq	27ab8 <InterruptSystemCallIRQHandler+0x68>
   27a60:	e3560047 	cmp	r6, #71	; 0x47
   27a64:	8a000007 	bhi	27a88 <InterruptSystemCallIRQHandler+0x38>
   27a68:	e7954106 	ldr	r4, [r5, r6, lsl #2]
   27a6c:	e0855106 	add	r5, r5, r6, lsl #2
   27a70:	e3540000 	cmp	r4, #0
   27a74:	0a00000b 	beq	27aa8 <InterruptSystemCallIRQHandler+0x58>
   27a78:	e5950120 	ldr	r0, [r5, #288]	; 0x120
   27a7c:	e12fff34 	blx	r4
   27a80:	e3a00001 	mov	r0, #1
   27a84:	e8bd8070 	pop	{r4, r5, r6, pc}
   27a88:	e3a020a0 	mov	r2, #160	; 0xa0
   27a8c:	e59f1038 	ldr	r1, [pc, #56]	; 27acc <InterruptSystemCallIRQHandler+0x7c>
   27a90:	e59f0038 	ldr	r0, [pc, #56]	; 27ad0 <InterruptSystemCallIRQHandler+0x80>
   27a94:	ebfff605 	bl	252b0 <assertion_failed>
   27a98:	e7954106 	ldr	r4, [r5, r6, lsl #2]
   27a9c:	e0855106 	add	r5, r5, r6, lsl #2
   27aa0:	e3540000 	cmp	r4, #0
   27aa4:	1afffff3 	bne	27a78 <InterruptSystemCallIRQHandler+0x28>
   27aa8:	e1a00006 	mov	r0, r6
   27aac:	ebffff93 	bl	27900 <InterruptSystemDisableIRQ>
   27ab0:	e1a00004 	mov	r0, r4
   27ab4:	e8bd8070 	pop	{r4, r5, r6, pc}
   27ab8:	e3a0209e 	mov	r2, #158	; 0x9e
   27abc:	e59f1008 	ldr	r1, [pc, #8]	; 27acc <InterruptSystemCallIRQHandler+0x7c>
   27ac0:	e59f000c 	ldr	r0, [pc, #12]	; 27ad4 <InterruptSystemCallIRQHandler+0x84>
   27ac4:	ebfff5f9 	bl	252b0 <assertion_failed>
   27ac8:	eaffffe4 	b	27a60 <InterruptSystemCallIRQHandler+0x10>
   27acc:	0002ba54 	andeq	fp, r2, r4, asr sl
   27ad0:	0002ba60 	andeq	fp, r2, r0, ror #20
   27ad4:	00029a68 	andeq	r9, r2, r8, ror #20

00027ad8 <InterruptHandler>:
   27ad8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27adc:	e59f80bc 	ldr	r8, [pc, #188]	; 27ba0 <InterruptHandler+0xc8>
   27ae0:	e5983000 	ldr	r3, [r8]
   27ae4:	e3530000 	cmp	r3, #0
   27ae8:	0a000027 	beq	27b8c <InterruptHandler+0xb4>
   27aec:	e3a04000 	mov	r4, #0
   27af0:	ee074fba 	mcr	15, 0, r4, cr7, cr10, {5}
   27af4:	e59f70a8 	ldr	r7, [pc, #168]	; 27ba4 <InterruptHandler+0xcc>
   27af8:	e59f60a8 	ldr	r6, [pc, #168]	; 27ba8 <InterruptHandler+0xd0>
   27afc:	e59f90a8 	ldr	r9, [pc, #168]	; 27bac <InterruptHandler+0xd4>
   27b00:	ea000007 	b	27b24 <InterruptHandler+0x4c>
   27b04:	e354003f 	cmp	r4, #63	; 0x3f
   27b08:	81a00009 	movhi	r0, r9
   27b0c:	8a00000a 	bhi	27b3c <InterruptHandler+0x64>
   27b10:	e1a00006 	mov	r0, r6
   27b14:	eb00005e 	bl	27c94 <read32>
   27b18:	e1100005 	tst	r0, r5
   27b1c:	1a000014 	bne	27b74 <InterruptHandler+0x9c>
   27b20:	e2844001 	add	r4, r4, #1
   27b24:	e3a05001 	mov	r5, #1
   27b28:	e204301f 	and	r3, r4, #31
   27b2c:	e354001f 	cmp	r4, #31
   27b30:	e1a05315 	lsl	r5, r5, r3
   27b34:	8afffff2 	bhi	27b04 <InterruptHandler+0x2c>
   27b38:	e1a00007 	mov	r0, r7
   27b3c:	eb000054 	bl	27c94 <read32>
   27b40:	e1100005 	tst	r0, r5
   27b44:	1a000004 	bne	27b5c <InterruptHandler+0x84>
   27b48:	e3540047 	cmp	r4, #71	; 0x47
   27b4c:	1afffff3 	bne	27b20 <InterruptHandler+0x48>
   27b50:	e3a03000 	mov	r3, #0
   27b54:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27b58:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27b5c:	e1a01004 	mov	r1, r4
   27b60:	e5980000 	ldr	r0, [r8]
   27b64:	ebffffb9 	bl	27a50 <InterruptSystemCallIRQHandler>
   27b68:	e3500000 	cmp	r0, #0
   27b6c:	0afffff5 	beq	27b48 <InterruptHandler+0x70>
   27b70:	eafffff6 	b	27b50 <InterruptHandler+0x78>
   27b74:	e1a01004 	mov	r1, r4
   27b78:	e5980000 	ldr	r0, [r8]
   27b7c:	ebffffb3 	bl	27a50 <InterruptSystemCallIRQHandler>
   27b80:	e3500000 	cmp	r0, #0
   27b84:	0affffe5 	beq	27b20 <InterruptHandler+0x48>
   27b88:	eafffff0 	b	27b50 <InterruptHandler+0x78>
   27b8c:	e3a020b3 	mov	r2, #179	; 0xb3
   27b90:	e59f1018 	ldr	r1, [pc, #24]	; 27bb0 <InterruptHandler+0xd8>
   27b94:	e59f0018 	ldr	r0, [pc, #24]	; 27bb4 <InterruptHandler+0xdc>
   27b98:	ebfff5c4 	bl	252b0 <assertion_failed>
   27b9c:	eaffffd2 	b	27aec <InterruptHandler+0x14>
   27ba0:	0002d188 	andeq	sp, r2, r8, lsl #3
   27ba4:	2000b204 	andcs	fp, r0, r4, lsl #4
   27ba8:	2000b208 	andcs	fp, r0, r8, lsl #4
   27bac:	2000b200 	andcs	fp, r0, r0, lsl #4
   27bb0:	0002ba54 	andeq	fp, r2, r4, asr sl
   27bb4:	0002ab84 	andeq	sl, r2, r4, lsl #23

00027bb8 <Divide>:
   27bb8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   27bbc:	e2514000 	subs	r4, r1, #0
   27bc0:	e1a06000 	mov	r6, r0
   27bc4:	e1a07002 	mov	r7, r2
   27bc8:	0a000025 	beq	27c64 <Divide+0xac>
   27bcc:	e3a03000 	mov	r3, #0
   27bd0:	e3a05000 	mov	r5, #0
   27bd4:	e1a02004 	mov	r2, r4
   27bd8:	e1530005 	cmp	r3, r5
   27bdc:	01520006 	cmpeq	r2, r6
   27be0:	e1a04006 	mov	r4, r6
   27be4:	2a000026 	bcs	27c84 <Divide+0xcc>
   27be8:	e3a01001 	mov	r1, #1
   27bec:	ea000000 	b	27bf4 <Divide+0x3c>
   27bf0:	e1a01000 	mov	r1, r0
   27bf4:	e0922002 	adds	r2, r2, r2
   27bf8:	e0a33003 	adc	r3, r3, r3
   27bfc:	e1530005 	cmp	r3, r5
   27c00:	01520004 	cmpeq	r2, r4
   27c04:	e2810001 	add	r0, r1, #1
   27c08:	3afffff8 	bcc	27bf0 <Divide+0x38>
   27c0c:	e3500000 	cmp	r0, #0
   27c10:	0a000010 	beq	27c58 <Divide+0xa0>
   27c14:	e3a00000 	mov	r0, #0
   27c18:	ea000001 	b	27c24 <Divide+0x6c>
   27c1c:	e1a04006 	mov	r4, r6
   27c20:	e3a05000 	mov	r5, #0
   27c24:	e1550003 	cmp	r5, r3
   27c28:	01540002 	cmpeq	r4, r2
   27c2c:	e1a0c0a2 	lsr	ip, r2, #1
   27c30:	e2411001 	sub	r1, r1, #1
   27c34:	e1a00080 	lsl	r0, r0, #1
   27c38:	e18ccf83 	orr	ip, ip, r3, lsl #31
   27c3c:	20466002 	subcs	r6, r6, r2
   27c40:	e1a0e0a3 	lsr	lr, r3, #1
   27c44:	23800001 	orrcs	r0, r0, #1
   27c48:	e3710001 	cmn	r1, #1
   27c4c:	e1a0200c 	mov	r2, ip
   27c50:	e1a0300e 	mov	r3, lr
   27c54:	1afffff0 	bne	27c1c <Divide+0x64>
   27c58:	e3570000 	cmp	r7, #0
   27c5c:	15876000 	strne	r6, [r7]
   27c60:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   27c64:	e3a0201f 	mov	r2, #31
   27c68:	e59f101c 	ldr	r1, [pc, #28]	; 27c8c <Divide+0xd4>
   27c6c:	e59f001c 	ldr	r0, [pc, #28]	; 27c90 <Divide+0xd8>
   27c70:	ebfff58e 	bl	252b0 <assertion_failed>
   27c74:	eb0000a1 	bl	27f00 <ExceptionHandlerGet>
   27c78:	e1a01004 	mov	r1, r4
   27c7c:	eb000049 	bl	27da8 <ExceptionHandlerThrow>
   27c80:	eaffffd1 	b	27bcc <Divide+0x14>
   27c84:	e3a01000 	mov	r1, #0
   27c88:	eaffffe1 	b	27c14 <Divide+0x5c>
   27c8c:	0002babc 			; <UNDEFINED> instruction: 0x0002babc
   27c90:	000299fc 	strdeq	r9, [r2], -ip

00027c94 <read32>:
   27c94:	e5900000 	ldr	r0, [r0]
   27c98:	e12fff1e 	bx	lr

00027c9c <write32>:
   27c9c:	e5801000 	str	r1, [r0]
   27ca0:	e12fff1e 	bx	lr

00027ca4 <ExceptionHandler2>:
   27ca4:	e92d4070 	push	{r4, r5, r6, lr}
   27ca8:	e2505000 	subs	r5, r0, #0
   27cac:	0a00001f 	beq	27d30 <ExceptionHandler2+0x8c>
   27cb0:	e59f408c 	ldr	r4, [pc, #140]	; 27d44 <ExceptionHandler2+0xa0>
   27cb4:	e5943000 	ldr	r3, [r4]
   27cb8:	e3530000 	cmp	r3, #0
   27cbc:	0a000003 	beq	27cd0 <ExceptionHandler2+0x2c>
   27cc0:	e3a0202b 	mov	r2, #43	; 0x2b
   27cc4:	e59f107c 	ldr	r1, [pc, #124]	; 27d48 <ExceptionHandler2+0xa4>
   27cc8:	e59f007c 	ldr	r0, [pc, #124]	; 27d4c <ExceptionHandler2+0xa8>
   27ccc:	ebfff577 	bl	252b0 <assertion_failed>
   27cd0:	e3a03000 	mov	r3, #0
   27cd4:	e59f0074 	ldr	r0, [pc, #116]	; 27d50 <ExceptionHandler2+0xac>
   27cd8:	e59f1074 	ldr	r1, [pc, #116]	; 27d54 <ExceptionHandler2+0xb0>
   27cdc:	e59f2074 	ldr	r2, [pc, #116]	; 27d58 <ExceptionHandler2+0xb4>
   27ce0:	e1a00140 	asr	r0, r0, #2
   27ce4:	e1a01141 	asr	r1, r1, #2
   27ce8:	e1a02142 	asr	r2, r2, #2
   27cec:	e2400002 	sub	r0, r0, #2
   27cf0:	e2411002 	sub	r1, r1, #2
   27cf4:	e2422002 	sub	r2, r2, #2
   27cf8:	e38004ea 	orr	r0, r0, #-369098752	; 0xea000000
   27cfc:	e38114ea 	orr	r1, r1, #-369098752	; 0xea000000
   27d00:	e38224ea 	orr	r2, r2, #-369098752	; 0xea000000
   27d04:	e5845000 	str	r5, [r4]
   27d08:	e5830004 	str	r0, [r3, #4]
   27d0c:	e583100c 	str	r1, [r3, #12]
   27d10:	e5832010 	str	r2, [r3, #16]
   27d14:	ee073f1a 	mcr	15, 0, r3, cr7, cr10, {0}
   27d18:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   27d1c:	ee073f15 	mcr	15, 0, r3, cr7, cr5, {0}
   27d20:	ee073fd5 	mcr	15, 0, r3, cr7, cr5, {6}
   27d24:	ee073f9a 	mcr	15, 0, r3, cr7, cr10, {4}
   27d28:	ee073f95 	mcr	15, 0, r3, cr7, cr5, {4}
   27d2c:	e8bd8070 	pop	{r4, r5, r6, pc}
   27d30:	e3a02029 	mov	r2, #41	; 0x29
   27d34:	e59f100c 	ldr	r1, [pc, #12]	; 27d48 <ExceptionHandler2+0xa4>
   27d38:	e59f001c 	ldr	r0, [pc, #28]	; 27d5c <ExceptionHandler2+0xb8>
   27d3c:	ebfff55b 	bl	252b0 <assertion_failed>
   27d40:	eaffffda 	b	27cb0 <ExceptionHandler2+0xc>
   27d44:	0002d18c 	andeq	sp, r2, ip, lsl #3
   27d48:	0002bac8 	andeq	fp, r2, r8, asr #21
   27d4c:	0002ab30 	andeq	sl, r2, r0, lsr fp
   27d50:	00028188 	andeq	r8, r2, r8, lsl #3
   27d54:	000281c4 	andeq	r8, r2, r4, asr #3
   27d58:	00028204 	andeq	r8, r2, r4, lsl #4
   27d5c:	00029a68 	andeq	r9, r2, r8, ror #20

00027d60 <_ExceptionHandler>:
   27d60:	e3500000 	cmp	r0, #0
   27d64:	0a000003 	beq	27d78 <_ExceptionHandler+0x18>
   27d68:	e3a02000 	mov	r2, #0
   27d6c:	e59f3028 	ldr	r3, [pc, #40]	; 27d9c <_ExceptionHandler+0x3c>
   27d70:	e5832000 	str	r2, [r3]
   27d74:	e12fff1e 	bx	lr
   27d78:	e3a02044 	mov	r2, #68	; 0x44
   27d7c:	e92d4010 	push	{r4, lr}
   27d80:	e59f1018 	ldr	r1, [pc, #24]	; 27da0 <_ExceptionHandler+0x40>
   27d84:	e59f0018 	ldr	r0, [pc, #24]	; 27da4 <_ExceptionHandler+0x44>
   27d88:	ebfff548 	bl	252b0 <assertion_failed>
   27d8c:	e3a02000 	mov	r2, #0
   27d90:	e59f3004 	ldr	r3, [pc, #4]	; 27d9c <_ExceptionHandler+0x3c>
   27d94:	e5832000 	str	r2, [r3]
   27d98:	e8bd8010 	pop	{r4, pc}
   27d9c:	0002d18c 	andeq	sp, r2, ip, lsl #3
   27da0:	0002bac8 	andeq	fp, r2, r8, asr #21
   27da4:	00029a68 	andeq	r9, r2, r8, ror #20

00027da8 <ExceptionHandlerThrow>:
   27da8:	e92d4010 	push	{r4, lr}
   27dac:	e3500000 	cmp	r0, #0
   27db0:	e24dd008 	sub	sp, sp, #8
   27db4:	e1a04001 	mov	r4, r1
   27db8:	0a000009 	beq	27de4 <ExceptionHandlerThrow+0x3c>
   27dbc:	ebfff5de 	bl	2553c <LoggerGet>
   27dc0:	e59f1030 	ldr	r1, [pc, #48]	; 27df8 <ExceptionHandlerThrow+0x50>
   27dc4:	e59f3030 	ldr	r3, [pc, #48]	; 27dfc <ExceptionHandlerThrow+0x54>
   27dc8:	e0814104 	add	r4, r1, r4, lsl #2
   27dcc:	e5942008 	ldr	r2, [r4, #8]
   27dd0:	e58d2000 	str	r2, [sp]
   27dd4:	e3a02000 	mov	r2, #0
   27dd8:	ebfff64b 	bl	2570c <LoggerWrite>
   27ddc:	e28dd008 	add	sp, sp, #8
   27de0:	e8bd8010 	pop	{r4, pc}
   27de4:	e3a0204b 	mov	r2, #75	; 0x4b
   27de8:	e59f1010 	ldr	r1, [pc, #16]	; 27e00 <ExceptionHandlerThrow+0x58>
   27dec:	e59f0010 	ldr	r0, [pc, #16]	; 27e04 <ExceptionHandlerThrow+0x5c>
   27df0:	ebfff52e 	bl	252b0 <assertion_failed>
   27df4:	eafffff0 	b	27dbc <ExceptionHandlerThrow+0x14>
   27df8:	000298d4 	ldrdeq	r9, [r2], -r4
   27dfc:	0002badc 	ldrdeq	fp, [r2], -ip
   27e00:	0002bac8 	andeq	fp, r2, r8, asr #21
   27e04:	00029a68 	andeq	r9, r2, r8, ror #20

00027e08 <ExceptionHandlerThrow2>:
   27e08:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27e0c:	e3500000 	cmp	r0, #0
   27e10:	e24dd020 	sub	sp, sp, #32
   27e14:	e1a05001 	mov	r5, r1
   27e18:	e1a04002 	mov	r4, r2
   27e1c:	0a00002d 	beq	27ed8 <ExceptionHandlerThrow2+0xd0>
   27e20:	e3550002 	cmp	r5, #2
   27e24:	0a000028 	beq	27ecc <ExceptionHandlerThrow2+0xc4>
   27e28:	e3550003 	cmp	r5, #3
   27e2c:	13a09000 	movne	r9, #0
   27e30:	11a08009 	movne	r8, r9
   27e34:	0a00001b 	beq	27ea8 <ExceptionHandlerThrow2+0xa0>
   27e38:	e3540000 	cmp	r4, #0
   27e3c:	0a00001d 	beq	27eb8 <ExceptionHandlerThrow2+0xb0>
   27e40:	e5943044 	ldr	r3, [r4, #68]	; 0x44
   27e44:	e594703c 	ldr	r7, [r4, #60]	; 0x3c
   27e48:	e203301f 	and	r3, r3, #31
   27e4c:	e59f6098 	ldr	r6, [pc, #152]	; 27eec <ExceptionHandlerThrow2+0xe4>
   27e50:	e3530012 	cmp	r3, #18
   27e54:	e594a040 	ldr	sl, [r4, #64]	; 0x40
   27e58:	e1a01006 	mov	r1, r6
   27e5c:	08940480 	ldmeq	r4, {r7, sl}
   27e60:	e0865105 	add	r5, r6, r5, lsl #2
   27e64:	e1a00007 	mov	r0, r7
   27e68:	ebfff577 	bl	2544c <debug_stacktrace>
   27e6c:	ebfff5b2 	bl	2553c <LoggerGet>
   27e70:	e1c424d4 	ldrd	r2, [r4, #68]	; 0x44
   27e74:	e5951008 	ldr	r1, [r5, #8]
   27e78:	e58d2018 	str	r2, [sp, #24]
   27e7c:	e58d1000 	str	r1, [sp]
   27e80:	e58d3004 	str	r3, [sp, #4]
   27e84:	e1a01006 	mov	r1, r6
   27e88:	e58da014 	str	sl, [sp, #20]
   27e8c:	e58d7010 	str	r7, [sp, #16]
   27e90:	e1cd80f8 	strd	r8, [sp, #8]
   27e94:	e59f3054 	ldr	r3, [pc, #84]	; 27ef0 <ExceptionHandlerThrow2+0xe8>
   27e98:	e3a02000 	mov	r2, #0
   27e9c:	ebfff61a 	bl	2570c <LoggerWrite>
   27ea0:	e28dd020 	add	sp, sp, #32
   27ea4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27ea8:	ee158f10 	mrc	15, 0, r8, cr5, cr0, {0}
   27eac:	ee169f10 	mrc	15, 0, r9, cr6, cr0, {0}
   27eb0:	e3540000 	cmp	r4, #0
   27eb4:	1affffe1 	bne	27e40 <ExceptionHandlerThrow2+0x38>
   27eb8:	e3a02065 	mov	r2, #101	; 0x65
   27ebc:	e59f1030 	ldr	r1, [pc, #48]	; 27ef4 <ExceptionHandlerThrow2+0xec>
   27ec0:	e59f0030 	ldr	r0, [pc, #48]	; 27ef8 <ExceptionHandlerThrow2+0xf0>
   27ec4:	ebfff4f9 	bl	252b0 <assertion_failed>
   27ec8:	eaffffdc 	b	27e40 <ExceptionHandlerThrow2+0x38>
   27ecc:	ee158f30 	mrc	15, 0, r8, cr5, cr0, {1}
   27ed0:	ee169f50 	mrc	15, 0, r9, cr6, cr0, {2}
   27ed4:	eaffffd7 	b	27e38 <ExceptionHandlerThrow2+0x30>
   27ed8:	e3a02052 	mov	r2, #82	; 0x52
   27edc:	e59f1010 	ldr	r1, [pc, #16]	; 27ef4 <ExceptionHandlerThrow2+0xec>
   27ee0:	e59f0014 	ldr	r0, [pc, #20]	; 27efc <ExceptionHandlerThrow2+0xf4>
   27ee4:	ebfff4f1 	bl	252b0 <assertion_failed>
   27ee8:	eaffffcc 	b	27e20 <ExceptionHandlerThrow2+0x18>
   27eec:	000298d4 	ldrdeq	r9, [r2], -r4
   27ef0:	0002baf8 	strdeq	fp, [r2], -r8
   27ef4:	0002bac8 	andeq	fp, r2, r8, asr #21
   27ef8:	0002baec 	andeq	fp, r2, ip, ror #21
   27efc:	00029a68 	andeq	r9, r2, r8, ror #20

00027f00 <ExceptionHandlerGet>:
   27f00:	e92d4010 	push	{r4, lr}
   27f04:	e59f4020 	ldr	r4, [pc, #32]	; 27f2c <ExceptionHandlerGet+0x2c>
   27f08:	e5940000 	ldr	r0, [r4]
   27f0c:	e3500000 	cmp	r0, #0
   27f10:	18bd8010 	popne	{r4, pc}
   27f14:	e3a0207c 	mov	r2, #124	; 0x7c
   27f18:	e59f1010 	ldr	r1, [pc, #16]	; 27f30 <ExceptionHandlerGet+0x30>
   27f1c:	e59f0010 	ldr	r0, [pc, #16]	; 27f34 <ExceptionHandlerGet+0x34>
   27f20:	ebfff4e2 	bl	252b0 <assertion_failed>
   27f24:	e5940000 	ldr	r0, [r4]
   27f28:	e8bd8010 	pop	{r4, pc}
   27f2c:	0002d18c 	andeq	sp, r2, ip, lsl #3
   27f30:	0002bac8 	andeq	fp, r2, r8, asr #21
   27f34:	0002ab84 	andeq	sl, r2, r4, lsl #23

00027f38 <ExceptionHandler>:
   27f38:	e92d4070 	push	{r4, r5, r6, lr}
   27f3c:	e3a03000 	mov	r3, #0
   27f40:	e1a05000 	mov	r5, r0
   27f44:	e1a06001 	mov	r6, r1
   27f48:	ee073fba 	mcr	15, 0, r3, cr7, cr10, {5}
   27f4c:	e59f403c 	ldr	r4, [pc, #60]	; 27f90 <ExceptionHandler+0x58>
   27f50:	e5940000 	ldr	r0, [r4]
   27f54:	e1500003 	cmp	r0, r3
   27f58:	0a000003 	beq	27f6c <ExceptionHandler+0x34>
   27f5c:	e1a02006 	mov	r2, r6
   27f60:	e1a01005 	mov	r1, r5
   27f64:	e8bd4070 	pop	{r4, r5, r6, lr}
   27f68:	eaffffa6 	b	27e08 <ExceptionHandlerThrow2>
   27f6c:	e3a0207c 	mov	r2, #124	; 0x7c
   27f70:	e59f101c 	ldr	r1, [pc, #28]	; 27f94 <ExceptionHandler+0x5c>
   27f74:	e59f001c 	ldr	r0, [pc, #28]	; 27f98 <ExceptionHandler+0x60>
   27f78:	ebfff4cc 	bl	252b0 <assertion_failed>
   27f7c:	e5940000 	ldr	r0, [r4]
   27f80:	e1a02006 	mov	r2, r6
   27f84:	e1a01005 	mov	r1, r5
   27f88:	e8bd4070 	pop	{r4, r5, r6, lr}
   27f8c:	eaffff9d 	b	27e08 <ExceptionHandlerThrow2>
   27f90:	0002d18c 	andeq	sp, r2, ip, lsl #3
   27f94:	0002bac8 	andeq	fp, r2, r8, asr #21
   27f98:	0002ab84 	andeq	sl, r2, r4, lsl #23

00027f9c <BcmMailBox>:
   27f9c:	e92d4070 	push	{r4, r5, r6, lr}
   27fa0:	e2504000 	subs	r4, r0, #0
   27fa4:	e1a05001 	mov	r5, r1
   27fa8:	0a000001 	beq	27fb4 <BcmMailBox+0x18>
   27fac:	e5845000 	str	r5, [r4]
   27fb0:	e8bd8070 	pop	{r4, r5, r6, pc}
   27fb4:	e3a02020 	mov	r2, #32
   27fb8:	e59f100c 	ldr	r1, [pc, #12]	; 27fcc <BcmMailBox+0x30>
   27fbc:	e59f000c 	ldr	r0, [pc, #12]	; 27fd0 <BcmMailBox+0x34>
   27fc0:	ebfff4ba 	bl	252b0 <assertion_failed>
   27fc4:	e5845000 	str	r5, [r4]
   27fc8:	e8bd8070 	pop	{r4, r5, r6, pc}
   27fcc:	0002bb80 	andeq	fp, r2, r0, lsl #23
   27fd0:	00029a68 	andeq	r9, r2, r8, ror #20

00027fd4 <_BcmMailBox>:
   27fd4:	e3500000 	cmp	r0, #0
   27fd8:	112fff1e 	bxne	lr
   27fdc:	e3a02027 	mov	r2, #39	; 0x27
   27fe0:	e59f1004 	ldr	r1, [pc, #4]	; 27fec <_BcmMailBox+0x18>
   27fe4:	e59f0004 	ldr	r0, [pc, #4]	; 27ff0 <_BcmMailBox+0x1c>
   27fe8:	eafff4b0 	b	252b0 <assertion_failed>
   27fec:	0002bb80 	andeq	fp, r2, r0, lsl #23
   27ff0:	00029a68 	andeq	r9, r2, r8, ror #20

00027ff4 <BcmMailBoxFlush>:
   27ff4:	e3500000 	cmp	r0, #0
   27ff8:	e92d4070 	push	{r4, r5, r6, lr}
   27ffc:	0a00000a 	beq	2802c <BcmMailBoxFlush+0x38>
   28000:	e59f4038 	ldr	r4, [pc, #56]	; 28040 <BcmMailBoxFlush+0x4c>
   28004:	e59f5038 	ldr	r5, [pc, #56]	; 28044 <BcmMailBoxFlush+0x50>
   28008:	e1a00004 	mov	r0, r4
   2800c:	ebffff20 	bl	27c94 <read32>
   28010:	e3100101 	tst	r0, #1073741824	; 0x40000000
   28014:	18bd8070 	popne	{r4, r5, r6, pc}
   28018:	e1a00005 	mov	r0, r5
   2801c:	ebffff1c 	bl	27c94 <read32>
   28020:	e3a00014 	mov	r0, #20
   28024:	ebfffa9f 	bl	26aa8 <TimerSimpleMsDelay>
   28028:	eafffff6 	b	28008 <BcmMailBoxFlush+0x14>
   2802c:	e3a0203e 	mov	r2, #62	; 0x3e
   28030:	e59f1010 	ldr	r1, [pc, #16]	; 28048 <BcmMailBoxFlush+0x54>
   28034:	e59f0010 	ldr	r0, [pc, #16]	; 2804c <BcmMailBoxFlush+0x58>
   28038:	ebfff49c 	bl	252b0 <assertion_failed>
   2803c:	eaffffef 	b	28000 <BcmMailBoxFlush+0xc>
   28040:	2000b898 	mulcs	r0, r8, r8
   28044:	2000b880 	andcs	fp, r0, r0, lsl #17
   28048:	0002bb80 	andeq	fp, r2, r0, lsl #23
   2804c:	00029a68 	andeq	r9, r2, r8, ror #20

00028050 <BcmMailBoxRead>:
   28050:	e92d4070 	push	{r4, r5, r6, lr}
   28054:	e2506000 	subs	r6, r0, #0
   28058:	0a00000d 	beq	28094 <BcmMailBoxRead+0x44>
   2805c:	e59f4044 	ldr	r4, [pc, #68]	; 280a8 <BcmMailBoxRead+0x58>
   28060:	e59f5044 	ldr	r5, [pc, #68]	; 280ac <BcmMailBoxRead+0x5c>
   28064:	e1a00004 	mov	r0, r4
   28068:	ebffff09 	bl	27c94 <read32>
   2806c:	e3100101 	tst	r0, #1073741824	; 0x40000000
   28070:	1afffffb 	bne	28064 <BcmMailBoxRead+0x14>
   28074:	e1a00005 	mov	r0, r5
   28078:	ebffff05 	bl	27c94 <read32>
   2807c:	e5963000 	ldr	r3, [r6]
   28080:	e200200f 	and	r2, r0, #15
   28084:	e1520003 	cmp	r2, r3
   28088:	1afffff5 	bne	28064 <BcmMailBoxRead+0x14>
   2808c:	e3c0000f 	bic	r0, r0, #15
   28090:	e8bd8070 	pop	{r4, r5, r6, pc}
   28094:	e3a0204a 	mov	r2, #74	; 0x4a
   28098:	e59f1010 	ldr	r1, [pc, #16]	; 280b0 <BcmMailBoxRead+0x60>
   2809c:	e59f0010 	ldr	r0, [pc, #16]	; 280b4 <BcmMailBoxRead+0x64>
   280a0:	ebfff482 	bl	252b0 <assertion_failed>
   280a4:	eaffffec 	b	2805c <BcmMailBoxRead+0xc>
   280a8:	2000b898 	mulcs	r0, r8, r8
   280ac:	2000b880 	andcs	fp, r0, r0, lsl #17
   280b0:	0002bb80 	andeq	fp, r2, r0, lsl #23
   280b4:	00029a68 	andeq	r9, r2, r8, ror #20

000280b8 <BcmMailBoxWrite>:
   280b8:	e92d4070 	push	{r4, r5, r6, lr}
   280bc:	e2506000 	subs	r6, r0, #0
   280c0:	e1a05001 	mov	r5, r1
   280c4:	0a000010 	beq	2810c <BcmMailBoxWrite+0x54>
   280c8:	e59f4050 	ldr	r4, [pc, #80]	; 28120 <BcmMailBoxWrite+0x68>
   280cc:	e1a00004 	mov	r0, r4
   280d0:	ebfffeef 	bl	27c94 <read32>
   280d4:	e3500000 	cmp	r0, #0
   280d8:	bafffffb 	blt	280cc <BcmMailBoxWrite+0x14>
   280dc:	e315000f 	tst	r5, #15
   280e0:	1a000004 	bne	280f8 <BcmMailBoxWrite+0x40>
   280e4:	e5961000 	ldr	r1, [r6]
   280e8:	e59f0034 	ldr	r0, [pc, #52]	; 28124 <BcmMailBoxWrite+0x6c>
   280ec:	e1851001 	orr	r1, r5, r1
   280f0:	e8bd4070 	pop	{r4, r5, r6, lr}
   280f4:	eafffee8 	b	27c9c <write32>
   280f8:	e3a02065 	mov	r2, #101	; 0x65
   280fc:	e59f1024 	ldr	r1, [pc, #36]	; 28128 <BcmMailBoxWrite+0x70>
   28100:	e59f0024 	ldr	r0, [pc, #36]	; 2812c <BcmMailBoxWrite+0x74>
   28104:	ebfff469 	bl	252b0 <assertion_failed>
   28108:	eafffff5 	b	280e4 <BcmMailBoxWrite+0x2c>
   2810c:	e3a0205e 	mov	r2, #94	; 0x5e
   28110:	e59f1010 	ldr	r1, [pc, #16]	; 28128 <BcmMailBoxWrite+0x70>
   28114:	e59f0014 	ldr	r0, [pc, #20]	; 28130 <BcmMailBoxWrite+0x78>
   28118:	ebfff464 	bl	252b0 <assertion_failed>
   2811c:	eaffffe9 	b	280c8 <BcmMailBoxWrite+0x10>
   28120:	2000b8b8 			; <UNDEFINED> instruction: 0x2000b8b8
   28124:	2000b8a0 	andcs	fp, r0, r0, lsr #17
   28128:	0002bb80 	andeq	fp, r2, r0, lsl #23
   2812c:	0002bb90 	muleq	r2, r0, fp
   28130:	00029a68 	andeq	r9, r2, r8, ror #20

00028134 <BcmMailBoxWriteRead>:
   28134:	e92d4070 	push	{r4, r5, r6, lr}
   28138:	e2504000 	subs	r4, r0, #0
   2813c:	e1a06001 	mov	r6, r1
   28140:	0a00000a 	beq	28170 <BcmMailBoxWriteRead+0x3c>
   28144:	e3a05000 	mov	r5, #0
   28148:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   2814c:	e1a00004 	mov	r0, r4
   28150:	ebffffa7 	bl	27ff4 <BcmMailBoxFlush>
   28154:	e1a01006 	mov	r1, r6
   28158:	e1a00004 	mov	r0, r4
   2815c:	ebffffd5 	bl	280b8 <BcmMailBoxWrite>
   28160:	e1a00004 	mov	r0, r4
   28164:	ebffffb9 	bl	28050 <BcmMailBoxRead>
   28168:	ee075fba 	mcr	15, 0, r5, cr7, cr10, {5}
   2816c:	e8bd8070 	pop	{r4, r5, r6, pc}
   28170:	e3a0202d 	mov	r2, #45	; 0x2d
   28174:	e59f1008 	ldr	r1, [pc, #8]	; 28184 <BcmMailBoxWriteRead+0x50>
   28178:	e59f0008 	ldr	r0, [pc, #8]	; 28188 <BcmMailBoxWriteRead+0x54>
   2817c:	ebfff44b 	bl	252b0 <assertion_failed>
   28180:	eaffffef 	b	28144 <BcmMailBoxWriteRead+0x10>
   28184:	0002bb80 	andeq	fp, r2, r0, lsl #23
   28188:	00029a68 	andeq	r9, r2, r8, ror #20

0002818c <UndefinedInstructionStub>:
   2818c:	e3a0d823 	mov	sp, #2293760	; 0x230000
   28190:	e24ee004 	sub	lr, lr, #4
   28194:	e92d4000 	stmfd	sp!, {lr}
   28198:	e14fe000 	mrs	lr, SPSR
   2819c:	e92d4000 	stmfd	sp!, {lr}
   281a0:	e94d7fff 	stmdb	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   281a4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   281a8:	e1a0100d 	mov	r1, sp
   281ac:	f1020012 	cps	#18
   281b0:	e1a0200d 	mov	r2, sp
   281b4:	e1a0300e 	mov	r3, lr
   281b8:	f102001f 	cps	#31
   281bc:	e1a0d001 	mov	sp, r1
   281c0:	e92d000c 	push	{r2, r3}
   281c4:	e1a0100d 	mov	r1, sp
   281c8:	e3a00001 	mov	r0, #1
   281cc:	eaffff59 	b	27f38 <ExceptionHandler>

000281d0 <PrefetchAbortStub>:
   281d0:	e3a0d823 	mov	sp, #2293760	; 0x230000
   281d4:	e24ee004 	sub	lr, lr, #4
   281d8:	e92d4000 	stmfd	sp!, {lr}
   281dc:	e14fe000 	mrs	lr, SPSR
   281e0:	e92d4000 	stmfd	sp!, {lr}
   281e4:	e94d7fff 	stmdb	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   281e8:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   281ec:	e1a0100d 	mov	r1, sp
   281f0:	f1020012 	cps	#18
   281f4:	e1a0200d 	mov	r2, sp
   281f8:	e1a0300e 	mov	r3, lr
   281fc:	f102001f 	cps	#31
   28200:	e1a0d001 	mov	sp, r1
   28204:	e92d000c 	push	{r2, r3}
   28208:	e1a0100d 	mov	r1, sp
   2820c:	e3a00002 	mov	r0, #2
   28210:	eaffff48 	b	27f38 <ExceptionHandler>

00028214 <DataAbortStub>:
   28214:	e3a0d823 	mov	sp, #2293760	; 0x230000
   28218:	e24ee008 	sub	lr, lr, #8
   2821c:	e92d4000 	stmfd	sp!, {lr}
   28220:	e14fe000 	mrs	lr, SPSR
   28224:	e92d4000 	stmfd	sp!, {lr}
   28228:	e94d7fff 	stmdb	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
   2822c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   28230:	e1a0100d 	mov	r1, sp
   28234:	f1020012 	cps	#18
   28238:	e1a0200d 	mov	r2, sp
   2823c:	e1a0300e 	mov	r3, lr
   28240:	f102001f 	cps	#31
   28244:	e1a0d001 	mov	sp, r1
   28248:	e92d000c 	push	{r2, r3}
   2824c:	e1a0100d 	mov	r1, sp
   28250:	e3a00003 	mov	r0, #3
   28254:	eaffff37 	b	27f38 <ExceptionHandler>

00028258 <IRQStub>:
   28258:	e3a0d98e 	mov	sp, #2326528	; 0x238000
   2825c:	e24ee004 	sub	lr, lr, #4
   28260:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
   28264:	ebfffe1b 	bl	27ad8 <InterruptHandler>
   28268:	e8fd9fff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

Disassembly of section .rodata:

0002826c <pRegs>:
static volatile BCM2835_TIMER_REGS * const pRegs = (BCM2835_TIMER_REGS *) (portTIMER_BASE);
   2826c:	2000b400 	andcs	fp, r0, r0, lsl #8
   28270:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
   28274:	00000000 	andeq	r0, r0, r0

00028278 <pRegs>:
static volatile BCM2835_INTC_REGS * const pRegs = (BCM2835_INTC_REGS *) (BCM2835_BASE_INTC);
   28278:	2000b200 	andcs	fp, r0, r0, lsl #4

0002827c <pRegs>:
volatile BCM2835_GPIO_REGS * const pRegs = (BCM2835_GPIO_REGS *) (0x20200000);
   2827c:	20200000 	eorcs	r0, r0, r0

00028280 <font>:
const unsigned char font[96][6] = {
   28280:	00000000 	andeq	r0, r0, r0
   28284:	005c0000 	subseq	r0, ip, r0
   28288:	00000000 	andeq	r0, r0, r0
   2828c:	00060006 	andeq	r0, r6, r6
   28290:	7c280000 	stcvc	0, cr0, [r8], #-0
   28294:	00287c28 	eoreq	r7, r8, r8, lsr #24
   28298:	54fe545c 	ldrbtpl	r5, [lr], #1116	; 0x45c
   2829c:	20440074 	subcs	r0, r4, r4, ror r0
   282a0:	00440810 	subeq	r0, r4, r0, lsl r8
   282a4:	20545428 	subscs	r5, r4, r8, lsr #8
   282a8:	00060050 	andeq	r0, r6, r0, asr r0
   282ac:	00000000 	andeq	r0, r0, r0
   282b0:	00004438 	andeq	r4, r0, r8, lsr r4
   282b4:	38440000 	stmdacc	r4, {}^	; <UNPREDICTABLE>
   282b8:	00000000 	andeq	r0, r0, r0
   282bc:	00020702 	andeq	r0, r2, r2, lsl #14
   282c0:	10100000 	andsne	r0, r0, r0
   282c4:	0010107c 	andseq	r1, r0, ip, ror r0
   282c8:	000000c0 	andeq	r0, r0, r0, asr #1
   282cc:	10100000 	andsne	r0, r0, r0
   282d0:	00101010 	andseq	r1, r0, r0, lsl r0
   282d4:	00000040 	andeq	r0, r0, r0, asr #32
   282d8:	10600000 	rsbne	r0, r0, r0
   282dc:	0000000c 	andeq	r0, r0, ip
   282e0:	4c54647c 	cfldrdmi	mvd6, [r4], {124}	; 0x7c
   282e4:	7c48007c 	mcrrvc	0, 7, r0, r8, cr12
   282e8:	00000040 	andeq	r0, r0, r0, asr #32
   282ec:	54545464 	ldrbpl	r5, [r4], #-1124	; 0xfffffb9c
   282f0:	54440048 	strbpl	r0, [r4], #-72	; 0xffffffb8
   282f4:	006c5454 	rsbeq	r5, ip, r4, asr r4
   282f8:	2070203c 	rsbscs	r2, r0, ip, lsr r0
   282fc:	545c0020 	ldrbpl	r0, [ip], #-32	; 0xffffffe0
   28300:	00245454 	eoreq	r5, r4, r4, asr r4
   28304:	5454547c 	ldrbpl	r5, [r4], #-1148	; 0xfffffb84
   28308:	04040074 	streq	r0, [r4], #-116	; 0xffffff8c
   2830c:	000c1464 	andeq	r1, ip, r4, ror #8
   28310:	5454547c 	ldrbpl	r5, [r4], #-1148	; 0xfffffb84
   28314:	545c007c 	ldrbpl	r0, [ip], #-124	; 0xffffff84
   28318:	007c5454 	rsbseq	r5, ip, r4, asr r4
   2831c:	00000044 	andeq	r0, r0, r4, asr #32
   28320:	00c40000 	sbceq	r0, r4, r0
   28324:	00000000 	andeq	r0, r0, r0
   28328:	00442810 	subeq	r2, r4, r0, lsl r8
   2832c:	28280000 	stmdacs	r8!, {}	; <UNPREDICTABLE>
   28330:	00282828 	eoreq	r2, r8, r8, lsr #16
   28334:	00102844 	andseq	r2, r0, r4, asr #16
   28338:	04080000 	streq	r0, [r8], #-0
   2833c:	00000854 	andeq	r0, r0, r4, asr r8
   28340:	5454447c 	ldrbpl	r4, [r4], #-1148	; 0xfffffb84
   28344:	247c005c 	ldrbtcs	r0, [ip], #-92	; 0xffffffa4
   28348:	007c2424 	rsbseq	r2, ip, r4, lsr #8
   2834c:	5454547c 	ldrbpl	r5, [r4], #-1148	; 0xfffffb84
   28350:	447c006c 	ldrbtmi	r0, [ip], #-108	; 0xffffff94
   28354:	00444444 	subeq	r4, r4, r4, asr #8
   28358:	4444447c 	strbmi	r4, [r4], #-1148	; 0xfffffb84
   2835c:	547c0038 	ldrbtpl	r0, [ip], #-56	; 0xffffffc8
   28360:	00445454 	subeq	r5, r4, r4, asr r4
   28364:	1414147c 	ldrne	r1, [r4], #-1148	; 0xfffffb84
   28368:	447c0004 	ldrbtmi	r0, [ip], #-4
   2836c:	00745444 	rsbseq	r5, r4, r4, asr #8
   28370:	1010107c 	andsne	r1, r0, ip, ror r0
   28374:	4444007c 	strbmi	r0, [r4], #-124	; 0xffffff84
   28378:	0044447c 	subeq	r4, r4, ip, ror r4
   2837c:	44404060 	strbmi	r4, [r0], #-96	; 0xffffffa0
   28380:	107c007c 	rsbsne	r0, ip, ip, ror r0
   28384:	00442810 	subeq	r2, r4, r0, lsl r8
   28388:	4040407c 	submi	r4, r0, ip, ror r0
   2838c:	087c0040 	ldmdaeq	ip!, {r6}^
   28390:	007c0810 	rsbseq	r0, ip, r0, lsl r8
   28394:	2010087c 	andscs	r0, r0, ip, ror r8
   28398:	4438007c 	ldrtmi	r0, [r8], #-124	; 0xffffff84
   2839c:	00384444 	eorseq	r4, r8, r4, asr #8
   283a0:	1414147c 	ldrne	r1, [r4], #-1148	; 0xfffffb84
   283a4:	243c0008 	ldrtcs	r0, [ip], #-8
   283a8:	003c2464 	eorseq	r2, ip, r4, ror #8
   283ac:	1414147c 	ldrne	r1, [r4], #-1148	; 0xfffffb84
   283b0:	545c0068 	ldrbpl	r0, [ip], #-104	; 0xffffff98
   283b4:	00745454 	rsbseq	r5, r4, r4, asr r4
   283b8:	047c0404 	ldrbteq	r0, [ip], #-1028	; 0xfffffbfc
   283bc:	407c0004 	rsbsmi	r0, ip, r4
   283c0:	007c4040 	rsbseq	r4, ip, r0, asr #32
   283c4:	3040300c 	subcc	r3, r0, ip
   283c8:	403c000c 	eorsmi	r0, ip, ip
   283cc:	003c4030 	eorseq	r4, ip, r0, lsr r0
   283d0:	28102844 	ldmdacs	r0, {r2, r6, fp, sp}
   283d4:	100c0044 	andne	r0, ip, r4, asr #32
   283d8:	000c1060 	andeq	r1, ip, r0, rrx
   283dc:	4c546444 	cfldrdmi	mvd6, [r4], {68}	; 0x44
   283e0:	447c0044 	ldrbtmi	r0, [ip], #-68	; 0xffffffbc
   283e4:	00000000 	andeq	r0, r0, r0
   283e8:	0060100c 	rsbeq	r1, r0, ip
   283ec:	7c440000 	marvc	acc0, r0, r4
   283f0:	00000000 	andeq	r0, r0, r0
   283f4:	01000100 	mrseq	r0, (UNDEF: 16)
   283f8:	40400000 	submi	r0, r0, r0
   283fc:	40404040 	submi	r4, r0, r0, asr #32
   28400:	00000100 	andeq	r0, r0, r0, lsl #2
   28404:	247c0000 	ldrbtcs	r0, [ip], #-0
   28408:	007c2424 	rsbseq	r2, ip, r4, lsr #8
   2840c:	5454547c 	ldrbpl	r5, [r4], #-1148	; 0xfffffb84
   28410:	447c006c 	ldrbtmi	r0, [ip], #-108	; 0xffffff94
   28414:	00444444 	subeq	r4, r4, r4, asr #8
   28418:	4444447c 	strbmi	r4, [r4], #-1148	; 0xfffffb84
   2841c:	547c0038 	ldrbtpl	r0, [ip], #-56	; 0xffffffc8
   28420:	00445454 	subeq	r5, r4, r4, asr r4
   28424:	1414147c 	ldrne	r1, [r4], #-1148	; 0xfffffb84
   28428:	447c0004 	ldrbtmi	r0, [ip], #-4
   2842c:	00745444 	rsbseq	r5, r4, r4, asr #8
   28430:	1010107c 	andsne	r1, r0, ip, ror r0
   28434:	4444007c 	strbmi	r0, [r4], #-124	; 0xffffff84
   28438:	0044447c 	subeq	r4, r4, ip, ror r4
   2843c:	44404060 	strbmi	r4, [r0], #-96	; 0xffffffa0
   28440:	107c007c 	rsbsne	r0, ip, ip, ror r0
   28444:	00442810 	subeq	r2, r4, r0, lsl r8
   28448:	4040407c 	submi	r4, r0, ip, ror r0
   2844c:	087c0040 	ldmdaeq	ip!, {r6}^
   28450:	007c0810 	rsbseq	r0, ip, r0, lsl r8
   28454:	2010087c 	andscs	r0, r0, ip, ror r8
   28458:	4438007c 	ldrtmi	r0, [r8], #-124	; 0xffffff84
   2845c:	00384444 	eorseq	r4, r8, r4, asr #8
   28460:	1414147c 	ldrne	r1, [r4], #-1148	; 0xfffffb84
   28464:	243c0008 	ldrtcs	r0, [ip], #-8
   28468:	003c2464 	eorseq	r2, ip, r4, ror #8
   2846c:	1414147c 	ldrne	r1, [r4], #-1148	; 0xfffffb84
   28470:	545c0068 	ldrbpl	r0, [ip], #-104	; 0xffffff98
   28474:	00745454 	rsbseq	r5, r4, r4, asr r4
   28478:	047c0404 	ldrbteq	r0, [ip], #-1028	; 0xfffffbfc
   2847c:	407c0004 	rsbsmi	r0, ip, r4
   28480:	007c4040 	rsbseq	r4, ip, r0, asr #32
   28484:	3040300c 	subcc	r3, r0, ip
   28488:	403c000c 	eorsmi	r0, ip, ip
   2848c:	003c4030 	eorseq	r4, ip, r0, lsr r0
   28490:	28102844 	ldmdacs	r0, {r2, r6, fp, sp}
   28494:	100c0044 	andne	r0, ip, r4, asr #32
   28498:	000c1060 	andeq	r1, ip, r0, rrx
   2849c:	4c546444 	cfldrdmi	mvd6, [r4], {68}	; 0x44
   284a0:	7c100044 	ldcvc	0, cr0, [r0], {68}	; 0x44
   284a4:	00000044 	andeq	r0, r0, r4, asr #32
   284a8:	0000006c 	andeq	r0, r0, ip, rrx
   284ac:	7c440000 	marvc	acc0, r0, r4
   284b0:	00000010 	andeq	r0, r0, r0, lsl r0
   284b4:	01020102 	tsteq	r2, r2, lsl #2
	...
   284c0:	33323130 	teqcc	r2, #48, 2
   284c4:	37363534 			; <UNDEFINED> instruction: 0x37363534
   284c8:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
   284cc:	46454443 	strbmi	r4, [r5], -r3, asr #8
   284d0:	74726f46 	ldrbtvc	r6, [r2], #-3910	; 0xfffff0ba
   284d4:	77542d79 			; <UNDEFINED> instruction: 0x77542d79
   284d8:	0000006f 	andeq	r0, r0, pc, rrx

000284dc <heapSTRUCT_SIZE>:
static const unsigned short heapSTRUCT_SIZE	= ( sizeof( xBlockLink ) + portBYTE_ALIGNMENT - ( sizeof( xBlockLink ) % portBYTE_ALIGNMENT ) );
   284dc:	00000010 	andeq	r0, r0, r0, lsl r0

000284e0 <xTotalHeapSize>:
static const size_t xTotalHeapSize = ( ( size_t ) configTOTAL_HEAP_SIZE ) & ( ( size_t ) ~portBYTE_ALIGNMENT_MASK );
   284e0:	00001000 	andeq	r1, r0, r0
   284e4:	6e6e6143 	powvsem	f6, f6, f3
   284e8:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   284ec:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
   284f0:	7a696c61 	bvc	1a8367c <mailbuffer+0x1a564dc>
   284f4:	53552065 	cmppl	r5, #101	; 0x65
   284f8:	00006950 	andeq	r6, r0, r0, asr r9
   284fc:	6279654b 	rsbsvs	r6, r9, #314572800	; 0x12c00000
   28500:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
   28504:	746f6e20 	strbtvc	r6, [pc], #-3616	; 2850c <xTotalHeapSize+0x2c>
   28508:	756f6620 	strbvc	r6, [pc, #-1568]!	; 27ef0 <ExceptionHandlerThrow2+0xe8>
   2850c:	0021646e 	eoreq	r6, r1, lr, ror #8
   28510:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
   28514:	75747320 	ldrbvc	r7, [r4, #-800]!	; 0xfffffce0
   28518:	2e2e6666 	cfmadda32cs	mvax3, mvax6, mvfx14, mvfx6
   2851c:	0000002e 	andeq	r0, r0, lr, lsr #32
   28520:	5f44454c 	svcpl	0x0044454c
   28524:	00000030 	andeq	r0, r0, r0, lsr r0
   28528:	5f44454c 	svcpl	0x0044454c
   2852c:	00000031 	andeq	r0, r0, r1, lsr r0
   28530:	65726353 	ldrbvs	r6, [r2, #-851]!	; 0xfffffcad
   28534:	505f6e65 	subspl	r6, pc, r5, ror #28
   28538:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
   2853c:	00000000 	andeq	r0, r0, r0

00028540 <FromUSPi>:
   28540:	69707375 	ldmdbvs	r0!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
   28544:	00000000 	andeq	r0, r0, r0

00028548 <FromDWHCI>:
   28548:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2854c:	00000069 	andeq	r0, r0, r9, rrx

00028550 <CSWTCH.1>:
   28550:	00000102 	andeq	r0, r0, r2, lsl #2

00028554 <CSWTCH.1>:
   28554:	00000000 	andeq	r0, r0, r0
   28558:	00000002 	andeq	r0, r0, r2
   2855c:	00000003 	andeq	r0, r0, r3

00028560 <CSWTCH.2>:
   28560:	00020003 	andeq	r0, r2, r3

00028564 <FromDevice>:
   28564:	64627375 	strbtvs	r7, [r2], #-885	; 0xfffffc8b
   28568:	00007665 	andeq	r7, r0, r5, ror #12

0002856c <FromHub>:
   2856c:	68627375 	stmdavs	r2!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
   28570:	00006275 	andeq	r6, r0, r5, ror r2

00028574 <FromUSBFunction>:
   28574:	66627375 			; <UNDEFINED> instruction: 0x66627375
   28578:	00007463 	andeq	r7, r0, r3, ror #8

0002857c <FromSMSC951x>:
   2857c:	63736d73 	cmnvs	r3, #7360	; 0x1cc0
   28580:	78313539 	ldmdavc	r1!, {r0, r3, r4, r5, r8, sl, ip, sp}
   28584:	00000000 	andeq	r0, r0, r0

00028588 <FromLAN7800>:
   28588:	376e616c 	strbcc	r6, [lr, -ip, ror #2]!
   2858c:	00303038 	eorseq	r3, r0, r8, lsr r0

00028590 <FromUmsd>:
   28590:	64736d75 	ldrbtvs	r6, [r3], #-3445	; 0xfffff28b
   28594:	00000000 	andeq	r0, r0, r0

00028598 <FromUSBKbd>:
   28598:	6b627375 	blvs	18c5374 <mailbuffer+0x18981d4>
   2859c:	00006462 	andeq	r6, r0, r2, ror #8

000285a0 <FromDWHCIRoot>:
   285a0:	6f727764 	svcvs	0x00727764
   285a4:	0000746f 	andeq	r7, r0, pc, ror #8

000285a8 <FromUSBMouse>:
   285a8:	756f6d75 	strbvc	r6, [pc, #-3445]!	; 2783b <InterruptSystemEnableIRQ+0x47>
   285ac:	00006573 	andeq	r6, r0, r3, ror r5

000285b0 <FromUSBPad>:
   285b0:	70627375 	rsbvc	r7, r2, r5, ror r3
   285b4:	00006461 	andeq	r6, r0, r1, ror #8

000285b8 <leds.4736>:
   285b8:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
   285bc:	00000008 	andeq	r0, r0, r8

000285c0 <FromMIDI>:
   285c0:	64696d75 	strbtvs	r6, [r9], #-3445	; 0xfffff28b
   285c4:	00000069 	andeq	r0, r0, r9, rrx

000285c8 <cin_to_length>:
	...
   285d0:	00000002 	andeq	r0, r0, r2
   285d4:	00000003 	andeq	r0, r0, r3
   285d8:	00000003 	andeq	r0, r0, r3
   285dc:	00000001 	andeq	r0, r0, r1
   285e0:	00000002 	andeq	r0, r0, r2
   285e4:	00000003 	andeq	r0, r0, r3
   285e8:	00000003 	andeq	r0, r0, r3
   285ec:	00000003 	andeq	r0, r0, r3
   285f0:	00000003 	andeq	r0, r0, r3
   285f4:	00000003 	andeq	r0, r0, r3
   285f8:	00000002 	andeq	r0, r0, r2
   285fc:	00000002 	andeq	r0, r0, r2
   28600:	00000003 	andeq	r0, r0, r3
   28604:	00000001 	andeq	r0, r0, r1

00028608 <s_DefaultMap>:
	...
   28628:	00410061 	subeq	r0, r1, r1, rrx
   2862c:	00000000 	andeq	r0, r0, r0
   28630:	00420062 	subeq	r0, r2, r2, rrx
   28634:	00000000 	andeq	r0, r0, r0
   28638:	00430063 	subeq	r0, r3, r3, rrx
   2863c:	00000000 	andeq	r0, r0, r0
   28640:	00440064 	subeq	r0, r4, r4, rrx
   28644:	00000000 	andeq	r0, r0, r0
   28648:	00450065 	subeq	r0, r5, r5, rrx
   2864c:	00000000 	andeq	r0, r0, r0
   28650:	00460066 	subeq	r0, r6, r6, rrx
   28654:	00000000 	andeq	r0, r0, r0
   28658:	00470067 	subeq	r0, r7, r7, rrx
   2865c:	00000000 	andeq	r0, r0, r0
   28660:	00480068 	subeq	r0, r8, r8, rrx
   28664:	00000000 	andeq	r0, r0, r0
   28668:	00490069 	subeq	r0, r9, r9, rrx
   2866c:	00000000 	andeq	r0, r0, r0
   28670:	004a006a 	subeq	r0, sl, sl, rrx
   28674:	00000000 	andeq	r0, r0, r0
   28678:	004b006b 	subeq	r0, fp, fp, rrx
   2867c:	00000000 	andeq	r0, r0, r0
   28680:	004c006c 	subeq	r0, ip, ip, rrx
   28684:	00000000 	andeq	r0, r0, r0
   28688:	004d006d 	subeq	r0, sp, sp, rrx
   2868c:	00000000 	andeq	r0, r0, r0
   28690:	004e006e 	subeq	r0, lr, lr, rrx
   28694:	00000000 	andeq	r0, r0, r0
   28698:	004f006f 	subeq	r0, pc, pc, rrx
   2869c:	00000000 	andeq	r0, r0, r0
   286a0:	00500070 	subseq	r0, r0, r0, ror r0
   286a4:	00000000 	andeq	r0, r0, r0
   286a8:	00510071 	subseq	r0, r1, r1, ror r0
   286ac:	00000000 	andeq	r0, r0, r0
   286b0:	00520072 	subseq	r0, r2, r2, ror r0
   286b4:	00000000 	andeq	r0, r0, r0
   286b8:	00530073 	subseq	r0, r3, r3, ror r0
   286bc:	00000000 	andeq	r0, r0, r0
   286c0:	00540074 	subseq	r0, r4, r4, ror r0
   286c4:	00000000 	andeq	r0, r0, r0
   286c8:	00550075 	subseq	r0, r5, r5, ror r0
   286cc:	00000000 	andeq	r0, r0, r0
   286d0:	00560076 	subseq	r0, r6, r6, ror r0
   286d4:	00000000 	andeq	r0, r0, r0
   286d8:	00570077 	subseq	r0, r7, r7, ror r0
   286dc:	00000000 	andeq	r0, r0, r0
   286e0:	00580078 	subseq	r0, r8, r8, ror r0
   286e4:	00000000 	andeq	r0, r0, r0
   286e8:	00590079 	subseq	r0, r9, r9, ror r0
   286ec:	00000000 	andeq	r0, r0, r0
   286f0:	005a007a 	subseq	r0, sl, sl, ror r0
   286f4:	00000000 	andeq	r0, r0, r0
   286f8:	00210031 	eoreq	r0, r1, r1, lsr r0
   286fc:	00000000 	andeq	r0, r0, r0
   28700:	00220032 	eoreq	r0, r2, r2, lsr r0
   28704:	00000000 	andeq	r0, r0, r0
   28708:	00a30033 	adceq	r0, r3, r3, lsr r0
   2870c:	00000000 	andeq	r0, r0, r0
   28710:	00240034 	eoreq	r0, r4, r4, lsr r0
   28714:	00000000 	andeq	r0, r0, r0
   28718:	00250035 	eoreq	r0, r5, r5, lsr r0
   2871c:	00000000 	andeq	r0, r0, r0
   28720:	005e0036 	subseq	r0, lr, r6, lsr r0
   28724:	00000000 	andeq	r0, r0, r0
   28728:	00260037 	eoreq	r0, r6, r7, lsr r0
   2872c:	00000000 	andeq	r0, r0, r0
   28730:	002a0038 	eoreq	r0, sl, r8, lsr r0
   28734:	00000000 	andeq	r0, r0, r0
   28738:	00280039 	eoreq	r0, r8, r9, lsr r0
   2873c:	00000000 	andeq	r0, r0, r0
   28740:	00290030 	eoreq	r0, r9, r0, lsr r0
   28744:	00000000 	andeq	r0, r0, r0
   28748:	01040104 	tsteq	r4, r4, lsl #2
   2874c:	00000000 	andeq	r0, r0, r0
   28750:	01010101 	tsteq	r1, r1, lsl #2
   28754:	00000000 	andeq	r0, r0, r0
   28758:	01020102 	tsteq	r2, r2, lsl #2
   2875c:	00000000 	andeq	r0, r0, r0
   28760:	01030103 	tsteq	r3, r3, lsl #2
   28764:	00000000 	andeq	r0, r0, r0
   28768:	01000100 	mrseq	r0, (UNDEF: 16)
   2876c:	00000000 	andeq	r0, r0, r0
   28770:	005f002d 	subseq	r0, pc, sp, lsr #32
   28774:	00000000 	andeq	r0, r0, r0
   28778:	002b003d 	eoreq	r0, fp, sp, lsr r0
   2877c:	00000000 	andeq	r0, r0, r0
   28780:	007b005b 	rsbseq	r0, fp, fp, asr r0
   28784:	00000000 	andeq	r0, r0, r0
   28788:	007d005d 	rsbseq	r0, sp, sp, asr r0
   2878c:	00000000 	andeq	r0, r0, r0
   28790:	007e0023 	rsbseq	r0, lr, r3, lsr #32
   28794:	00000000 	andeq	r0, r0, r0
   28798:	007e0023 	rsbseq	r0, lr, r3, lsr #32
   2879c:	00000000 	andeq	r0, r0, r0
   287a0:	003a003b 	eorseq	r0, sl, fp, lsr r0
   287a4:	00000000 	andeq	r0, r0, r0
   287a8:	00400027 	subeq	r0, r0, r7, lsr #32
   287ac:	00000000 	andeq	r0, r0, r0
   287b0:	00ac0060 	adceq	r0, ip, r0, rrx
   287b4:	0000007c 	andeq	r0, r0, ip, ror r0
   287b8:	003c002c 	eorseq	r0, ip, ip, lsr #32
   287bc:	00000000 	andeq	r0, r0, r0
   287c0:	003e002e 	eorseq	r0, lr, lr, lsr #32
   287c4:	00000000 	andeq	r0, r0, r0
   287c8:	003f002f 	eorseq	r0, pc, pc, lsr #32
   287cc:	00000000 	andeq	r0, r0, r0
   287d0:	011c011c 	tsteq	ip, ip, lsl r1
   287d4:	00000000 	andeq	r0, r0, r0
   287d8:	0000010f 	andeq	r0, r0, pc, lsl #2
   287dc:	00000000 	andeq	r0, r0, r0
   287e0:	00000110 	andeq	r0, r0, r0, lsl r1
   287e4:	00000000 	andeq	r0, r0, r0
   287e8:	00000111 	andeq	r0, r0, r1, lsl r1
   287ec:	00000000 	andeq	r0, r0, r0
   287f0:	00000112 	andeq	r0, r0, r2, lsl r1
   287f4:	00000000 	andeq	r0, r0, r0
   287f8:	00000113 	andeq	r0, r0, r3, lsl r1
   287fc:	00000000 	andeq	r0, r0, r0
   28800:	00000114 	andeq	r0, r0, r4, lsl r1
   28804:	00000000 	andeq	r0, r0, r0
   28808:	00000115 	andeq	r0, r0, r5, lsl r1
   2880c:	00000000 	andeq	r0, r0, r0
   28810:	00000116 	andeq	r0, r0, r6, lsl r1
   28814:	00000000 	andeq	r0, r0, r0
   28818:	00000117 	andeq	r0, r0, r7, lsl r1
   2881c:	00000000 	andeq	r0, r0, r0
   28820:	00000118 	andeq	r0, r0, r8, lsl r1
   28824:	00000000 	andeq	r0, r0, r0
   28828:	00000119 	andeq	r0, r0, r9, lsl r1
   2882c:	00000000 	andeq	r0, r0, r0
   28830:	0000011a 	andeq	r0, r0, sl, lsl r1
   28834:	00000000 	andeq	r0, r0, r0
   28838:	0000011d 	andeq	r0, r0, sp, lsl r1
   2883c:	00000000 	andeq	r0, r0, r0
   28840:	0000011e 	andeq	r0, r0, lr, lsl r1
   28844:	00000000 	andeq	r0, r0, r0
   28848:	0000011f 	andeq	r0, r0, pc, lsl r1
   2884c:	00000000 	andeq	r0, r0, r0
   28850:	00000105 	andeq	r0, r0, r5, lsl #2
   28854:	00000000 	andeq	r0, r0, r0
   28858:	00000106 	andeq	r0, r0, r6, lsl #2
   2885c:	00000000 	andeq	r0, r0, r0
   28860:	00000107 	andeq	r0, r0, r7, lsl #2
   28864:	00000000 	andeq	r0, r0, r0
   28868:	00000108 	andeq	r0, r0, r8, lsl #2
   2886c:	00000000 	andeq	r0, r0, r0
   28870:	00000109 	andeq	r0, r0, r9, lsl #2
   28874:	00000000 	andeq	r0, r0, r0
   28878:	0000010a 	andeq	r0, r0, sl, lsl #2
   2887c:	00000000 	andeq	r0, r0, r0
   28880:	0000010e 	andeq	r0, r0, lr, lsl #2
   28884:	00000000 	andeq	r0, r0, r0
   28888:	0000010d 	andeq	r0, r0, sp, lsl #2
   2888c:	00000000 	andeq	r0, r0, r0
   28890:	0000010c 	andeq	r0, r0, ip, lsl #2
   28894:	00000000 	andeq	r0, r0, r0
   28898:	0000010b 	andeq	r0, r0, fp, lsl #2
   2889c:	00000000 	andeq	r0, r0, r0
   288a0:	01200120 			; <UNDEFINED> instruction: 0x01200120
   288a4:	00000000 	andeq	r0, r0, r0
   288a8:	01210121 			; <UNDEFINED> instruction: 0x01210121
   288ac:	00000000 	andeq	r0, r0, r0
   288b0:	01220122 			; <UNDEFINED> instruction: 0x01220122
   288b4:	00000000 	andeq	r0, r0, r0
   288b8:	01230123 			; <UNDEFINED> instruction: 0x01230123
   288bc:	00000000 	andeq	r0, r0, r0
   288c0:	01240124 			; <UNDEFINED> instruction: 0x01240124
   288c4:	00000000 	andeq	r0, r0, r0
   288c8:	01250125 			; <UNDEFINED> instruction: 0x01250125
   288cc:	00000000 	andeq	r0, r0, r0
   288d0:	01260109 			; <UNDEFINED> instruction: 0x01260109
   288d4:	00000000 	andeq	r0, r0, r0
   288d8:	0127010c 			; <UNDEFINED> instruction: 0x0127010c
   288dc:	00000000 	andeq	r0, r0, r0
   288e0:	0128010a 			; <UNDEFINED> instruction: 0x0128010a
   288e4:	00000000 	andeq	r0, r0, r0
   288e8:	0129010d 			; <UNDEFINED> instruction: 0x0129010d
   288ec:	00000000 	andeq	r0, r0, r0
   288f0:	012a0130 			; <UNDEFINED> instruction: 0x012a0130
   288f4:	00000000 	andeq	r0, r0, r0
   288f8:	012b010e 			; <UNDEFINED> instruction: 0x012b010e
   288fc:	00000000 	andeq	r0, r0, r0
   28900:	012c0106 			; <UNDEFINED> instruction: 0x012c0106
   28904:	00000000 	andeq	r0, r0, r0
   28908:	012d010b 			; <UNDEFINED> instruction: 0x012d010b
   2890c:	00000000 	andeq	r0, r0, r0
   28910:	012e0107 			; <UNDEFINED> instruction: 0x012e0107
   28914:	00000000 	andeq	r0, r0, r0
   28918:	012f0105 			; <UNDEFINED> instruction: 0x012f0105
   2891c:	00000000 	andeq	r0, r0, r0
   28920:	01320108 	teqeq	r2, r8, lsl #2
   28924:	00000000 	andeq	r0, r0, r0
   28928:	007c005c 	rsbseq	r0, ip, ip, asr r0
   2892c:	00000000 	andeq	r0, r0, r0
   28930:	011b011b 	tsteq	fp, fp, lsl r1
	...

00028a08 <s_KeyStrings>:
   28a08:	0002b678 	andeq	fp, r2, r8, ror r6
   28a0c:	0002b67c 	andeq	fp, r2, ip, ror r6
   28a10:	0002b680 	andeq	fp, r2, r0, lsl #13
   28a14:	0002b684 	andeq	fp, r2, r4, lsl #13
   28a18:	0002b688 	andeq	fp, r2, r8, lsl #13
   28a1c:	0002b68c 	andeq	fp, r2, ip, lsl #13
   28a20:	0002b694 	muleq	r2, r4, r6
   28a24:	0002b69c 	muleq	r2, ip, r6
   28a28:	0002b6a4 	andeq	fp, r2, r4, lsr #13
   28a2c:	0002b6ac 	andeq	fp, r2, ip, lsr #13
   28a30:	0002b6b4 			; <UNDEFINED> instruction: 0x0002b6b4
   28a34:	0002b6bc 			; <UNDEFINED> instruction: 0x0002b6bc
   28a38:	0002b6c0 	andeq	fp, r2, r0, asr #13
   28a3c:	0002b6c4 	andeq	fp, r2, r4, asr #13
   28a40:	0002b6c8 	andeq	fp, r2, r8, asr #13
   28a44:	0002b6cc 	andeq	fp, r2, ip, asr #13
   28a48:	0002b6d4 	ldrdeq	fp, [r2], -r4
   28a4c:	0002b6dc 	ldrdeq	fp, [r2], -ip
   28a50:	0002b6e4 	andeq	fp, r2, r4, ror #13
   28a54:	0002b6ec 	andeq	fp, r2, ip, ror #13
   28a58:	0002b6f4 	strdeq	fp, [r2], -r4
   28a5c:	0002b6fc 	strdeq	fp, [r2], -ip
   28a60:	0002b704 	andeq	fp, r2, r4, lsl #14
   28a64:	0002b70c 	andeq	fp, r2, ip, lsl #14
	...
   28a8c:	0002b714 	andeq	fp, r2, r4, lsl r7
   28a90:	0002b718 	andeq	fp, r2, r8, lsl r7
   28a94:	0002b71c 	andeq	fp, r2, ip, lsl r7
   28a98:	0002b720 	andeq	fp, r2, r0, lsr #14
   28a9c:	0002b688 	andeq	fp, r2, r8, lsl #13
   28aa0:	00029970 	andeq	r9, r2, r0, ror r9
   28aa4:	0002b724 	andeq	fp, r2, r4, lsr #14
   28aa8:	0002b728 	andeq	fp, r2, r8, lsr #14
   28aac:	0002b72c 	andeq	fp, r2, ip, lsr #14
   28ab0:	0002b730 	andeq	fp, r2, r0, lsr r7
   28ab4:	0002b734 	andeq	fp, r2, r4, lsr r7
   28ab8:	0002b738 	andeq	fp, r2, r8, lsr r7
   28abc:	0002b73c 	andeq	fp, r2, ip, lsr r7
   28ac0:	0002b740 	andeq	fp, r2, r0, asr #14
   28ac4:	000299fc 	strdeq	r9, [r2], -ip
   28ac8:	0002b744 	andeq	fp, r2, r4, asr #14
   28acc:	0002b748 	andeq	fp, r2, r8, asr #14
   28ad0:	0002b74c 	andeq	fp, r2, ip, asr #14

00028ad4 <FromDebug>:
   28ad4:	75626564 	strbvc	r6, [r2, #-1380]!	; 0xfffffa9c
   28ad8:	00000067 	andeq	r0, r0, r7, rrx

00028adc <chChars.3962>:
   28adc:	2f7c5c2d 	svccs	0x007c5c2d
   28ae0:	00000000 	andeq	r0, r0, r0

00028ae4 <font_data>:
   28ae4:	3c180000 	ldccc	0, cr0, [r8], {-0}
   28ae8:	18183c3c 	ldmdane	r8, {r2, r3, r4, r5, sl, fp, ip, sp}
   28aec:	18180018 	ldmdane	r8, {r3, r4}
   28af0:	00000000 	andeq	r0, r0, r0
   28af4:	66666600 	strbtvs	r6, [r6], -r0, lsl #12
   28af8:	00000024 	andeq	r0, r0, r4, lsr #32
	...
   28b04:	6c000000 	stcvs	0, cr0, [r0], {-0}
   28b08:	6c6cfe6c 	stclvs	14, cr15, [ip], #-432	; 0xfffffe50
   28b0c:	6c6cfe6c 	stclvs	14, cr15, [ip], #-432	; 0xfffffe50
   28b10:	00000000 	andeq	r0, r0, r0
   28b14:	7c101000 	ldcvc	0, cr1, [r0], {-0}
   28b18:	7cd0d0d6 	ldclvc	0, cr13, [r0], {214}	; 0xd6
   28b1c:	7cd61616 	ldclvc	6, cr1, [r6], {22}
   28b20:	00001010 	andeq	r1, r0, r0, lsl r0
   28b24:	00000000 	andeq	r0, r0, r0
   28b28:	180cc6c2 	stmdane	ip, {r1, r6, r7, r9, sl, lr, pc}
   28b2c:	86c66030 			; <UNDEFINED> instruction: 0x86c66030
   28b30:	00000000 	andeq	r0, r0, r0
   28b34:	6c380000 	ldcvs	0, cr0, [r8], #-0
   28b38:	dc76386c 	ldclle	8, cr3, [r6], #-432	; 0xfffffe50
   28b3c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   28b40:	00000000 	andeq	r0, r0, r0
   28b44:	18181800 	ldmdane	r8, {fp, ip}
   28b48:	00000030 	andeq	r0, r0, r0, lsr r0
	...
   28b54:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
   28b58:	30303030 	eorscc	r3, r0, r0, lsr r0
   28b5c:	0c183030 	ldceq	0, cr3, [r8], {48}	; 0x30
   28b60:	00000000 	andeq	r0, r0, r0
   28b64:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
   28b68:	0c0c0c0c 	stceq	12, cr0, [ip], {12}
   28b6c:	30180c0c 	andscc	r0, r8, ip, lsl #24
	...
   28b78:	ff3c6600 			; <UNDEFINED> instruction: 0xff3c6600
   28b7c:	0000663c 	andeq	r6, r0, ip, lsr r6
	...
   28b88:	7e181800 	cdpvc	8, 1, cr1, cr8, cr0, {0}
   28b8c:	00001818 	andeq	r1, r0, r8, lsl r8
	...
   28b9c:	18181800 	ldmdane	r8, {fp, ip}
   28ba0:	00000030 	andeq	r0, r0, r0, lsr r0
   28ba4:	00000000 	andeq	r0, r0, r0
   28ba8:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
	...
   28bbc:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
	...
   28bc8:	180c0600 	stmdane	ip, {r9, sl}
   28bcc:	00c06030 	sbceq	r6, r0, r0, lsr r0
   28bd0:	00000000 	andeq	r0, r0, r0
   28bd4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28bd8:	d6d6cece 	ldrble	ip, [r6], lr, asr #29
   28bdc:	7cc6e6e6 	stclvc	6, cr14, [r6], {230}	; 0xe6
   28be0:	00000000 	andeq	r0, r0, r0
   28be4:	38180000 	ldmdacc	r8, {}	; <UNPREDICTABLE>
   28be8:	18181878 	ldmdane	r8, {r3, r4, r5, r6, fp, ip}
   28bec:	7e181818 	mrcvc	8, 0, r1, cr8, cr8, {0}
   28bf0:	00000000 	andeq	r0, r0, r0
   28bf4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28bf8:	30180c06 	andscc	r0, r8, r6, lsl #24
   28bfc:	fec6c060 	cdp2	0, 12, cr12, cr6, cr0, {3}
   28c00:	00000000 	andeq	r0, r0, r0
   28c04:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28c08:	063c0606 	ldrteq	r0, [ip], -r6, lsl #12
   28c0c:	7cc60606 	stclvc	6, cr0, [r6], {6}
   28c10:	00000000 	andeq	r0, r0, r0
   28c14:	1c0c0000 	stcne	0, cr0, [ip], {-0}
   28c18:	fecc6c3c 	mcr2	12, 6, r6, cr12, cr12, {1}
   28c1c:	1e0c0c0c 	cdpne	12, 0, cr0, cr12, cr12, {0}
   28c20:	00000000 	andeq	r0, r0, r0
   28c24:	c0fe0000 	rscsgt	r0, lr, r0
   28c28:	06fcc0c0 	ldrbteq	ip, [ip], r0, asr #1
   28c2c:	7cc60606 	stclvc	6, cr0, [r6], {6}
   28c30:	00000000 	andeq	r0, r0, r0
   28c34:	60380000 	eorsvs	r0, r8, r0
   28c38:	c6fcc0c0 	ldrbtgt	ip, [ip], r0, asr #1
   28c3c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   28c40:	00000000 	andeq	r0, r0, r0
   28c44:	c6fe0000 	ldrbtgt	r0, [lr], r0
   28c48:	180c0606 	stmdane	ip, {r1, r2, r9, sl}
   28c4c:	30303030 	eorscc	r3, r0, r0, lsr r0
   28c50:	00000000 	andeq	r0, r0, r0
   28c54:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28c58:	c67cc6c6 	ldrbtgt	ip, [ip], -r6, asr #13
   28c5c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   28c60:	00000000 	andeq	r0, r0, r0
   28c64:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28c68:	067ec6c6 	ldrbteq	ip, [lr], -r6, asr #13
   28c6c:	780c0606 	stmdavc	ip, {r1, r2, r9, sl}
	...
   28c78:	00001818 	andeq	r1, r0, r8, lsl r8
   28c7c:	00181800 	andseq	r1, r8, r0, lsl #16
	...
   28c88:	00001818 	andeq	r1, r0, r8, lsl r8
   28c8c:	30181800 	andscc	r1, r8, r0, lsl #16
   28c90:	00000000 	andeq	r0, r0, r0
   28c94:	06000000 	streq	r0, [r0], -r0
   28c98:	6030180c 	eorsvs	r1, r0, ip, lsl #16
   28c9c:	060c1830 			; <UNDEFINED> instruction: 0x060c1830
	...
   28ca8:	0000fe00 	andeq	pc, r0, r0, lsl #28
   28cac:	000000fe 	strdeq	r0, [r0], -lr
   28cb0:	00000000 	andeq	r0, r0, r0
   28cb4:	60000000 	andvs	r0, r0, r0
   28cb8:	060c1830 			; <UNDEFINED> instruction: 0x060c1830
   28cbc:	6030180c 	eorsvs	r1, r0, ip, lsl #16
   28cc0:	00000000 	andeq	r0, r0, r0
   28cc4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28cc8:	18180cc6 	ldmdane	r8, {r1, r2, r6, r7, sl, fp}
   28ccc:	18180018 	ldmdane	r8, {r3, r4}
   28cd0:	00000000 	andeq	r0, r0, r0
   28cd4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28cd8:	dedec6c6 	cdple	6, 13, cr12, cr14, cr6, {6}
   28cdc:	7cc0dcde 	stclvc	12, cr13, [r0], {222}	; 0xde
   28ce0:	00000000 	andeq	r0, r0, r0
   28ce4:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
   28ce8:	fec6c66c 	cdp2	6, 12, cr12, cr6, cr12, {3}
   28cec:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28cf0:	00000000 	andeq	r0, r0, r0
   28cf4:	66fc0000 	ldrbtvs	r0, [ip], r0
   28cf8:	667c6666 	ldrbtvs	r6, [ip], -r6, ror #12
   28cfc:	fc666666 	stc2l	6, cr6, [r6], #-408	; 0xfffffe68
   28d00:	00000000 	andeq	r0, r0, r0
   28d04:	663c0000 	ldrtvs	r0, [ip], -r0
   28d08:	c0c0c0c2 	sbcgt	ip, r0, r2, asr #1
   28d0c:	3c66c2c0 	sfmcc	f4, 3, [r6], #-768	; 0xfffffd00
   28d10:	00000000 	andeq	r0, r0, r0
   28d14:	6cf80000 	ldclvs	0, cr0, [r8]
   28d18:	66666666 	strbtvs	r6, [r6], -r6, ror #12
   28d1c:	f86c6666 			; <UNDEFINED> instruction: 0xf86c6666
   28d20:	00000000 	andeq	r0, r0, r0
   28d24:	66fe0000 	ldrbtvs	r0, [lr], r0
   28d28:	68786862 	ldmdavs	r8!, {r1, r5, r6, fp, sp, lr}^
   28d2c:	fe666260 	cdp2	2, 6, cr6, cr6, cr0, {3}
   28d30:	00000000 	andeq	r0, r0, r0
   28d34:	66fe0000 	ldrbtvs	r0, [lr], r0
   28d38:	68786862 	ldmdavs	r8!, {r1, r5, r6, fp, sp, lr}^
   28d3c:	f0606060 			; <UNDEFINED> instruction: 0xf0606060
   28d40:	00000000 	andeq	r0, r0, r0
   28d44:	663c0000 	ldrtvs	r0, [ip], -r0
   28d48:	dec0c0c2 	cdple	0, 12, cr12, cr0, cr2, {6}
   28d4c:	3a66c6c6 	bcc	19da86c <mailbuffer+0x19ad6cc>
   28d50:	00000000 	andeq	r0, r0, r0
   28d54:	c6c60000 	strbgt	r0, [r6], r0
   28d58:	c6fec6c6 	ldrbtgt	ip, [lr], r6, asr #13
   28d5c:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28d60:	00000000 	andeq	r0, r0, r0
   28d64:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
   28d68:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   28d6c:	3c181818 	ldccc	8, cr1, [r8], {24}
   28d70:	00000000 	andeq	r0, r0, r0
   28d74:	0c1e0000 	ldceq	0, cr0, [lr], {-0}
   28d78:	0c0c0c0c 	stceq	12, cr0, [ip], {12}
   28d7c:	78cccccc 	stmiavc	ip, {r2, r3, r6, r7, sl, fp, lr, pc}^
   28d80:	00000000 	andeq	r0, r0, r0
   28d84:	66e60000 	strbtvs	r0, [r6], r0
   28d88:	78786c66 	ldmdavc	r8!, {r1, r2, r5, r6, sl, fp, sp, lr}^
   28d8c:	e666666c 	strbt	r6, [r6], -ip, ror #12
   28d90:	00000000 	andeq	r0, r0, r0
   28d94:	60f00000 	rscsvs	r0, r0, r0
   28d98:	60606060 	rsbvs	r6, r0, r0, rrx
   28d9c:	fe666260 	cdp2	2, 6, cr6, cr6, cr0, {3}
   28da0:	00000000 	andeq	r0, r0, r0
   28da4:	eec60000 	cdp	0, 12, cr0, cr6, cr0, {0}
   28da8:	c6d6fefe 			; <UNDEFINED> instruction: 0xc6d6fefe
   28dac:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28db0:	00000000 	andeq	r0, r0, r0
   28db4:	e6c60000 	strb	r0, [r6], r0
   28db8:	cedefef6 	mrcgt	14, 6, APSR_nzcv, cr14, cr6, {7}
   28dbc:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28dc0:	00000000 	andeq	r0, r0, r0
   28dc4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28dc8:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28dcc:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   28dd0:	00000000 	andeq	r0, r0, r0
   28dd4:	66fc0000 	ldrbtvs	r0, [ip], r0
   28dd8:	607c6666 	rsbsvs	r6, ip, r6, ror #12
   28ddc:	f0606060 			; <UNDEFINED> instruction: 0xf0606060
   28de0:	00000000 	andeq	r0, r0, r0
   28de4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28de8:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28dec:	7cded6c6 	ldclvc	6, cr13, [lr], {198}	; 0xc6
   28df0:	00000e0c 	andeq	r0, r0, ip, lsl #28
   28df4:	66fc0000 	ldrbtvs	r0, [ip], r0
   28df8:	6c7c6666 	ldclvs	6, cr6, [ip], #-408	; 0xfffffe68
   28dfc:	e6666666 	strbt	r6, [r6], -r6, ror #12
   28e00:	00000000 	andeq	r0, r0, r0
   28e04:	c67c0000 	ldrbtgt	r0, [ip], -r0
   28e08:	0c3864c6 	cfldrseq	mvf6, [r8], #-792	; 0xfffffce8
   28e0c:	7cc6c606 	stclvc	6, cr12, [r6], {6}
   28e10:	00000000 	andeq	r0, r0, r0
   28e14:	7e7e0000 	cdpvc	0, 7, cr0, cr14, cr0, {0}
   28e18:	1818185a 	ldmdane	r8, {r1, r3, r4, r6, fp, ip}
   28e1c:	3c181818 	ldccc	8, cr1, [r8], {24}
   28e20:	00000000 	andeq	r0, r0, r0
   28e24:	c6c60000 	strbgt	r0, [r6], r0
   28e28:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28e2c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   28e30:	00000000 	andeq	r0, r0, r0
   28e34:	c6c60000 	strbgt	r0, [r6], r0
   28e38:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   28e3c:	10386cc6 	eorsne	r6, r8, r6, asr #25
   28e40:	00000000 	andeq	r0, r0, r0
   28e44:	c6c60000 	strbgt	r0, [r6], r0
   28e48:	d6d6c6c6 	ldrble	ip, [r6], r6, asr #13
   28e4c:	6ceefed6 	stclvs	14, cr15, [lr], #856	; 0x358
   28e50:	00000000 	andeq	r0, r0, r0
   28e54:	c6c60000 	strbgt	r0, [r6], r0
   28e58:	38387c6c 	ldmdacc	r8!, {r2, r3, r5, r6, sl, fp, ip, sp, lr}
   28e5c:	c6c66c7c 	uxtab16gt	r6, r6, ip, ROR #24
   28e60:	00000000 	andeq	r0, r0, r0
   28e64:	66660000 	strbtvs	r0, [r6], -r0
   28e68:	183c6666 	ldmdane	ip!, {r1, r2, r5, r6, r9, sl, sp, lr}
   28e6c:	3c181818 	ldccc	8, cr1, [r8], {24}
   28e70:	00000000 	andeq	r0, r0, r0
   28e74:	c6fe0000 	ldrbtgt	r0, [lr], r0
   28e78:	30180c86 	andscc	r0, r8, r6, lsl #25
   28e7c:	fec6c260 	cdp2	2, 12, cr12, cr6, cr0, {3}
   28e80:	00000000 	andeq	r0, r0, r0
   28e84:	303c0000 	eorscc	r0, ip, r0
   28e88:	30303030 	eorscc	r3, r0, r0, lsr r0
   28e8c:	3c303030 	ldccc	0, cr3, [r0], #-192	; 0xffffff40
	...
   28e98:	3060c000 	rsbcc	ip, r0, r0
   28e9c:	00060c18 	andeq	r0, r6, r8, lsl ip
   28ea0:	00000000 	andeq	r0, r0, r0
   28ea4:	0c3c0000 	ldceq	0, cr0, [ip], #-0
   28ea8:	0c0c0c0c 	stceq	12, cr0, [ip], {12}
   28eac:	3c0c0c0c 	stccc	12, cr0, [ip], {12}
   28eb0:	00000000 	andeq	r0, r0, r0
   28eb4:	c66c3810 			; <UNDEFINED> instruction: 0xc66c3810
	...
   28ed0:	00ff0000 	rscseq	r0, pc, r0
   28ed4:	30303000 	eorscc	r3, r0, r0
   28ed8:	00000018 	andeq	r0, r0, r8, lsl r0
	...
   28ee8:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   28eec:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   28ef0:	00000000 	andeq	r0, r0, r0
   28ef4:	60e00000 	rscvs	r0, r0, r0
   28ef8:	666c7860 	strbtvs	r7, [ip], -r0, ror #16
   28efc:	7c666666 	stclvc	6, cr6, [r6], #-408	; 0xfffffe68
	...
   28f08:	c0c67c00 	sbcgt	r7, r6, r0, lsl #24
   28f0c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   28f10:	00000000 	andeq	r0, r0, r0
   28f14:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
   28f18:	cc6c3c0c 	stclgt	12, cr3, [ip], #-48	; 0xffffffd0
   28f1c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
	...
   28f28:	fec67c00 	cdp2	12, 12, cr7, cr6, cr0, {0}
   28f2c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   28f30:	00000000 	andeq	r0, r0, r0
   28f34:	6c380000 	ldcvs	0, cr0, [r8], #-0
   28f38:	60f06064 	rscsvs	r6, r0, r4, rrx
   28f3c:	f0606060 			; <UNDEFINED> instruction: 0xf0606060
	...
   28f48:	cccc7600 	stclgt	6, cr7, [ip], {0}
   28f4c:	7ccccccc 	stclvc	12, cr12, [ip], {204}	; 0xcc
   28f50:	0078cc0c 	rsbseq	ip, r8, ip, lsl #24
   28f54:	60e00000 	rscvs	r0, r0, r0
   28f58:	66766c60 	ldrbtvs	r6, [r6], -r0, ror #24
   28f5c:	e6666666 	strbt	r6, [r6], -r6, ror #12
   28f60:	00000000 	andeq	r0, r0, r0
   28f64:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
   28f68:	18183800 	ldmdane	r8, {fp, ip, sp}
   28f6c:	3c181818 	ldccc	8, cr1, [r8], {24}
   28f70:	00000000 	andeq	r0, r0, r0
   28f74:	06060000 	streq	r0, [r6], -r0
   28f78:	06060e00 	streq	r0, [r6], -r0, lsl #28
   28f7c:	06060606 	streq	r0, [r6], -r6, lsl #12
   28f80:	003c6666 	eorseq	r6, ip, r6, ror #12
   28f84:	60e00000 	rscvs	r0, r0, r0
   28f88:	786c6660 	stmdavc	ip!, {r5, r6, r9, sl, sp, lr}^
   28f8c:	e6666c78 			; <UNDEFINED> instruction: 0xe6666c78
   28f90:	00000000 	andeq	r0, r0, r0
   28f94:	18380000 	ldmdane	r8!, {}	; <UNPREDICTABLE>
   28f98:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   28f9c:	3c181818 	ldccc	8, cr1, [r8], {24}
	...
   28fa8:	d6feec00 	ldrbtle	lr, [lr], r0, lsl #24
   28fac:	c6d6d6d6 			; <UNDEFINED> instruction: 0xc6d6d6d6
	...
   28fb8:	6666dc00 	strbtvs	sp, [r6], -r0, lsl #24
   28fbc:	66666666 	strbtvs	r6, [r6], -r6, ror #12
	...
   28fc8:	c6c67c00 	strbgt	r7, [r6], r0, lsl #24
   28fcc:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
	...
   28fd8:	6666dc00 	strbtvs	sp, [r6], -r0, lsl #24
   28fdc:	7c666666 	stclvc	6, cr6, [r6], #-408	; 0xfffffe68
   28fe0:	00f06060 	rscseq	r6, r0, r0, rrx
   28fe4:	00000000 	andeq	r0, r0, r0
   28fe8:	cccc7600 	stclgt	6, cr7, [ip], {0}
   28fec:	7ccccccc 	stclvc	12, cr12, [ip], {204}	; 0xcc
   28ff0:	001e0c0c 	andseq	r0, lr, ip, lsl #24
   28ff4:	00000000 	andeq	r0, r0, r0
   28ff8:	6676dc00 	ldrbtvs	sp, [r6], -r0, lsl #24
   28ffc:	f0606060 			; <UNDEFINED> instruction: 0xf0606060
	...
   29008:	60c67c00 	sbcvs	r7, r6, r0, lsl #24
   2900c:	7cc60c38 	stclvc	12, cr0, [r6], {56}	; 0x38
   29010:	00000000 	andeq	r0, r0, r0
   29014:	30100000 	andscc	r0, r0, r0
   29018:	3030fc30 	eorscc	pc, r0, r0, lsr ip	; <UNPREDICTABLE>
   2901c:	1c363030 	ldcne	0, cr3, [r6], #-192	; 0xffffff40
	...
   29028:	cccccc00 	stclgt	12, cr12, [ip], {0}
   2902c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
	...
   29038:	66666600 	strbtvs	r6, [r6], -r0, lsl #12
   2903c:	183c6666 	ldmdane	ip!, {r1, r2, r5, r6, r9, sl, sp, lr}
	...
   29048:	d6c6c600 	strble	ip, [r6], r0, lsl #12
   2904c:	6cfed6d6 	ldclvs	6, cr13, [lr], #856	; 0x358
	...
   29058:	386cc600 	stmdacc	ip!, {r9, sl, lr, pc}^
   2905c:	c66c3838 			; <UNDEFINED> instruction: 0xc66c3838
	...
   29068:	c6c6c600 	strbgt	ip, [r6], r0, lsl #12
   2906c:	7ec6c6c6 	cdpvc	6, 12, cr12, cr6, cr6, {6}
   29070:	00f80c06 	rscseq	r0, r8, r6, lsl #24
   29074:	00000000 	andeq	r0, r0, r0
   29078:	18ccfe00 	stmiane	ip, {r9, sl, fp, ip, sp, lr, pc}^
   2907c:	fec66030 	mcr2	0, 6, r6, cr6, cr0, {1}
   29080:	00000000 	andeq	r0, r0, r0
   29084:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
   29088:	18701818 	ldmdane	r0!, {r3, r4, fp, ip}^
   2908c:	0e181818 	mrceq	8, 0, r1, cr8, cr8, {0}
   29090:	00000000 	andeq	r0, r0, r0
   29094:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
   29098:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   2909c:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   290a0:	00000000 	andeq	r0, r0, r0
   290a4:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
   290a8:	180e1818 	stmdane	lr, {r3, r4, fp, ip}
   290ac:	70181818 	andsvc	r1, r8, r8, lsl r8
   290b0:	00000000 	andeq	r0, r0, r0
   290b4:	dc760000 	ldclle	0, cr0, [r6], #-0
	...
   290c4:	c37e0000 	cmngt	lr, #0
   290c8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   290cc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   290d0:	0000007e 	andeq	r0, r0, lr, ror r0
   290d4:	c37e0000 	cmngt	lr, #0
   290d8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   290dc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   290e0:	0000007e 	andeq	r0, r0, lr, ror r0
   290e4:	c37e0000 	cmngt	lr, #0
   290e8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   290ec:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   290f0:	0000007e 	andeq	r0, r0, lr, ror r0
   290f4:	c37e0000 	cmngt	lr, #0
   290f8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   290fc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29100:	0000007e 	andeq	r0, r0, lr, ror r0
   29104:	c37e0000 	cmngt	lr, #0
   29108:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2910c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29110:	0000007e 	andeq	r0, r0, lr, ror r0
   29114:	c37e0000 	cmngt	lr, #0
   29118:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2911c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29120:	0000007e 	andeq	r0, r0, lr, ror r0
   29124:	c37e0000 	cmngt	lr, #0
   29128:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2912c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29130:	0000007e 	andeq	r0, r0, lr, ror r0
   29134:	c37e0000 	cmngt	lr, #0
   29138:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2913c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29140:	0000007e 	andeq	r0, r0, lr, ror r0
   29144:	c37e0000 	cmngt	lr, #0
   29148:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2914c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29150:	0000007e 	andeq	r0, r0, lr, ror r0
   29154:	c37e0000 	cmngt	lr, #0
   29158:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2915c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29160:	0000007e 	andeq	r0, r0, lr, ror r0
   29164:	c37e0000 	cmngt	lr, #0
   29168:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2916c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29170:	0000007e 	andeq	r0, r0, lr, ror r0
   29174:	c37e0000 	cmngt	lr, #0
   29178:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2917c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29180:	0000007e 	andeq	r0, r0, lr, ror r0
   29184:	c37e0000 	cmngt	lr, #0
   29188:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2918c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29190:	0000007e 	andeq	r0, r0, lr, ror r0
   29194:	c37e0000 	cmngt	lr, #0
   29198:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2919c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   291a0:	0000007e 	andeq	r0, r0, lr, ror r0
   291a4:	c37e0000 	cmngt	lr, #0
   291a8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   291ac:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   291b0:	0000007e 	andeq	r0, r0, lr, ror r0
   291b4:	c37e0000 	cmngt	lr, #0
   291b8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   291bc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   291c0:	0000007e 	andeq	r0, r0, lr, ror r0
   291c4:	c37e0000 	cmngt	lr, #0
   291c8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   291cc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   291d0:	0000007e 	andeq	r0, r0, lr, ror r0
   291d4:	c37e0000 	cmngt	lr, #0
   291d8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   291dc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   291e0:	0000007e 	andeq	r0, r0, lr, ror r0
   291e4:	c37e0000 	cmngt	lr, #0
   291e8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   291ec:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   291f0:	0000007e 	andeq	r0, r0, lr, ror r0
   291f4:	c37e0000 	cmngt	lr, #0
   291f8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   291fc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29200:	0000007e 	andeq	r0, r0, lr, ror r0
   29204:	c37e0000 	cmngt	lr, #0
   29208:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2920c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29210:	0000007e 	andeq	r0, r0, lr, ror r0
   29214:	c37e0000 	cmngt	lr, #0
   29218:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2921c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29220:	0000007e 	andeq	r0, r0, lr, ror r0
   29224:	c37e0000 	cmngt	lr, #0
   29228:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2922c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29230:	0000007e 	andeq	r0, r0, lr, ror r0
   29234:	c37e0000 	cmngt	lr, #0
   29238:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2923c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29240:	0000007e 	andeq	r0, r0, lr, ror r0
   29244:	c37e0000 	cmngt	lr, #0
   29248:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2924c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29250:	0000007e 	andeq	r0, r0, lr, ror r0
   29254:	c37e0000 	cmngt	lr, #0
   29258:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2925c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29260:	0000007e 	andeq	r0, r0, lr, ror r0
   29264:	c37e0000 	cmngt	lr, #0
   29268:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2926c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29270:	0000007e 	andeq	r0, r0, lr, ror r0
   29274:	c37e0000 	cmngt	lr, #0
   29278:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2927c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29280:	0000007e 	andeq	r0, r0, lr, ror r0
   29284:	c37e0000 	cmngt	lr, #0
   29288:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2928c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   29290:	0000007e 	andeq	r0, r0, lr, ror r0
   29294:	c37e0000 	cmngt	lr, #0
   29298:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   2929c:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   292a0:	0000007e 	andeq	r0, r0, lr, ror r0
   292a4:	c37e0000 	cmngt	lr, #0
   292a8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   292ac:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   292b0:	0000007e 	andeq	r0, r0, lr, ror r0
   292b4:	c37e0000 	cmngt	lr, #0
   292b8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   292bc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   292c0:	0000007e 	andeq	r0, r0, lr, ror r0
   292c4:	c37e0000 	cmngt	lr, #0
   292c8:	e7f39999 			; <UNDEFINED> instruction: 0xe7f39999
   292cc:	e7e7ffe7 	strb	pc, [r7, r7, ror #31]!	; <UNPREDICTABLE>
   292d0:	0000007e 	andeq	r0, r0, lr, ror r0
	...
   292dc:	fe820000 	cdp2	0, 8, cr0, cr2, cr0, {0}
	...
   292e8:	18001818 	stmdane	r0, {r3, r4, fp, ip}
   292ec:	3c3c1818 	ldccc	8, cr1, [ip], #-96	; 0xffffffa0
   292f0:	0000183c 	andeq	r1, r0, ip, lsr r8
   292f4:	00000000 	andeq	r0, r0, r0
   292f8:	d0d67c10 	sbcsle	r7, r6, r0, lsl ip
   292fc:	7cd6d0d0 	ldclvc	0, cr13, [r6], {208}	; 0xd0
   29300:	00000010 	andeq	r0, r0, r0, lsl r0
   29304:	6c380000 	ldcvs	0, cr0, [r8], #-0
   29308:	60f06060 	rscsvs	r6, r0, r0, rrx
   2930c:	6cf66660 	ldclvs	6, cr6, [r6], #384	; 0x180
	...
   29318:	6c6c7cc6 	stclvs	12, cr7, [ip], #-792	; 0xfffffce8
   2931c:	0000c67c 	andeq	ip, r0, ip, ror r6
   29320:	00000000 	andeq	r0, r0, r0
   29324:	66660000 	strbtvs	r0, [r6], -r0
   29328:	187e183c 	ldmdane	lr!, {r2, r3, r4, r5, fp, ip}^
   2932c:	1818187e 	ldmdane	r8, {r1, r2, r3, r4, r5, r6, fp, ip}
   29330:	00000000 	andeq	r0, r0, r0
   29334:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
   29338:	18001818 	stmdane	r0, {r3, r4, fp, ip}
   2933c:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   29340:	00000000 	andeq	r0, r0, r0
   29344:	60c67c00 	sbcvs	r7, r6, r0, lsl #24
   29348:	c6c66c38 			; <UNDEFINED> instruction: 0xc6c66c38
   2934c:	c60c386c 	strgt	r3, [ip], -ip, ror #16
   29350:	0000007c 	andeq	r0, r0, ip, ror r0
   29354:	006c6c00 	rsbeq	r6, ip, r0, lsl #24
	...
   29364:	423c0000 	eorsmi	r0, ip, #0
   29368:	a5a1a599 	strge	sl, [r1, #1433]!	; 0x599
   2936c:	003c4299 	mlaseq	ip, r9, r2, r4
   29370:	00000000 	andeq	r0, r0, r0
   29374:	6c3c0000 	ldcvs	0, cr0, [ip], #-0
   29378:	7e003e6c 	cdpvc	14, 0, cr3, cr0, cr12, {3}
	...
   29388:	d86c3600 	stmdale	ip!, {r9, sl, ip, sp}^
   2938c:	0000366c 	andeq	r3, r0, ip, ror #12
	...
   29398:	06fe0000 	ldrbteq	r0, [lr], r0
   2939c:	00060606 	andeq	r0, r6, r6, lsl #12
	...
   293a8:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
	...
   293b4:	423c0000 	eorsmi	r0, ip, #0
   293b8:	a5b9a5b9 	ldrge	sl, [r9, #1465]!	; 0x5b9
   293bc:	003c42a5 	eorseq	r4, ip, r5, lsr #5
   293c0:	00000000 	andeq	r0, r0, r0
   293c4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
   293d4:	6c6c3800 	stclvs	8, cr3, [ip], #-0
   293d8:	00000038 	andeq	r0, r0, r8, lsr r0
	...
   293e8:	7e181800 	cdpvc	8, 1, cr1, cr8, cr0, {0}
   293ec:	7e001818 	mcrvc	8, 0, r1, cr0, cr8, {0}
   293f0:	00000000 	andeq	r0, r0, r0
   293f4:	30186c38 	andscc	r6, r8, r8, lsr ip
   293f8:	0000007c 	andeq	r0, r0, ip, ror r0
	...
   29404:	6c186c38 	ldcvs	12, cr6, [r8], {56}	; 0x38
   29408:	00000038 	andeq	r0, r0, r8, lsr r0
	...
   29414:	60301800 	eorsvs	r1, r0, r0, lsl #16
	...
   29428:	cccccc00 	stclgt	12, cr12, [ip], {0}
   2942c:	f6cccccc 			; <UNDEFINED> instruction: 0xf6cccccc
   29430:	00c0c0c0 	sbceq	ip, r0, r0, asr #1
   29434:	d67f0000 	ldrbtle	r0, [pc], -r0
   29438:	363676d6 			; <UNDEFINED> instruction: 0x363676d6
   2943c:	36363636 			; <UNDEFINED> instruction: 0x36363636
	...
   29448:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
	...
   29460:	00386c18 	eorseq	r6, r8, r8, lsl ip
   29464:	30307030 	eorscc	r7, r0, r0, lsr r0
   29468:	00000078 	andeq	r0, r0, r8, ror r0
	...
   29474:	6c380000 	ldcvs	0, cr0, [r8], #-0
   29478:	7c00386c 	stcvc	8, cr3, [r0], {108}	; 0x6c
	...
   29488:	366cd800 	strbtcc	sp, [ip], -r0, lsl #16
   2948c:	0000d86c 	andeq	sp, r0, ip, ror #16
   29490:	00000000 	andeq	r0, r0, r0
   29494:	6060e060 	rsbvs	lr, r0, r0, rrx
   29498:	30180cf6 			; <UNDEFINED> instruction: 0x30180cf6
   2949c:	3f1ace66 	svccc	0x001ace66
   294a0:	00000606 	andeq	r0, r0, r6, lsl #12
   294a4:	6060e060 	rsbvs	lr, r0, r0, rrx
   294a8:	30180cf6 			; <UNDEFINED> instruction: 0x30180cf6
   294ac:	0c06db6e 			; <UNDEFINED> instruction: 0x0c06db6e
   294b0:	0000001f 	andeq	r0, r0, pc, lsl r0
   294b4:	d830d870 	ldmdale	r0!, {r4, r5, r6, fp, ip, lr, pc}
   294b8:	30180c76 	andscc	r0, r8, r6, ror ip
   294bc:	3f1ace66 	svccc	0x001ace66
   294c0:	00000606 	andeq	r0, r0, r6, lsl #12
   294c4:	00000000 	andeq	r0, r0, r0
   294c8:	30003030 	andcc	r3, r0, r0, lsr r0
   294cc:	c6603030 			; <UNDEFINED> instruction: 0xc6603030
   294d0:	00007cc6 	andeq	r7, r0, r6, asr #25
   294d4:	38003060 	stmdacc	r0, {r5, r6, ip, sp}
   294d8:	fec6c66c 	cdp2	6, 12, cr12, cr6, cr12, {3}
   294dc:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   294e0:	00000000 	andeq	r0, r0, r0
   294e4:	3800180c 	stmdacc	r0, {r2, r3, fp, ip}
   294e8:	fec6c66c 	cdp2	6, 12, cr12, cr6, cr12, {3}
   294ec:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   294f0:	00000000 	andeq	r0, r0, r0
   294f4:	006c3810 	rsbeq	r3, ip, r0, lsl r8
   294f8:	c6c66c38 			; <UNDEFINED> instruction: 0xc6c66c38
   294fc:	c6c6c6fe 			; <UNDEFINED> instruction: 0xc6c6c6fe
   29500:	00000000 	andeq	r0, r0, r0
   29504:	3800dc76 	stmdacc	r0, {r1, r2, r4, r5, r6, sl, fp, ip, lr, pc}
   29508:	fec6c66c 	cdp2	6, 12, cr12, cr6, cr12, {3}
   2950c:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   29510:	00000000 	andeq	r0, r0, r0
   29514:	38006c00 	stmdacc	r0, {sl, fp, sp, lr}
   29518:	fec6c66c 	cdp2	6, 12, cr12, cr6, cr12, {3}
   2951c:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   29520:	00000000 	andeq	r0, r0, r0
   29524:	00386c38 	eorseq	r6, r8, r8, lsr ip
   29528:	c6c66c38 			; <UNDEFINED> instruction: 0xc6c66c38
   2952c:	c6c6c6fe 			; <UNDEFINED> instruction: 0xc6c6c6fe
   29530:	00000000 	andeq	r0, r0, r0
   29534:	783e0000 	ldmdavc	lr!, {}	; <UNPREDICTABLE>
   29538:	d8fcd8d8 	ldmle	ip!, {r3, r4, r6, r7, fp, ip, lr, pc}^
   2953c:	ded8d8d8 	mrcle	8, 6, sp, cr8, cr8, {6}
   29540:	00000000 	andeq	r0, r0, r0
   29544:	663c0000 	ldrtvs	r0, [ip], -r0
   29548:	c0c0c0c2 	sbcgt	ip, r0, r2, asr #1
   2954c:	3c66c2c0 	sfmcc	f4, 3, [r6], #-768	; 0xfffffd00
   29550:	003c660c 	eorseq	r6, ip, ip, lsl #12
   29554:	fe003060 	cdp2	0, 0, cr3, cr0, cr0, {3}
   29558:	7c606066 	stclvc	0, cr6, [r0], #-408	; 0xfffffe68
   2955c:	fe666060 	cdp2	0, 6, cr6, cr6, cr0, {3}
   29560:	00000000 	andeq	r0, r0, r0
   29564:	fe00180c 	vcmla.f16	d1, d0, d12[0], #0
   29568:	7c606066 	stclvc	0, cr6, [r0], #-408	; 0xfffffe68
   2956c:	fe666060 	cdp2	0, 6, cr6, cr6, cr0, {3}
   29570:	00000000 	andeq	r0, r0, r0
   29574:	006c3810 	rsbeq	r3, ip, r0, lsl r8
   29578:	7c6066fe 	stclvc	6, cr6, [r0], #-1016	; 0xfffffc08
   2957c:	fe666060 	cdp2	0, 6, cr6, cr6, cr0, {3}
   29580:	00000000 	andeq	r0, r0, r0
   29584:	fe006c00 	cdp2	12, 0, cr6, cr0, cr0, {0}
   29588:	7c606066 	stclvc	0, cr6, [r0], #-408	; 0xfffffe68
   2958c:	fe666060 	cdp2	0, 6, cr6, cr6, cr0, {3}
   29590:	00000000 	andeq	r0, r0, r0
   29594:	3c003060 	stccc	0, cr3, [r0], {96}	; 0x60
   29598:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   2959c:	3c181818 	ldccc	8, cr1, [r8], {24}
   295a0:	00000008 	andeq	r0, r0, r8
   295a4:	3c000c06 	stccc	12, cr0, [r0], {6}
   295a8:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   295ac:	3c181818 	ldccc	8, cr1, [r8], {24}
   295b0:	00000000 	andeq	r0, r0, r0
   295b4:	00663c18 	rsbeq	r3, r6, r8, lsl ip
   295b8:	1818183c 	ldmdane	r8, {r2, r3, r4, r5, fp, ip}
   295bc:	3c181818 	ldccc	8, cr1, [r8], {24}
   295c0:	00000000 	andeq	r0, r0, r0
   295c4:	3c006600 	stccc	6, cr6, [r0], {-0}
   295c8:	18181818 	ldmdane	r8, {r3, r4, fp, ip}
   295cc:	3c181818 	ldccc	8, cr1, [r8], {24}
   295d0:	00000000 	andeq	r0, r0, r0
   295d4:	6cf80000 	ldclvs	0, cr0, [r8]
   295d8:	66f66666 	ldrbtvs	r6, [r6], r6, ror #12
   295dc:	f86c6666 			; <UNDEFINED> instruction: 0xf86c6666
   295e0:	00000000 	andeq	r0, r0, r0
   295e4:	c600dc76 			; <UNDEFINED> instruction: 0xc600dc76
   295e8:	defef6e6 	cdple	6, 15, cr15, cr14, cr6, {7}
   295ec:	c6c6c6ce 	strbgt	ip, [r6], lr, asr #13
   295f0:	00000000 	andeq	r0, r0, r0
   295f4:	7c003060 	stcvc	0, cr3, [r0], {96}	; 0x60
   295f8:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   295fc:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29600:	00000000 	andeq	r0, r0, r0
   29604:	7c00180c 	stcvc	8, cr1, [r0], {12}
   29608:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2960c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29610:	00000000 	andeq	r0, r0, r0
   29614:	006c3810 	rsbeq	r3, ip, r0, lsl r8
   29618:	c6c6c67c 			; <UNDEFINED> instruction: 0xc6c6c67c
   2961c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29620:	00000000 	andeq	r0, r0, r0
   29624:	7c00dc76 	stcvc	12, cr13, [r0], {118}	; 0x76
   29628:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2962c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29630:	00000000 	andeq	r0, r0, r0
   29634:	7c006c00 	stcvc	12, cr6, [r0], {-0}
   29638:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2963c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
	...
   29648:	183c6600 	ldmdane	ip!, {r9, sl, sp, lr}
   2964c:	0000663c 	andeq	r6, r0, ip, lsr r6
   29650:	00000000 	andeq	r0, r0, r0
   29654:	c67e0000 	ldrbtgt	r0, [lr], -r0
   29658:	f6decece 			; <UNDEFINED> instruction: 0xf6decece
   2965c:	fcc6e6e6 	stc2l	6, cr14, [r6], {230}	; 0xe6
   29660:	00000000 	andeq	r0, r0, r0
   29664:	c6003060 	strgt	r3, [r0], -r0, rrx
   29668:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2966c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29670:	00000000 	andeq	r0, r0, r0
   29674:	c600180c 	strgt	r1, [r0], -ip, lsl #16
   29678:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2967c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29680:	00000000 	andeq	r0, r0, r0
   29684:	006c3810 	rsbeq	r3, ip, r0, lsl r8
   29688:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2968c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29690:	00000000 	andeq	r0, r0, r0
   29694:	c6006c00 	strgt	r6, [r0], -r0, lsl #24
   29698:	c6c6c6c6 	strbgt	ip, [r6], r6, asr #13
   2969c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   296a0:	00000000 	andeq	r0, r0, r0
   296a4:	66000c06 	strvs	r0, [r0], -r6, lsl #24
   296a8:	3c666666 	stclcc	6, cr6, [r6], #-408	; 0xfffffe68
   296ac:	3c181818 	ldccc	8, cr1, [r8], {24}
   296b0:	00000000 	andeq	r0, r0, r0
   296b4:	60f00000 	rscsvs	r0, r0, r0
   296b8:	6666667c 			; <UNDEFINED> instruction: 0x6666667c
   296bc:	f0607c66 			; <UNDEFINED> instruction: 0xf0607c66
   296c0:	00000000 	andeq	r0, r0, r0
   296c4:	c67c0000 	ldrbtgt	r0, [ip], -r0
   296c8:	c6ccc6c6 	strbgt	ip, [ip], r6, asr #13
   296cc:	dcd6c6c6 	ldclle	6, cr12, [r6], {198}	; 0xc6
   296d0:	00000080 	andeq	r0, r0, r0, lsl #1
   296d4:	18306000 	ldmdane	r0!, {sp, lr}
   296d8:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   296dc:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   296e0:	00000000 	andeq	r0, r0, r0
   296e4:	60301800 	eorsvs	r1, r0, r0, lsl #16
   296e8:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   296ec:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   296f0:	00000000 	andeq	r0, r0, r0
   296f4:	6c381000 	ldcvs	0, cr1, [r8], #-0
   296f8:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   296fc:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   29700:	00000000 	andeq	r0, r0, r0
   29704:	dc760000 	ldclle	0, cr0, [r6], #-0
   29708:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   2970c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   29710:	00000000 	andeq	r0, r0, r0
   29714:	6c000000 	stcvs	0, cr0, [r0], {-0}
   29718:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   2971c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   29720:	00000000 	andeq	r0, r0, r0
   29724:	386c3800 	stmdacc	ip!, {fp, ip, sp}^
   29728:	7c0c7800 	stcvc	8, cr7, [ip], {-0}
   2972c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
	...
   29738:	1bdb7e00 	blne	ff708f40 <_estack+0xf76f8f40>
   2973c:	7edbd87f 	mrcvc	8, 6, sp, cr11, cr15, {3}
	...
   29748:	c0c67c00 	sbcgt	r7, r6, r0, lsl #24
   2974c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   29750:	00386c18 	eorseq	r6, r8, r8, lsl ip
   29754:	18306000 	ldmdane	r0!, {sp, lr}
   29758:	fec67c00 	cdp2	12, 12, cr7, cr6, cr0, {0}
   2975c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   29760:	00000000 	andeq	r0, r0, r0
   29764:	30180c00 	andscc	r0, r8, r0, lsl #24
   29768:	fec67c00 	cdp2	12, 12, cr7, cr6, cr0, {0}
   2976c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   29770:	00000000 	andeq	r0, r0, r0
   29774:	6c381000 	ldcvs	0, cr1, [r8], #-0
   29778:	fec67c00 	cdp2	12, 12, cr7, cr6, cr0, {0}
   2977c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   29780:	00000000 	andeq	r0, r0, r0
   29784:	6c000000 	stcvs	0, cr0, [r0], {-0}
   29788:	fec67c00 	cdp2	12, 12, cr7, cr6, cr0, {0}
   2978c:	7cc6c0c0 	stclvc	0, cr12, [r6], {192}	; 0xc0
   29790:	00000000 	andeq	r0, r0, r0
   29794:	18306000 	ldmdane	r0!, {sp, lr}
   29798:	18183800 	ldmdane	r8, {fp, ip, sp}
   2979c:	3c181818 	ldccc	8, cr1, [r8], {24}
   297a0:	00000000 	andeq	r0, r0, r0
   297a4:	30180c00 	andscc	r0, r8, r0, lsl #24
   297a8:	18183800 	ldmdane	r8, {fp, ip, sp}
   297ac:	3c181818 	ldccc	8, cr1, [r8], {24}
   297b0:	00000000 	andeq	r0, r0, r0
   297b4:	663c1800 	ldrtvs	r1, [ip], -r0, lsl #16
   297b8:	18183800 	ldmdane	r8, {fp, ip, sp}
   297bc:	3c181818 	ldccc	8, cr1, [r8], {24}
   297c0:	00000000 	andeq	r0, r0, r0
   297c4:	6c000000 	stcvs	0, cr0, [r0], {-0}
   297c8:	18183800 	ldmdane	r8, {fp, ip, sp}
   297cc:	3c181818 	ldccc	8, cr1, [r8], {24}
   297d0:	00000000 	andeq	r0, r0, r0
   297d4:	78307800 	ldmdavc	r0!, {fp, ip, sp, lr}
   297d8:	c6c67e0c 	strbgt	r7, [r6], ip, lsl #28
   297dc:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   297e0:	00000000 	andeq	r0, r0, r0
   297e4:	dc760000 	ldclle	0, cr0, [r6], #-0
   297e8:	6666dc00 	strbtvs	sp, [r6], -r0, lsl #24
   297ec:	66666666 	strbtvs	r6, [r6], -r6, ror #12
   297f0:	00000000 	andeq	r0, r0, r0
   297f4:	18306000 	ldmdane	r0!, {sp, lr}
   297f8:	c6c67c00 	strbgt	r7, [r6], r0, lsl #24
   297fc:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29800:	00000000 	andeq	r0, r0, r0
   29804:	30180c00 	andscc	r0, r8, r0, lsl #24
   29808:	c6c67c00 	strbgt	r7, [r6], r0, lsl #24
   2980c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29810:	00000000 	andeq	r0, r0, r0
   29814:	6c381000 	ldcvs	0, cr1, [r8], #-0
   29818:	c6c67c00 	strbgt	r7, [r6], r0, lsl #24
   2981c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29820:	00000000 	andeq	r0, r0, r0
   29824:	dc760000 	ldclle	0, cr0, [r6], #-0
   29828:	c6c67c00 	strbgt	r7, [r6], r0, lsl #24
   2982c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
   29830:	00000000 	andeq	r0, r0, r0
   29834:	6c000000 	stcvs	0, cr0, [r0], {-0}
   29838:	c6c67c00 	strbgt	r7, [r6], r0, lsl #24
   2983c:	7cc6c6c6 	stclvc	6, cr12, [r6], {198}	; 0xc6
	...
   29848:	7e001800 	cdpvc	8, 0, cr1, cr0, cr0, {0}
   2984c:	00001800 	andeq	r1, r0, r0, lsl #16
	...
   29858:	dece7e00 	cdple	14, 12, cr7, cr14, cr0, {0}
   2985c:	fce6f6fe 	stc2l	6, cr15, [r6], #1016	; 0x3f8
   29860:	00000000 	andeq	r0, r0, r0
   29864:	18306000 	ldmdane	r0!, {sp, lr}
   29868:	cccccc00 	stclgt	12, cr12, [ip], {0}
   2986c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   29870:	00000000 	andeq	r0, r0, r0
   29874:	60301800 	eorsvs	r1, r0, r0, lsl #16
   29878:	cccccc00 	stclgt	12, cr12, [ip], {0}
   2987c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   29880:	00000000 	andeq	r0, r0, r0
   29884:	cc783000 	ldclgt	0, cr3, [r8], #-0
   29888:	cccccc00 	stclgt	12, cr12, [ip], {0}
   2988c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   29890:	00000000 	andeq	r0, r0, r0
   29894:	cc000000 	stcgt	0, cr0, [r0], {-0}
   29898:	cccccc00 	stclgt	12, cr12, [ip], {0}
   2989c:	76cccccc 	strbvc	ip, [ip], ip, asr #25
   298a0:	00000000 	andeq	r0, r0, r0
   298a4:	30180c00 	andscc	r0, r8, r0, lsl #24
   298a8:	c6c6c600 	strbgt	ip, [r6], r0, lsl #12
   298ac:	7ec6c6c6 	cdpvc	6, 12, cr12, cr6, cr6, {6}
   298b0:	00f80c06 	rscseq	r0, r8, r6, lsl #24
   298b4:	60f00000 	rscsvs	r0, r0, r0
   298b8:	66667c60 	strbtvs	r7, [r6], -r0, ror #24
   298bc:	607c6666 	rsbsvs	r6, ip, r6, ror #12
   298c0:	0000f060 	andeq	pc, r0, r0, rrx
   298c4:	6c000000 	stcvs	0, cr0, [r0], {-0}
   298c8:	c6c6c600 	strbgt	ip, [r6], r0, lsl #12
   298cc:	7ec6c6c6 	cdpvc	6, 12, cr12, cr6, cr6, {6}
   298d0:	00f80c06 	rscseq	r0, r8, r6, lsl #24

000298d4 <FromExcept>:
   298d4:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
   298d8:	00007470 	andeq	r7, r0, r0, ror r4

000298dc <s_pExceptionName>:
   298dc:	0002bb38 	andeq	fp, r2, r8, lsr fp
   298e0:	0002bb4c 	andeq	fp, r2, ip, asr #22
   298e4:	0002bb64 	andeq	fp, r2, r4, ror #22
   298e8:	0002bb74 	andeq	fp, r2, r4, ror fp

Disassembly of section .rodata.str1.4:

000298ec <.rodata.str1.4>:
   298ec:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
   298f0:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
   298f4:	676e697a 			; <UNDEFINED> instruction: 0x676e697a
   298f8:	50535520 	subspl	r5, r3, r0, lsr #10
   298fc:	696c2069 	stmdbvs	ip!, {r0, r3, r5, r6, sp}^
   29900:	72617262 	rsbvc	r7, r1, #536870918	; 0x20000006
   29904:	2e322079 	mrccs	0, 1, r2, cr2, cr9, {3}
   29908:	00003030 	andeq	r3, r0, r0, lsr r0
   2990c:	69707375 	ldmdbvs	r0!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
   29910:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
   29914:	2e797261 	cdpcs	2, 7, cr7, cr9, cr1, {3}
   29918:	00000063 	andeq	r0, r0, r3, rrx
   2991c:	4c705f73 	ldclmi	15, cr5, [r0], #-460	; 0xfffffe34
   29920:	61726269 	cmnvs	r2, r9, ror #4
   29924:	3d207972 			; <UNDEFINED> instruction: 0x3d207972
   29928:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2992c:	4c705f73 	ldclmi	15, cr5, [r0], #-460	; 0xfffffe34
   29930:	61726269 	cmnvs	r2, r9, ror #4
   29934:	21207972 			; <UNDEFINED> instruction: 0x21207972
   29938:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2993c:	6e6e6143 	powvsem	f6, f6, f3
   29940:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   29944:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
   29948:	7a696c61 	bvc	1a84ad4 <mailbuffer+0x1a57934>
   2994c:	53552065 	cmppl	r5, #101	; 0x65
   29950:	6f682042 	svcvs	0x00682042
   29954:	63207473 			; <UNDEFINED> instruction: 0x63207473
   29958:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
   2995c:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
   29960:	6e692072 	mcrvs	0, 3, r2, cr9, cr2, {3}
   29964:	66726574 			; <UNDEFINED> instruction: 0x66726574
   29968:	00656361 	rsbeq	r6, r5, r1, ror #6
   2996c:	64626b75 	strbtvs	r6, [r2], #-2933	; 0xfffff48b
   29970:	00000031 	andeq	r0, r0, r1, lsr r0
   29974:	756f6d75 	strbvc	r6, [pc, #-3445]!	; 28c07 <font_data+0x123>
   29978:	00316573 	eorseq	r6, r1, r3, ror r5
   2997c:	64696d75 	strbtvs	r6, [r9], #-3445	; 0xfffff28b
   29980:	00003169 	andeq	r3, r0, r9, ror #2
   29984:	64736d75 	ldrbtvs	r6, [r3], #-3445	; 0xfffff28b
   29988:	00007525 	andeq	r7, r0, r5, lsr #10
   2998c:	30687465 	rsbcc	r7, r8, r5, ror #8
   29990:	00000000 	andeq	r0, r0, r0
   29994:	31687465 	cmncc	r8, r5, ror #8
   29998:	00000030 	andeq	r0, r0, r0, lsr r0
   2999c:	64617075 	strbtvs	r7, [r1], #-117	; 0xffffff8b
   299a0:	00007525 	andeq	r7, r0, r5, lsr #10
   299a4:	69505355 	ldmdbvs	r0, {r0, r2, r4, r6, r8, r9, ip, lr}^
   299a8:	62696c20 	rsbvs	r6, r9, #32, 24	; 0x2000
   299ac:	79726172 	ldmdbvc	r2!, {r1, r4, r5, r6, r8, sp, lr}^
   299b0:	63757320 	cmnvs	r5, #32, 6	; 0x80000000
   299b4:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
   299b8:	6c6c7566 	cfstr64vs	mvdx7, [ip], #-408	; 0xfffffe68
   299bc:	6e692079 	mcrvs	0, 3, r2, cr9, cr9, {3}
   299c0:	61697469 	cmnvs	r9, r9, ror #8
   299c4:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
   299c8:	00000064 	andeq	r0, r0, r4, rrx
   299cc:	4c705f73 	ldclmi	15, cr5, [r0], #-460	; 0xfffffe34
   299d0:	61726269 	cmnvs	r2, r9, ror #4
   299d4:	3e2d7972 			; <UNDEFINED> instruction: 0x3e2d7972
   299d8:	424b5570 	submi	r5, fp, #112, 10	; 0x1c000000
   299dc:	21203144 			; <UNDEFINED> instruction: 0x21203144
   299e0:	0030203d 	eorseq	r2, r0, sp, lsr r0
   299e4:	4c705f73 	ldclmi	15, cr5, [r0], #-460	; 0xfffffe34
   299e8:	61726269 	cmnvs	r2, r9, ror #4
   299ec:	3e2d7972 			; <UNDEFINED> instruction: 0x3e2d7972
   299f0:	6f4d5570 	svcvs	0x004d5570
   299f4:	31657375 	smccc	22325	; 0x5735
   299f8:	203d2120 	eorscs	r2, sp, r0, lsr #2
   299fc:	00000030 	andeq	r0, r0, r0, lsr r0
   29a00:	4c705f73 	ldclmi	15, cr5, [r0], #-460	; 0xfffffe34
   29a04:	61726269 	cmnvs	r2, r9, ror #4
   29a08:	3e2d7972 			; <UNDEFINED> instruction: 0x3e2d7972
   29a0c:	68744570 	ldmdavs	r4!, {r4, r5, r6, r8, sl, lr}^
   29a10:	3d212030 	stccc	0, cr2, [r1, #-192]!	; 0xffffff40
   29a14:	00003020 	andeq	r3, r0, r0, lsr #32
   29a18:	4c705f73 	ldclmi	15, cr5, [r0], #-460	; 0xfffffe34
   29a1c:	61726269 	cmnvs	r2, r9, ror #4
   29a20:	3e2d7972 			; <UNDEFINED> instruction: 0x3e2d7972
   29a24:	44494d70 	strbmi	r4, [r9], #-3440	; 0xfffff290
   29a28:	21203149 			; <UNDEFINED> instruction: 0x21203149
   29a2c:	0030203d 	eorseq	r2, r0, sp, lsr r0
   29a30:	42535570 	subsmi	r5, r3, #112, 10	; 0x1c000000
   29a34:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   29a38:	21206563 			; <UNDEFINED> instruction: 0x21206563
   29a3c:	0030203d 	eorseq	r2, r0, sp, lsr r0
   29a40:	73654470 	cmnvc	r5, #112, 8	; 0x70000000
   29a44:	3d212063 	stccc	0, cr2, [r1, #-396]!	; 0xfffffe74
   29a48:	00003020 	andeq	r3, r0, r0, lsr #32
   29a4c:	666e4970 			; <UNDEFINED> instruction: 0x666e4970
   29a50:	3d21206f 	stccc	0, cr2, [r1, #-444]!	; 0xfffffe44
   29a54:	00003020 	andeq	r3, r0, r0, lsr #32
   29a58:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   29a5c:	76656469 	strbtvc	r6, [r5], -r9, ror #8
   29a60:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
   29a64:	00000063 	andeq	r0, r0, r3, rrx
   29a68:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   29a6c:	3d212073 	stccc	0, cr2, [r1, #-460]!	; 0xfffffe34
   29a70:	00003020 	andeq	r3, r0, r0, lsr #32
   29a74:	61745370 	cmnvs	r4, r0, ror r3
   29a78:	61446567 	cmpvs	r4, r7, ror #10
   29a7c:	21206174 			; <UNDEFINED> instruction: 0x21206174
   29a80:	0030203d 	eorseq	r2, r0, sp, lsr r0
   29a84:	6168436e 	cmnvs	r8, lr, ror #6
   29a88:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
   29a8c:	70203c20 	eorvc	r3, r0, r0, lsr #24
   29a90:	73696854 	cmnvc	r9, #84, 16	; 0x540000
   29a94:	5f6d3e2d 	svcpl	0x006d3e2d
   29a98:	6168436e 	cmnvs	r8, lr, ror #6
   29a9c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
   29aa0:	00000073 	andeq	r0, r0, r3, ror r0
   29aa4:	43485744 	movtmi	r5, #34628	; 0x8744
   29aa8:	61725449 	cmnvs	r2, r9, asr #8
   29aac:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
   29ab0:	61745372 	cmnvs	r4, r2, ror r3
   29ab4:	61446567 	cmpvs	r4, r7, ror #10
   29ab8:	65476174 	strbvs	r6, [r7, #-372]	; 0xfffffe8c
   29abc:	61745374 	cmnvs	r4, r4, ror r3
   29ac0:	28206574 	stmdacs	r0!, {r2, r4, r5, r6, r8, sl, sp, lr}
   29ac4:	61745370 	cmnvs	r4, r0, ror r3
   29ac8:	61446567 	cmpvs	r4, r7, ror #10
   29acc:	20296174 	eorcs	r6, r9, r4, ror r1
   29ad0:	53203d3d 			; <UNDEFINED> instruction: 0x53203d3d
   29ad4:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
   29ad8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
   29adc:	72655065 	rsbvc	r5, r5, #101	; 0x65
   29ae0:	69646f69 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
   29ae4:	6c654463 	cfstrdvs	mvd4, [r5], #-396	; 0xfffffe74
   29ae8:	00007961 	andeq	r7, r0, r1, ror #18
   29aec:	61724670 	cmnvs	r2, r0, ror r6
   29af0:	6353656d 	cmpvs	r3, #457179136	; 0x1b400000
   29af4:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
   29af8:	2072656c 	rsbscs	r6, r2, ip, ror #10
   29afc:	30203d21 	eorcc	r3, r0, r1, lsr #26
   29b00:	00000000 	andeq	r0, r0, r0
   29b04:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   29b08:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   29b0c:	68436e5f 	stmdavs	r3, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
   29b10:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
   29b14:	6c6c416c 	stfvse	f4, [ip], #-432	; 0xfffffe50
   29b18:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
   29b1c:	26206465 	strtcs	r6, [r0], -r5, ror #8
   29b20:	68436e20 	stmdavs	r3, {r5, r9, sl, fp, sp, lr}^
   29b24:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
   29b28:	73614d6c 	cmnvc	r1, #108, 26	; 0x1b00
   29b2c:	0000006b 	andeq	r0, r0, fp, rrx
   29b30:	42525570 	subsmi	r5, r2, #112, 10	; 0x1c000000
   29b34:	203d2120 	eorscs	r2, sp, r0, lsr #2
   29b38:	00000030 	andeq	r0, r0, r0, lsr r0
   29b3c:	45425355 	strbmi	r5, [r2, #-853]	; 0xfffffcab
   29b40:	6f70646e 	svcvs	0x0070646e
   29b44:	47746e69 	ldrbmi	r6, [r4, -r9, ror #28]!
   29b48:	79547465 	ldmdbvc	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
   29b4c:	28206570 	stmdacs	r0!, {r4, r5, r6, r8, sl, sp, lr}
   29b50:	52425355 	subpl	r5, r2, #1409286145	; 0x54000001
   29b54:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
   29b58:	65477473 	strbvs	r7, [r7, #-1139]	; 0xfffffb8d
   29b5c:	646e4574 	strbtvs	r4, [lr], #-1396	; 0xfffffa8c
   29b60:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   29b64:	70282074 	eorvc	r2, r8, r4, ror r0
   29b68:	29425255 	stmdbcs	r2, {r0, r2, r4, r6, r9, ip, lr}^
   29b6c:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
   29b70:	646e4520 	strbtvs	r4, [lr], #-1312	; 0xfffffae0
   29b74:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   29b78:	70795474 	rsbsvc	r5, r9, r4, ror r4
   29b7c:	6c754265 	lfmvs	f4, 2, [r5], #-404	; 0xfffffe6c
   29b80:	7c7c206b 	ldclvc	0, cr2, [ip], #-428	; 0xfffffe54
   29b84:	42535520 	subsmi	r5, r3, #32, 10	; 0x8000000
   29b88:	70646e45 	rsbvc	r6, r4, r5, asr #28
   29b8c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
   29b90:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
   29b94:	20657079 	rsbcs	r7, r5, r9, ror r0
   29b98:	42535528 	subsmi	r5, r3, #40, 10	; 0xa000000
   29b9c:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
   29ba0:	47747365 	ldrbmi	r7, [r4, -r5, ror #6]!
   29ba4:	6e457465 	cdpvs	4, 4, cr7, cr5, cr5, {3}
   29ba8:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   29bac:	2820746e 	stmdacs	r0!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
   29bb0:	42525570 	subsmi	r5, r2, #112, 10	; 0x1c000000
   29bb4:	3d202929 			; <UNDEFINED> instruction: 0x3d202929
   29bb8:	6e45203d 	mcrvs	0, 2, r2, cr5, cr13, {1}
   29bbc:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   29bc0:	7954746e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   29bc4:	6e496570 	mcrvs	5, 2, r6, cr9, cr0, {3}
   29bc8:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
   29bcc:	00747075 	rsbseq	r7, r4, r5, ror r0
   29bd0:	52425355 	subpl	r5, r2, #1409286145	; 0x54000001
   29bd4:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
   29bd8:	65477473 	strbvs	r7, [r7, #-1139]	; 0xfffffb8d
   29bdc:	66754274 			; <UNDEFINED> instruction: 0x66754274
   29be0:	206e654c 	rsbcs	r6, lr, ip, asr #10
   29be4:	52557028 	subspl	r7, r5, #40	; 0x28
   29be8:	3e202942 	vnmulcc.f16	s4, s0, s4	; <UNPREDICTABLE>
   29bec:	00003020 	andeq	r3, r0, r0, lsr #32
   29bf0:	68547021 	ldmdavs	r4, {r0, r5, ip, sp, lr}^
   29bf4:	3e2d7369 	cdpcc	3, 2, cr7, cr13, cr9, {3}
   29bf8:	57625f6d 	strbpl	r5, [r2, -sp, ror #30]!
   29bfc:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
   29c00:	0000676e 	andeq	r6, r0, lr, ror #14
   29c04:	74655370 	strbtvc	r5, [r5], #-880	; 0xfffffc90
   29c08:	21207075 			; <UNDEFINED> instruction: 0x21207075
   29c0c:	0030203d 	eorseq	r2, r0, sp, lsr r0
   29c10:	48574421 	ldmdami	r7, {r0, r5, sl, lr}^
   29c14:	72544943 	subsvc	r4, r4, #1097728	; 0x10c000
   29c18:	66736e61 	ldrbtvs	r6, [r3], -r1, ror #28
   29c1c:	74537265 	ldrbvc	r7, [r3], #-613	; 0xfffffd9b
   29c20:	44656761 	strbtmi	r6, [r5], #-1889	; 0xfffff89f
   29c24:	49617461 	stmdbmi	r1!, {r0, r5, r6, sl, ip, sp, lr}^
   29c28:	72655073 	rsbvc	r5, r5, #115	; 0x73
   29c2c:	69646f69 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
   29c30:	70282063 	eorvc	r2, r8, r3, rrx
   29c34:	67617453 			; <UNDEFINED> instruction: 0x67617453
   29c38:	74614465 	strbtvc	r4, [r1], #-1125	; 0xfffffb9b
   29c3c:	7c202961 			; <UNDEFINED> instruction: 0x7c202961
   29c40:	5744207c 	smlsldxpl	r2, r4, ip, r0
   29c44:	5f494348 	svcpl	0x00494348
   29c48:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29c4c:	4148435f 	cmpmi	r8, pc, asr r3
   29c50:	46585f4e 	ldrbmi	r5, [r8], -lr, asr #30
   29c54:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
   29c58:	505f5a49 	subspl	r5, pc, r9, asr #20
   29c5c:	28204449 	stmdacs	r0!, {r0, r3, r6, sl, lr}
   29c60:	43485744 	movtmi	r5, #34628	; 0x8744
   29c64:	67655249 	strbvs	r5, [r5, -r9, asr #4]!
   29c68:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
   29c6c:	74654772 	strbtvc	r4, [r5], #-1906	; 0xfffff88e
   29c70:	54262820 	strtpl	r2, [r6], #-2080	; 0xfffff7e0
   29c74:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
   29c78:	53726566 	cmnpl	r2, #427819008	; 0x19800000
   29c7c:	29657a69 	stmdbcs	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
   29c80:	3d212029 	stccc	0, cr2, [r1, #-164]!	; 0xffffff5c
   29c84:	48574420 	ldmdami	r7, {r5, sl, lr}^
   29c88:	485f4943 	ldmdami	pc, {r0, r1, r6, r8, fp, lr}^	; <UNPREDICTABLE>
   29c8c:	5f54534f 	svcpl	0x0054534f
   29c90:	4e414843 	cdpmi	8, 4, cr4, cr1, cr3, {2}
   29c94:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
   29c98:	49535f52 	ldmdbmi	r3, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
   29c9c:	49505f5a 	ldmdbmi	r0, {r1, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
   29ca0:	444d5f44 	strbmi	r5, [sp], #-3908	; 0xfffff0bc
   29ca4:	00415441 	subeq	r5, r1, r1, asr #8
   29ca8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
   29cac:	74636173 	strbtvc	r6, [r3], #-371	; 0xfffffe8d
   29cb0:	206e6f69 	rsbcs	r6, lr, r9, ror #30
   29cb4:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
   29cb8:	28206465 	stmdacs	r0!, {r0, r2, r5, r6, sl, sp, lr}
   29cbc:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
   29cc0:	30207375 	eorcc	r7, r0, r5, ror r3
   29cc4:	29582578 	ldmdbcs	r8, {r3, r4, r5, r6, r8, sl, sp}^
   29cc8:	00000000 	andeq	r0, r0, r0
   29ccc:	67655270 			; <UNDEFINED> instruction: 0x67655270
   29cd0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
   29cd4:	3d212072 	stccc	0, cr2, [r1, #-456]!	; 0xfffffe38
   29cd8:	00003020 	andeq	r3, r0, r0, lsr #32
   29cdc:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
   29ce0:	3d21206b 	stccc	0, cr2, [r1, #-428]!	; 0xfffffe54
   29ce4:	00003020 	andeq	r3, r0, r0, lsr #32
   29ce8:	54734d6e 	ldrbtpl	r4, [r3], #-3438	; 0xfffff292
   29cec:	6f656d69 	svcvs	0x00656d69
   29cf0:	3e207475 	mcrcc	4, 1, r7, cr0, cr5, {3}
   29cf4:	00003020 	andeq	r3, r0, r0, lsr #32
   29cf8:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
   29cfc:	61662074 	smcvs	25092	; 0x6204
   29d00:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   29d04:	00000000 	andeq	r0, r0, r0
   29d08:	43485744 	movtmi	r5, #34628	; 0x8744
   29d0c:	4f435f49 	svcmi	0x00435f49
   29d10:	485f4552 	ldmdami	pc, {r1, r4, r6, r8, sl, lr}^	; <UNPREDICTABLE>
   29d14:	46435f57 			; <UNDEFINED> instruction: 0x46435f57
   29d18:	415f3247 	cmpmi	pc, r7, asr #4
   29d1c:	49484352 	stmdbmi	r8, {r1, r4, r6, r8, r9, lr}^
   29d20:	54434554 	strbpl	r4, [r3], #-1364	; 0xfffffaac
   29d24:	20455255 	subcs	r5, r5, r5, asr r2
   29d28:	48574428 	ldmdami	r7, {r3, r5, sl, lr}^
   29d2c:	65524943 	ldrbvs	r4, [r2, #-2371]	; 0xfffff6bd
   29d30:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
   29d34:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
   29d38:	26282074 			; <UNDEFINED> instruction: 0x26282074
   29d3c:	6f435748 	svcvs	0x00435748
   29d40:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
   29d44:	20292932 	eorcs	r2, r9, r2, lsr r9
   29d48:	32203d3d 	eorcc	r3, r0, #3904	; 0xf40
   29d4c:	00000000 	andeq	r0, r0, r0
   29d50:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   29d54:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   29d58:	68436e5f 	stmdavs	r3, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
   29d5c:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
   29d60:	3d20736c 	stccc	3, cr7, [r0, #-432]!	; 0xfffffe50
   29d64:	0030203d 	eorseq	r2, r0, sp, lsr r0
   29d68:	3d3c2034 	ldccc	0, cr2, [ip, #-208]!	; 0xffffff30
   29d6c:	68547020 	ldmdavs	r4, {r5, ip, sp, lr}^
   29d70:	3e2d7369 	cdpcc	3, 2, cr7, cr13, cr9, {3}
   29d74:	436e5f6d 	cmnmi	lr, #436	; 0x1b4
   29d78:	6e6e6168 	powvsez	f6, f6, #0.0
   29d7c:	20736c65 	rsbscs	r6, r3, r5, ror #24
   29d80:	70202626 	eorvc	r2, r0, r6, lsr #12
   29d84:	73696854 	cmnvc	r9, #84, 16	; 0x540000
   29d88:	5f6d3e2d 	svcpl	0x006d3e2d
   29d8c:	6168436e 	cmnvs	r8, lr, ror #6
   29d90:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
   29d94:	3d3c2073 	ldccc	0, cr2, [ip, #-460]!	; 0xfffffe34
   29d98:	48574420 	ldmdami	r7, {r5, sl, lr}^
   29d9c:	4d5f4943 	vldrmi.16	s9, [pc, #-134]	; 29d1e <s_pExceptionName+0x442>	; <UNPREDICTABLE>
   29da0:	435f5841 	cmpmi	pc, #4259840	; 0x410000
   29da4:	4e4e4148 	dvfmiem	f4, f6, #0.0
   29da8:	00534c45 	subseq	r4, r3, r5, asr #24
   29dac:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   29db0:	206e776f 	rsbcs	r7, lr, pc, ror #14
   29db4:	646e6576 	strbtvs	r6, [lr], #-1398	; 0xfffffa8a
   29db8:	3020726f 	eorcc	r7, r0, pc, ror #4
   29dbc:	58302578 	ldmdapl	r0!, {r3, r4, r5, r6, r8, sl, sp}
   29dc0:	00000000 	andeq	r0, r0, r0
   29dc4:	6e6e6143 	powvsem	f6, f6, f3
   29dc8:	7020746f 	eorvc	r7, r0, pc, ror #8
   29dcc:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
   29dd0:	006e6f20 	rsbeq	r6, lr, r0, lsr #30
   29dd4:	6e6e6143 	powvsem	f6, f6, f3
   29dd8:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   29ddc:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
   29de0:	7a696c61 	bvc	1a84f6c <mailbuffer+0x1a57dcc>
   29de4:	6f632065 	svcvs	0x00632065
   29de8:	00006572 	andeq	r6, r0, r2, ror r5
   29dec:	6e6e6143 	powvsem	f6, f6, f3
   29df0:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   29df4:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
   29df8:	7a696c61 	bvc	1a84f84 <mailbuffer+0x1a57de4>
   29dfc:	6f682065 	svcvs	0x00682065
   29e00:	00007473 	andeq	r7, r0, r3, ror r4
   29e04:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
   29e08:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   29e0c:	6f632065 	svcvs	0x00632065
   29e10:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
   29e14:	20646574 	rsbcs	r6, r4, r4, ror r5
   29e18:	72206f74 	eorvc	r6, r0, #116, 30	; 0x1d0
   29e1c:	20746f6f 	rsbscs	r6, r4, pc, ror #30
   29e20:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
   29e24:	00000000 	andeq	r0, r0, r0
   29e28:	6e6e6143 	powvsem	f6, f6, f3
   29e2c:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   29e30:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
   29e34:	7a696c61 	bvc	1a84fc0 <mailbuffer+0x1a57e20>
   29e38:	6f722065 	svcvs	0x00722065
   29e3c:	7020746f 	eorvc	r7, r0, pc, ror #8
   29e40:	0074726f 	rsbseq	r7, r4, pc, ror #4
   29e44:	30257830 	eorcc	r7, r5, r0, lsr r8
   29e48:	25205838 	strcs	r5, [r0, #-2104]!	; 0xfffff7c8
   29e4c:	00000073 	andeq	r0, r0, r3, ror r0
   29e50:	5f47544f 	svcpl	0x0047544f
   29e54:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
   29e58:	00000000 	andeq	r0, r0, r0
   29e5c:	5f424841 	svcpl	0x00424841
   29e60:	00474643 	subeq	r4, r7, r3, asr #12
   29e64:	5f425355 	svcpl	0x00425355
   29e68:	00474643 	subeq	r4, r7, r3, asr #12
   29e6c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
   29e70:	00000054 	andeq	r0, r0, r4, asr r0
   29e74:	5f544e49 	svcpl	0x00544e49
   29e78:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
   29e7c:	00000000 	andeq	r0, r0, r0
   29e80:	5f544e49 	svcpl	0x00544e49
   29e84:	4b53414d 	blmi	14fa3c0 <mailbuffer+0x14cd220>
   29e88:	00000000 	andeq	r0, r0, r0
   29e8c:	465f5852 			; <UNDEFINED> instruction: 0x465f5852
   29e90:	5f4f4649 	svcpl	0x004f4649
   29e94:	005a4953 	subseq	r4, sl, r3, asr r9
   29e98:	5245504e 	subpl	r5, r5, #78	; 0x4e
   29e9c:	5f58545f 	svcpl	0x0058545f
   29ea0:	4f464946 	svcmi	0x00464946
   29ea4:	5a49535f 	bpl	127ec28 <mailbuffer+0x1251a88>
   29ea8:	00000000 	andeq	r0, r0, r0
   29eac:	5245504e 	subpl	r5, r5, #78	; 0x4e
   29eb0:	5f58545f 	svcpl	0x0058545f
   29eb4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
   29eb8:	00000000 	andeq	r0, r0, r0
   29ebc:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29ec0:	5245505f 	subpl	r5, r5, #95	; 0x5f
   29ec4:	5f58545f 	svcpl	0x0058545f
   29ec8:	4f464946 	svcmi	0x00464946
   29ecc:	5a49535f 	bpl	127ec50 <mailbuffer+0x1251ab0>
   29ed0:	00000000 	andeq	r0, r0, r0
   29ed4:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29ed8:	4746435f 	smlsldmi	r4, r6, pc, r3	; <UNPREDICTABLE>
   29edc:	00000000 	andeq	r0, r0, r0
   29ee0:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29ee4:	5245505f 	subpl	r5, r5, #95	; 0x5f
   29ee8:	5f58545f 	svcpl	0x0058545f
   29eec:	4f464946 	svcmi	0x00464946
   29ef0:	4154535f 	cmpmi	r4, pc, asr r3
   29ef4:	00000054 	andeq	r0, r0, r4, asr r0
   29ef8:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29efc:	4c4c415f 	stfmie	f4, [ip], {95}	; 0x5f
   29f00:	4e414843 	cdpmi	8, 4, cr4, cr1, cr3, {2}
   29f04:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
   29f08:	00000000 	andeq	r0, r0, r0
   29f0c:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f10:	4c4c415f 	stfmie	f4, [ip], {95}	; 0x5f
   29f14:	4e414843 	cdpmi	8, 4, cr4, cr1, cr3, {2}
   29f18:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
   29f1c:	53414d5f 	movtpl	r4, #7519	; 0x1d5f
   29f20:	0000004b 	andeq	r0, r0, fp, asr #32
   29f24:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f28:	524f505f 	subpl	r5, pc, #95	; 0x5f
   29f2c:	00000054 	andeq	r0, r0, r4, asr r0
   29f30:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f34:	4148435f 	cmpmi	r8, pc, asr r3
   29f38:	48435f4e 	stmdami	r3, {r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
   29f3c:	43415241 	movtmi	r5, #4673	; 0x1241
   29f40:	28524554 	ldmdacs	r2, {r2, r4, r6, r8, sl, lr}^
   29f44:	0000296e 	andeq	r2, r0, lr, ror #18
   29f48:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f4c:	4148435f 	cmpmi	r8, pc, asr r3
   29f50:	50535f4e 	subspl	r5, r3, lr, asr #30
   29f54:	5f54494c 	svcpl	0x0054494c
   29f58:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
   29f5c:	00296e28 	eoreq	r6, r9, r8, lsr #28
   29f60:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f64:	4148435f 	cmpmi	r8, pc, asr r3
   29f68:	4e495f4e 	cdpmi	15, 4, cr5, cr9, cr14, {2}
   29f6c:	296e2854 	stmdbcs	lr!, {r2, r4, r6, fp, sp}^
   29f70:	00000000 	andeq	r0, r0, r0
   29f74:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f78:	4148435f 	cmpmi	r8, pc, asr r3
   29f7c:	4e495f4e 	cdpmi	15, 4, cr5, cr9, cr14, {2}
   29f80:	414d5f54 	cmpmi	sp, r4, asr pc
   29f84:	6e284b53 			; <UNDEFINED> instruction: 0x6e284b53
   29f88:	00000029 	andeq	r0, r0, r9, lsr #32
   29f8c:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29f90:	4148435f 	cmpmi	r8, pc, asr r3
   29f94:	46585f4e 	ldrbmi	r5, [r8], -lr, asr #30
   29f98:	535f5245 	cmppl	pc, #1342177284	; 0x50000004
   29f9c:	6e285a49 	vnmulvs.f32	s10, s16, s18
   29fa0:	00000029 	andeq	r0, r0, r9, lsr #32
   29fa4:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   29fa8:	4148435f 	cmpmi	r8, pc, asr r3
   29fac:	4d445f4e 	stclmi	15, cr5, [r4, #-312]	; 0xfffffec8
   29fb0:	44415f41 	strbmi	r5, [r1], #-3905	; 0xfffff0bf
   29fb4:	6e285244 	cdpvs	2, 2, cr5, cr8, cr4, {2}
   29fb8:	00000029 	andeq	r0, r0, r9, lsr #32
   29fbc:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   29fc0:	67657269 	strbvs	r7, [r5, -r9, ror #4]!
   29fc4:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
   29fc8:	00632e72 	rsbeq	r2, r3, r2, ror lr
   29fcc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   29fd0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   29fd4:	6156625f 	cmpvs	r6, pc, asr r2
   29fd8:	0064696c 	rsbeq	r6, r4, ip, ror #18
   29fdc:	7469426e 	strbtvc	r4, [r9], #-622	; 0xfffffd92
   29fe0:	73203c20 			; <UNDEFINED> instruction: 0x73203c20
   29fe4:	6f657a69 	svcvs	0x00657a69
   29fe8:	54702066 	ldrbtpl	r2, [r0], #-102	; 0xffffff9a
   29fec:	2d736968 			; <UNDEFINED> instruction: 0x2d736968
   29ff0:	6e5f6d3e 	mrcvs	13, 2, r6, cr15, cr14, {1}
   29ff4:	66667542 	strbtvs	r7, [r6], -r2, asr #10
   29ff8:	2a207265 	bcs	846994 <mailbuffer+0x8197f4>
   29ffc:	00003820 	andeq	r3, r0, r0, lsr #16
   2a000:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
   2a004:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
   2a008:	20746120 	rsbscs	r6, r4, r0, lsr #2
   2a00c:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
   2a010:	20736920 	rsbscs	r6, r3, r0, lsr #18
   2a014:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
   2a018:	00000000 	andeq	r0, r0, r0
   2a01c:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2a020:	00000069 	andeq	r0, r0, r9, rrx
   2a024:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
   2a028:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
   2a02c:	20746120 	rsbscs	r6, r4, r0, lsr #2
   2a030:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
   2a034:	73617720 	cmnvc	r1, #32, 14	; 0x800000
   2a038:	746f6e20 	strbtvc	r6, [pc], #-3616	; 2a040 <s_pExceptionName+0x764>
   2a03c:	74657320 	strbtvc	r7, [r5], #-800	; 0xfffffce0
   2a040:	00000000 	andeq	r0, r0, r0
   2a044:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2a048:	65667869 	strbvs	r7, [r6, #-2153]!	; 0xfffff797
   2a04c:	61747372 	cmnvs	r4, r2, ror r3
   2a050:	61646567 	cmnvs	r4, r7, ror #10
   2a054:	632e6174 			; <UNDEFINED> instruction: 0x632e6174
   2a058:	00000000 	andeq	r0, r0, r0
   2a05c:	6361506e 	cmnvs	r1, #110	; 0x6e
   2a060:	7374656b 	cmnvc	r4, #448790528	; 0x1ac00000
   2a064:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
   2a068:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
   2a06c:	3c206465 	cfstrscc	mvf6, [r0], #-404	; 0xfffffe6c
   2a070:	5470203d 	ldrbtpl	r2, [r0], #-61	; 0xffffffc3
   2a074:	2d736968 			; <UNDEFINED> instruction: 0x2d736968
   2a078:	6e5f6d3e 	mrcvs	13, 2, r6, cr15, cr14, {1}
   2a07c:	6b636150 	blvs	19025c4 <mailbuffer+0x18d5424>
   2a080:	00737465 	rsbseq	r7, r3, r5, ror #8
   2a084:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a088:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a08c:	6f546e5f 	svcvs	0x00546e5f
   2a090:	426c6174 	rsbmi	r6, ip, #116, 2
   2a094:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
   2a098:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
   2a09c:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
   2a0a0:	3c206465 	cfstrscc	mvf6, [r0], #-404	; 0xfffffe6c
   2a0a4:	5470203d 	ldrbtpl	r2, [r0], #-61	; 0xffffffc3
   2a0a8:	2d736968 			; <UNDEFINED> instruction: 0x2d736968
   2a0ac:	6e5f6d3e 	mrcvs	13, 2, r6, cr15, cr14, {1}
   2a0b0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
   2a0b4:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
   2a0b8:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
   2a0bc:	00000000 	andeq	r0, r0, r0
   2a0c0:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a0c4:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a0c8:	7053625f 	subsvc	r6, r3, pc, asr r2
   2a0cc:	5474696c 	ldrbtpl	r6, [r4], #-2412	; 0xfffff694
   2a0d0:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
   2a0d4:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
   2a0d8:	00006e6f 	andeq	r6, r0, pc, ror #28
   2a0dc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a0e0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a0e4:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2a0e8:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2a0ec:	2120746e 			; <UNDEFINED> instruction: 0x2120746e
   2a0f0:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a0f4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a0f8:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a0fc:	5255705f 	subspl	r7, r5, #95	; 0x5f
   2a100:	3d212042 	stccc	0, cr2, [r1, #-264]!	; 0xfffffef8
   2a104:	00003020 	andeq	r3, r0, r0, lsr #32
   2a108:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a10c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a110:	6544705f 	strbvs	r7, [r4, #-95]	; 0xffffffa1
   2a114:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a118:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2a11c:	00000030 	andeq	r0, r0, r0, lsr r0
   2a120:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a124:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a128:	7542705f 	strbvc	r7, [r2, #-95]	; 0xffffffa1
   2a12c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
   2a130:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
   2a134:	20726574 	rsbscs	r6, r2, r4, ror r5
   2a138:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a13c:	00000000 	andeq	r0, r0, r0
   2a140:	69752828 	ldmdbvs	r5!, {r3, r5, fp, sp}^
   2a144:	7470746e 	ldrbtvc	r7, [r0], #-1134	; 0xfffffb92
   2a148:	70202972 	eorvc	r2, r0, r2, ror r9
   2a14c:	73696854 	cmnvc	r9, #84, 16	; 0x540000
   2a150:	5f6d3e2d 	svcpl	0x006d3e2d
   2a154:	66754270 			; <UNDEFINED> instruction: 0x66754270
   2a158:	50726566 	rsbspl	r6, r2, r6, ror #10
   2a15c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
   2a160:	26207265 	strtcs	r7, [r0], -r5, ror #4
   2a164:	20293320 	eorcs	r3, r9, r0, lsr #6
   2a168:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2a16c:	00000000 	andeq	r0, r0, r0
   2a170:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a174:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a178:	72546e5f 	subsvc	r6, r4, #1520	; 0x5f0
   2a17c:	61736e61 	cmnvs	r3, r1, ror #28
   2a180:	6f697463 	svcvs	0x00697463
   2a184:	6174536e 	cmnvs	r4, lr, ror #6
   2a188:	20737574 	rsbscs	r7, r3, r4, ror r5
   2a18c:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a190:	00000000 	andeq	r0, r0, r0
   2a194:	64627375 	strbtvs	r7, [r2], #-885	; 0xfffffc8b
   2a198:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   2a19c:	00632e65 	rsbeq	r2, r3, r5, ror #28
   2a1a0:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a1a4:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a1a8:	6f48705f 	svcvs	0x0048705f
   2a1ac:	21207473 			; <UNDEFINED> instruction: 0x21207473
   2a1b0:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a1b4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a1b8:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a1bc:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2a1c0:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2a1c4:	2030746e 	eorscs	r7, r0, lr, ror #8
   2a1c8:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2a1cc:	00000000 	andeq	r0, r0, r0
   2a1d0:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a1d4:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a1d8:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2a1dc:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2a1e0:	2030746e 	eorscs	r7, r0, lr, ror #8
   2a1e4:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a1e8:	00000000 	andeq	r0, r0, r0
   2a1ec:	75486375 	strbvc	r6, [r8, #-885]	; 0xfffffc8b
   2a1f0:	726f5062 	rsbvc	r5, pc, #98	; 0x62
   2a1f4:	6d754e74 	ldclvs	14, cr4, [r5, #-464]!	; 0xfffffe30
   2a1f8:	20726562 	rsbscs	r6, r2, r2, ror #10
   2a1fc:	31203d3e 			; <UNDEFINED> instruction: 0x31203d3e
   2a200:	00000000 	andeq	r0, r0, r0
   2a204:	72745370 	rsbsvc	r5, r4, #112, 6	; 0xc0000001
   2a208:	20676e69 	rsbcs	r6, r7, r9, ror #28
   2a20c:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a210:	00000000 	andeq	r0, r0, r0
   2a214:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a218:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a21c:	6544705f 	strbvs	r7, [r4, #-95]	; 0xffffffa1
   2a220:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a224:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
   2a228:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2a22c:	00000030 	andeq	r0, r0, r0, lsr r0
   2a230:	256e6576 	strbcs	r6, [lr, #-1398]!	; 0xfffffa8a
   2a234:	78252d78 	stmdavc	r5!, {r3, r4, r5, r6, r8, sl, fp, sp}
   2a238:	00000000 	andeq	r0, r0, r0
   2a23c:	25766564 	ldrbcs	r6, [r6, #-1380]!	; 0xfffffa9c
   2a240:	78252d78 	stmdavc	r5!, {r3, r4, r5, r6, r8, sl, fp, sp}
   2a244:	0078252d 	rsbseq	r2, r8, sp, lsr #10
   2a248:	6e6b6e75 	mcrvs	14, 3, r6, cr11, cr5, {3}
   2a24c:	006e776f 	rsbeq	r7, lr, pc, ror #14
   2a250:	73655270 	cmnvc	r5, #112, 4
   2a254:	20746c75 	rsbscs	r6, r4, r5, ror ip
   2a258:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a25c:	00000000 	andeq	r0, r0, r0
   2a260:	0000202c 	andeq	r2, r0, ip, lsr #32
   2a264:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a268:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a26c:	6f43705f 	svcvs	0x0043705f
   2a270:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
   2a274:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
   2a278:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2a27c:	00000030 	andeq	r0, r0, r0, lsr r0
   2a280:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a284:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a288:	6f43705f 	svcvs	0x0043705f
   2a28c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
   2a290:	73726150 	cmnvc	r2, #80, 2
   2a294:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2a298:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a29c:	64416375 	strbvs	r6, [r1], #-885	; 0xfffffc8b
   2a2a0:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
   2a2a4:	3d3c2073 	ldccc	0, cr2, [ip, #-460]!	; 0xfffffe34
   2a2a8:	42535520 	subsmi	r5, r3, #32, 10	; 0x8000000
   2a2ac:	58414d5f 	stmdapl	r1, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}^
   2a2b0:	4444415f 	strbmi	r4, [r4], #-351	; 0xfffffea1
   2a2b4:	53534552 	cmppl	r3, #343932928	; 0x14800000
   2a2b8:	00000000 	andeq	r0, r0, r0
   2a2bc:	73654d70 	cmnvc	r5, #112, 26	; 0x1c00
   2a2c0:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
   2a2c4:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2a2c8:	00000030 	andeq	r0, r0, r0, lsr r0
   2a2cc:	75257325 	strvc	r7, [r5, #-805]!	; 0xfffffcdb
   2a2d0:	0075252d 	rsbseq	r2, r5, sp, lsr #10
   2a2d4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a2d8:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a2dc:	6544705f 	strbvs	r7, [r4, #-95]	; 0xffffffa1
   2a2e0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a2e4:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
   2a2e8:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2a2ec:	00000030 	andeq	r0, r0, r0, lsr r0
   2a2f0:	6e6e6143 	powvsem	f6, f6, f3
   2a2f4:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2a2f8:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
   2a2fc:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   2a300:	65642065 	strbvs	r2, [r4, #-101]!	; 0xffffff9b
   2a304:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2a308:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2a30c:	68732820 	ldmdavs	r3!, {r5, fp, sp}^
   2a310:	2974726f 	ldmdbcs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
   2a314:	00000000 	andeq	r0, r0, r0
   2a318:	61766e49 	cmnvs	r6, r9, asr #28
   2a31c:	2064696c 	rsbcs	r6, r4, ip, ror #18
   2a320:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   2a324:	64206563 	strtvs	r6, [r0], #-1379	; 0xfffffa9d
   2a328:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   2a32c:	6f747069 	svcvs	0x00747069
   2a330:	00000072 	andeq	r0, r0, r2, ror r0
   2a334:	6e6e6143 	powvsem	f6, f6, f3
   2a338:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2a33c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
   2a340:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   2a344:	65642065 	strbvs	r2, [r4, #-101]!	; 0xffffff9b
   2a348:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2a34c:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2a350:	00000000 	andeq	r0, r0, r0
   2a354:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
   2a358:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2a35c:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   2a360:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
   2a364:	00000000 	andeq	r0, r0, r0
   2a368:	6e6e6143 	powvsem	f6, f6, f3
   2a36c:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2a370:	61207465 			; <UNDEFINED> instruction: 0x61207465
   2a374:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
   2a378:	25207373 	strcs	r7, [r0, #-883]!	; 0xfffffc8d
   2a37c:	00000075 	andeq	r0, r0, r5, ror r0
   2a380:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a384:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a388:	6f43705f 	svcvs	0x0043705f
   2a38c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
   2a390:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
   2a394:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2a398:	00000030 	andeq	r0, r0, r0, lsr r0
   2a39c:	6e6e6143 	powvsem	f6, f6, f3
   2a3a0:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2a3a4:	63207465 			; <UNDEFINED> instruction: 0x63207465
   2a3a8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a3ac:	61727567 	cmnvs	r2, r7, ror #10
   2a3b0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a3b4:	73656420 	cmnvc	r5, #32, 8	; 0x20000000
   2a3b8:	70697263 	rsbvc	r7, r9, r3, ror #4
   2a3bc:	20726f74 	rsbscs	r6, r2, r4, ror pc
   2a3c0:	6f687328 	svcvs	0x00687328
   2a3c4:	00297472 	eoreq	r7, r9, r2, ror r4
   2a3c8:	61766e49 	cmnvs	r6, r9, asr #28
   2a3cc:	2064696c 	rsbcs	r6, r4, ip, ror #18
   2a3d0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
   2a3d4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
   2a3d8:	6f697461 	svcvs	0x00697461
   2a3dc:	6564206e 	strbvs	r2, [r4, #-110]!	; 0xffffff92
   2a3e0:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2a3e4:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2a3e8:	00000000 	andeq	r0, r0, r0
   2a3ec:	6e6e6143 	powvsem	f6, f6, f3
   2a3f0:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2a3f4:	63207465 			; <UNDEFINED> instruction: 0x63207465
   2a3f8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a3fc:	61727567 	cmnvs	r2, r7, ror #10
   2a400:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a404:	73656420 	cmnvc	r5, #32, 8	; 0x20000000
   2a408:	70697263 	rsbvc	r7, r9, r3, ror #4
   2a40c:	00726f74 	rsbseq	r6, r2, r4, ror pc
   2a410:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a414:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a418:	6f43705f 	svcvs	0x0043705f
   2a41c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
   2a420:	73726150 	cmnvc	r2, #80, 2
   2a424:	3d207265 	sfmcc	f7, 4, [r0, #-404]!	; 0xfffffe6c
   2a428:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a42c:	6d614e70 	stclvs	14, cr4, [r1, #-448]!	; 0xfffffe40
   2a430:	21207365 			; <UNDEFINED> instruction: 0x21207365
   2a434:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a438:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2a43c:	25206563 	strcs	r6, [r0, #-1379]!	; 0xfffffa9d
   2a440:	6f662073 	svcvs	0x00662073
   2a444:	00646e75 	rsbeq	r6, r4, r5, ror lr
   2a448:	65746c41 	ldrbvs	r6, [r4, #-3137]!	; 0xfffff3bf
   2a44c:	74616e72 	strbtvc	r6, [r1], #-3698	; 0xfffff18e
   2a450:	65732065 	ldrbvs	r2, [r3, #-101]!	; 0xffffff9b
   2a454:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
   2a458:	75252067 	strvc	r2, [r5, #-103]!	; 0xffffff99
   2a45c:	6e676920 	vmulvs.f16	s13, s14, s1	; <UNPREDICTABLE>
   2a460:	6465726f 	strbtvs	r7, [r5], #-623	; 0xfffffd91
   2a464:	00000000 	andeq	r0, r0, r0
   2a468:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a46c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a470:	7546705f 	strbvc	r7, [r6, #-95]	; 0xffffffa1
   2a474:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
   2a478:	6e5b6e6f 	cdpvs	14, 5, cr6, cr11, cr15, {3}
   2a47c:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
   2a480:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a484:	3d3d205d 	ldccc	0, cr2, [sp, #-372]!	; 0xfffffe8c
   2a488:	00003020 	andeq	r3, r0, r0, lsr #32
   2a48c:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a490:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a494:	7546705f 	strbvc	r7, [r6, #-95]	; 0xffffffa1
   2a498:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
   2a49c:	6e5b6e6f 	cdpvs	14, 5, cr6, cr11, cr15, {3}
   2a4a0:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
   2a4a4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a4a8:	3d21205d 	stccc	0, cr2, [r1, #-372]!	; 0xfffffe8c
   2a4ac:	00003020 	andeq	r3, r0, r0, lsr #32
   2a4b0:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
   2a4b4:	63616672 	cmnvs	r1, #119537664	; 0x7200000
   2a4b8:	73252065 			; <UNDEFINED> instruction: 0x73252065
   2a4bc:	756f6620 	strbvc	r6, [pc, #-1568]!	; 29ea4 <s_pExceptionName+0x5c8>
   2a4c0:	0000646e 	andeq	r6, r0, lr, ror #8
   2a4c4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
   2a4c8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a4cc:	20736920 	rsbscs	r6, r3, r0, lsr #18
   2a4d0:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2a4d4:	70707573 	rsbsvc	r7, r0, r3, ror r5
   2a4d8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
   2a4dc:	00000064 	andeq	r0, r0, r4, rrx
   2a4e0:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
   2a4e4:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2a4e8:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
   2a4ec:	6f697463 	svcvs	0x00697463
   2a4f0:	7020736e 	eorvc	r7, r0, lr, ror #6
   2a4f4:	64207265 	strtvs	r7, [r0], #-613	; 0xfffffd9b
   2a4f8:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   2a4fc:	00000065 	andeq	r0, r0, r5, rrx
   2a500:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2a504:	68206563 	stmdavs	r0!, {r0, r1, r5, r6, r8, sl, sp, lr}
   2a508:	6e207361 	cdpvs	3, 2, cr7, cr0, cr1, {3}
   2a50c:	7573206f 	ldrbvc	r2, [r3, #-111]!	; 0xffffff91
   2a510:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   2a514:	20646574 	rsbcs	r6, r4, r4, ror r5
   2a518:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
   2a51c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a520:	00000000 	andeq	r0, r0, r0
   2a524:	6e6e6143 	powvsem	f6, f6, f3
   2a528:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2a52c:	63207465 			; <UNDEFINED> instruction: 0x63207465
   2a530:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a534:	61727567 	cmnvs	r2, r7, ror #10
   2a538:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a53c:	75252820 	strvc	r2, [r5, #-2080]!	; 0xfffff7e0
   2a540:	00000029 	andeq	r0, r0, r9, lsr #32
   2a544:	64627375 	strbtvs	r7, [r2], #-885	; 0xfffffc8b
   2a548:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   2a54c:	63616665 	cmnvs	r1, #105906176	; 0x6500000
   2a550:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   2a554:	0000632e 	andeq	r6, r0, lr, lsr #6
   2a558:	72615070 	rsbvc	r5, r1, #112	; 0x70
   2a55c:	20746e65 	rsbscs	r6, r4, r5, ror #28
   2a560:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a564:	00000000 	andeq	r0, r0, r0
   2a568:	39746e69 	ldmdbcc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a56c:	322d302d 	eorcc	r3, sp, #45	; 0x2d
   2a570:	00000000 	andeq	r0, r0, r0
   2a574:	39746e69 	ldmdbcc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a578:	302d302d 	eorcc	r3, sp, sp, lsr #32
   2a57c:	00000000 	andeq	r0, r0, r0
   2a580:	76654470 			; <UNDEFINED> instruction: 0x76654470
   2a584:	20656369 	rsbcs	r6, r5, r9, ror #6
   2a588:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a58c:	00000000 	andeq	r0, r0, r0
   2a590:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a594:	352d362d 	strcc	r3, [sp, #-1581]!	; 0xfffff9d3
   2a598:	00000030 	andeq	r0, r0, r0, lsr r0
   2a59c:	33746e69 	cmncc	r4, #1680	; 0x690
   2a5a0:	312d312d 			; <UNDEFINED> instruction: 0x312d312d
   2a5a4:	00000000 	andeq	r0, r0, r0
   2a5a8:	33746e69 	cmncc	r4, #1680	; 0x690
   2a5ac:	322d312d 	eorcc	r3, sp, #1073741835	; 0x4000000b
   2a5b0:	00000000 	andeq	r0, r0, r0
   2a5b4:	346e6576 	strbtcc	r6, [lr], #-1398	; 0xfffffa8a
   2a5b8:	652d3432 	strvs	r3, [sp, #-1074]!	; 0xfffffbce
   2a5bc:	00303063 	eorseq	r3, r0, r3, rrx
   2a5c0:	346e6576 	strbtcc	r6, [lr], #-1398	; 0xfffffa8a
   2a5c4:	372d3432 			; <UNDEFINED> instruction: 0x372d3432
   2a5c8:	00303038 	eorseq	r3, r0, r8, lsr r0
   2a5cc:	33746e69 	cmncc	r4, #1680	; 0x690
   2a5d0:	302d302d 	eorcc	r3, sp, sp, lsr #32
   2a5d4:	00000000 	andeq	r0, r0, r0
   2a5d8:	31746e69 	cmncc	r4, r9, ror #28
   2a5dc:	302d332d 	eorcc	r3, sp, sp, lsr #6
   2a5e0:	00000000 	andeq	r0, r0, r0
   2a5e4:	6e697355 	mcrvs	3, 3, r7, cr9, cr5, {2}
   2a5e8:	65642067 	strbvs	r2, [r4, #-103]!	; 0xffffff99
   2a5ec:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a5f0:	746e692f 	strbtvc	r6, [lr], #-2351	; 0xfffff6d1
   2a5f4:	61667265 	cmnvs	r6, r5, ror #4
   2a5f8:	25206563 	strcs	r6, [r0, #-1379]!	; 0xfffffa9d
   2a5fc:	00000073 	andeq	r0, r0, r3, ror r0
   2a600:	64627375 	strbtvs	r7, [r2], #-885	; 0xfffffc8b
   2a604:	00007665 	andeq	r7, r0, r5, ror #12
   2a608:	65627375 	strbvs	r7, [r2, #-885]!	; 0xfffffc8b
   2a60c:	6f70646e 	svcvs	0x0070646e
   2a610:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
   2a614:	00000063 	andeq	r0, r0, r3, rrx
   2a618:	73654470 	cmnvc	r5, #112, 8	; 0x70000000
   2a61c:	623e2d63 	eorsvs	r2, lr, #6336	; 0x18c0
   2a620:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
   2a624:	3d206874 	stccc	8, cr6, [r0, #-464]!	; 0xfffffe30
   2a628:	6973203d 	ldmdbvs	r3!, {r0, r2, r3, r4, r5, sp}^
   2a62c:	666f657a 			; <UNDEFINED> instruction: 0x666f657a
   2a630:	44702a20 	ldrbtmi	r2, [r0], #-2592	; 0xfffff5e0
   2a634:	20637365 	rsbcs	r7, r3, r5, ror #6
   2a638:	70207c7c 	eorvc	r7, r0, ip, ror ip
   2a63c:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
   2a640:	4c623e2d 	stclmi	14, cr3, [r2], #-180	; 0xffffff4c
   2a644:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
   2a648:	3d3d2068 	ldccc	0, cr2, [sp, #-416]!	; 0xfffffe60
   2a64c:	7a697320 	bvc	1a872d4 <mailbuffer+0x1a5a134>
   2a650:	20666f65 	rsbcs	r6, r6, r5, ror #30
   2a654:	53555428 	cmppl	r5, #40, 8	; 0x28000000
   2a658:	64754142 	ldrbtvs	r4, [r5], #-322	; 0xfffffebe
   2a65c:	6e456f69 	cdpvs	15, 4, cr6, cr5, cr9, {3}
   2a660:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2a664:	6544746e 	strbvs	r7, [r4, #-1134]	; 0xfffffb92
   2a668:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2a66c:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2a670:	00000029 	andeq	r0, r0, r9, lsr #32
   2a674:	73654470 	cmnvc	r5, #112, 8	; 0x70000000
   2a678:	623e2d63 	eorsvs	r2, lr, #6336	; 0x18c0
   2a67c:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
   2a680:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
   2a684:	7954726f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
   2a688:	3d206570 	cfstr32cc	mvfx6, [r0, #-448]!	; 0xfffffe40
   2a68c:	4544203d 	strbmi	r2, [r4, #-61]	; 0xffffffc3
   2a690:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
   2a694:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
   2a698:	444e455f 	strbmi	r4, [lr], #-1375	; 0xfffffaa1
   2a69c:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
   2a6a0:	00000054 	andeq	r0, r0, r4, asr r0
   2a6a4:	646e4570 	strbtvs	r4, [lr], #-1392	; 0xfffffa90
   2a6a8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a6ac:	3d212074 	stccc	0, cr2, [r1, #-464]!	; 0xfffffe30
   2a6b0:	00003020 	andeq	r3, r0, r0, lsr #32
   2a6b4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a6b8:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a6bc:	7079545f 	rsbsvc	r5, r9, pc, asr r4
   2a6c0:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
   2a6c4:	646e4520 	strbtvs	r4, [lr], #-1312	; 0xfffffae0
   2a6c8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a6cc:	70795474 	rsbsvc	r5, r9, r4, ror r4
   2a6d0:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
   2a6d4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
   2a6d8:	00007470 	andeq	r7, r0, r0, ror r4
   2a6dc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a6e0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a6e4:	7079545f 	rsbsvc	r5, r9, pc, asr r4
   2a6e8:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
   2a6ec:	646e4520 	strbtvs	r4, [lr], #-1312	; 0xfffffae0
   2a6f0:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a6f4:	70795474 	rsbsvc	r5, r9, r4, ror r4
   2a6f8:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
   2a6fc:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2a534 <s_pExceptionName+0xc58>
   2a700:	00000000 	andeq	r0, r0, r0
   2a704:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a708:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a70c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
   2a710:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
   2a714:	646e4520 	strbtvs	r4, [lr], #-1312	; 0xfffffae0
   2a718:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a71c:	70795474 	rsbsvc	r5, r9, r4, ror r4
   2a720:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
   2a724:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2a55c <s_pExceptionName+0xc80>
   2a728:	207c7c20 	rsbscs	r7, ip, r0, lsr #24
   2a72c:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a730:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a734:	7079545f 	rsbsvc	r5, r9, pc, asr r4
   2a738:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
   2a73c:	646e4520 	strbtvs	r4, [lr], #-1312	; 0xfffffae0
   2a740:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a744:	70795474 	rsbsvc	r5, r9, r4, ror r4
   2a748:	6c754265 	lfmvs	f4, 2, [r5], #-404	; 0xfffffe6c
   2a74c:	7c7c206b 	ldclvc	0, cr2, [ip], #-428	; 0xfffffe54
   2a750:	68547020 	ldmdavs	r4, {r5, ip, sp, lr}^
   2a754:	3e2d7369 	cdpcc	3, 2, cr7, cr13, cr9, {3}
   2a758:	79545f6d 	ldmdbvc	r4, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
   2a75c:	3d206570 	cfstr32cc	mvfx6, [r0, #-448]!	; 0xfffffe40
   2a760:	6e45203d 	mcrvs	0, 2, r2, cr5, cr13, {1}
   2a764:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2a768:	7954746e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   2a76c:	6e496570 	mcrvs	5, 2, r6, cr9, cr0, {3}
   2a770:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
   2a774:	00747075 	rsbseq	r7, r4, r5, ror r0
   2a778:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a77c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a780:	7079545f 	rsbsvc	r5, r9, pc, asr r4
   2a784:	3d3d2065 	ldccc	0, cr2, [sp, #-404]!	; 0xfffffe6c
   2a788:	646e4520 	strbtvs	r4, [lr], #-1312	; 0xfffffae0
   2a78c:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a790:	70795474 	rsbsvc	r5, r9, r4, ror r4
   2a794:	6c754265 	lfmvs	f4, 2, [r5], #-404	; 0xfffffe6c
   2a798:	0000006b 	andeq	r0, r0, fp, rrx
   2a79c:	72627375 	rsbvc	r7, r2, #-738197503	; 0xd4000001
   2a7a0:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
   2a7a4:	632e7473 			; <UNDEFINED> instruction: 0x632e7473
   2a7a8:	00000000 	andeq	r0, r0, r0
   2a7ac:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a7b0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a7b4:	7542705f 	strbvc	r7, [r2, #-95]	; 0xffffffa1
   2a7b8:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
   2a7bc:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2a7c0:	7c7c2030 	ldclvc	0, cr2, [ip], #-192	; 0xffffff40
   2a7c4:	68547020 	ldmdavs	r4, {r5, ip, sp, lr}^
   2a7c8:	3e2d7369 	cdpcc	3, 2, cr7, cr13, cr9, {3}
   2a7cc:	426e5f6d 	rsbmi	r5, lr, #436	; 0x1b4
   2a7d0:	654c6675 	strbvs	r6, [ip, #-1653]	; 0xfffff98b
   2a7d4:	3d3d206e 	ldccc	0, cr2, [sp, #-440]!	; 0xfffffe48
   2a7d8:	00003020 	andeq	r3, r0, r0, lsr #32
   2a7dc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a7e0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a7e4:	7453625f 	ldrbvc	r6, [r3], #-607	; 0xfffffda1
   2a7e8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   2a7ec:	00000000 	andeq	r0, r0, r0
   2a7f0:	45425355 	strbmi	r5, [r2, #-853]	; 0xfffffcab
   2a7f4:	6f70646e 	svcvs	0x0070646e
   2a7f8:	47746e69 	ldrbmi	r6, [r4, -r9, ror #28]!
   2a7fc:	79547465 	ldmdbvc	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
   2a800:	28206570 	stmdacs	r0!, {r4, r5, r6, r8, sl, sp, lr}
   2a804:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a808:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a80c:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2a810:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2a814:	2029746e 	eorcs	r7, r9, lr, ror #8
   2a818:	45203d3d 	strmi	r3, [r0, #-3389]!	; 0xfffff2c3
   2a81c:	6f70646e 	svcvs	0x0070646e
   2a820:	54746e69 	ldrbtpl	r6, [r4], #-3689	; 0xfffff197
   2a824:	43657079 	cmnmi	r5, #121	; 0x79
   2a828:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
   2a82c:	00006c6f 	andeq	r6, r0, pc, ror #24
   2a830:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a834:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a838:	6553705f 	ldrbvs	r7, [r3, #-95]	; 0xffffffa1
   2a83c:	44707574 	ldrbtmi	r7, [r0], #-1396	; 0xfffffa8c
   2a840:	20617461 	rsbcs	r7, r1, r1, ror #8
   2a844:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a848:	00000000 	andeq	r0, r0, r0
   2a84c:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a850:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a854:	6f43705f 	svcvs	0x0043705f
   2a858:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
   2a85c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a860:	74756f52 	ldrbtvc	r6, [r5], #-3922	; 0xfffff0ae
   2a864:	20656e69 	rsbcs	r6, r5, r9, ror #28
   2a868:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a86c:	00000000 	andeq	r0, r0, r0
   2a870:	73627375 	cmnvc	r2, #-738197503	; 0xd4000001
   2a874:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
   2a878:	68647261 	stmdavs	r4!, {r0, r5, r6, r9, ip, sp, lr}^
   2a87c:	632e6275 			; <UNDEFINED> instruction: 0x632e6275
   2a880:	00000000 	andeq	r0, r0, r0
   2a884:	736f4870 	cmnvc	pc, #112, 16	; 0x700000
   2a888:	3d212074 	stccc	0, cr2, [r1, #-464]!	; 0xfffffe30
   2a88c:	00003020 	andeq	r3, r0, r0, lsr #32
   2a890:	646e4570 	strbtvs	r4, [lr], #-1392	; 0xfffffa90
   2a894:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2a898:	21203074 			; <UNDEFINED> instruction: 0x21203074
   2a89c:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a8a0:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a8a4:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a8a8:	6f506e5f 	svcvs	0x00506e5f
   2a8ac:	20737472 	rsbscs	r7, r3, r2, ror r4
   2a8b0:	0030203e 	eorseq	r2, r0, lr, lsr r0
   2a8b4:	6e6e6143 	powvsem	f6, f6, f3
   2a8b8:	7020746f 	eorvc	r7, r0, pc, ror #8
   2a8bc:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
   2a8c0:	726f7020 	rsbvc	r7, pc, #32
   2a8c4:	75252074 	strvc	r2, [r5, #-116]!	; 0xffffff8c
   2a8c8:	00000000 	andeq	r0, r0, r0
   2a8cc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a8d0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a8d4:	7453705f 	ldrbvc	r7, [r3], #-95	; 0xffffffa1
   2a8d8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   2a8dc:	6f506e5b 	svcvs	0x00506e5b
   2a8e0:	205d7472 	subscs	r7, sp, r2, ror r4
   2a8e4:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2a8e8:	00000000 	andeq	r0, r0, r0
   2a8ec:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a8f0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a8f4:	7453705f 	ldrbvc	r7, [r3], #-95	; 0xffffffa1
   2a8f8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   2a8fc:	6f506e5b 	svcvs	0x00506e5b
   2a900:	205d7472 	subscs	r7, sp, r2, ror r4
   2a904:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2a908:	00000000 	andeq	r0, r0, r0
   2a90c:	6e6e6143 	powvsem	f6, f6, f3
   2a910:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2a914:	73207465 			; <UNDEFINED> instruction: 0x73207465
   2a918:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
   2a91c:	666f2073 			; <UNDEFINED> instruction: 0x666f2073
   2a920:	726f7020 	rsbvc	r7, pc, #32
   2a924:	75252074 	strvc	r2, [r5, #-116]!	; 0xffffff8c
   2a928:	00000000 	andeq	r0, r0, r0
   2a92c:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a930:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a934:	7453705f 	ldrbvc	r7, [r3], #-95	; 0xffffffa1
   2a938:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   2a93c:	6f506e5b 	svcvs	0x00506e5b
   2a940:	2d5d7472 	cfldrdcs	mvd7, [sp, #-456]	; 0xfffffe38
   2a944:	6f50773e 	svcvs	0x0050773e
   2a948:	74537472 	ldrbvc	r7, [r3], #-1138	; 0xfffffb8e
   2a94c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   2a950:	50202620 	eorpl	r2, r0, r0, lsr #12
   2a954:	5f54524f 	svcpl	0x0054524f
   2a958:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
   2a95c:	4d5f5f52 	ldclmi	15, cr5, [pc, #-328]	; 2a81c <s_pExceptionName+0xf40>
   2a960:	004b5341 	subeq	r5, fp, r1, asr #6
   2a964:	6e6e6143 	powvsem	f6, f6, f3
   2a968:	7220746f 	eorvc	r7, r0, #1862270976	; 0x6f000000
   2a96c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
   2a970:	726f7020 	rsbvc	r7, pc, #32
   2a974:	75252074 	strvc	r2, [r5, #-116]!	; 0xffffff8c
   2a978:	00000000 	andeq	r0, r0, r0
   2a97c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
   2a980:	20752520 	rsbscs	r2, r5, r0, lsr #10
   2a984:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
   2a988:	6520746f 	strvs	r7, [r0, #-1135]!	; 0xfffffb91
   2a98c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
   2a990:	00006465 	andeq	r6, r0, r5, ror #8
   2a994:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
   2a998:	7275632d 	rsbsvc	r6, r5, #-1275068416	; 0xb4000000
   2a99c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
   2a9a0:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
   2a9a4:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
   2a9a8:	6f206e6f 	svcvs	0x00206e6f
   2a9ac:	6f70206e 	svcvs	0x0070206e
   2a9b0:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
   2a9b4:	00000075 	andeq	r0, r0, r5, ror r0
   2a9b8:	62754870 	rsbsvs	r4, r5, #112, 16	; 0x700000
   2a9bc:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2a9c0:	21206563 			; <UNDEFINED> instruction: 0x21206563
   2a9c4:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2a9c8:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a9cc:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a9d0:	6544705f 	strbvs	r7, [r4, #-95]	; 0xffffffa1
   2a9d4:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a9d8:	6f506e5b 	svcvs	0x00506e5b
   2a9dc:	205d7472 	subscs	r7, sp, r2, ror r4
   2a9e0:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2a9e4:	00000000 	andeq	r0, r0, r0
   2a9e8:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2a9ec:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2a9f0:	6544705f 	strbvs	r7, [r4, #-95]	; 0xffffffa1
   2a9f4:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a9f8:	6f506e5b 	svcvs	0x00506e5b
   2a9fc:	205d7472 	subscs	r7, sp, r2, ror r4
   2aa00:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2aa04:	00000000 	andeq	r0, r0, r0
   2aa08:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
   2aa0c:	3a752520 	bcc	1d73e94 <mailbuffer+0x1d46cf4>
   2aa10:	6e614320 	cdpvs	3, 6, cr4, cr1, cr0, {1}
   2aa14:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2aa18:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
   2aa1c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
   2aa20:	65642065 	strbvs	r2, [r4, #-101]!	; 0xffffff9b
   2aa24:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2aa28:	00000000 	andeq	r0, r0, r0
   2aa2c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
   2aa30:	3a752520 	bcc	1d73eb8 <mailbuffer+0x1d46d18>
   2aa34:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
   2aa38:	20656369 	rsbcs	r6, r5, r9, ror #6
   2aa3c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
   2aa40:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
   2aa44:	00006465 	andeq	r6, r0, r5, ror #8
   2aa48:	62754870 	rsbsvs	r4, r5, #112, 16	; 0x700000
   2aa4c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
   2aa50:	21207375 			; <UNDEFINED> instruction: 0x21207375
   2aa54:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2aa58:	6e6e6143 	powvsem	f6, f6, f3
   2aa5c:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2aa60:	68207465 	stmdavs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
   2aa64:	73206275 			; <UNDEFINED> instruction: 0x73206275
   2aa68:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
   2aa6c:	00000073 	andeq	r0, r0, r3, ror r0
   2aa70:	20627548 	rsbcs	r7, r2, r8, asr #10
   2aa74:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
   2aa78:	7275632d 	rsbsvc	r6, r5, #-1275068416	; 0xb4000000
   2aa7c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
   2aa80:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
   2aa84:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
   2aa88:	00006e6f 	andeq	r6, r0, pc, ror #28
   2aa8c:	6e6e6143 	powvsem	f6, f6, f3
   2aa90:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2aa94:	69207465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
   2aa98:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
   2aa9c:	65636166 	strbvs	r6, [r3, #-358]!	; 0xfffffe9a
   2aaa0:	00000000 	andeq	r0, r0, r0
   2aaa4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2aaa8:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2aaac:	7548705f 	strbvc	r7, [r8, #-95]	; 0xffffffa1
   2aab0:	73654462 	cmnvc	r5, #1644167168	; 0x62000000
   2aab4:	3d3d2063 	ldccc	0, cr2, [sp, #-396]!	; 0xfffffe74
   2aab8:	00003020 	andeq	r3, r0, r0, lsr #32
   2aabc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2aac0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2aac4:	7548705f 	strbvc	r7, [r8, #-95]	; 0xffffffa1
   2aac8:	73654462 	cmnvc	r5, #1644167168	; 0x62000000
   2aacc:	3d212063 	stccc	0, cr2, [r1, #-396]!	; 0xfffffe74
   2aad0:	00003020 	andeq	r3, r0, r0, lsr #32
   2aad4:	6e6e6143 	powvsem	f6, f6, f3
   2aad8:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2aadc:	68207465 	stmdavs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
   2aae0:	64206275 	strtvs	r6, [r0], #-629	; 0xfffffd8b
   2aae4:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   2aae8:	6f747069 	svcvs	0x00747069
   2aaec:	00000072 	andeq	r0, r0, r2, ror r0
   2aaf0:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
   2aaf4:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2aaf8:	726f7020 	rsbvc	r7, pc, #32
   2aafc:	28207374 	stmdacs	r0!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
   2ab00:	00297525 	eoreq	r7, r9, r5, lsr #10
   2ab04:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
   2ab08:	756e6520 	strbvc	r6, [lr, #-1312]!	; 0xfffffae0
   2ab0c:	6172656d 	cmnvs	r2, sp, ror #10
   2ab10:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2ab14:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
   2ab18:	0064656c 	rsbeq	r6, r4, ip, ror #10
   2ab1c:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   2ab20:	616e6563 	cmnvs	lr, r3, ror #10
   2ab24:	6573656d 	ldrbvs	r6, [r3, #-1389]!	; 0xfffffa93
   2ab28:	63697672 	cmnvs	r9, #119537664	; 0x7200000
   2ab2c:	00632e65 	rsbeq	r2, r3, r5, ror #28
   2ab30:	54705f73 	ldrbtpl	r5, [r0], #-3955	; 0xfffff08d
   2ab34:	20736968 	rsbscs	r6, r3, r8, ror #18
   2ab38:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2ab3c:	00000000 	andeq	r0, r0, r0
   2ab40:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ab44:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ab48:	694c705f 	stmdbvs	ip, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
   2ab4c:	3e2d7473 	mcrcc	4, 1, r7, cr13, cr3, {3}
   2ab50:	6d614e70 	stclvs	14, cr4, [r1, #-448]!	; 0xfffffe40
   2ab54:	3d212065 	stccc	0, cr2, [r1, #-404]!	; 0xfffffe6c
   2ab58:	00003020 	andeq	r3, r0, r0, lsr #32
   2ab5c:	666e4970 			; <UNDEFINED> instruction: 0x666e4970
   2ab60:	703e2d6f 	eorsvc	r2, lr, pc, ror #26
   2ab64:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
   2ab68:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2ab6c:	00000030 	andeq	r0, r0, r0, lsr r0
   2ab70:	666e4970 			; <UNDEFINED> instruction: 0x666e4970
   2ab74:	703e2d6f 	eorsvc	r2, lr, pc, ror #26
   2ab78:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2ab7c:	21206563 			; <UNDEFINED> instruction: 0x21206563
   2ab80:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2ab84:	54705f73 	ldrbtpl	r5, [r0], #-3955	; 0xfffff08d
   2ab88:	20736968 	rsbscs	r6, r3, r8, ror #18
   2ab8c:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2ab90:	00000000 	andeq	r0, r0, r0
   2ab94:	6163616d 	cmnvs	r3, sp, ror #2
   2ab98:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
   2ab9c:	632e7373 			; <UNDEFINED> instruction: 0x632e7373
   2aba0:	00000000 	andeq	r0, r0, r0
   2aba4:	64644170 	strbtvs	r4, [r4], #-368	; 0xfffffe90
   2aba8:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
   2abac:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2abb0:	00000030 	andeq	r0, r0, r0, lsr r0
   2abb4:	58323025 	ldmdapl	r2!, {r0, r2, r5, ip, sp}
   2abb8:	3230253a 	eorscc	r2, r0, #243269632	; 0xe800000
   2abbc:	30253a58 	eorcc	r3, r5, r8, asr sl
   2abc0:	253a5832 	ldrcs	r5, [sl, #-2098]!	; 0xfffff7ce
   2abc4:	3a583230 	bcc	163748c <mailbuffer+0x160a2ec>
   2abc8:	58323025 	ldmdapl	r2!, {r0, r2, r5, ip, sp}
   2abcc:	3230253a 	eorscc	r2, r0, #243269632	; 0xe800000
   2abd0:	00000058 	andeq	r0, r0, r8, asr r0
   2abd4:	66627375 			; <UNDEFINED> instruction: 0x66627375
   2abd8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
   2abdc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
   2abe0:	00000063 	andeq	r0, r0, r3, rrx
   2abe4:	6e6f4370 	mcrvs	3, 3, r4, cr15, cr0, {3}
   2abe8:	50676966 	rsbpl	r6, r7, r6, ror #18
   2abec:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
   2abf0:	3d212072 	stccc	0, cr2, [r1, #-456]!	; 0xfffffe38
   2abf4:	00003020 	andeq	r3, r0, r0, lsr #32
   2abf8:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2abfc:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ac00:	6e49705f 	mcrvs	0, 2, r7, cr9, cr15, {2}
   2ac04:	66726574 			; <UNDEFINED> instruction: 0x66726574
   2ac08:	44656361 	strbtmi	r6, [r5], #-865	; 0xfffffc9f
   2ac0c:	20637365 	rsbcs	r7, r3, r5, ror #6
   2ac10:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2ac14:	00000000 	andeq	r0, r0, r0
   2ac18:	6e754670 	mrcvs	6, 3, r4, cr5, cr0, {3}
   2ac1c:	6f697463 	svcvs	0x00697463
   2ac20:	3d21206e 	stccc	0, cr2, [r1, #-440]!	; 0xfffffe48
   2ac24:	00003020 	andeq	r3, r0, r0, lsr #32
   2ac28:	6e754670 	mrcvs	6, 3, r4, cr5, cr0, {3}
   2ac2c:	6f697463 	svcvs	0x00697463
   2ac30:	6d3e2d6e 	ldcvs	13, cr2, [lr, #-440]!	; 0xfffffe48
   2ac34:	6f43705f 	svcvs	0x0043705f
   2ac38:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
   2ac3c:	73726150 	cmnvc	r2, #80, 2
   2ac40:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2ac44:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2ac48:	25746e69 	ldrbcs	r6, [r4, #-3689]!	; 0xfffff197
   2ac4c:	78252d78 	stmdavc	r5!, {r3, r4, r5, r6, r8, sl, fp, sp}
   2ac50:	0078252d 	rsbseq	r2, r8, sp, lsr #10
   2ac54:	756f5370 	strbvc	r5, [pc, #-880]!	; 2a8ec <s_pExceptionName+0x1010>
   2ac58:	20656372 	rsbcs	r6, r5, r2, ror r3
   2ac5c:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2ac60:	00000000 	andeq	r0, r0, r0
   2ac64:	63736d73 	cmnvs	r3, #7360	; 0x1cc0
   2ac68:	78313539 	ldmdavc	r1!, {r0, r3, r4, r5, r8, sl, ip, sp}
   2ac6c:	0000632e 	andeq	r6, r0, lr, lsr #6
   2ac70:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ac74:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ac78:	7854705f 	ldmdavc	r4, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
   2ac7c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
   2ac80:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2ac84:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2ac88:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ac8c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ac90:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2ac94:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2ac98:	7542746e 	strbvc	r7, [r2, #-1134]	; 0xfffffb92
   2ac9c:	754f6b6c 	strbvc	r6, [pc, #-2924]	; 2a138 <s_pExceptionName+0x85c>
   2aca0:	3d212074 	stccc	0, cr2, [r1, #-464]!	; 0xfffffe30
   2aca4:	00003020 	andeq	r3, r0, r0, lsr #32
   2aca8:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2acac:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2acb0:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2acb4:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2acb8:	7542746e 	strbvc	r7, [r2, #-1134]	; 0xfffffb92
   2acbc:	6e496b6c 	vmlsvs.f64	d22, d9, d28
   2acc0:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2acc4:	00000030 	andeq	r0, r0, r0, lsr r0
   2acc8:	65205852 	strvs	r5, [r0, #-2130]!	; 0xfffff7ae
   2accc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
   2acd0:	74732820 	ldrbtvc	r2, [r3], #-2080	; 0xfffff7e0
   2acd4:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   2acd8:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2acdc:	00002958 	andeq	r2, r0, r8, asr r9
   2ace0:	6172466e 	cmnvs	r2, lr, ror #12
   2ace4:	654c656d 	strbvs	r6, [ip, #-1389]	; 0xfffffa93
   2ace8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
   2acec:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2acf0:	7365526e 	cmnvc	r5, #-536870906	; 0xe0000006
   2acf4:	4c746c75 	ldclmi	12, cr6, [r4], #-468	; 0xfffffe2c
   2acf8:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
   2acfc:	00342d68 	eorseq	r2, r4, r8, ror #26
   2ad00:	6172466e 	cmnvs	r2, lr, ror #12
   2ad04:	654c656d 	strbvs	r6, [ip, #-1389]	; 0xfffffa93
   2ad08:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
   2ad0c:	34203e20 	strtcc	r3, [r0], #-3616	; 0xfffff1e0
   2ad10:	00000000 	andeq	r0, r0, r0
   2ad14:	73655270 	cmnvc	r5, #112, 4
   2ad18:	4c746c75 	ldclmi	12, cr6, [r4], #-468	; 0xfffffe2c
   2ad1c:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
   2ad20:	3d212068 	stccc	0, cr2, [r1, #-416]!	; 0xfffffe60
   2ad24:	00003020 	andeq	r3, r0, r0, lsr #32
   2ad28:	2043414d 	subcs	r4, r3, sp, asr #2
   2ad2c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
   2ad30:	20737365 	rsbscs	r7, r3, r5, ror #6
   2ad34:	25207369 	strcs	r7, [r0, #-873]!	; 0xfffffc97
   2ad38:	00000073 	andeq	r0, r0, r3, ror r0
   2ad3c:	6e6e6143 	powvsem	f6, f6, f3
   2ad40:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2ad44:	4d207465 	cfstrsmi	mvf7, [r0, #-404]!	; 0xfffffe6c
   2ad48:	61204341 			; <UNDEFINED> instruction: 0x61204341
   2ad4c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
   2ad50:	00007373 	andeq	r7, r0, r3, ror r3
   2ad54:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ad58:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ad5c:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2ad60:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2ad64:	7542746e 	strbvc	r7, [r2, #-1134]	; 0xfffffb92
   2ad68:	6e496b6c 	vmlsvs.f64	d22, d9, d28
   2ad6c:	00000000 	andeq	r0, r0, r0
   2ad70:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ad74:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ad78:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2ad7c:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2ad80:	7542746e 	strbvc	r7, [r2, #-1134]	; 0xfffffb92
   2ad84:	754f6b6c 	strbvc	r6, [pc, #-2924]	; 2a220 <s_pExceptionName+0x944>
   2ad88:	00000074 	andeq	r0, r0, r4, ror r0
   2ad8c:	6e6e6143 	powvsem	f6, f6, f3
   2ad90:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2ad94:	4d207465 	cfstrsmi	mvf7, [r0, #-404]!	; 0xfffffe6c
   2ad98:	61204341 			; <UNDEFINED> instruction: 0x61204341
   2ad9c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
   2ada0:	00007373 	andeq	r7, r0, r3, ror r3
   2ada4:	6e6e6143 	powvsem	f6, f6, f3
   2ada8:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2adac:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
   2adb0:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   2adb4:	00656369 	rsbeq	r6, r5, r9, ror #6
   2adb8:	25687465 	strbcs	r7, [r8, #-1125]!	; 0xfffffb9b
   2adbc:	00000075 	andeq	r0, r0, r5, ror r0
   2adc0:	49686375 	stmdbmi	r8!, {r0, r2, r4, r5, r6, r8, r9, sp, lr}^
   2adc4:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
   2adc8:	203d3c20 	eorscs	r3, sp, r0, lsr #24
   2adcc:	00003133 	andeq	r3, r0, r3, lsr r1
   2add0:	6c615670 	stclvs	6, cr5, [r1], #-448	; 0xfffffe40
   2add4:	21206575 			; <UNDEFINED> instruction: 0x21206575
   2add8:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2addc:	6e6e6143 	powvsem	f6, f6, f3
   2ade0:	7220746f 	eorvc	r7, r0, #1862270976	; 0x6f000000
   2ade4:	20646165 	rsbcs	r6, r4, r5, ror #2
   2ade8:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
   2adec:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
   2adf0:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2adf4:	00000058 	andeq	r0, r0, r8, asr r0
   2adf8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
   2adfc:	00732520 	rsbseq	r2, r3, r0, lsr #10
   2ae00:	525f4449 	subspl	r4, pc, #1224736768	; 0x49000000
   2ae04:	00005645 	andeq	r5, r0, r5, asr #12
   2ae08:	5f544e49 	svcpl	0x00544e49
   2ae0c:	00535453 	subseq	r5, r3, r3, asr r4
   2ae10:	435f5852 	cmpmi	pc, #5373952	; 0x520000
   2ae14:	00004746 	andeq	r4, r0, r6, asr #14
   2ae18:	435f5854 	cmpmi	pc, #84, 16	; 0x540000
   2ae1c:	00004746 	andeq	r4, r0, r6, asr #14
   2ae20:	435f5748 	cmpmi	pc, #72, 14	; 0x1200000
   2ae24:	00004746 	andeq	r4, r0, r6, asr #14
   2ae28:	465f5852 			; <UNDEFINED> instruction: 0x465f5852
   2ae2c:	5f4f4649 	svcpl	0x004f4649
   2ae30:	00464e49 	subeq	r4, r6, r9, asr #28
   2ae34:	435f4d50 	cmpmi	pc, #80, 26	; 0x1400
   2ae38:	004c5254 	subeq	r5, ip, r4, asr r2
   2ae3c:	5f44454c 	svcpl	0x0044454c
   2ae40:	4f495047 	svcmi	0x00495047
   2ae44:	4746435f 	smlsldmi	r4, r6, pc, r3	; <UNPREDICTABLE>
   2ae48:	00000000 	andeq	r0, r0, r0
   2ae4c:	5f434641 	svcpl	0x00434641
   2ae50:	00474643 	subeq	r4, r7, r3, asr #12
   2ae54:	53525542 	cmppl	r2, #276824064	; 0x10800000
   2ae58:	41435f54 	cmpmi	r3, r4, asr pc
   2ae5c:	00000050 	andeq	r0, r0, r0, asr r0
   2ae60:	5f544e49 	svcpl	0x00544e49
   2ae64:	435f5045 	cmpmi	pc, #69	; 0x45
   2ae68:	00004c54 	andeq	r4, r0, r4, asr ip
   2ae6c:	4b4c5542 	blmi	134037c <mailbuffer+0x13131dc>
   2ae70:	5f4e495f 	svcpl	0x004e495f
   2ae74:	00594c44 	subseq	r4, r9, r4, asr #24
   2ae78:	5f43414d 	svcpl	0x0043414d
   2ae7c:	00005243 	andeq	r5, r0, r3, asr #4
   2ae80:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
   2ae84:	00000048 	andeq	r0, r0, r8, asr #32
   2ae88:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
   2ae8c:	0000004c 	andeq	r0, r0, ip, asr #32
   2ae90:	48534148 	ldmdami	r3, {r3, r6, r8, lr}^
   2ae94:	00000048 	andeq	r0, r0, r8, asr #32
   2ae98:	48534148 	ldmdami	r3, {r3, r6, r8, lr}^
   2ae9c:	0000004c 	andeq	r0, r0, ip, asr #32
   2aea0:	574f4c46 	strbpl	r4, [pc, -r6, asr #24]
   2aea4:	00000000 	andeq	r0, r0, r0
   2aea8:	53435557 	movtpl	r5, #13655	; 0x3557
   2aeac:	00000052 	andeq	r0, r0, r2, asr r0
   2aeb0:	376e616c 	strbcc	r6, [lr, -ip, ror #2]!
   2aeb4:	2e303038 	mrccs	0, 1, r3, cr0, cr8, {1}
   2aeb8:	00000063 	andeq	r0, r0, r3, rrx
   2aebc:	6172466e 	cmnvs	r2, lr, ror #12
   2aec0:	654c656d 	strbvs	r6, [ip, #-1389]	; 0xfffffa93
   2aec4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
   2aec8:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2aecc:	7365526e 	cmnvc	r5, #-536870906	; 0xe0000006
   2aed0:	4c746c75 	ldclmi	12, cr6, [r4], #-468	; 0xfffffe2c
   2aed4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
   2aed8:	58522d68 	ldmdapl	r2, {r3, r5, r6, r8, sl, fp, sp}^
   2aedc:	4145485f 	cmpmi	r5, pc, asr r8
   2aee0:	5f524544 	svcpl	0x00524544
   2aee4:	455a4953 	ldrbmi	r4, [sl, #-2387]	; 0xfffff6ad
   2aee8:	00000000 	andeq	r0, r0, r0
   2aeec:	6e6e6143 	powvsem	f6, f6, f3
   2aef0:	7720746f 	strvc	r7, [r0, -pc, ror #8]!
   2aef4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
   2aef8:	67657220 	strbvs	r7, [r5, -r0, lsr #4]!
   2aefc:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
   2af00:	78302072 	ldmdavc	r0!, {r1, r4, r5, r6, sp}
   2af04:	00005825 	andeq	r5, r0, r5, lsr #16
   2af08:	49686375 	stmdbmi	r8!, {r0, r2, r4, r5, r6, r8, r9, sp, lr}^
   2af0c:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
   2af10:	203d3c20 	eorscs	r3, sp, r0, lsr #24
   2af14:	00003033 	andeq	r3, r0, r3, lsr r0
   2af18:	61766e49 	cmnvs	r6, r9, asr #28
   2af1c:	2064696c 	rsbcs	r6, r4, ip, ror #18
   2af20:	70696863 	rsbvc	r6, r9, r3, ror #16
   2af24:	20444920 	subcs	r4, r4, r0, lsr #18
   2af28:	25783028 	ldrbcs	r3, [r8, #-40]!	; 0xffffffd8
   2af2c:	00002958 	andeq	r2, r0, r8, asr r9
   2af30:	72205748 	eorvc	r5, r0, #72, 14	; 0x1200000
   2af34:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
   2af38:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
   2af3c:	0064656c 	rsbeq	r6, r4, ip, ror #10
   2af40:	6e6e6143 	powvsem	f6, f6, f3
   2af44:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   2af48:	2074696e 	rsbscs	r6, r4, lr, ror #18
   2af4c:	2043414d 	subcs	r4, r3, sp, asr #2
   2af50:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
   2af54:	00737365 	rsbseq	r7, r3, r5, ror #6
   2af58:	20594850 	subscs	r4, r9, r0, asr r8
   2af5c:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
   2af60:	61662074 	smcvs	25092	; 0x6204
   2af64:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   2af68:	00000000 	andeq	r0, r0, r0
   2af6c:	6e6e6143 	powvsem	f6, f6, f3
   2af70:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   2af74:	2074696e 	rsbscs	r6, r4, lr, ror #18
   2af78:	00594850 	subseq	r4, r9, r0, asr r8
   2af7c:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
   2af80:	632e676e 			; <UNDEFINED> instruction: 0x632e676e
   2af84:	00000000 	andeq	r0, r0, r0
   2af88:	6d627375 	stclvs	3, cr7, [r2, #-468]!	; 0xfffffe2c
   2af8c:	64737361 	ldrbtvs	r7, [r3], #-865	; 0xfffffc9f
   2af90:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   2af94:	00632e65 	rsbeq	r2, r3, r5, ror #28
   2af98:	646d4370 	strbtvs	r4, [sp], #-880	; 0xfffffc90
   2af9c:	206b6c42 	rsbcs	r6, fp, r2, asr #24
   2afa0:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2afa4:	00000000 	andeq	r0, r0, r0
   2afa8:	3d3c2036 	ldccc	0, cr2, [ip, #-216]!	; 0xffffff28
   2afac:	6d436e20 	stclvs	14, cr6, [r3, #-128]	; 0xffffff80
   2afb0:	6b6c4264 	blvs	1b3b948 <mailbuffer+0x1b0e7a8>
   2afb4:	206e654c 	rsbcs	r6, lr, ip, asr #10
   2afb8:	6e202626 	cfmadda32vs	mvax1, mvax2, mvfx0, mvfx6
   2afbc:	42646d43 	rsbmi	r6, r4, #4288	; 0x10c0
   2afc0:	654c6b6c 	strbvs	r6, [ip, #-2924]	; 0xfffff494
   2afc4:	3d3c206e 	ldccc	0, cr2, [ip, #-440]!	; 0xfffffe48
   2afc8:	00363120 	eorseq	r3, r6, r0, lsr #2
   2afcc:	6675426e 	ldrbtvs	r4, [r5], -lr, ror #4
   2afd0:	206e654c 	rsbcs	r6, lr, ip, asr #10
   2afd4:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2afd8:	207c7c20 	rsbscs	r7, ip, r0, lsr #24
   2afdc:	66754270 			; <UNDEFINED> instruction: 0x66754270
   2afe0:	20726566 	rsbscs	r6, r2, r6, ror #10
   2afe4:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2afe8:	00000000 	andeq	r0, r0, r0
   2afec:	20574243 	subscs	r4, r7, r3, asr #4
   2aff0:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
   2aff4:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
   2aff8:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
   2affc:	0064656c 	rsbeq	r6, r4, ip, ror #10
   2b000:	61746144 	cmnvs	r4, r4, asr #2
   2b004:	61727420 	cmnvs	r2, r0, lsr #8
   2b008:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
   2b00c:	61662072 	smcvs	25090	; 0x6202
   2b010:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   2b014:	00000000 	andeq	r0, r0, r0
   2b018:	20575343 	subscs	r5, r7, r3, asr #6
   2b01c:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
   2b020:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
   2b024:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
   2b028:	0064656c 	rsbeq	r6, r4, ip, ror #10
   2b02c:	20575343 	subscs	r5, r7, r3, asr #6
   2b030:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
   2b034:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
   2b038:	73692065 	cmnvc	r9, #101	; 0x65
   2b03c:	6f727720 	svcvs	0x00727720
   2b040:	0000676e 	andeq	r6, r0, lr, ror #14
   2b044:	20575343 	subscs	r5, r7, r3, asr #6
   2b048:	20676174 	rsbcs	r6, r7, r4, ror r1
   2b04c:	77207369 	strvc	r7, [r0, -r9, ror #6]!
   2b050:	676e6f72 			; <UNDEFINED> instruction: 0x676e6f72
   2b054:	00000000 	andeq	r0, r0, r0
   2b058:	61746144 	cmnvs	r4, r4, asr #2
   2b05c:	73657220 	cmnvc	r5, #32, 4
   2b060:	65756469 	ldrbvs	r6, [r5, #-1129]!	; 0xfffffb97
   2b064:	20736920 	rsbscs	r6, r3, r0, lsr #18
   2b068:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2b06c:	00000030 	andeq	r0, r0, r0, lsr r0
   2b070:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b074:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b078:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2b07c:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2b080:	6e49746e 	cdpvs	4, 4, cr7, cr9, cr14, {3}
   2b084:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b088:	00000030 	andeq	r0, r0, r0, lsr r0
   2b08c:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b090:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b094:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2b098:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2b09c:	754f746e 	strbvc	r7, [pc, #-1134]	; 2ac36 <s_pExceptionName+0x135a>
   2b0a0:	3d212074 	stccc	0, cr2, [r1, #-464]!	; 0xfffffe30
   2b0a4:	00003020 	andeq	r3, r0, r0, lsr #32
   2b0a8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2b0ac:	64206563 	strtvs	r6, [r0], #-1379	; 0xfffffa9d
   2b0b0:	2073656f 	rsbscs	r6, r3, pc, ror #10
   2b0b4:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2b0b8:	70736572 	rsbsvc	r6, r3, r2, ror r5
   2b0bc:	00646e6f 	rsbeq	r6, r4, pc, ror #28
   2b0c0:	75736e55 	ldrbvc	r6, [r3, #-3669]!	; 0xfffff1ab
   2b0c4:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   2b0c8:	20646574 	rsbcs	r6, r4, r4, ror r5
   2b0cc:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   2b0d0:	74206563 	strtvc	r6, [r0], #-1379	; 0xfffffa9d
   2b0d4:	3a657079 	bcc	19872c0 <mailbuffer+0x195a120>
   2b0d8:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2b0dc:	00583230 	subseq	r3, r8, r0, lsr r2
   2b0e0:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
   2b0e4:	20747365 	rsbscs	r7, r4, r5, ror #6
   2b0e8:	736e6573 	cmnvc	lr, #482344960	; 0x1cc00000
   2b0ec:	61662065 	cmnvs	r6, r5, rrx
   2b0f0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   2b0f4:	00000000 	andeq	r0, r0, r0
   2b0f8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
   2b0fc:	70616320 	rsbvc	r6, r1, r0, lsr #6
   2b100:	74696361 	strbtvc	r6, [r9], #-865	; 0xfffffc9f
   2b104:	61662079 	smcvs	25097	; 0x6209
   2b108:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   2b10c:	00000000 	andeq	r0, r0, r0
   2b110:	75736e55 	ldrbvc	r6, [r3, #-3669]!	; 0xfffff1ab
   2b114:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   2b118:	20646574 	rsbcs	r6, r4, r4, ror r5
   2b11c:	636f6c62 	cmnvs	pc, #25088	; 0x6200
   2b120:	6973206b 	ldmdbvs	r3!, {r0, r1, r3, r5, r6, sp}^
   2b124:	203a657a 	eorscs	r6, sl, sl, ror r5
   2b128:	00007525 	andeq	r7, r0, r5, lsr #10
   2b12c:	75736e55 	ldrbvc	r6, [r3, #-3669]!	; 0xfffff1ab
   2b130:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   2b134:	20646574 	rsbcs	r6, r4, r4, ror r5
   2b138:	6b736964 	blvs	1d056d0 <mailbuffer+0x1cd8530>
   2b13c:	7a697320 	bvc	1a87dc4 <mailbuffer+0x1a5ac24>
   2b140:	203e2065 	eorscs	r2, lr, r5, rrx
   2b144:	00425432 	subeq	r5, r2, r2, lsr r4
   2b148:	61706143 	cmnvs	r0, r3, asr #2
   2b14c:	79746963 	ldmdbvc	r4!, {r0, r1, r5, r6, r8, fp, sp, lr}^
   2b150:	20736920 	rsbscs	r6, r3, r0, lsr #18
   2b154:	4d207525 	cfstr32mi	mvfx7, [r0, #-148]!	; 0xffffff6c
   2b158:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
   2b15c:	00000000 	andeq	r0, r0, r0
   2b160:	74696e55 	strbtvc	r6, [r9], #-3669	; 0xfffff1ab
   2b164:	20736920 	rsbscs	r6, r3, r0, lsr #18
   2b168:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2b16c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
   2b170:	00000079 	andeq	r0, r0, r9, ror r0
   2b174:	52797254 	rsbspl	r7, r9, #84, 4	; 0x40000005
   2b178:	20646165 	rsbcs	r6, r4, r5, ror #2
   2b17c:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
   2b180:	00006465 	andeq	r6, r0, r5, ror #8
   2b184:	57797254 			; <UNDEFINED> instruction: 0x57797254
   2b188:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
   2b18c:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
   2b190:	0064656c 	rsbeq	r6, r4, ip, ror #10
   2b194:	6e6e6143 	powvsem	f6, f6, f3
   2b198:	7220746f 	eorvc	r7, r0, #1862270976	; 0x6f000000
   2b19c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
   2b1a0:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   2b1a4:	00656369 	rsbeq	r6, r5, r9, ror #6
   2b1a8:	6e6e6143 	powvsem	f6, f6, f3
   2b1ac:	6320746f 			; <UNDEFINED> instruction: 0x6320746f
   2b1b0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
   2b1b4:	6c616820 	stclvs	8, cr6, [r1], #-128	; 0xffffff80
   2b1b8:	6e6f2074 	mcrvs	0, 3, r2, cr15, cr4, {3}
   2b1bc:	646e6520 	strbtvs	r6, [lr], #-1312	; 0xfffffae0
   2b1c0:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2b1c4:	00312074 	eorseq	r2, r1, r4, ror r0
   2b1c8:	6e6e6143 	powvsem	f6, f6, f3
   2b1cc:	6320746f 			; <UNDEFINED> instruction: 0x6320746f
   2b1d0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
   2b1d4:	6c616820 	stclvs	8, cr6, [r1], #-128	; 0xffffff80
   2b1d8:	6e6f2074 	mcrvs	0, 3, r2, cr15, cr4, {3}
   2b1dc:	646e6520 	strbtvs	r6, [lr], #-1312	; 0xfffffae0
   2b1e0:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
   2b1e4:	00322074 	eorseq	r2, r2, r4, ror r0
   2b1e8:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2b1ec:	61726669 	cmnvs	r2, r9, ror #12
   2b1f0:	6373656d 	cmnvs	r3, #457179136	; 0x1b400000
   2b1f4:	6e646568 	cdpvs	5, 6, cr6, cr4, cr8, {3}
   2b1f8:	2e726570 	mrccs	5, 3, r6, cr2, cr0, {3}
   2b1fc:	00000063 	andeq	r0, r0, r3, rrx
   2b200:	6174536e 	cmnvs	r4, lr, ror #6
   2b204:	20737574 	rsbscs	r7, r3, r4, ror r5
   2b208:	57442026 	strbpl	r2, [r4, -r6, lsr #32]
   2b20c:	5f494348 	svcpl	0x00494348
   2b210:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
   2b214:	4148435f 	cmpmi	r8, pc, asr r3
   2b218:	4e495f4e 	cdpmi	15, 4, cr5, cr9, cr14, {2}
   2b21c:	43415f54 	movtmi	r5, #8020	; 0x1f54
   2b220:	0000004b 	andeq	r0, r0, fp, asr #32
   2b224:	61766e49 	cmnvs	r6, r9, asr #28
   2b228:	2064696c 	rsbcs	r6, r4, ip, ror #18
   2b22c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
   2b230:	30207375 	eorcc	r7, r0, r5, ror r3
   2b234:	00582578 	subseq	r2, r8, r8, ror r5
   2b238:	63737764 	cmnvs	r3, #100, 14	; 0x1900000
   2b23c:	00646568 	rsbeq	r6, r4, r8, ror #10
   2b240:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2b244:	61726669 	cmnvs	r2, r9, ror #12
   2b248:	6373656d 	cmnvs	r3, #457179136	; 0x1b400000
   2b24c:	70646568 	rsbvc	r6, r4, r8, ror #10
   2b250:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
   2b254:	00000000 	andeq	r0, r0, r0
   2b258:	6b627375 	blvs	18c8034 <mailbuffer+0x189ae94>
   2b25c:	6f627965 	svcvs	0x00627965
   2b260:	2e647261 	cdpcs	2, 6, cr7, cr4, cr1, {3}
   2b264:	00000063 	andeq	r0, r0, r3, rrx
   2b268:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b26c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b270:	6552705f 	ldrbvs	r7, [r2, #-95]	; 0xffffffa1
   2b274:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
   2b278:	70646e45 	rsbvc	r6, r4, r5, asr #28
   2b27c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
   2b280:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b284:	00000030 	andeq	r0, r0, r0, lsr r0
   2b288:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b28c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b290:	6552705f 	ldrbvs	r7, [r2, #-95]	; 0xffffffa1
   2b294:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
   2b298:	66667542 	strbtvs	r7, [r6], -r2, asr #10
   2b29c:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2b2a0:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b2a4:	68547026 	ldmdavs	r4, {r1, r2, r5, ip, sp, lr}^
   2b2a8:	3e2d7369 	cdpcc	3, 2, cr7, cr13, cr9, {3}
   2b2ac:	52555f6d 	subspl	r5, r5, #436	; 0x1b4
   2b2b0:	3d3d2042 	ldccc	0, cr2, [sp, #-264]!	; 0xfffffef8
   2b2b4:	52557020 	subspl	r7, r5, #32
   2b2b8:	00000042 	andeq	r0, r0, r2, asr #32
   2b2bc:	79654b70 	stmdbvc	r5!, {r4, r5, r6, r8, r9, fp, lr}^
   2b2c0:	73657250 	cmnvc	r5, #80, 4
   2b2c4:	48646573 	stmdami	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
   2b2c8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
   2b2cc:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2b2d0:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b2d4:	6c655370 	stclvs	3, cr5, [r5], #-448	; 0xfffffe40
   2b2d8:	43746365 	cmnmi	r4, #-1811939327	; 0x94000001
   2b2dc:	6f736e6f 	svcvs	0x00736e6f
   2b2e0:	6148656c 	cmpvs	r8, ip, ror #10
   2b2e4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
   2b2e8:	3d212072 	stccc	0, cr2, [r1, #-456]!	; 0xfffffe38
   2b2ec:	00003020 	andeq	r3, r0, r0, lsr #32
   2b2f0:	75685370 	strbvc	r5, [r8, #-880]!	; 0xfffffc90
   2b2f4:	776f6474 			; <UNDEFINED> instruction: 0x776f6474
   2b2f8:	6e61486e 	cdpvs	8, 6, cr4, cr1, cr14, {3}
   2b2fc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
   2b300:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b304:	00000030 	andeq	r0, r0, r0, lsr r0
   2b308:	79654b70 	stmdbvc	r5!, {r4, r5, r6, r8, r9, fp, lr}^
   2b30c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
   2b310:	61487375 	hvcvs	34613	; 0x8735
   2b314:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
   2b318:	77615272 			; <UNDEFINED> instruction: 0x77615272
   2b31c:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b320:	00000030 	andeq	r0, r0, r0, lsr r0
   2b324:	6e6e6143 	powvsem	f6, f6, f3
   2b328:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2b32c:	4c207465 	cfstrsmi	mvf7, [r0], #-404	; 0xfffffe6c
   2b330:	00734445 	rsbseq	r4, r3, r5, asr #8
   2b334:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b338:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b33c:	6552705f 	ldrbvs	r7, [r2, #-95]	; 0xffffffa1
   2b340:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
   2b344:	70646e45 	rsbvc	r6, r4, r5, asr #28
   2b348:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
   2b34c:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2b350:	00000030 	andeq	r0, r0, r0, lsr r0
   2b354:	6e6e6143 	powvsem	f6, f6, f3
   2b358:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2b35c:	62207465 	eorvs	r7, r0, #1694498816	; 0x65000000
   2b360:	20746f6f 	rsbscs	r6, r4, pc, ror #30
   2b364:	746f7270 	strbtvc	r7, [pc], #-624	; 2b36c <s_pExceptionName+0x1a90>
   2b368:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 2b1b4 <s_pExceptionName+0x18d8>
   2b36c:	00000000 	andeq	r0, r0, r0
   2b370:	64626b75 	strbtvs	r6, [r2], #-2933	; 0xfffff48b
   2b374:	00007525 	andeq	r7, r0, r5, lsr #10
   2b378:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2b37c:	6f6f7269 	svcvs	0x006f7269
   2b380:	726f7074 	rsbvc	r7, pc, #116	; 0x74
   2b384:	00632e74 	rsbeq	r2, r3, r4, ror lr
   2b388:	6e6e6143 	powvsem	f6, f6, f3
   2b38c:	6420746f 	strtvs	r7, [r0], #-1135	; 0xfffffb91
   2b390:	63657465 	cmnvs	r5, #1694498816	; 0x65000000
   2b394:	6f702074 	svcvs	0x00702074
   2b398:	73207472 			; <UNDEFINED> instruction: 0x73207472
   2b39c:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
   2b3a0:	00000000 	andeq	r0, r0, r0
   2b3a4:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b3a8:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b3ac:	6544705f 	strbvs	r7, [r4, #-95]	; 0xffffffa1
   2b3b0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2b3b4:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2b3b8:	00000030 	andeq	r0, r0, r0, lsr r0
   2b3bc:	6e6e6143 	powvsem	f6, f6, f3
   2b3c0:	6320746f 			; <UNDEFINED> instruction: 0x6320746f
   2b3c4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2b3c8:	65727567 	ldrbvs	r7, [r2, #-1383]!	; 0xfffffa99
   2b3cc:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   2b3d0:	00656369 	rsbeq	r6, r5, r9, ror #6
   2b3d4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2b3d8:	63206563 			; <UNDEFINED> instruction: 0x63206563
   2b3dc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2b3e0:	65727567 	ldrbvs	r7, [r2, #-1383]!	; 0xfffffa99
   2b3e4:	00000064 	andeq	r0, r0, r4, rrx
   2b3e8:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
   2b3ec:	7275632d 	rsbsvc	r6, r5, #-1275068416	; 0xb4000000
   2b3f0:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
   2b3f4:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
   2b3f8:	69746964 	ldmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
   2b3fc:	00006e6f 	andeq	r6, r0, pc, ror #28
   2b400:	6d627375 	stclvs	3, cr7, [r2, #-468]!	; 0xfffffe2c
   2b404:	6573756f 	ldrbvs	r7, [r3, #-1391]!	; 0xfffffa91
   2b408:	0000632e 	andeq	r6, r0, lr, lsr #6
   2b40c:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b410:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b414:	4948705f 	stmdbmi	r8, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
   2b418:	70655244 	rsbvc	r5, r5, r4, asr #4
   2b41c:	4474726f 	ldrbtmi	r7, [r4], #-623	; 0xfffffd91
   2b420:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
   2b424:	6f747069 	svcvs	0x00747069
   2b428:	3d212072 	stccc	0, cr2, [r1, #-456]!	; 0xfffffe38
   2b42c:	00003020 	andeq	r3, r0, r0, lsr #32
   2b430:	6e6e6143 	powvsem	f6, f6, f3
   2b434:	6720746f 	strvs	r7, [r0, -pc, ror #8]!
   2b438:	48207465 	stmdami	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
   2b43c:	72204449 	eorvc	r4, r0, #1224736768	; 0x49000000
   2b440:	726f7065 	rsbvc	r7, pc, #101	; 0x65
   2b444:	65642074 	strbvs	r2, [r4, #-116]!	; 0xffffff8c
   2b448:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2b44c:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2b450:	00000000 	andeq	r0, r0, r0
   2b454:	756f6d75 	strbvc	r6, [pc, #-3445]!	; 2a6e7 <s_pExceptionName+0xe0b>
   2b458:	75256573 	strvc	r6, [r5, #-1395]!	; 0xfffffa8d
   2b45c:	00000000 	andeq	r0, r0, r0
   2b460:	61745370 	cmnvs	r4, r0, ror r3
   2b464:	48737574 	ldmdami	r3!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
   2b468:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
   2b46c:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2b470:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b474:	63687764 	cmnvs	r8, #100, 14	; 0x1900000
   2b478:	61726669 	cmnvs	r2, r9, ror #12
   2b47c:	6373656d 	cmnvs	r3, #457179136	; 0x1b400000
   2b480:	6e646568 	cdpvs	5, 6, cr6, cr4, cr8, {3}
   2b484:	696c7073 	stmdbvs	ip!, {r0, r1, r4, r5, r6, ip, sp, lr}^
   2b488:	00632e74 	rsbeq	r2, r3, r4, ror lr
   2b48c:	67627375 			; <UNDEFINED> instruction: 0x67627375
   2b490:	70656d61 	rsbvc	r6, r5, r1, ror #26
   2b494:	632e6461 			; <UNDEFINED> instruction: 0x632e6461
   2b498:	00000000 	andeq	r0, r0, r0
   2b49c:	636e7973 	cmnvs	lr, #1884160	; 0x1cc000
   2b4a0:	6e6f7268 	cdpvs	2, 6, cr7, cr15, cr8, {3}
   2b4a4:	2e657a69 	vnmulcs.f32	s15, s10, s19
   2b4a8:	00000063 	andeq	r0, r0, r3, rrx
   2b4ac:	436e5f73 	cmnmi	lr, #460	; 0x1cc
   2b4b0:	69746972 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   2b4b4:	4c6c6163 	stfmie	f6, [ip], #-396	; 0xfffffe74
   2b4b8:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
   2b4bc:	30203e20 	eorcc	r3, r0, r0, lsr #28
   2b4c0:	00000000 	andeq	r0, r0, r0
   2b4c4:	73627375 	cmnvc	r2, #-738197503	; 0xd4000001
   2b4c8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
   2b4cc:	00632e67 	rsbeq	r2, r3, r7, ror #28
   2b4d0:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b4d4:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b4d8:	7453705f 	ldrbvc	r7, [r3], #-95	; 0xffffffa1
   2b4dc:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
   2b4e0:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b4e4:	00000030 	andeq	r0, r0, r0, lsr r0
   2b4e8:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b4ec:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b4f0:	5355705f 	cmppl	r5, #95	; 0x5f
   2b4f4:	72745342 	rsbsvc	r5, r4, #134217729	; 0x8000001
   2b4f8:	20676e69 	rsbcs	r6, r7, r9, ror #28
   2b4fc:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2b500:	00000000 	andeq	r0, r0, r0
   2b504:	72615070 	rsbvc	r5, r1, #112	; 0x70
   2b508:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
   2b50c:	705f6d3e 	subsvc	r6, pc, lr, lsr sp	; <UNPREDICTABLE>
   2b510:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
   2b514:	2120676e 			; <UNDEFINED> instruction: 0x2120676e
   2b518:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b51c:	44496375 	strbmi	r6, [r9], #-885	; 0xfffffc8b
   2b520:	30203e20 	eorcc	r3, r0, r0, lsr #28
   2b524:	00000000 	andeq	r0, r0, r0
   2b528:	6e614c70 	mcrvs	12, 3, r4, cr1, cr0, {3}
   2b52c:	67617567 	strbvs	r7, [r1, -r7, ror #10]!
   2b530:	73444965 	movtvc	r4, #18789	; 0x4965
   2b534:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b538:	00000030 	andeq	r0, r0, r0, lsr r0
   2b53c:	6d627375 	stclvs	3, cr7, [r2, #-468]!	; 0xfffffe2c
   2b540:	2e696469 	cdpcs	4, 6, cr6, cr9, cr9, {3}
   2b544:	00000063 	andeq	r0, r0, r3, rrx
   2b548:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b54c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b550:	6150705f 	cmpvs	r0, pc, asr r0
   2b554:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
   2b558:	66667542 	strbtvs	r7, [r6], -r2, asr #10
   2b55c:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2b560:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b564:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b568:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b56c:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2b570:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
   2b574:	6e49746e 	cdpvs	4, 4, cr7, cr9, cr14, {3}
   2b578:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2b57c:	00000030 	andeq	r0, r0, r0, lsr r0
   2b580:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b584:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b588:	6150705f 	cmpvs	r0, pc, asr r0
   2b58c:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
   2b590:	66667542 	strbtvs	r7, [r6], -r2, asr #10
   2b594:	3d207265 	sfmcc	f7, 4, [r0, #-404]!	; 0xfffffe6c
   2b598:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b59c:	64696d75 	strbtvs	r6, [r9], #-3445	; 0xfffff28b
   2b5a0:	00752569 	rsbseq	r2, r5, r9, ror #10
   2b5a4:	63615070 	cmnvs	r1, #112	; 0x70
   2b5a8:	4874656b 	ldmdami	r4!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
   2b5ac:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
   2b5b0:	21207265 			; <UNDEFINED> instruction: 0x21207265
   2b5b4:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b5b8:	63627375 	cmnvs	r2, #-738197503	; 0xd4000001
   2b5bc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2b5c0:	72617067 	rsbvc	r7, r1, #103	; 0x67
   2b5c4:	2e726573 	mrccs	5, 3, r6, cr2, cr3, {3}
   2b5c8:	00000063 	andeq	r0, r0, r3, rrx
   2b5cc:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b5d0:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b5d4:	7542705f 	strbvc	r7, [r2, #-95]	; 0xffffffa1
   2b5d8:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
   2b5dc:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b5e0:	00000030 	andeq	r0, r0, r0, lsr r0
   2b5e4:	72615070 	rsbvc	r5, r1, #112	; 0x70
   2b5e8:	20726573 	rsbscs	r6, r2, r3, ror r5
   2b5ec:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2b5f0:	00000000 	andeq	r0, r0, r0
   2b5f4:	73654470 	cmnvc	r5, #112, 8	; 0x70000000
   2b5f8:	646e4563 	strbtvs	r4, [lr], #-1379	; 0xfffffa9d
   2b5fc:	203d3c20 	eorscs	r3, sp, r0, lsr #24
   2b600:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b604:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b608:	6e45705f 	mcrvs	0, 2, r7, cr5, cr15, {2}
   2b60c:	736f5064 	cmnvc	pc, #100	; 0x64
   2b610:	6f697469 	svcvs	0x00697469
   2b614:	0000006e 	andeq	r0, r0, lr, rrx
   2b618:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b61c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b620:	7543705f 	strbvc	r7, [r3, #-95]	; 0xffffffa1
   2b624:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
   2b628:	73654474 	cmnvc	r5, #116, 8	; 0x74000000
   2b62c:	70697263 	rsbvc	r7, r9, r3, ror #4
   2b630:	20726f74 	rsbscs	r6, r2, r4, ror pc
   2b634:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2b638:	00000000 	andeq	r0, r0, r0
   2b63c:	61766e49 	cmnvs	r6, r9, asr #28
   2b640:	2064696c 	rsbcs	r6, r4, ip, ror #18
   2b644:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
   2b648:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
   2b64c:	6f697461 	svcvs	0x00697461
   2b650:	6564206e 	strbvs	r2, [r4, #-110]!	; 0xffffff92
   2b654:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2b658:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2b65c:	666f2820 	strbtvs	r2, [pc], -r0, lsr #16
   2b660:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
   2b664:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2b668:	00002958 	andeq	r2, r0, r8, asr r9
   2b66c:	6d79656b 	cfldr64vs	mvdx6, [r9, #-428]!	; 0xfffffe54
   2b670:	632e7061 			; <UNDEFINED> instruction: 0x632e7061
   2b674:	00000000 	andeq	r0, r0, r0
   2b678:	00000020 	andeq	r0, r0, r0, lsr #32
   2b67c:	0000001b 	andeq	r0, r0, fp, lsl r0
   2b680:	0000007f 	andeq	r0, r0, pc, ror r0
   2b684:	00000009 	andeq	r0, r0, r9
   2b688:	0000000a 	andeq	r0, r0, sl
   2b68c:	7e325b1b 	vmovvc.32	r5, d2[1]
   2b690:	00000000 	andeq	r0, r0, r0
   2b694:	7e315b1b 	vmovvc.32	r5, d1[1]
   2b698:	00000000 	andeq	r0, r0, r0
   2b69c:	7e355b1b 	vmovvc.32	r5, d5[1]
   2b6a0:	00000000 	andeq	r0, r0, r0
   2b6a4:	7e335b1b 	vmovvc.32	r5, d3[1]
   2b6a8:	00000000 	andeq	r0, r0, r0
   2b6ac:	7e345b1b 	vmovvc.32	r5, d4[1]
   2b6b0:	00000000 	andeq	r0, r0, r0
   2b6b4:	7e365b1b 	vmovvc.32	r5, d6[1]
   2b6b8:	00000000 	andeq	r0, r0, r0
   2b6bc:	00415b1b 	subeq	r5, r1, fp, lsl fp
   2b6c0:	00425b1b 	subeq	r5, r2, fp, lsl fp
   2b6c4:	00445b1b 	subeq	r5, r4, fp, lsl fp
   2b6c8:	00435b1b 	subeq	r5, r3, fp, lsl fp
   2b6cc:	415b5b1b 	cmpmi	fp, fp, lsl fp
   2b6d0:	00000000 	andeq	r0, r0, r0
   2b6d4:	425b5b1b 	subsmi	r5, fp, #27648	; 0x6c00
   2b6d8:	00000000 	andeq	r0, r0, r0
   2b6dc:	435b5b1b 	cmpmi	fp, #27648	; 0x6c00
   2b6e0:	00000000 	andeq	r0, r0, r0
   2b6e4:	445b5b1b 	ldrbmi	r5, [fp], #-2843	; 0xfffff4e5
   2b6e8:	00000000 	andeq	r0, r0, r0
   2b6ec:	455b5b1b 	ldrbmi	r5, [fp, #-2843]	; 0xfffff4e5
   2b6f0:	00000000 	andeq	r0, r0, r0
   2b6f4:	37315b1b 			; <UNDEFINED> instruction: 0x37315b1b
   2b6f8:	0000007e 	andeq	r0, r0, lr, ror r0
   2b6fc:	38315b1b 	ldmdacc	r1!, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
   2b700:	0000007e 	andeq	r0, r0, lr, ror r0
   2b704:	39315b1b 	ldmdbcc	r1!, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
   2b708:	0000007e 	andeq	r0, r0, lr, ror r0
   2b70c:	30325b1b 	eorscc	r5, r2, fp, lsl fp
   2b710:	0000007e 	andeq	r0, r0, lr, ror r0
   2b714:	0000002f 	andeq	r0, r0, pc, lsr #32
   2b718:	0000002a 	andeq	r0, r0, sl, lsr #32
   2b71c:	0000002d 	andeq	r0, r0, sp, lsr #32
   2b720:	0000002b 	andeq	r0, r0, fp, lsr #32
   2b724:	00000032 	andeq	r0, r0, r2, lsr r0
   2b728:	00000033 	andeq	r0, r0, r3, lsr r0
   2b72c:	00000034 	andeq	r0, r0, r4, lsr r0
   2b730:	00000035 	andeq	r0, r0, r5, lsr r0
   2b734:	00000036 	andeq	r0, r0, r6, lsr r0
   2b738:	00000037 	andeq	r0, r0, r7, lsr r0
   2b73c:	00000038 	andeq	r0, r0, r8, lsr r0
   2b740:	00000039 	andeq	r0, r0, r9, lsr r0
   2b744:	00475b1b 	subeq	r5, r7, fp, lsl fp
   2b748:	0000002c 	andeq	r0, r0, ip, lsr #32
   2b74c:	0000002e 	andeq	r0, r0, lr, lsr #32
   2b750:	6f6c6c61 	svcvs	0x006c6c61
   2b754:	00632e63 	rsbeq	r2, r3, r3, ror #28
   2b758:	4e705f73 	mrcmi	15, 3, r5, cr0, cr3, {3}
   2b75c:	42747865 	rsbsmi	r7, r4, #6619136	; 0x650000
   2b760:	6b636f6c 	blvs	1907518 <mailbuffer+0x18da378>
   2b764:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b768:	00000030 	andeq	r0, r0, r0, lsr r0
   2b76c:	6f6c4270 	svcvs	0x006c4270
   2b770:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
   2b774:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
   2b778:	4d6e3e2d 	stclmi	14, cr3, [lr, #-180]!	; 0xffffff4c
   2b77c:	63696761 	cmnvs	r9, #25427968	; 0x1840000
   2b780:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2b784:	434f4c42 	movtmi	r4, #64578	; 0xfc42
   2b788:	414d5f4b 	cmpmi	sp, fp, asr #30
   2b78c:	00434947 	subeq	r4, r3, r7, asr #18
   2b790:	6e752828 	cdpvs	8, 7, cr2, cr5, cr8, {1}
   2b794:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
   2b798:	6c206465 	cfstrsvs	mvf6, [r0], #-404	; 0xfffffe6c
   2b79c:	29676e6f 	stmdbcs	r7!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
   2b7a0:	65527020 	ldrbvs	r7, [r2, #-32]	; 0xffffffe0
   2b7a4:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
   2b7a8:	41202620 			; <UNDEFINED> instruction: 0x41202620
   2b7ac:	4e47494c 	vmlsmi.f16	s9, s14, s24	; <UNPREDICTABLE>
   2b7b0:	53414d5f 	movtpl	r4, #7519	; 0x1d5f
   2b7b4:	3d20294b 			; <UNDEFINED> instruction: 0x3d20294b
   2b7b8:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b7bc:	6f6c4270 	svcvs	0x006c4270
   2b7c0:	21206b63 			; <UNDEFINED> instruction: 0x21206b63
   2b7c4:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2b7c8:	4e705f73 	mrcmi	15, 3, r5, cr0, cr3, {3}
   2b7cc:	50747865 	rsbspl	r7, r4, r5, ror #16
   2b7d0:	20656761 	rsbcs	r6, r5, r1, ror #14
   2b7d4:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2b7d8:	00000000 	andeq	r0, r0, r0
   2b7dc:	65724670 	ldrbvs	r4, [r2, #-1648]!	; 0xfffff990
   2b7e0:	67615065 	strbvs	r5, [r1, -r5, rrx]!
   2b7e4:	6e3e2d65 	cdpvs	13, 3, cr2, cr14, cr5, {3}
   2b7e8:	6967614d 	stmdbvs	r7!, {r0, r2, r3, r6, r8, sp, lr}^
   2b7ec:	3d3d2063 	ldccc	0, cr2, [sp, #-396]!	; 0xfffffe74
   2b7f0:	45524620 	ldrbmi	r4, [r2, #-1568]	; 0xfffff9e0
   2b7f4:	47415045 	strbmi	r5, [r1, -r5, asr #32]
   2b7f8:	414d5f45 	cmpmi	sp, r5, asr #30
   2b7fc:	00434947 	subeq	r4, r3, r7, asr #18
   2b800:	67615070 			; <UNDEFINED> instruction: 0x67615070
   2b804:	3d212065 	stccc	0, cr2, [r1, #-404]!	; 0xfffffe6c
   2b808:	00003020 	andeq	r3, r0, r0, lsr #32
   2b80c:	25287325 	strcs	r7, [r8, #-805]!	; 0xfffffcdb
   2b810:	00002975 	andeq	r2, r0, r5, ror r9
   2b814:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
   2b818:	6f697472 	svcvs	0x00697472
   2b81c:	6166206e 	cmnvs	r6, lr, rrx
   2b820:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   2b824:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
   2b828:	00000000 	andeq	r0, r0, r0
   2b82c:	706d7544 	rsbvc	r7, sp, r4, asr #10
   2b830:	20676e69 	rsbcs	r6, r7, r9, ror #28
   2b834:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
   2b838:	74796220 	ldrbtvc	r6, [r9], #-544	; 0xfffffde0
   2b83c:	73207365 			; <UNDEFINED> instruction: 0x73207365
   2b840:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
   2b844:	20676e69 	rsbcs	r6, r7, r9, ror #28
   2b848:	30207461 	eorcc	r7, r0, r1, ror #8
   2b84c:	00582578 	subseq	r2, r8, r8, ror r5
   2b850:	58343025 	ldmdapl	r4!, {r0, r2, r5, ip, sp}
   2b854:	3025203a 	eorcc	r2, r5, sl, lsr r0
   2b858:	25205832 	strcs	r5, [r0, #-2098]!	; 0xfffff7ce
   2b85c:	20583230 	subscs	r3, r8, r0, lsr r2
   2b860:	58323025 	ldmdapl	r2!, {r0, r2, r5, ip, sp}
   2b864:	32302520 	eorscc	r2, r0, #32, 10	; 0x8000000
   2b868:	30252058 	eorcc	r2, r5, r8, asr r0
   2b86c:	25205832 	strcs	r5, [r0, #-2098]!	; 0xfffff7ce
   2b870:	20583230 	subscs	r3, r8, r0, lsr r2
   2b874:	58323025 	ldmdapl	r2!, {r0, r2, r5, ip, sp}
   2b878:	32302520 	eorscc	r2, r0, #32, 10	; 0x8000000
   2b87c:	30252d58 	eorcc	r2, r5, r8, asr sp
   2b880:	25205832 	strcs	r5, [r0, #-2098]!	; 0xfffff7ce
   2b884:	20583230 	subscs	r3, r8, r0, lsr r2
   2b888:	58323025 	ldmdapl	r2!, {r0, r2, r5, ip, sp}
   2b88c:	32302520 	eorscc	r2, r0, #32, 10	; 0x8000000
   2b890:	30252058 	eorcc	r2, r5, r8, asr r0
   2b894:	25205832 	strcs	r5, [r0, #-2098]!	; 0xfffff7ce
   2b898:	20583230 	subscs	r3, r8, r0, lsr r2
   2b89c:	58323025 	ldmdapl	r2!, {r0, r2, r5, ip, sp}
   2b8a0:	32302520 	eorscc	r2, r0, #32, 10	; 0x8000000
   2b8a4:	00000058 	andeq	r0, r0, r8, asr r0
   2b8a8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
   2b8ac:	75255b6b 	strvc	r5, [r5, #-2923]!	; 0xfffff495
   2b8b0:	7369205d 	cmnvc	r9, #93	; 0x5d
   2b8b4:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2b8b8:	00000058 	andeq	r0, r0, r8, asr r0
   2b8bc:	6d315b1b 	fldmdbxvs	r1!, {d5-d17}	;@ Deprecated
   2b8c0:	00000000 	andeq	r0, r0, r0
   2b8c4:	6d305b1b 	fldmdbxvs	r0!, {d5-d17}	;@ Deprecated
   2b8c8:	00000000 	andeq	r0, r0, r0
   2b8cc:	0000203a 	andeq	r2, r0, sl, lsr r0
   2b8d0:	67676f4c 	strbvs	r6, [r7, -ip, asr #30]!
   2b8d4:	20676e69 	rsbcs	r6, r7, r9, ror #28
   2b8d8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
   2b8dc:	00646574 	rsbeq	r6, r4, r4, ror r5
   2b8e0:	67676f6c 	strbvs	r6, [r7, -ip, ror #30]!
   2b8e4:	00007265 	andeq	r7, r0, r5, ror #4
   2b8e8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
   2b8ec:	00632e72 	rsbeq	r2, r3, r2, ror lr
   2b8f0:	75323025 	ldrvc	r3, [r2, #-37]!	; 0xffffffdb
   2b8f4:	3230253a 	eorscc	r2, r0, #243269632	; 0xe800000
   2b8f8:	30253a75 	eorcc	r3, r5, r5, ror sl
   2b8fc:	252e7532 	strcs	r7, [lr, #-1330]!	; 0xffffface
   2b900:	756c3230 	strbvc	r3, [ip, #-560]!	; 0xfffffdd0
   2b904:	00000000 	andeq	r0, r0, r0
   2b908:	6e614870 	mcrvs	8, 3, r4, cr1, cr0, {3}
   2b90c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
   2b910:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b914:	00000030 	andeq	r0, r0, r0, lsr r0
   2b918:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
   2b91c:	6c206d65 	stcvs	13, cr6, [r0], #-404	; 0xfffffe6c
   2b920:	74696d69 	strbtvc	r6, [r9], #-3433	; 0xfffff297
   2b924:	20666f20 	rsbcs	r6, r6, r0, lsr #30
   2b928:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
   2b92c:	74206c65 	strtvc	r6, [r0], #-3173	; 0xfffff39b
   2b930:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
   2b934:	78652073 	stmdavc	r5!, {r0, r1, r4, r5, r6, sp}^
   2b938:	64656563 	strbtvs	r6, [r5], #-1379	; 0xfffffa9d
   2b93c:	00006465 	andeq	r6, r0, r5, ror #8
   2b940:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
   2b944:	00000072 	andeq	r0, r0, r2, ror r0
   2b948:	3d3c2031 	ldccc	0, cr2, [ip, #-196]!	; 0xffffff3c
   2b94c:	69546820 	ldmdbvs	r4, {r5, fp, sp, lr}^
   2b950:	2072656d 	rsbscs	r6, r2, sp, ror #10
   2b954:	68202626 	stmdavs	r0!, {r1, r2, r5, r9, sl, sp}
   2b958:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
   2b95c:	3d3c2072 	ldccc	0, cr2, [ip, #-456]!	; 0xfffffe38
   2b960:	52454b20 	subpl	r4, r5, #32, 22	; 0x8000
   2b964:	5f4c454e 	svcpl	0x004c454e
   2b968:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
   2b96c:	00005352 	andeq	r5, r0, r2, asr r3
   2b970:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
   2b974:	28203233 	stmdacs	r0!, {r0, r1, r4, r5, r9, ip, sp}
   2b978:	5f4d5241 	svcpl	0x004d5241
   2b97c:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
   2b980:	52454d49 	subpl	r4, r5, #4672	; 0x1240
   2b984:	2953435f 	ldmdbcs	r3, {r0, r1, r2, r3, r4, r6, r8, r9, lr}^
   2b988:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   2b98c:	3c3c2031 	ldccc	0, cr2, [ip], #-196	; 0xffffff3c
   2b990:	00293320 	eoreq	r3, r9, r0, lsr #6
   2b994:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2b998:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2b99c:	6e49705f 	mcrvs	0, 2, r7, cr9, cr15, {2}
   2b9a0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
   2b9a4:	53747075 	cmnpl	r4, #117	; 0x75
   2b9a8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
   2b9ac:	3d21206d 	stccc	0, cr2, [r1, #-436]!	; 0xfffffe4c
   2b9b0:	00003020 	andeq	r3, r0, r0, lsr #32
   2b9b4:	666d6362 	strbtvs	r6, [sp], -r2, ror #6
   2b9b8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
   2b9bc:	66667562 	strbtvs	r7, [r6], -r2, ror #10
   2b9c0:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
   2b9c4:	00000000 	andeq	r0, r0, r0
   2b9c8:	706d6362 	rsbvc	r6, sp, r2, ror #6
   2b9cc:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xfffff08e
   2b9d0:	74797472 	ldrbtvc	r7, [r9], #-1138	; 0xfffffb8e
   2b9d4:	2e736761 	cdpcs	7, 7, cr6, cr3, cr1, {3}
   2b9d8:	00000063 	andeq	r0, r0, r3, rrx
   2b9dc:	67615470 			; <UNDEFINED> instruction: 0x67615470
   2b9e0:	203d2120 	eorscs	r2, sp, r0, lsr #2
   2b9e4:	00000030 	andeq	r0, r0, r0, lsr r0
   2b9e8:	6761546e 	strbvs	r5, [r1, -lr, ror #8]!
   2b9ec:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
   2b9f0:	203d3e20 	eorscs	r3, sp, r0, lsr #28
   2b9f4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
   2b9f8:	2820666f 	stmdacs	r0!, {r0, r1, r2, r3, r5, r6, r9, sl, sp, lr}
   2b9fc:	6f725054 	svcvs	0x00725054
   2ba00:	74726570 	ldrbtvc	r6, [r2], #-1392	; 0xfffffa90
   2ba04:	67615479 			; <UNDEFINED> instruction: 0x67615479
   2ba08:	706d6953 	rsbvc	r6, sp, r3, asr r9
   2ba0c:	0029656c 	eoreq	r6, r9, ip, ror #10
   2ba10:	75426e28 	strbvc	r6, [r2, #-3624]	; 0xfffff1d8
   2ba14:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
   2ba18:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
   2ba1c:	33202620 			; <UNDEFINED> instruction: 0x33202620
   2ba20:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
   2ba24:	00003020 	andeq	r3, r0, r0, lsr #32
   2ba28:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
   2ba2c:	656e6567 	strbvs	r6, [lr, #-1383]!	; 0xfffffa99
   2ba30:	6f746172 	svcvs	0x00746172
   2ba34:	00632e72 	rsbeq	r2, r3, r2, ror lr
   2ba38:	736f506e 	cmnvc	pc, #110	; 0x6e
   2ba3c:	203c2058 	eorscs	r2, ip, r8, asr r0
   2ba40:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ba44:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ba48:	68436e5f 	stmdavs	r3, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
   2ba4c:	69577261 	ldmdbvs	r7, {r0, r5, r6, r9, ip, sp, lr}^
   2ba50:	00687464 	rsbeq	r7, r8, r4, ror #8
   2ba54:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   2ba58:	70757272 	rsbsvc	r7, r5, r2, ror r2
   2ba5c:	00632e74 	rsbeq	r2, r3, r4, ror lr
   2ba60:	5152496e 	cmppl	r2, lr, ror #18
   2ba64:	49203c20 	stmdbmi	r0!, {r5, sl, fp, ip, sp}
   2ba68:	4c5f5152 	ldfmie	f5, [pc], {82}	; 0x52
   2ba6c:	53454e49 	movtpl	r4, #24137	; 0x5e49
   2ba70:	00000000 	andeq	r0, r0, r0
   2ba74:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ba78:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2ba7c:	4970615f 	ldmdbmi	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
   2ba80:	61485152 	cmpvs	r8, r2, asr r1
   2ba84:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
   2ba88:	496e5b72 	stmdbmi	lr!, {r1, r4, r5, r6, r8, r9, fp, ip, lr}^
   2ba8c:	205d5152 	subscs	r5, sp, r2, asr r1
   2ba90:	30203d3d 	eorcc	r3, r0, sp, lsr sp
   2ba94:	00000000 	andeq	r0, r0, r0
   2ba98:	69685470 	stmdbvs	r8!, {r4, r5, r6, sl, ip, lr}^
   2ba9c:	6d3e2d73 	ldcvs	13, cr2, [lr, #-460]!	; 0xfffffe34
   2baa0:	4970615f 	ldmdbmi	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
   2baa4:	61485152 	cmpvs	r8, r2, asr r1
   2baa8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
   2baac:	496e5b72 	stmdbmi	lr!, {r1, r4, r5, r6, r8, r9, fp, ip, lr}^
   2bab0:	205d5152 	subscs	r5, sp, r2, asr r1
   2bab4:	30203d21 	eorcc	r3, r0, r1, lsr #26
   2bab8:	00000000 	andeq	r0, r0, r0
   2babc:	6862696c 	stmdavs	r2!, {r2, r3, r5, r6, r8, fp, sp, lr}^
   2bac0:	65706c65 	ldrbvs	r6, [r0, #-3173]!	; 0xfffff39b
   2bac4:	00632e72 	rsbeq	r2, r3, r2, ror lr
   2bac8:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
   2bacc:	6f697470 	svcvs	0x00697470
   2bad0:	6e61686e 	cdpvs	8, 6, cr6, cr1, cr14, {3}
   2bad4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
   2bad8:	0000632e 	andeq	r6, r0, lr, lsr #6
   2badc:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
   2bae0:	6f697470 	svcvs	0x00697470
   2bae4:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
   2bae8:	00000073 	andeq	r0, r0, r3, ror r0
   2baec:	61724670 	cmnvs	r2, r0, ror r6
   2baf0:	2120656d 			; <UNDEFINED> instruction: 0x2120656d
   2baf4:	0030203d 	eorseq	r2, r0, sp, lsr r0
   2baf8:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
   2bafc:	30204350 	eorcc	r4, r0, r0, asr r3
   2bb00:	2c582578 	cfldr64cs	mvdx2, [r8], {120}	; 0x78
   2bb04:	52534620 	subspl	r4, r3, #32, 12	; 0x2000000
   2bb08:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2bb0c:	46202c58 			; <UNDEFINED> instruction: 0x46202c58
   2bb10:	30205241 	eorcc	r5, r0, r1, asr #4
   2bb14:	2c582578 	cfldr64cs	mvdx2, [r8], {120}	; 0x78
   2bb18:	20505320 	subscs	r5, r0, r0, lsr #6
   2bb1c:	58257830 	stmdapl	r5!, {r4, r5, fp, ip, sp, lr}
   2bb20:	524c202c 	subpl	r2, ip, #44	; 0x2c
   2bb24:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   2bb28:	50202c58 	eorpl	r2, r0, r8, asr ip
   2bb2c:	30205253 	eorcc	r5, r0, r3, asr r2
   2bb30:	29582578 	ldmdbcs	r8, {r3, r4, r5, r6, r8, sl, sp}^
   2bb34:	00000000 	andeq	r0, r0, r0
   2bb38:	69766944 	ldmdbvs	r6!, {r2, r6, r8, fp, sp, lr}^
   2bb3c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
   2bb40:	20796220 	rsbscs	r6, r9, r0, lsr #4
   2bb44:	6f72657a 	svcvs	0x0072657a
   2bb48:	00000000 	andeq	r0, r0, r0
   2bb4c:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
   2bb50:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
   2bb54:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
   2bb58:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
   2bb5c:	6f697463 	svcvs	0x00697463
   2bb60:	0000006e 	andeq	r0, r0, lr, rrx
   2bb64:	66657250 			; <UNDEFINED> instruction: 0x66657250
   2bb68:	68637465 	stmdavs	r3!, {r0, r2, r5, r6, sl, ip, sp, lr}^
   2bb6c:	6f626120 	svcvs	0x00626120
   2bb70:	00007472 	andeq	r7, r0, r2, ror r4
   2bb74:	61746144 	cmnvs	r4, r4, asr #2
   2bb78:	6f626120 	svcvs	0x00626120
   2bb7c:	00007472 	andeq	r7, r0, r2, ror r4
   2bb80:	6d6d6362 	stclvs	3, cr6, [sp, #-392]!	; 0xfffffe78
   2bb84:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
   2bb88:	632e786f 			; <UNDEFINED> instruction: 0x632e786f
   2bb8c:	00000000 	andeq	r0, r0, r0
   2bb90:	61446e28 	cmpvs	r4, r8, lsr #28
   2bb94:	26206174 			; <UNDEFINED> instruction: 0x26206174
   2bb98:	46783020 	ldrbtmi	r3, [r8], -r0, lsr #32
   2bb9c:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
   2bba0:	00003020 	andeq	r3, r0, r0, lsr #32

Disassembly of section .text.memcpy:

0002bba4 <memcpy>:
   2bba4:	e352000f 	cmp	r2, #15
   2bba8:	9a000035 	bls	2bc84 <memcpy+0xe0>
   2bbac:	e1803001 	orr	r3, r0, r1
   2bbb0:	e3130003 	tst	r3, #3
   2bbb4:	1a00003e 	bne	2bcb4 <memcpy+0x110>
   2bbb8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   2bbbc:	e2428010 	sub	r8, r2, #16
   2bbc0:	e1a08228 	lsr	r8, r8, #4
   2bbc4:	e2817020 	add	r7, r1, #32
   2bbc8:	e0877208 	add	r7, r7, r8, lsl #4
   2bbcc:	e2813010 	add	r3, r1, #16
   2bbd0:	e280c010 	add	ip, r0, #16
   2bbd4:	e5136010 	ldr	r6, [r3, #-16]
   2bbd8:	e513500c 	ldr	r5, [r3, #-12]
   2bbdc:	e9134010 	ldmdb	r3, {r4, lr}
   2bbe0:	e2833010 	add	r3, r3, #16
   2bbe4:	e1530007 	cmp	r3, r7
   2bbe8:	e50c6010 	str	r6, [ip, #-16]
   2bbec:	e50c500c 	str	r5, [ip, #-12]
   2bbf0:	e90c4010 	stmdb	ip, {r4, lr}
   2bbf4:	e28cc010 	add	ip, ip, #16
   2bbf8:	1afffff5 	bne	2bbd4 <memcpy+0x30>
   2bbfc:	e288c001 	add	ip, r8, #1
   2bc00:	e1a0c20c 	lsl	ip, ip, #4
   2bc04:	e312000c 	tst	r2, #12
   2bc08:	e202e00f 	and	lr, r2, #15
   2bc0c:	e081100c 	add	r1, r1, ip
   2bc10:	01a0200e 	moveq	r2, lr
   2bc14:	e080c00c 	add	ip, r0, ip
   2bc18:	0a00000d 	beq	2bc54 <memcpy+0xb0>
   2bc1c:	e1a04001 	mov	r4, r1
   2bc20:	e24ee004 	sub	lr, lr, #4
   2bc24:	e1a0e12e 	lsr	lr, lr, #2
   2bc28:	e08c610e 	add	r6, ip, lr, lsl #2
   2bc2c:	e24c3004 	sub	r3, ip, #4
   2bc30:	e4945004 	ldr	r5, [r4], #4
   2bc34:	e5a35004 	str	r5, [r3, #4]!
   2bc38:	e1530006 	cmp	r3, r6
   2bc3c:	1afffffb 	bne	2bc30 <memcpy+0x8c>
   2bc40:	e28ee001 	add	lr, lr, #1
   2bc44:	e1a0e10e 	lsl	lr, lr, #2
   2bc48:	e08cc00e 	add	ip, ip, lr
   2bc4c:	e081100e 	add	r1, r1, lr
   2bc50:	e2022003 	and	r2, r2, #3
   2bc54:	e3520000 	cmp	r2, #0
   2bc58:	e2422001 	sub	r2, r2, #1
   2bc5c:	12822001 	addne	r2, r2, #1
   2bc60:	10813002 	addne	r3, r1, r2
   2bc64:	124c2001 	subne	r2, ip, #1
   2bc68:	0a000003 	beq	2bc7c <memcpy+0xd8>
   2bc6c:	e4d1c001 	ldrb	ip, [r1], #1
   2bc70:	e1510003 	cmp	r1, r3
   2bc74:	e5e2c001 	strb	ip, [r2, #1]!
   2bc78:	1afffffb 	bne	2bc6c <memcpy+0xc8>
   2bc7c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   2bc80:	e12fff1e 	bx	lr
   2bc84:	e3520000 	cmp	r2, #0
   2bc88:	e1a0c000 	mov	ip, r0
   2bc8c:	e2422001 	sub	r2, r2, #1
   2bc90:	012fff1e 	bxeq	lr
   2bc94:	e2822001 	add	r2, r2, #1
   2bc98:	e0813002 	add	r3, r1, r2
   2bc9c:	e24c2001 	sub	r2, ip, #1
   2bca0:	e4d1c001 	ldrb	ip, [r1], #1
   2bca4:	e1510003 	cmp	r1, r3
   2bca8:	e5e2c001 	strb	ip, [r2, #1]!
   2bcac:	1afffffb 	bne	2bca0 <memcpy+0xfc>
   2bcb0:	e12fff1e 	bx	lr
   2bcb4:	e2422001 	sub	r2, r2, #1
   2bcb8:	e1a0c000 	mov	ip, r0
   2bcbc:	eafffff4 	b	2bc94 <memcpy+0xf0>

Disassembly of section .data:

0002bcc0 <ulCriticalNesting>:
volatile unsigned long ulCriticalNesting = 9999UL;
   2bcc0:	0000270f 	andeq	r2, r0, pc, lsl #14

0002bcc4 <xNextTaskUnblockTime>:
PRIVILEGED_DATA static portTickType xNextTaskUnblockTime						= ( portTickType ) portMAX_DELAY;
   2bcc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

0002bcc8 <next>:
int next = 1;
   2bcc8:	00000001 	andeq	r0, r0, r1

0002bccc <xFreeBytesRemaining>:
static size_t xFreeBytesRemaining = ( ( size_t ) configTOTAL_HEAP_SIZE ) & ( ( size_t ) ~portBYTE_ALIGNMENT_MASK );
   2bccc:	00001000 	andeq	r1, r0, r0

0002bcd0 <s_ucNextAddress>:
   2bcd0:	00000001 	andeq	r0, r0, r1

0002bcd4 <s_nDeviceNumber>:
   2bcd4:	0000000a 	andeq	r0, r0, sl

0002bcd8 <s_nDeviceNumber>:
   2bcd8:	00000001 	andeq	r0, r0, r1

0002bcdc <s_nDeviceNumber>:
   2bcdc:	00000001 	andeq	r0, r0, r1

0002bce0 <s_nDeviceNumber>:
   2bce0:	00000001 	andeq	r0, r0, r1

0002bce4 <s_nDeviceNumber>:
   2bce4:	00000001 	andeq	r0, r0, r1

0002bce8 <writeBuf.4735>:
	...
   2bcf0:	27ff0000 	ldrbcs	r0, [pc, r0]!
   2bcf4:	ff320010 			; <UNDEFINED> instruction: 0xff320010
   2bcf8:	32001027 	andcc	r1, r0, #39	; 0x27
   2bcfc:	001027ff 			; <UNDEFINED> instruction: 0x001027ff
   2bd00:	1027ff32 	eorne	pc, r7, r2, lsr pc	; <UNPREDICTABLE>
   2bd04:	00003200 	andeq	r3, r0, r0, lsl #4
	...

0002bd18 <s_nDeviceNumber>:
   2bd18:	00000001 	andeq	r0, r0, r1

0002bd1c <s_BlockBucket>:
   2bd1c:	00000040 	andeq	r0, r0, r0, asr #32
   2bd20:	00000000 	andeq	r0, r0, r0
   2bd24:	00000400 	andeq	r0, r0, r0, lsl #8
   2bd28:	00000000 	andeq	r0, r0, r0
   2bd2c:	00001000 	andeq	r1, r0, r0
   2bd30:	00000000 	andeq	r0, r0, r0
   2bd34:	00004000 	andeq	r4, r0, r0
   2bd38:	00000000 	andeq	r0, r0, r0
   2bd3c:	00040000 	andeq	r0, r4, r0
   2bd40:	00000000 	andeq	r0, r0, r0
   2bd44:	00080000 	andeq	r0, r8, r0
	...

Disassembly of section .bss:

0002bd60 <g_bStarted>:
   2bd60:	00000000 	andeq	r0, r0, r0

0002bd64 <pxReadyCoRoutineLists>:
	...

0002bd8c <xDelayedCoRoutineList1>:
	...

0002bda0 <xDelayedCoRoutineList2>:
	...

0002bdb4 <pxDelayedCoRoutineList>:
static xList * pxDelayedCoRoutineList;									/*< Points to the delayed co-routine list currently being used. */
   2bdb4:	00000000 	andeq	r0, r0, r0

0002bdb8 <pxOverflowDelayedCoRoutineList>:
static xList * pxOverflowDelayedCoRoutineList;							/*< Points to the delayed co-routine list currently being used to hold co-routines that have overflowed the current tick count. */
   2bdb8:	00000000 	andeq	r0, r0, r0

0002bdbc <xPendingReadyCoRoutineList>:
	...

0002bdd0 <pxCurrentCoRoutine>:
corCRCB * pxCurrentCoRoutine = NULL;
   2bdd0:	00000000 	andeq	r0, r0, r0

0002bdd4 <uxTopCoRoutineReadyPriority>:
static unsigned portBASE_TYPE uxTopCoRoutineReadyPriority = 0;
   2bdd4:	00000000 	andeq	r0, r0, r0

0002bdd8 <xCoRoutineTickCount>:
static portTickType xCoRoutineTickCount = 0, xLastTickCount = 0, xPassedTicks = 0;
   2bdd8:	00000000 	andeq	r0, r0, r0

0002bddc <xLastTickCount>:
   2bddc:	00000000 	andeq	r0, r0, r0

0002bde0 <xPassedTicks>:
   2bde0:	00000000 	andeq	r0, r0, r0

0002bde4 <pxCurrentTCB>:
PRIVILEGED_DATA tskTCB * volatile pxCurrentTCB = NULL;
   2bde4:	00000000 	andeq	r0, r0, r0

0002bde8 <pxReadyTasksLists>:
	...

0002be4c <xDelayedTaskList1>:
	...

0002be60 <xDelayedTaskList2>:
	...

0002be74 <pxDelayedTaskList>:
PRIVILEGED_DATA static xList * volatile pxDelayedTaskList ;				/*< Points to the delayed task list currently being used. */
   2be74:	00000000 	andeq	r0, r0, r0

0002be78 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static xList * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
   2be78:	00000000 	andeq	r0, r0, r0

0002be7c <xPendingReadyList>:
	...

0002be90 <xTasksWaitingTermination>:
	...

0002bea4 <uxTasksDeleted>:
	PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxTasksDeleted = ( unsigned portBASE_TYPE ) 0U;
   2bea4:	00000000 	andeq	r0, r0, r0

0002bea8 <xSuspendedTaskList>:
	...

0002bebc <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxCurrentNumberOfTasks 	= ( unsigned portBASE_TYPE ) 0U;
   2bebc:	00000000 	andeq	r0, r0, r0

0002bec0 <xTickCount>:
PRIVILEGED_DATA static volatile portTickType xTickCount 						= ( portTickType ) 0U;
   2bec0:	00000000 	andeq	r0, r0, r0

0002bec4 <uxTopUsedPriority>:
PRIVILEGED_DATA static unsigned portBASE_TYPE uxTopUsedPriority	 				= tskIDLE_PRIORITY;
   2bec4:	00000000 	andeq	r0, r0, r0

0002bec8 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxTopReadyPriority 		= tskIDLE_PRIORITY;
   2bec8:	00000000 	andeq	r0, r0, r0

0002becc <xSchedulerRunning>:
PRIVILEGED_DATA static volatile signed portBASE_TYPE xSchedulerRunning 			= pdFALSE;
   2becc:	00000000 	andeq	r0, r0, r0

0002bed0 <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxSchedulerSuspended	 	= ( unsigned portBASE_TYPE ) pdFALSE;
   2bed0:	00000000 	andeq	r0, r0, r0

0002bed4 <uxMissedTicks>:
PRIVILEGED_DATA static volatile unsigned portBASE_TYPE uxMissedTicks 			= ( unsigned portBASE_TYPE ) 0U;
   2bed4:	00000000 	andeq	r0, r0, r0

0002bed8 <xMissedYield>:
PRIVILEGED_DATA static volatile portBASE_TYPE xMissedYield 						= ( portBASE_TYPE ) pdFALSE;
   2bed8:	00000000 	andeq	r0, r0, r0

0002bedc <xNumOfOverflows>:
PRIVILEGED_DATA static volatile portBASE_TYPE xNumOfOverflows 					= ( portBASE_TYPE ) 0;
   2bedc:	00000000 	andeq	r0, r0, r0

0002bee0 <uxTaskNumber>:
PRIVILEGED_DATA static unsigned portBASE_TYPE uxTaskNumber 						= ( unsigned portBASE_TYPE ) 0U;
   2bee0:	00000000 	andeq	r0, r0, r0

0002bee4 <g_VectorTable>:
	...

0002c124 <enabled>:
	...

0002c130 <loaded>:
#ifndef _VIDEO_H_
#define _VIDEO_H_
char loaded;
   2c130:	00000000 	andeq	r0, r0, r0

0002c134 <position_x>:
int position_x = 0;
   2c134:	00000000 	andeq	r0, r0, r0

0002c138 <position_y>:
	...

0002c140 <xHeap>:
	...

0002d140 <xStart>:
	...

0002d148 <pxEnd>:
static xBlockLink xStart, *pxEnd = NULL;
   2d148:	00000000 	andeq	r0, r0, r0

0002d14c <allocated>:
size_t allocated = 0;
   2d14c:	00000000 	andeq	r0, r0, r0

0002d150 <s_pLibrary>:
   2d150:	00000000 	andeq	r0, r0, r0

0002d154 <s_pThis>:
   2d154:	00000000 	andeq	r0, r0, r0

0002d158 <s_nDeviceNumber>:
   2d158:	00000000 	andeq	r0, r0, r0

0002d15c <s_nCriticalLevel>:
   2d15c:	00000000 	andeq	r0, r0, r0

0002d160 <s_bWereEnabled>:
   2d160:	00000000 	andeq	r0, r0, r0

0002d164 <s_pNextBlock>:
   2d164:	00000000 	andeq	r0, r0, r0

0002d168 <s_pBlockLimit>:
   2d168:	00000000 	andeq	r0, r0, r0

0002d16c <s_pNextPage>:
   2d16c:	00000000 	andeq	r0, r0, r0

0002d170 <s_pPageLimit>:
   2d170:	00000000 	andeq	r0, r0, r0

0002d174 <s_PageBucket>:
   2d174:	00000000 	andeq	r0, r0, r0

0002d178 <s_pThis>:
   2d178:	00000000 	andeq	r0, r0, r0

0002d17c <s_nCriticalLevel>:
   2d17c:	00000000 	andeq	r0, r0, r0

0002d180 <s_bWereEnabled>:
   2d180:	00000000 	andeq	r0, r0, r0

0002d184 <s_pThis>:
   2d184:	00000000 	andeq	r0, r0, r0

0002d188 <s_pThis>:
   2d188:	00000000 	andeq	r0, r0, r0

0002d18c <s_pThis>:
   2d18c:	00000000 	andeq	r0, r0, r0

0002d190 <SCREEN_WIDTH>:
   2d190:	00000000 	andeq	r0, r0, r0

0002d194 <SCREEN_HEIGHT>:
int SCREEN_HEIGHT;
   2d194:	00000000 	andeq	r0, r0, r0

0002d198 <framebuffer>:
	...

0002d1a0 <mailbuffer>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000212 	andeq	r0, r0, r2, lsl r2
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000059 	andeq	r0, r0, r9, asr r0
      10:	0001270c 	andeq	r2, r1, ip, lsl #14
      14:	0000cf00 	andeq	ip, r0, r0, lsl #30
      18:	01000000 	mrseq	r0, (UNDEF: 0)
      1c:	00034400 	andeq	r4, r3, r0, lsl #8
      20:	00000000 	andeq	r0, r0, r0
      24:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      28:	00746e69 	rsbseq	r6, r4, r9, ror #28
      2c:	68070403 	stmdavs	r7, {r0, r1, sl}
      30:	03000006 	movweq	r0, #6
      34:	00f90508 	rscseq	r0, r9, r8, lsl #10
      38:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      3c:	00018104 	andeq	r8, r1, r4, lsl #2
      40:	00a80400 	adceq	r0, r8, r0, lsl #8
      44:	47020000 	strmi	r0, [r2, -r0]
      48:	00004d10 	andeq	r4, r0, r0, lsl sp
      4c:	53040500 	movwpl	r0, #17664	; 0x4500
      50:	06000000 	streq	r0, [r0], -r0
      54:	0000005e 	andeq	r0, r0, lr, asr r0
      58:	00005e07 	andeq	r5, r0, r7, lsl #28
      5c:	04080000 	streq	r0, [r8], #-0
      60:	00000c04 	andeq	r0, r0, r4, lsl #24
      64:	1c610300 	stclne	3, cr0, [r1], #-0
      68:	0000006c 	andeq	r0, r0, ip, rrx
      6c:	63070403 	movwvs	r0, #29699	; 0x7403
      70:	03000006 	movweq	r0, #6
      74:	00fe0504 	rscseq	r0, lr, r4, lsl #10
      78:	01030000 	mrseq	r0, (UNDEF: 3)
      7c:	0008a806 	andeq	sl, r8, r6, lsl #16
      80:	07020300 	streq	r0, [r2, -r0, lsl #6]
      84:	00000095 	muleq	r0, r5, r0
      88:	006c0405 	rsbeq	r0, ip, r5, lsl #8
      8c:	45090000 	strmi	r0, [r9, #-0]
      90:	24000000 	strcs	r0, [r0], #-0
      94:	11105601 	tstne	r0, r1, lsl #12
      98:	0a000001 	beq	a4 <_start-0x7f5c>
      9c:	00444f4c 	subeq	r4, r4, ip, asr #30
      a0:	6c105701 	ldcvs	7, cr5, [r0], {1}
      a4:	00000000 	andeq	r0, r0, r0
      a8:	4c41560a 	mcrrmi	6, 0, r5, r1, cr10
      ac:	10580100 	subsne	r0, r8, r0, lsl #2
      b0:	0000006c 	andeq	r0, r0, ip, rrx
      b4:	54430a04 	strbpl	r0, [r3], #-2564	; 0xfffff5fc
      b8:	5901004c 	stmdbpl	r1, {r2, r3, r6}
      bc:	00006c10 	andeq	r6, r0, r0, lsl ip
      c0:	430a0800 	movwmi	r0, #43008	; 0xa800
      c4:	0100494c 	tsteq	r0, ip, asr #18
      c8:	006c105a 	rsbeq	r1, ip, sl, asr r0
      cc:	0a0c0000 	beq	3000d4 <mailbuffer+0x2d2f34>
      d0:	00534952 	subseq	r4, r3, r2, asr r9
      d4:	6c105b01 			; <UNDEFINED> instruction: 0x6c105b01
      d8:	10000000 	andne	r0, r0, r0
      dc:	53494d0a 	movtpl	r4, #40202	; 0x9d0a
      e0:	105c0100 	subsne	r0, ip, r0, lsl #2
      e4:	0000006c 	andeq	r0, r0, ip, rrx
      e8:	4c520a14 	vmovmi	r0, r2, s8, s9
      ec:	5d010044 	stcpl	0, cr0, [r1, #-272]	; 0xfffffef0
      f0:	00006c10 	andeq	r6, r0, r0, lsl ip
      f4:	440a1800 	strmi	r1, [sl], #-2048	; 0xfffff800
      f8:	01005649 	tsteq	r0, r9, asr #12
      fc:	006c105e 	rsbeq	r1, ip, lr, asr r0
     100:	0a1c0000 	beq	700108 <mailbuffer+0x6d2f68>
     104:	00544e43 	subseq	r4, r4, r3, asr #28
     108:	6c105f01 	ldcvs	15, cr5, [r0], {1}
     10c:	20000000 	andcs	r0, r0, r0
     110:	00460400 	subeq	r0, r6, r0, lsl #8
     114:	60010000 	andvs	r0, r1, r0
     118:	00008e03 	andeq	r8, r0, r3, lsl #28
     11c:	01110b00 	tsteq	r1, r0, lsl #22
     120:	140c0000 	strne	r0, [ip], #-0
     124:	01000001 	tsteq	r0, r1
     128:	013a2c62 	teqeq	sl, r2, ror #24
     12c:	03050000 	movweq	r0, #20480	; 0x5000
     130:	0002826c 	andeq	r8, r2, ip, ror #4
     134:	011d0405 	tsteq	sp, r5, lsl #8
     138:	340d0000 	strcc	r0, [sp], #-0
     13c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     140:	00000019 	andeq	r0, r0, r9, lsl r0
     144:	ac0deb01 			; <UNDEFINED> instruction: 0xac0deb01
     148:	98000102 	stmdals	r0, {r1, r8}
     14c:	01000000 	mrseq	r0, (UNDEF: 0)
     150:	0001659c 	muleq	r1, ip, r5
     154:	01b70c00 			; <UNDEFINED> instruction: 0x01b70c00
     158:	ed010000 	stc	0, cr0, [r1, #-0]
     15c:	00006c10 	andeq	r6, r0, r0, lsl ip
     160:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     164:	00c60f00 	sbceq	r0, r6, r0, lsl #30
     168:	dd010000 	stcle	0, cr0, [r1, #-0]
     16c:	01027406 	tsteq	r2, r6, lsl #8
     170:	00003800 	andeq	r3, r0, r0, lsl #16
     174:	9a9c0100 	bls	fe70057c <_estack+0xf66f057c>
     178:	10000001 	andne	r0, r0, r1
     17c:	00000000 	andeq	r0, r0, r0
     180:	2c1ddd01 	ldccs	13, cr13, [sp], {1}
     184:	02000000 	andeq	r0, r0, #0
     188:	30107491 	mulscc	r0, r1, r4
     18c:	01000000 	mrseq	r0, (UNDEF: 0)
     190:	005e29dd 	ldrsbeq	r2, [lr], #-157	; 0xffffff63
     194:	91020000 	mrsls	r0, (UNDEF: 2)
     198:	b4110070 	ldrlt	r0, [r1], #-112	; 0xffffff90
     19c:	01000000 	mrseq	r0, (UNDEF: 0)
     1a0:	025c06d0 	subseq	r0, ip, #208, 12	; 0xd000000
     1a4:	00180001 	andseq	r0, r8, r1
     1a8:	9c010000 	stcls	0, cr0, [r1], {-0}
     1ac:	00018d12 	andeq	r8, r1, r2, lsl sp
     1b0:	0fc20100 	svceq	0x00c20100
     1b4:	00000073 	andeq	r0, r0, r3, ror r0
     1b8:	00010240 	andeq	r0, r1, r0, asr #4
     1bc:	0000001c 	andeq	r0, r0, ip, lsl r0
     1c0:	a1139c01 	tstge	r3, r1, lsl #24
     1c4:	01000001 	tsteq	r0, r1
     1c8:	00881177 	addeq	r1, r8, r7, ror r1
     1cc:	00000000 	andeq	r0, r0, r0
     1d0:	02400001 	subeq	r0, r0, #1
     1d4:	9c010000 	stcls	0, cr0, [r1], {-0}
     1d8:	00011a10 	andeq	r1, r1, r0, lsl sl
     1dc:	38770100 	ldmdacc	r7!, {r8}^
     1e0:	00000088 	andeq	r0, r0, r8, lsl #1
     1e4:	106c9102 	rsbne	r9, ip, r2, lsl #2
     1e8:	00000005 	andeq	r0, r0, r5
     1ec:	41527701 	cmpmi	r2, r1, lsl #14
     1f0:	02000000 	andeq	r0, r0, #0
     1f4:	07106891 			; <UNDEFINED> instruction: 0x07106891
     1f8:	01000001 	tsteq	r0, r1
     1fc:	005e6077 	subseq	r6, lr, r7, ror r0
     200:	91020000 	mrsls	r0, (UNDEF: 2)
     204:	00370c64 	eorseq	r0, r7, r4, ror #24
     208:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
     20c:	00008811 	andeq	r8, r0, r1, lsl r8
     210:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     214:	01980000 	orrseq	r0, r8, r0
     218:	00040000 	andeq	r0, r4, r0
     21c:	00000133 	andeq	r0, r0, r3, lsr r1
     220:	00590104 	subseq	r0, r9, r4, lsl #2
     224:	c60c0000 	strgt	r0, [ip], -r0
     228:	cf000001 	svcgt	0x00000001
     22c:	44000000 	strmi	r0, [r0], #-0
     230:	a4000103 	strge	r0, [r0], #-259	; 0xfffffefd
     234:	cc000002 	stcgt	0, cr0, [r0], {2}
     238:	02000001 	andeq	r0, r0, #1
     23c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     240:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
     244:	00066807 	andeq	r6, r6, r7, lsl #16
     248:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
     24c:	000000f9 	strdeq	r0, [r0], -r9
     250:	81040803 	tsthi	r4, r3, lsl #16
     254:	03000001 	movweq	r0, #1
     258:	06630704 	strbteq	r0, [r3], -r4, lsl #14
     25c:	41040000 	mrsmi	r0, (UNDEF: 4)
     260:	03000000 	movweq	r0, #0
     264:	00fe0504 	rscseq	r0, lr, r4, lsl #10
     268:	36050000 	strcc	r0, [r5], -r0
     26c:	01000002 	tsteq	r0, r2
     270:	00481865 	subeq	r1, r8, r5, ror #16
     274:	03050000 	movweq	r0, #20480	; 0x5000
     278:	0002bcc0 	andeq	fp, r2, r0, asr #25
     27c:	00029305 	andeq	r9, r2, r5, lsl #6
     280:	05730100 	ldrbeq	r0, [r3, #-256]!	; 0xffffff00
     284:	00000025 	andeq	r0, r0, r5, lsr #32
     288:	bd600305 	stcllt	3, cr0, [r0, #-20]!	; 0xffffffec
     28c:	48060002 	stmdami	r6, {r1}
     290:	01000002 	tsteq	r0, r2
     294:	058406fe 	streq	r0, [r4, #1790]	; 0x6fe
     298:	00640001 	rsbeq	r0, r4, r1
     29c:	9c010000 	stcls	0, cr0, [r1], {-0}
     2a0:	00022306 	andeq	r2, r2, r6, lsl #6
     2a4:	06ee0100 	strbteq	r0, [lr], r0, lsl #2
     2a8:	00010540 	andeq	r0, r1, r0, asr #10
     2ac:	00000044 	andeq	r0, r0, r4, asr #32
     2b0:	85079c01 	strhi	r9, [r7, #-3073]	; 0xfffff3ff
     2b4:	01000002 	tsteq	r0, r2
     2b8:	049006c1 	ldreq	r0, [r0], #1729	; 0x6c1
     2bc:	00b00001 	adcseq	r0, r0, r1
     2c0:	9c010000 	stcls	0, cr0, [r1], {-0}
     2c4:	000000fb 	strdeq	r0, [r0], -fp
     2c8:	01049008 	tsteq	r4, r8
     2cc:	00005800 	andeq	r5, r0, r0, lsl #16
     2d0:	0000d800 	andeq	sp, r0, r0, lsl #16
     2d4:	029e0900 	addseq	r0, lr, #0, 18
     2d8:	c2010000 	andgt	r0, r1, #0
     2dc:	00010102 	andeq	r0, r1, r2, lsl #2
     2e0:	02360900 	eorseq	r0, r6, #0, 18
     2e4:	c2010000 	andgt	r0, r1, #0
     2e8:	00004802 	andeq	r4, r0, r2, lsl #16
     2ec:	ec0a0000 	stc	0, cr0, [sl], {-0}
     2f0:	48000104 	stmdami	r0, {r2, r8}
     2f4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     2f8:	0000029e 	muleq	r0, lr, r2
     2fc:	0102c401 	tsteq	r2, r1, lsl #8
     300:	09000001 	stmdbeq	r0, {r0}
     304:	00000236 	andeq	r0, r0, r6, lsr r2
     308:	4802c401 	stmdami	r2, {r0, sl, lr, pc}
     30c:	00000000 	andeq	r0, r0, r0
     310:	06040b00 	streq	r0, [r4], -r0, lsl #22
     314:	04000001 	streq	r0, [r0], #-1
     318:	000000fb 	strdeq	r0, [r0], -fp
     31c:	02710d0c 	rsbseq	r0, r1, #12, 26	; 0x300
     320:	9c010000 	stcls	0, cr0, [r1], {-0}
     324:	0103dc06 	tsteq	r3, r6, lsl #24
     328:	0000b400 	andeq	fp, r0, r0, lsl #8
     32c:	669c0100 	ldrvs	r0, [ip], r0, lsl #2
     330:	08000001 	stmdaeq	r0, {r0}
     334:	000103e0 	andeq	r0, r1, r0, ror #7
     338:	00000058 	andeq	r0, r0, r8, asr r0
     33c:	00000143 	andeq	r0, r0, r3, asr #2
     340:	00029e09 	andeq	r9, r2, r9, lsl #28
     344:	02a40100 	adceq	r0, r4, #0, 2
     348:	00000101 	andeq	r0, r0, r1, lsl #2
     34c:	00023609 	andeq	r3, r2, r9, lsl #12
     350:	02a40100 	adceq	r0, r4, #0, 2
     354:	00000048 	andeq	r0, r0, r8, asr #32
     358:	043c0a00 	ldrteq	r0, [ip], #-2560	; 0xfffff600
     35c:	00480001 	subeq	r0, r8, r1
     360:	9e090000 	cdpls	0, 0, cr0, cr9, cr0, {0}
     364:	01000002 	tsteq	r0, r2
     368:	010102aa 	smlatbeq	r1, sl, r2, r0
     36c:	36090000 	strcc	r0, [r9], -r0
     370:	01000002 	tsteq	r0, r2
     374:	004802aa 	subeq	r0, r8, sl, lsr #5
     378:	00000000 	andeq	r0, r0, r0
     37c:	00025a0e 	andeq	r5, r2, lr, lsl #20
     380:	06750100 	ldrbteq	r0, [r5], -r0, lsl #2
     384:	00010344 	andeq	r0, r1, r4, asr #6
     388:	00000098 	muleq	r0, r8, r0
     38c:	6c0a9c01 	stcvs	12, cr9, [sl], {1}
     390:	48000103 	stmdami	r0, {r0, r1, r8}
     394:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     398:	0000029e 	muleq	r0, lr, r2
     39c:	01028801 	tsteq	r2, r1, lsl #16
     3a0:	09000001 	stmdbeq	r0, {r0}
     3a4:	00000236 	andeq	r0, r0, r6, lsr r2
     3a8:	48028801 	stmdami	r2, {r0, fp, pc}
     3ac:	00000000 	andeq	r0, r0, r0
     3b0:	04ab0000 	strteq	r0, [fp], #0
     3b4:	00040000 	andeq	r0, r4, r0
     3b8:	00000218 	andeq	r0, r0, r8, lsl r2
     3bc:	00590104 	subseq	r0, r9, r4, lsl #2
     3c0:	3f0c0000 	svccc	0x000c0000
     3c4:	cf000004 	svcgt	0x00000004
     3c8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
     3cc:	64000105 	strvs	r0, [r0], #-261	; 0xfffffefb
     3d0:	af000007 	svcge	0x00000007
     3d4:	02000002 	andeq	r0, r0, #2
     3d8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     3dc:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
     3e0:	00066807 	andeq	r6, r6, r7, lsl #16
     3e4:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
     3e8:	000000f9 	strdeq	r0, [r0], -r9
     3ec:	81040803 	tsthi	r4, r3, lsl #16
     3f0:	04000001 	streq	r0, [r0], #-1
     3f4:	000c0504 	andeq	r0, ip, r4, lsl #10
     3f8:	61030000 	mrsvs	r0, (UNDEF: 3)
     3fc:	00004f1c 	andeq	r4, r0, ip, lsl pc
     400:	07040300 	streq	r0, [r4, -r0, lsl #6]
     404:	00000663 	andeq	r0, r0, r3, ror #12
     408:	00004f06 	andeq	r4, r0, r6, lsl #30
     40c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
     410:	000000fe 	strdeq	r0, [r0], -lr
     414:	00035f07 	andeq	r5, r3, r7, lsl #30
     418:	69021400 	stmdbvs	r2, {sl, ip}
     41c:	0000b108 	andeq	fp, r0, r8, lsl #2
     420:	03120800 	tsteq	r2, #0, 16
     424:	6b020000 	blvs	8042c <mailbuffer+0x5328c>
     428:	0000430f 	andeq	r4, r0, pc, lsl #6
     42c:	fd080000 	stc2	0, cr0, [r8, #-0]
     430:	02000004 	andeq	r0, r0, #4
     434:	00b61f6c 	adcseq	r1, r6, ip, ror #30
     438:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
     43c:	000003cf 	andeq	r0, r0, pc, asr #7
     440:	b61f6d02 	ldrlt	r6, [pc], -r2, lsl #26
     444:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     448:	00033408 	andeq	r3, r3, r8, lsl #8
     44c:	096e0200 	stmdbeq	lr!, {r9}^
     450:	00000041 	andeq	r0, r0, r1, asr #32
     454:	02dd080c 	sbcseq	r0, sp, #12, 16	; 0xc0000
     458:	6f020000 	svcvs	0x00020000
     45c:	00004109 	andeq	r4, r0, r9, lsl #2
     460:	06001000 	streq	r1, [r0], -r0
     464:	00000062 	andeq	r0, r0, r2, rrx
     468:	00b10409 	adcseq	r0, r1, r9, lsl #8
     46c:	10050000 	andne	r0, r5, r0
     470:	02000005 	andeq	r0, r0, #5
     474:	00621b71 	rsbeq	r1, r2, r1, ror fp
     478:	bc060000 	stclt	0, cr0, [r6], {-0}
     47c:	07000000 	streq	r0, [r0, -r0]
     480:	0000056c 	andeq	r0, r0, ip, ror #10
     484:	0873020c 	ldmdaeq	r3!, {r2, r3, r9}^
     488:	00000102 	andeq	r0, r0, r2, lsl #2
     48c:	00031208 	andeq	r1, r3, r8, lsl #4
     490:	0f750200 	svceq	0x00750200
     494:	00000043 	andeq	r0, r0, r3, asr #32
     498:	04fd0800 	ldrbteq	r0, [sp], #2048	; 0x800
     49c:	76020000 	strvc	r0, [r2], -r0
     4a0:	0000b61e 	andeq	fp, r0, lr, lsl r6
     4a4:	cf080400 	svcgt	0x00080400
     4a8:	02000003 	andeq	r0, r0, #3
     4ac:	00b61e77 	adcseq	r1, r6, r7, ror lr
     4b0:	00080000 	andeq	r0, r8, r0
     4b4:	00048405 	andeq	r8, r4, r5, lsl #8
     4b8:	20790200 	rsbscs	r0, r9, r0, lsl #4
     4bc:	000000cd 	andeq	r0, r0, sp, asr #1
     4c0:	00010206 	andeq	r0, r1, r6, lsl #4
     4c4:	057c0700 	ldrbeq	r0, [ip, #-1792]!	; 0xfffff900
     4c8:	02140000 	andseq	r0, r4, #0
     4cc:	0148107e 	hvceq	33038	; 0x810e
     4d0:	a3080000 	movwge	r0, #32768	; 0x8000
     4d4:	02000004 	andeq	r0, r0, #4
     4d8:	00562280 	subseq	r2, r6, r0, lsl #5
     4dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     4e0:	0000030a 	andeq	r0, r0, sl, lsl #6
     4e4:	48178102 	ldmdami	r7, {r1, r8, pc}
     4e8:	04000001 	streq	r0, [r0], #-1
     4ec:	00032b08 	andeq	r2, r3, r8, lsl #22
     4f0:	19820200 	stmibne	r2, {r9}
     4f4:	0000010e 	andeq	r0, r0, lr, lsl #2
     4f8:	04090008 	streq	r0, [r9], #-8
     4fc:	000000c8 	andeq	r0, r0, r8, asr #1
     500:	00099005 	andeq	r9, r9, r5
     504:	03830200 	orreq	r0, r3, #0, 4
     508:	00000113 	andeq	r0, r0, r3, lsl r1
     50c:	00014e0a 	andeq	r4, r1, sl, lsl #28
     510:	06010300 	streq	r0, [r1], -r0, lsl #6
     514:	000008a8 	andeq	r0, r0, r8, lsr #17
     518:	95070203 	strls	r0, [r7, #-515]	; 0xfffffdfd
     51c:	05000000 	streq	r0, [r0, #-0]
     520:	000004d1 	ldrdeq	r0, [r0], -r1
     524:	41105304 	tstmi	r0, r4, lsl #6
     528:	05000000 	streq	r0, [r0, #-0]
     52c:	00000602 	andeq	r0, r0, r2, lsl #12
     530:	85105604 	ldrhi	r5, [r0, #-1540]	; 0xfffff9fc
     534:	09000001 	stmdbeq	r0, {r0}
     538:	00018b04 	andeq	r8, r1, r4, lsl #22
     53c:	019b0b00 	orrseq	r0, fp, r0, lsl #22
     540:	6d0c0000 	stcvs	0, cr0, [ip, #-0]
     544:	0c000001 	stceq	0, cr0, [r0], {1}
     548:	0000004f 	andeq	r0, r0, pc, asr #32
     54c:	03ea0700 	mvneq	r0, #0, 14
     550:	04380000 	ldrteq	r0, [r8], #-0
     554:	01f71058 	mvnseq	r1, r8, asr r0
     558:	e9080000 	stmdb	r8, {}	; <UNPREDICTABLE>
     55c:	04000002 	streq	r0, [r0], #-2
     560:	0179155a 	cmneq	r9, sl, asr r5
     564:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     568:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
     56c:	bc0f5b04 			; <UNDEFINED> instruction: 0xbc0f5b04
     570:	04000000 	streq	r0, [r0], #-0
     574:	0005df08 	andeq	sp, r5, r8, lsl #30
     578:	0f5c0400 	svceq	0x005c0400
     57c:	000000bc 	strheq	r0, [r0], -ip
     580:	04c60818 	strbeq	r0, [r6], #2072	; 0x818
     584:	5d040000 	stcpl	0, cr0, [r4, #-0]
     588:	00004f1a 	andeq	r4, r0, sl, lsl pc
     58c:	37082c00 	strcc	r2, [r8, -r0, lsl #24]
     590:	04000004 	streq	r0, [r0], #-4
     594:	004f1a5e 	subeq	r1, pc, lr, asr sl	; <UNPREDICTABLE>
     598:	08300000 	ldmdaeq	r0!, {}	; <UNPREDICTABLE>
     59c:	00000545 	andeq	r0, r0, r5, asr #10
     5a0:	66135f04 	ldrvs	r5, [r3], -r4, lsl #30
     5a4:	34000001 	strcc	r0, [r0], #-1
     5a8:	03c00500 	biceq	r0, r0, #0, 10
     5ac:	60040000 	andvs	r0, r4, r0
     5b0:	00019b03 	andeq	r9, r1, r3, lsl #22
     5b4:	014e0d00 	cmpeq	lr, r0, lsl #26
     5b8:	02130000 	andseq	r0, r3, #0
     5bc:	2c0e0000 	stccs	0, cr0, [lr], {-0}
     5c0:	01000000 	mrseq	r0, (UNDEF: 0)
     5c4:	04210f00 	strteq	r0, [r1], #-3840	; 0xfffff100
     5c8:	51010000 	mrspl	r0, (UNDEF: 1)
     5cc:	0002030e 	andeq	r0, r2, lr, lsl #6
     5d0:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
     5d4:	0f0002bd 	svceq	0x000002bd
     5d8:	00000392 	muleq	r0, r2, r3
     5dc:	4e0e5201 	cdpmi	2, 0, cr5, cr14, cr1, {0}
     5e0:	05000001 	streq	r0, [r0, #-1]
     5e4:	02bd8c03 	adcseq	r8, sp, #768	; 0x300
     5e8:	03a90f00 			; <UNDEFINED> instruction: 0x03a90f00
     5ec:	53010000 	movwpl	r0, #4096	; 0x1000
     5f0:	00014e0e 	andeq	r4, r1, lr, lsl #28
     5f4:	a0030500 	andge	r0, r3, r0, lsl #10
     5f8:	0f0002bd 	svceq	0x000002bd
     5fc:	00000582 	andeq	r0, r0, r2, lsl #11
     600:	5b105401 	blpl	41560c <mailbuffer+0x3e846c>
     604:	05000002 	streq	r0, [r0, #-2]
     608:	02bdb403 	adcseq	fp, sp, #50331648	; 0x3000000
     60c:	4e040900 	vmlami.f16	s0, s8, s0	; <UNPREDICTABLE>
     610:	0a000001 	beq	61c <_start-0x79e4>
     614:	0000025b 	andeq	r0, r0, fp, asr r2
     618:	00054d0f 	andeq	r4, r5, pc, lsl #26
     61c:	10550100 	subsne	r0, r5, r0, lsl #2
     620:	0000025b 	andeq	r0, r0, fp, asr r2
     624:	bdb80305 	ldclt	3, cr0, [r8, #20]!
     628:	e20f0002 	and	r0, pc, #2
     62c:	01000004 	tsteq	r0, r4
     630:	014e0e56 	cmpeq	lr, r6, asr lr
     634:	03050000 	movweq	r0, #20480	; 0x5000
     638:	0002bdbc 			; <UNDEFINED> instruction: 0x0002bdbc
     63c:	0004b310 	andeq	fp, r4, r0, lsl r3
     640:	0b590100 	bleq	1640a48 <mailbuffer+0x16138a8>
     644:	0000029c 	muleq	r0, ip, r2
     648:	bdd00305 	ldcllt	3, cr0, [r0, #20]
     64c:	04090002 	streq	r0, [r9], #-2
     650:	000001f7 	strdeq	r0, [r0], -r7
     654:	0003760f 	andeq	r7, r3, pc, lsl #12
     658:	1f5a0100 	svcne	0x005a0100
     65c:	0000004f 	andeq	r0, r0, pc, asr #32
     660:	bdd40305 	ldcllt	3, cr0, [r4, #20]
     664:	4b0f0002 	blmi	3c0674 <mailbuffer+0x3934d4>
     668:	01000003 	tsteq	r0, r3
     66c:	0043155b 	subeq	r1, r3, fp, asr r5
     670:	03050000 	movweq	r0, #20480	; 0x5000
     674:	0002bdd8 	ldrdeq	fp, [r2], -r8
     678:	00033c0f 	andeq	r3, r3, pc, lsl #24
     67c:	2e5b0100 	rdfcse	f0, f3, f0
     680:	00000043 	andeq	r0, r0, r3, asr #32
     684:	bddc0305 	ldcllt	3, cr0, [ip, #20]
     688:	fd0f0002 	stc2	0, cr0, [pc, #-8]	; 688 <_start-0x7978>
     68c:	01000002 	tsteq	r0, r2
     690:	0043425b 	subeq	r4, r3, fp, asr r2
     694:	03050000 	movweq	r0, #20480	; 0x5000
     698:	0002bde0 	andeq	fp, r2, r0, ror #27
     69c:	00040311 	andeq	r0, r4, r1, lsl r3
     6a0:	016c0100 	cmneq	ip, r0, lsl #2
     6a4:	00005b16 	andeq	r5, r0, r6, lsl fp
     6a8:	010cc800 	tsteq	ip, r0, lsl #16
     6ac:	00008c00 	andeq	r8, r0, r0, lsl #24
     6b0:	369c0100 	ldrcc	r0, [ip], r0, lsl #2
     6b4:	12000003 	andne	r0, r0, #3
     6b8:	00000504 	andeq	r0, r0, r4, lsl #10
     6bc:	42016c01 	andmi	r6, r1, #256	; 0x100
     6c0:	00000336 	andeq	r0, r0, r6, lsr r3
     6c4:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
     6c8:	000002ab 	andeq	r0, r0, fp, lsr #5
     6cc:	0a016e01 	beq	5bed8 <mailbuffer+0x2ed38>
     6d0:	0000029c 	muleq	r0, ip, r2
     6d4:	13709102 	cmnne	r0, #-2147483648	; 0x80000000
     6d8:	00000c37 	andeq	r0, r0, r7, lsr ip
     6dc:	16016f01 	strne	r6, [r1], -r1, lsl #30
     6e0:	0000005b 	andeq	r0, r0, fp, asr r0
     6e4:	00749102 	rsbseq	r9, r4, r2, lsl #2
     6e8:	015a0409 	cmpeq	sl, r9, lsl #8
     6ec:	c3140000 	tstgt	r4, #0
     6f0:	01000005 	tsteq	r0, r5
     6f4:	200d0158 	andcs	r0, sp, r8, asr r1
     6f8:	a800010c 	stmdage	r0, {r2, r3, r8}
     6fc:	01000000 	mrseq	r0, (UNDEF: 0)
     700:	0003649c 	muleq	r3, ip, r4
     704:	04c61300 	strbeq	r1, [r6], #768	; 0x300
     708:	5a010000 	bpl	40710 <mailbuffer+0x13570>
     70c:	004f1801 	subeq	r1, pc, r1, lsl #16
     710:	91020000 	mrsls	r0, (UNDEF: 2)
     714:	1a150074 	bne	5408ec <mailbuffer+0x51374c>
     718:	01000005 	tsteq	r0, r5
     71c:	f806013a 			; <UNDEFINED> instruction: 0xf806013a
     720:	2800010a 	stmdacs	r0, {r1, r3, r8}
     724:	01000001 	tsteq	r0, r1
     728:	0003969c 	muleq	r3, ip, r6
     72c:	0b601600 	bleq	1805f34 <mailbuffer+0x17d8d94>
     730:	00780001 	rsbseq	r0, r8, r1
     734:	6a130000 	bvs	4c073c <mailbuffer+0x49359c>
     738:	01000003 	tsteq	r0, r3
     73c:	6102014f 	tstvs	r2, pc, asr #2
     740:	02000002 	andeq	r0, r0, #2
     744:	00007491 	muleq	r0, r1, r4
     748:	0005ee14 	andeq	lr, r5, r4, lsl lr
     74c:	01000100 	mrseq	r0, (UNDEF: 16)
     750:	0109280d 	tsteq	r9, sp, lsl #16
     754:	0001d000 	andeq	sp, r1, r0
     758:	d89c0100 	ldmle	ip, {r8}
     75c:	13000003 	movwne	r0, #3
     760:	000003c8 	andeq	r0, r0, r8, asr #7
     764:	0a010201 	beq	40f70 <mailbuffer+0x13dd0>
     768:	0000029c 	muleq	r0, ip, r2
     76c:	16709102 	ldrbtne	r9, [r0], -r2, lsl #2
     770:	0001098c 	andeq	r0, r1, ip, lsl #19
     774:	00000028 	andeq	r0, r0, r8, lsr #32
     778:	0002bb13 	andeq	fp, r2, r3, lsl fp
     77c:	010d0100 	mrseq	r0, (UNDEF: 29)
     780:	00025b0c 	andeq	r5, r2, ip, lsl #22
     784:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     788:	99170000 	ldmdbls	r7, {}	; <UNPREDICTABLE>
     78c:	01000005 	tsteq	r0, r5
     790:	083c0de9 	ldmdaeq	ip!, {r0, r3, r5, r6, r7, r8, sl, fp}
     794:	00ec0001 	rsceq	r0, ip, r1
     798:	9c010000 	stcls	0, cr0, [r1], {-0}
     79c:	00000408 	andeq	r0, r0, r8, lsl #8
     7a0:	01084c16 	tsteq	r8, r6, lsl ip
     7a4:	0000b400 	andeq	fp, r0, r0, lsl #8
     7a8:	02ab0f00 	adceq	r0, fp, #0, 30
     7ac:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
     7b0:	00029c0c 	andeq	r9, r2, ip, lsl #24
     7b4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     7b8:	c2180000 	andsgt	r0, r8, #0
     7bc:	01000002 	tsteq	r0, r2
     7c0:	075806c3 	ldrbeq	r0, [r8, -r3, asr #13]
     7c4:	00e40001 	rsceq	r0, r4, r1
     7c8:	9c010000 	stcls	0, cr0, [r1], {-0}
     7cc:	0000044c 	andeq	r0, r0, ip, asr #8
     7d0:	00031d19 	andeq	r1, r3, r9, lsl sp
     7d4:	2fc30100 	svccs	0x00c30100
     7d8:	00000043 	andeq	r0, r0, r3, asr #32
     7dc:	196c9102 	stmdbne	ip!, {r1, r8, ip, pc}^
     7e0:	00000504 	andeq	r0, r0, r4, lsl #10
     7e4:	5b45c301 	blpl	11713f0 <mailbuffer+0x1144250>
     7e8:	02000002 	andeq	r0, r0, #2
     7ec:	2d0f6891 	stccs	8, cr6, [pc, #-580]	; 5b0 <_start-0x7a50>
     7f0:	01000005 	tsteq	r0, r5
     7f4:	00430ec5 	subeq	r0, r3, r5, asr #29
     7f8:	91020000 	mrsls	r0, (UNDEF: 2)
     7fc:	921a0074 	andsls	r0, sl, #116	; 0x74
     800:	01000004 	tsteq	r0, r4
     804:	005b168a 	subseq	r1, fp, sl, lsl #13
     808:	05f00000 	ldrbeq	r0, [r0, #0]!
     80c:	01680001 	cmneq	r8, r1
     810:	9c010000 	stcls	0, cr0, [r1], {-0}
     814:	0003da19 	andeq	sp, r3, r9, lsl sl
     818:	398a0100 	stmibcc	sl, {r8}
     81c:	00000179 	andeq	r0, r0, r9, ror r1
     820:	196c9102 	stmdbne	ip!, {r1, r8, ip, pc}^
     824:	000004c6 	andeq	r0, r0, r6, asr #9
     828:	4f618a01 	svcmi	0x00618a01
     82c:	02000000 	andeq	r0, r0, #0
     830:	37196891 			; <UNDEFINED> instruction: 0x37196891
     834:	01000004 	tsteq	r0, r4
     838:	004f848a 	subeq	r8, pc, sl, lsl #9
     83c:	91020000 	mrsls	r0, (UNDEF: 2)
     840:	0c370f64 	ldceq	15, cr0, [r7], #-400	; 0xfffffe70
     844:	8c010000 	stchi	0, cr0, [r1], {-0}
     848:	00005b16 	andeq	r5, r0, r6, lsl fp
     84c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     850:	0005390f 	andeq	r3, r5, pc, lsl #18
     854:	0a8d0100 	beq	fe340c5c <_estack+0xf6330c5c>
     858:	0000029c 	muleq	r0, ip, r2
     85c:	00709102 	rsbseq	r9, r0, r2, lsl #2
     860:	000b3b00 	andeq	r3, fp, r0, lsl #22
     864:	b9000400 	stmdblt	r0, {sl}
     868:	04000003 	streq	r0, [r0], #-3
     86c:	00005901 	andeq	r5, r0, r1, lsl #18
     870:	09f30c00 	ldmibeq	r3!, {sl, fp}^
     874:	00cf0000 	sbceq	r0, pc, r0
     878:	0d540000 	ldcleq	0, cr0, [r4, #-0]
     87c:	029c0001 	addseq	r0, ip, #1
     880:	05930000 	ldreq	r0, [r3]
     884:	04020000 	streq	r0, [r2], #-0
     888:	00066807 	andeq	r6, r6, r7, lsl #16
     88c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
     890:	00746e69 	rsbseq	r6, r4, r9, ror #28
     894:	f9050802 			; <UNDEFINED> instruction: 0xf9050802
     898:	02000000 	andeq	r0, r0, #0
     89c:	01810408 	orreq	r0, r1, r8, lsl #8
     8a0:	01020000 	mrseq	r0, (UNDEF: 2)
     8a4:	0008a806 	andeq	sl, r8, r6, lsl #16
     8a8:	08010200 	stmdaeq	r1, {r9}
     8ac:	000008a6 	andeq	r0, r0, r6, lsr #17
     8b0:	c2050202 	andgt	r0, r5, #536870912	; 0x20000000
     8b4:	02000008 	andeq	r0, r0, #8
     8b8:	00950702 	addseq	r0, r5, r2, lsl #14
     8bc:	04020000 	streq	r0, [r2], #-0
     8c0:	0000fe05 	andeq	pc, r0, r5, lsl #28
     8c4:	07040200 	streq	r0, [r4, -r0, lsl #4]
     8c8:	00000663 	andeq	r0, r0, r3, ror #12
     8cc:	00006404 	andeq	r6, r0, r4, lsl #8
     8d0:	07080200 	streq	r0, [r8, -r0, lsl #4]
     8d4:	0000065e 	andeq	r0, r0, lr, asr r6
     8d8:	00088705 	andeq	r8, r8, r5, lsl #14
     8dc:	0d0c0200 	sfmeq	f0, 4, [ip, #-0]
     8e0:	0000002c 	andeq	r0, r0, ip, lsr #32
     8e4:	00088005 	andeq	r8, r8, r5
     8e8:	0e2c0300 	cdpeq	3, 2, cr0, cr12, cr0, {0}
     8ec:	0000005d 	andeq	r0, r0, sp, asr r0
     8f0:	00098705 	andeq	r8, r9, r5, lsl #14
     8f4:	0e720300 	cdpeq	3, 7, cr0, cr2, cr0, {0}
     8f8:	0000005d 	andeq	r0, r0, sp, asr r0
     8fc:	00081206 	andeq	r1, r8, r6, lsl #4
     900:	01650400 	cmneq	r5, r0, lsl #8
     904:	00002517 	andeq	r2, r0, r7, lsl r5
     908:	03040700 	movweq	r0, #18176	; 0x4700
     90c:	00ca03a6 	sbceq	r0, sl, r6, lsr #7
     910:	0c080000 	stceq	0, cr0, [r8], {-0}
     914:	03000008 	movweq	r0, #8
     918:	009b0ca8 	addseq	r0, fp, r8, lsr #25
     91c:	be080000 	cdplt	0, 0, cr0, cr8, cr0, {0}
     920:	03000007 	movweq	r0, #7
     924:	00ca13a9 	sbceq	r1, sl, r9, lsr #7
     928:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     92c:	00000048 	andeq	r0, r0, r8, asr #32
     930:	000000da 	ldrdeq	r0, [r0], -sl
     934:	0000250a 	andeq	r2, r0, sl, lsl #10
     938:	0b000300 	bleq	1540 <_start-0x6ac0>
     93c:	09a30308 	stmibeq	r3!, {r3, r8, r9}
     940:	000000fe 	strdeq	r0, [r0], -lr
     944:	0009650c 	andeq	r6, r9, ip, lsl #10
     948:	07a50300 	streq	r0, [r5, r0, lsl #6]!
     94c:	0000002c 	andeq	r0, r0, ip, lsr #32
     950:	096d0c00 	stmdbeq	sp!, {sl, fp}^
     954:	aa030000 	bge	c095c <mailbuffer+0x937bc>
     958:	0000a805 	andeq	sl, r0, r5, lsl #16
     95c:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
     960:	000008ee 	andeq	r0, r0, lr, ror #17
     964:	da03ab03 	ble	eb578 <mailbuffer+0xbe3d8>
     968:	05000000 	streq	r0, [r0, #-0]
     96c:	00000781 	andeq	r0, r0, r1, lsl #15
     970:	771baf03 	ldrvc	sl, [fp, -r3, lsl #30]
     974:	0d000000 	stceq	0, cr0, [r0, #-0]
     978:	1e040e04 	cdpne	14, 0, cr0, cr4, cr4, {0}
     97c:	02000001 	andeq	r0, r0, #1
     980:	08af0801 	stmiaeq	pc!, {r0, fp}	; <UNPREDICTABLE>
     984:	1e0f0000 	cdpne	0, 0, cr0, cr15, cr0, {0}
     988:	05000001 	streq	r0, [r0, #-1]
     98c:	000009cb 	andeq	r0, r0, fp, asr #19
     990:	64191605 	ldrvs	r1, [r9], #-1541	; 0xfffff9fb
     994:	10000000 	andne	r0, r0, r0
     998:	00000792 	muleq	r0, r2, r7
     99c:	082f0518 	stmdaeq	pc!, {r3, r4, r8, sl}	; <UNPREDICTABLE>
     9a0:	00000190 	muleq	r0, r0, r1
     9a4:	00090f0c 	andeq	r0, r9, ip, lsl #30
     9a8:	13310500 	teqne	r1, #0, 10
     9ac:	00000190 	muleq	r0, r0, r1
     9b0:	6b5f1100 	blvs	17c4db8 <mailbuffer+0x1797c18>
     9b4:	07320500 	ldreq	r0, [r2, -r0, lsl #10]!
     9b8:	0000002c 	andeq	r0, r0, ip, lsr #32
     9bc:	09500c04 	ldmdbeq	r0, {r2, sl, fp}^
     9c0:	32050000 	andcc	r0, r5, #0
     9c4:	00002c0b 	andeq	r2, r0, fp, lsl #24
     9c8:	7b0c0800 	blvc	3029d0 <mailbuffer+0x2d5830>
     9cc:	05000007 	streq	r0, [r0, #-7]
     9d0:	002c1432 	eoreq	r1, ip, r2, lsr r4
     9d4:	0c0c0000 	stceq	0, cr0, [ip], {-0}
     9d8:	00000a51 	andeq	r0, r0, r1, asr sl
     9dc:	2c1b3205 	lfmcs	f3, 4, [fp], {5}
     9e0:	10000000 	andne	r0, r0, r0
     9e4:	00785f11 	rsbseq	r5, r8, r1, lsl pc
     9e8:	960b3305 	strls	r3, [fp], -r5, lsl #6
     9ec:	14000001 	strne	r0, [r0], #-1
     9f0:	36040e00 	strcc	r0, [r4], -r0, lsl #28
     9f4:	09000001 	stmdbeq	r0, {r0}
     9f8:	0000012a 	andeq	r0, r0, sl, lsr #2
     9fc:	000001a6 	andeq	r0, r0, r6, lsr #3
     a00:	0000250a 	andeq	r2, r0, sl, lsl #10
     a04:	10000000 	andne	r0, r0, r0
     a08:	000007b9 			; <UNDEFINED> instruction: 0x000007b9
     a0c:	08370524 	ldmdaeq	r7!, {r2, r5, r8, sl}
     a10:	00000229 	andeq	r0, r0, r9, lsr #4
     a14:	0006b40c 	andeq	fp, r6, ip, lsl #8
     a18:	09390500 	ldmdbeq	r9!, {r8, sl}
     a1c:	0000002c 	andeq	r0, r0, ip, lsr #32
     a20:	09960c00 	ldmibeq	r6, {sl, fp}
     a24:	3a050000 	bcc	140a2c <mailbuffer+0x11388c>
     a28:	00002c09 	andeq	r2, r0, r9, lsl #24
     a2c:	c90c0400 	stmdbgt	ip, {sl}
     a30:	05000006 	streq	r0, [r0, #-6]
     a34:	002c093b 	eoreq	r0, ip, fp, lsr r9
     a38:	0c080000 	stceq	0, cr0, [r8], {-0}
     a3c:	00000adc 	ldrdeq	r0, [r0], -ip
     a40:	2c093c05 	stccs	12, cr3, [r9], {5}
     a44:	0c000000 	stceq	0, cr0, [r0], {-0}
     a48:	00085a0c 	andeq	r5, r8, ip, lsl #20
     a4c:	093d0500 	ldmdbeq	sp!, {r8, sl}
     a50:	0000002c 	andeq	r0, r0, ip, lsr #32
     a54:	083a0c10 	ldmdaeq	sl!, {r4, sl, fp}
     a58:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
     a5c:	00002c09 	andeq	r2, r0, r9, lsl #24
     a60:	560c1400 	strpl	r1, [ip], -r0, lsl #8
     a64:	0500000a 	streq	r0, [r0, #-10]
     a68:	002c093f 	eoreq	r0, ip, pc, lsr r9
     a6c:	0c180000 	ldceq	0, cr0, [r8], {-0}
     a70:	000008cc 	andeq	r0, r0, ip, asr #17
     a74:	2c094005 	stccs	0, cr4, [r9], {5}
     a78:	1c000000 	stcne	0, cr0, [r0], {-0}
     a7c:	000aa30c 	andeq	sl, sl, ip, lsl #6
     a80:	09410500 	stmdbeq	r1, {r8, sl}^
     a84:	0000002c 	andeq	r0, r0, ip, lsr #32
     a88:	d8120020 	ldmdale	r2, {r5}
     a8c:	08000006 	stmdaeq	r0, {r1, r2}
     a90:	084a0501 	stmdaeq	sl, {r0, r8, sl}^
     a94:	0000026e 	andeq	r0, r0, lr, ror #4
     a98:	00075a0c 	andeq	r5, r7, ip, lsl #20
     a9c:	0a4b0500 	beq	12c1ea4 <mailbuffer+0x1294d04>
     aa0:	0000026e 	andeq	r0, r0, lr, ror #4
     aa4:	06130c00 	ldreq	r0, [r3], -r0, lsl #24
     aa8:	4c050000 	stcmi	0, cr0, [r5], {-0}
     aac:	00026e09 	andeq	r6, r2, r9, lsl #28
     ab0:	b2138000 	andslt	r8, r3, #0
     ab4:	05000009 	streq	r0, [r0, #-9]
     ab8:	012a0a4e 			; <UNDEFINED> instruction: 0x012a0a4e
     abc:	01000000 	mrseq	r0, (UNDEF: 0)
     ac0:	0006fd13 	andeq	pc, r6, r3, lsl sp	; <UNPREDICTABLE>
     ac4:	0a510500 	beq	1441ecc <mailbuffer+0x1414d2c>
     ac8:	0000012a 	andeq	r0, r0, sl, lsr #2
     acc:	09000104 	stmdbeq	r0, {r2, r8}
     ad0:	00000116 	andeq	r0, r0, r6, lsl r1
     ad4:	0000027e 	andeq	r0, r0, lr, ror r2
     ad8:	0000250a 	andeq	r2, r0, sl, lsl #10
     adc:	12001f00 	andne	r1, r0, #0, 30
     ae0:	00000863 	andeq	r0, r0, r3, ror #16
     ae4:	5d050190 	stfpls	f0, [r5, #-576]	; 0xfffffdc0
     ae8:	0002c108 	andeq	ip, r2, r8, lsl #2
     aec:	090f0c00 	stmdbeq	pc, {sl, fp}	; <UNPREDICTABLE>
     af0:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
     af4:	0002c112 	andeq	ip, r2, r2, lsl r1
     af8:	200c0000 	andcs	r0, ip, r0
     afc:	05000009 	streq	r0, [r0, #-9]
     b00:	002c065f 	eoreq	r0, ip, pc, asr r6
     b04:	0c040000 	stceq	0, cr0, [r4], {-0}
     b08:	00000762 	andeq	r0, r0, r2, ror #14
     b0c:	c7096105 	strgt	r6, [r9, -r5, lsl #2]
     b10:	08000002 	stmdaeq	r0, {r1}
     b14:	0006d80c 	andeq	sp, r6, ip, lsl #16
     b18:	1e620500 	cdpne	5, 6, cr0, cr2, cr0, {0}
     b1c:	00000229 	andeq	r0, r0, r9, lsr #4
     b20:	040e0088 	streq	r0, [lr], #-136	; 0xffffff78
     b24:	0000027e 	andeq	r0, r0, lr, ror r2
     b28:	0002d709 	andeq	sp, r2, r9, lsl #14
     b2c:	0002d700 	andeq	sp, r2, r0, lsl #14
     b30:	00250a00 	eoreq	r0, r5, r0, lsl #20
     b34:	001f0000 	andseq	r0, pc, r0
     b38:	02dd040e 	sbcseq	r0, sp, #234881024	; 0xe000000
     b3c:	10140000 	andsne	r0, r4, r0
     b40:	000008d6 	ldrdeq	r0, [r0], -r6
     b44:	08750508 	ldmdaeq	r5!, {r3, r8, sl}^
     b48:	00000306 	andeq	r0, r0, r6, lsl #6
     b4c:	0006c30c 	andeq	ip, r6, ip, lsl #6
     b50:	11760500 	cmnne	r6, r0, lsl #10
     b54:	00000306 	andeq	r0, r0, r6, lsl #6
     b58:	061f0c00 	ldreq	r0, [pc], -r0, lsl #24
     b5c:	77050000 	strvc	r0, [r5, -r0]
     b60:	00002c06 	andeq	r2, r0, r6, lsl #24
     b64:	0e000400 	cfcpyseq	mvf0, mvf0
     b68:	00004804 	andeq	r4, r0, r4, lsl #16
     b6c:	08f91000 	ldmeq	r9!, {ip}^
     b70:	05680000 	strbeq	r0, [r8, #-0]!
     b74:	044f08b5 	strbeq	r0, [pc], #-2229	; b7c <_start-0x7484>
     b78:	5f110000 	svcpl	0x00110000
     b7c:	b6050070 			; <UNDEFINED> instruction: 0xb6050070
     b80:	00030612 	andeq	r0, r3, r2, lsl r6
     b84:	5f110000 	svcpl	0x00110000
     b88:	b7050072 	smlsdxlt	r5, r2, r0, r0
     b8c:	00002c07 	andeq	r2, r0, r7, lsl #24
     b90:	5f110400 	svcpl	0x00110400
     b94:	b8050077 	stmdalt	r5, {r0, r1, r2, r4, r5, r6}
     b98:	00002c07 	andeq	r2, r0, r7, lsl #24
     b9c:	f60c0800 			; <UNDEFINED> instruction: 0xf60c0800
     ba0:	05000006 	streq	r0, [r0, #-6]
     ba4:	004f09b9 	strheq	r0, [pc], #-153	; <UNPREDICTABLE>
     ba8:	0c0c0000 	stceq	0, cr0, [ip], {-0}
     bac:	000007d5 	ldrdeq	r0, [r0], -r5
     bb0:	4f09ba05 	svcmi	0x0009ba05
     bb4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     bb8:	66625f11 	uqadd16vs	r5, r2, r1
     bbc:	11bb0500 			; <UNDEFINED> instruction: 0x11bb0500
     bc0:	000002de 	ldrdeq	r0, [r0], -lr
     bc4:	06750c10 			; <UNDEFINED> instruction: 0x06750c10
     bc8:	bc050000 	stclt	0, cr0, [r5], {-0}
     bcc:	00002c07 	andeq	r2, r0, r7, lsl #24
     bd0:	e60c1800 	str	r1, [ip], -r0, lsl #16
     bd4:	05000006 	streq	r0, [r0, #-6]
     bd8:	01160ac3 	tsteq	r6, r3, asr #21
     bdc:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
     be0:	000007a9 	andeq	r0, r0, r9, lsr #15
     be4:	c11dc505 	tstgt	sp, r5, lsl #10
     be8:	20000005 	andcs	r0, r0, r5
     bec:	0008330c 	andeq	r3, r8, ip, lsl #6
     bf0:	1dc70500 	cfstr64ne	mvdx0, [r7]
     bf4:	000005eb 	andeq	r0, r0, fp, ror #11
     bf8:	09750c24 	ldmdbeq	r5!, {r2, r5, sl, fp}^
     bfc:	ca050000 	bgt	140c04 <mailbuffer+0x113a64>
     c00:	00060f0d 	andeq	r0, r6, sp, lsl #30
     c04:	bd0c2800 	stclt	8, cr2, [ip, #-0]
     c08:	0500000a 	streq	r0, [r0, #-10]
     c0c:	062909cb 	strteq	r0, [r9], -fp, asr #19
     c10:	112c0000 			; <UNDEFINED> instruction: 0x112c0000
     c14:	0062755f 	rsbeq	r7, r2, pc, asr r5
     c18:	de11ce05 	cdple	14, 1, cr12, cr1, cr5, {0}
     c1c:	30000002 	andcc	r0, r0, r2
     c20:	70755f11 	rsbsvc	r5, r5, r1, lsl pc
     c24:	12cf0500 	sbcne	r0, pc, #0, 10
     c28:	00000306 	andeq	r0, r0, r6, lsl #6
     c2c:	755f1138 	ldrbvc	r1, [pc, #-312]	; afc <_start-0x7504>
     c30:	d0050072 	andle	r0, r5, r2, ror r0
     c34:	00002c07 	andeq	r2, r0, r7, lsl #24
     c38:	bd0c3c00 	stclt	12, cr3, [ip, #-0]
     c3c:	05000006 	streq	r0, [r0, #-6]
     c40:	062f11d3 			; <UNDEFINED> instruction: 0x062f11d3
     c44:	0c400000 	mareq	acc0, r0, r0
     c48:	00000a95 	muleq	r0, r5, sl
     c4c:	3f11d405 	svccc	0x0011d405
     c50:	43000006 	movwmi	r0, #6
     c54:	626c5f11 	rsbvs	r5, ip, #17, 30	; 0x44
     c58:	11d70500 	bicsne	r0, r7, r0, lsl #10
     c5c:	000002de 	ldrdeq	r0, [r0], -lr
     c60:	070c0c44 	streq	r0, [ip, -r4, asr #24]
     c64:	da050000 	ble	140c6c <mailbuffer+0x113acc>
     c68:	00002c07 	andeq	r2, r0, r7, lsl #24
     c6c:	1d0c4c00 	stcne	12, cr4, [ip, #-0]
     c70:	05000007 	streq	r0, [r0, #-7]
     c74:	00830adb 	ldrdeq	r0, [r3], fp
     c78:	0c500000 	mraeq	r0, r0, acc0
     c7c:	00000638 	andeq	r0, r0, r8, lsr r6
     c80:	6d12de05 	ldcvs	14, cr13, [r2, #-20]	; 0xffffffec
     c84:	54000004 	strpl	r0, [r0], #-4
     c88:	0008190c 	andeq	r1, r8, ip, lsl #18
     c8c:	0ce20500 	cfstr64eq	mvdx0, [r2]
     c90:	0000010a 	andeq	r0, r0, sl, lsl #2
     c94:	09010c58 	stmdbeq	r1, {r3, r4, r6, sl, fp}
     c98:	e4050000 	str	r0, [r5], #-0
     c9c:	0000fe0e 	andeq	pc, r0, lr, lsl #28
     ca0:	2b0c5c00 	blcs	317ca8 <mailbuffer+0x2eab08>
     ca4:	05000008 	streq	r0, [r0, #-8]
     ca8:	002c09e5 	eoreq	r0, ip, r5, ror #19
     cac:	00640000 	rsbeq	r0, r4, r0
     cb0:	00002c15 	andeq	r2, r0, r5, lsl ip
     cb4:	00046d00 	andeq	r6, r4, r0, lsl #26
     cb8:	046d1600 	strbteq	r1, [sp], #-1536	; 0xfffffa00
     cbc:	16160000 	ldrne	r0, [r6], -r0
     cc0:	16000001 	strne	r0, [r0], -r1
     cc4:	00000118 	andeq	r0, r0, r8, lsl r1
     cc8:	00002c16 	andeq	r2, r0, r6, lsl ip
     ccc:	040e0000 	streq	r0, [lr], #-0
     cd0:	00000478 	andeq	r0, r0, r8, ror r4
     cd4:	00046d0f 	andeq	r6, r4, pc, lsl #26
     cd8:	09581700 	ldmdbeq	r8, {r8, r9, sl, ip}^
     cdc:	04280000 	strteq	r0, [r8], #-0
     ce0:	08026005 	stmdaeq	r2, {r0, r2, sp, lr}
     ce4:	000005c1 	andeq	r0, r0, r1, asr #11
     ce8:	0008bb18 	andeq	fp, r8, r8, lsl fp
     cec:	02620500 	rsbeq	r0, r2, #0, 10
     cf0:	00002c07 	andeq	r2, r0, r7, lsl #24
     cf4:	05180000 	ldreq	r0, [r8, #-0]
     cf8:	05000007 	streq	r0, [r0, #-7]
     cfc:	9b0b0267 	blls	2c16a0 <mailbuffer+0x294500>
     d00:	04000006 	streq	r0, [r0], #-6
     d04:	0007c518 	andeq	ip, r7, r8, lsl r5
     d08:	02670500 	rsbeq	r0, r7, #0, 10
     d0c:	00069b14 	andeq	r9, r6, r4, lsl fp
     d10:	8a180800 	bhi	602d18 <mailbuffer+0x5d5b78>
     d14:	05000007 	streq	r0, [r0, #-7]
     d18:	9b1e0267 	blls	7816bc <mailbuffer+0x75451c>
     d1c:	0c000006 	stceq	0, cr0, [r0], {6}
     d20:	00091b18 	andeq	r1, r9, r8, lsl fp
     d24:	02690500 	rsbeq	r0, r9, #0, 10
     d28:	00002c08 	andeq	r2, r0, r8, lsl #24
     d2c:	2d181000 	ldccs	0, cr1, [r8, #-0]
     d30:	05000006 	streq	r0, [r0, #-6]
     d34:	9b08026a 	blls	2016e4 <mailbuffer+0x1d4544>
     d38:	14000008 	strne	r0, [r0], #-8
     d3c:	00093718 	andeq	r3, r9, r8, lsl r7
     d40:	026d0500 	rsbeq	r0, sp, #0, 10
     d44:	00002c07 	andeq	r2, r0, r7, lsl #24
     d48:	25183000 	ldrcs	r3, [r8, #-0]
     d4c:	05000009 	streq	r0, [r0, #-9]
     d50:	b016026e 	andslt	r0, r6, lr, ror #4
     d54:	34000008 	strcc	r0, [r0], #-8
     d58:	00087518 	andeq	r7, r8, r8, lsl r5
     d5c:	02700500 	rsbseq	r0, r0, #0, 10
     d60:	00002c07 	andeq	r2, r0, r7, lsl #24
     d64:	2d183800 	ldccs	8, cr3, [r8, #-0]
     d68:	05000009 	streq	r0, [r0, #-9]
     d6c:	c10a0272 	tstgt	sl, r2, ror r2
     d70:	3c000008 	stccc	0, cr0, [r0], {8}
     d74:	00080418 	andeq	r0, r8, r8, lsl r4
     d78:	02750500 	rsbseq	r0, r5, #0, 10
     d7c:	00019013 	andeq	r9, r1, r3, lsl r0
     d80:	af184000 	svcge	0x00184000
     d84:	05000007 	streq	r0, [r0, #-7]
     d88:	2c070276 	sfmcs	f0, 4, [r7], {118}	; 0x76
     d8c:	44000000 	strmi	r0, [r0], #-0
     d90:	000ad718 	andeq	sp, sl, r8, lsl r7
     d94:	02770500 	rsbseq	r0, r7, #0, 10
     d98:	00019013 	andeq	r9, r1, r3, lsl r0
     d9c:	dd184800 	ldcle	8, cr4, [r8, #-0]
     da0:	05000008 	streq	r0, [r0, #-8]
     da4:	c7140278 			; <UNDEFINED> instruction: 0xc7140278
     da8:	4c000008 	stcmi	0, cr0, [r0], {8}
     dac:	0007cd18 	andeq	ip, r7, r8, lsl sp
     db0:	027b0500 	rsbseq	r0, fp, #0, 10
     db4:	00002c07 	andeq	r2, r0, r7, lsl #24
     db8:	15185000 	ldrne	r5, [r8, #-0]
     dbc:	05000007 	streq	r0, [r0, #-7]
     dc0:	1809027c 	stmdane	r9, {r2, r3, r4, r5, r6, r9}
     dc4:	54000001 	strpl	r0, [r0], #-1
     dc8:	0008b418 	andeq	fp, r8, r8, lsl r4
     dcc:	029f0500 	addseq	r0, pc, #0, 10
     dd0:	00087607 	andeq	r7, r8, r7, lsl #12
     dd4:	63195800 	tstvs	r9, #0, 16
     dd8:	05000008 	streq	r0, [r0, #-8]
     ddc:	c11302a3 	tstgt	r3, r3, lsr #5
     de0:	48000002 	stmdami	r0, {r1}
     de4:	07e21901 	strbeq	r1, [r2, r1, lsl #18]!
     de8:	a4050000 	strge	r0, [r5], #-0
     dec:	027e1202 	rsbseq	r1, lr, #536870912	; 0x20000000
     df0:	014c0000 	mrseq	r0, (UNDEF: 76)
     df4:	000a7919 	andeq	r7, sl, r9, lsl r9
     df8:	02a80500 	adceq	r0, r8, #0, 10
     dfc:	0008d80c 	andeq	sp, r8, ip, lsl #16
     e00:	1902dc00 	stmdbne	r2, {sl, fp, ip, lr, pc}
     e04:	000006ee 	andeq	r0, r0, lr, ror #13
     e08:	1002ad05 	andne	sl, r2, r5, lsl #26
     e0c:	0000065c 	andeq	r0, r0, ip, asr r6
     e10:	d31902e0 	tstle	r9, #224, 4
     e14:	05000006 	streq	r0, [r0, #-6]
     e18:	e40a02af 	str	r0, [sl], #-687	; 0xfffffd51
     e1c:	ec000008 	stc	0, cr0, [r0], {8}
     e20:	040e0002 	streq	r0, [lr], #-2
     e24:	0000044f 	andeq	r0, r0, pc, asr #8
     e28:	00002c15 	andeq	r2, r0, r5, lsl ip
     e2c:	0005e500 	andeq	lr, r5, r0, lsl #10
     e30:	046d1600 	strbteq	r1, [sp], #-1536	; 0xfffffa00
     e34:	16160000 	ldrne	r0, [r6], -r0
     e38:	16000001 	strne	r0, [r0], -r1
     e3c:	000005e5 	andeq	r0, r0, r5, ror #11
     e40:	00002c16 	andeq	r2, r0, r6, lsl ip
     e44:	040e0000 	streq	r0, [lr], #-0
     e48:	00000125 	andeq	r0, r0, r5, lsr #2
     e4c:	05c7040e 	strbeq	r0, [r7, #1038]	; 0x40e
     e50:	8f150000 	svchi	0x00150000
     e54:	0f000000 	svceq	0x00000000
     e58:	16000006 	strne	r0, [r0], -r6
     e5c:	0000046d 	andeq	r0, r0, sp, ror #8
     e60:	00011616 	andeq	r1, r1, r6, lsl r6
     e64:	008f1600 	addeq	r1, pc, r0, lsl #12
     e68:	2c160000 	ldccs	0, cr0, [r6], {-0}
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	05f1040e 	ldrbeq	r0, [r1, #1038]!	; 0x40e
     e74:	2c150000 	ldccs	0, cr0, [r5], {-0}
     e78:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
     e7c:	16000006 	strne	r0, [r0], -r6
     e80:	0000046d 	andeq	r0, r0, sp, ror #8
     e84:	00011616 	andeq	r1, r1, r6, lsl r6
     e88:	040e0000 	streq	r0, [lr], #-0
     e8c:	00000615 	andeq	r0, r0, r5, lsl r6
     e90:	00004809 	andeq	r4, r0, r9, lsl #16
     e94:	00063f00 	andeq	r3, r6, r0, lsl #30
     e98:	00250a00 	eoreq	r0, r5, r0, lsl #20
     e9c:	00020000 	andeq	r0, r2, r0
     ea0:	00004809 	andeq	r4, r0, r9, lsl #16
     ea4:	00064f00 	andeq	r4, r6, r0, lsl #30
     ea8:	00250a00 	eoreq	r0, r5, r0, lsl #20
     eac:	00000000 	andeq	r0, r0, r0
     eb0:	0008e706 	andeq	lr, r8, r6, lsl #14
     eb4:	011f0500 	tsteq	pc, r0, lsl #10
     eb8:	00030c1a 	andeq	r0, r3, sl, lsl ip
     ebc:	0a601a00 	beq	18076c4 <mailbuffer+0x17da524>
     ec0:	050c0000 	streq	r0, [ip, #-0]
     ec4:	95080123 	strls	r0, [r8, #-291]	; 0xfffffedd
     ec8:	18000006 	stmdane	r0, {r1, r2}
     ecc:	0000090f 	andeq	r0, r0, pc, lsl #18
     ed0:	11012505 	tstne	r1, r5, lsl #10
     ed4:	00000695 	muleq	r0, r5, r6
     ed8:	07db1800 	ldrbeq	r1, [fp, r0, lsl #16]
     edc:	26050000 	strcs	r0, [r5], -r0
     ee0:	002c0701 	eoreq	r0, ip, r1, lsl #14
     ee4:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     ee8:	00000915 	andeq	r0, r0, r5, lsl r9
     eec:	0b012705 	bleq	4ab08 <mailbuffer+0x1d968>
     ef0:	0000069b 	muleq	r0, fp, r6
     ef4:	040e0008 	streq	r0, [lr], #-8
     ef8:	0000065c 	andeq	r0, r0, ip, asr r6
     efc:	064f040e 	strbeq	r0, [pc], -lr, lsl #8
     f00:	251a0000 	ldrcs	r0, [sl, #-0]
     f04:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     f08:	08013f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp, ip, sp}
     f0c:	000006da 	ldrdeq	r0, [r0], -sl
     f10:	00095f18 	andeq	r5, r9, r8, lsl pc
     f14:	01400500 	cmpeq	r0, r0, lsl #10
     f18:	0006da12 	andeq	sp, r6, r2, lsl sl
     f1c:	9f180000 	svcls	0x00180000
     f20:	05000009 	streq	r0, [r0, #-9]
     f24:	da120141 	ble	481430 <mailbuffer+0x454290>
     f28:	06000006 	streq	r0, [r0], -r6
     f2c:	0009bb18 	andeq	fp, r9, r8, lsl fp
     f30:	01420500 	cmpeq	r2, r0, lsl #10
     f34:	00005612 	andeq	r5, r0, r2, lsl r6
     f38:	09000c00 	stmdbeq	r0, {sl, fp}
     f3c:	00000056 	andeq	r0, r0, r6, asr r0
     f40:	000006ea 	andeq	r0, r0, sl, ror #13
     f44:	0000250a 	andeq	r2, r0, sl, lsl #10
     f48:	1b000200 	blne	1750 <_start-0x68b0>
     f4c:	028005d0 	addeq	r0, r0, #208, 10	; 0x34000000
     f50:	0007ff07 	andeq	pc, r7, r7, lsl #30
     f54:	0a341800 	beq	d06f5c <mailbuffer+0xcd9dbc>
     f58:	82050000 	andhi	r0, r5, #0
     f5c:	00251802 	eoreq	r1, r5, r2, lsl #16
     f60:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     f64:	000009a5 	andeq	r0, r0, r5, lsr #19
     f68:	12028305 	andne	r8, r2, #335544320	; 0x14000000
     f6c:	00000118 	andeq	r0, r0, r8, lsl r1
     f70:	07f71804 	ldrbeq	r1, [r7, r4, lsl #16]!
     f74:	84050000 	strhi	r0, [r5], #-0
     f78:	07ff1002 	ldrbeq	r1, [pc, r2]!
     f7c:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
     f80:	00000aae 	andeq	r0, r0, lr, lsr #21
     f84:	17028505 	strne	r8, [r2, -r5, lsl #10]
     f88:	000001a6 	andeq	r0, r0, r6, lsr #3
     f8c:	079a1824 	ldreq	r1, [sl, r4, lsr #16]
     f90:	86050000 	strhi	r0, [r5], -r0
     f94:	002c0f02 	eoreq	r0, ip, r2, lsl #30
     f98:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
     f9c:	0000090a 	andeq	r0, r0, sl, lsl #18
     fa0:	2c028705 	stccs	7, cr8, [r2], {5}
     fa4:	00000070 	andeq	r0, r0, r0, ror r0
     fa8:	0ac41850 	beq	ff1070f0 <_estack+0xf70f70f0>
     fac:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
     fb0:	06a11a02 	strteq	r1, [r1], r2, lsl #20
     fb4:	18580000 	ldmdane	r8, {}^	; <UNPREDICTABLE>
     fb8:	00000899 	muleq	r0, r9, r8
     fbc:	16028905 	strne	r8, [r2], -r5, lsl #18
     fc0:	000000fe 	strdeq	r0, [r0], -lr
     fc4:	0ac91868 	beq	ff24716c <_estack+0xf723716c>
     fc8:	8a050000 	bhi	140fd0 <mailbuffer+0x113e30>
     fcc:	00fe1602 	rscseq	r1, lr, r2, lsl #12
     fd0:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
     fd4:	000006a6 	andeq	r0, r0, r6, lsr #13
     fd8:	16028b05 	strne	r8, [r2], -r5, lsl #22
     fdc:	000000fe 	strdeq	r0, [r0], -lr
     fe0:	0a6f1878 	beq	1bc71c8 <mailbuffer+0x1b9a028>
     fe4:	8c050000 	stchi	0, cr0, [r5], {-0}
     fe8:	080f1002 	stmdaeq	pc, {r1, ip}	; <UNPREDICTABLE>
     fec:	18800000 	stmne	r0, {}	; <UNPREDICTABLE>
     ff0:	000007eb 	andeq	r0, r0, fp, ror #15
     ff4:	10028d05 	andne	r8, r2, r5, lsl #26
     ff8:	0000081f 	andeq	r0, r0, pc, lsl r8
     ffc:	09d31888 	ldmibeq	r3, {r3, r7, fp, ip}^
    1000:	8e050000 	cdphi	0, 0, cr0, cr5, cr0, {0}
    1004:	002c0f02 	eoreq	r0, ip, r2, lsl #30
    1008:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    100c:	0000074c 	andeq	r0, r0, ip, asr #14
    1010:	16028f05 	strne	r8, [r2], -r5, lsl #30
    1014:	000000fe 	strdeq	r0, [r0], -lr
    1018:	069718a4 	ldreq	r1, [r7], r4, lsr #17
    101c:	90050000 	andls	r0, r5, r0
    1020:	00fe1602 	rscseq	r1, lr, r2, lsl #12
    1024:	18ac0000 	stmiane	ip!, {}	; <UNPREDICTABLE>
    1028:	0000073b 	andeq	r0, r0, fp, lsr r7
    102c:	16029105 	strne	r9, [r2], -r5, lsl #2
    1030:	000000fe 	strdeq	r0, [r0], -lr
    1034:	063e18b4 			; <UNDEFINED> instruction: 0x063e18b4
    1038:	92050000 	andls	r0, r5, #0
    103c:	00fe1602 	rscseq	r1, lr, r2, lsl #12
    1040:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
    1044:	0000064d 	andeq	r0, r0, sp, asr #12
    1048:	16029305 	strne	r9, [r2], -r5, lsl #6
    104c:	000000fe 	strdeq	r0, [r0], -lr
    1050:	08b918c4 	ldmeq	r9!, {r2, r6, r7, fp, ip}
    1054:	94050000 	strls	r0, [r5], #-0
    1058:	002c0802 	eoreq	r0, ip, r2, lsl #16
    105c:	00cc0000 	sbceq	r0, ip, r0
    1060:	00011e09 	andeq	r1, r1, r9, lsl #28
    1064:	00080f00 	andeq	r0, r8, r0, lsl #30
    1068:	00250a00 	eoreq	r0, r5, r0, lsl #20
    106c:	00190000 	andseq	r0, r9, r0
    1070:	00011e09 	andeq	r1, r1, r9, lsl #28
    1074:	00081f00 	andeq	r1, r8, r0, lsl #30
    1078:	00250a00 	eoreq	r0, r5, r0, lsl #20
    107c:	00070000 	andeq	r0, r7, r0
    1080:	00011e09 	andeq	r1, r1, r9, lsl #28
    1084:	00082f00 	andeq	r2, r8, r0, lsl #30
    1088:	00250a00 	eoreq	r0, r5, r0, lsl #20
    108c:	00170000 	andseq	r0, r7, r0
    1090:	9905f01b 	stmdbls	r5, {r0, r1, r3, r4, ip, sp, lr, pc}
    1094:	08560702 	ldmdaeq	r6, {r1, r8, r9, sl}^
    1098:	53180000 	tstpl	r8, #0
    109c:	05000008 	streq	r0, [r0, #-8]
    10a0:	561b029c 			; <UNDEFINED> instruction: 0x561b029c
    10a4:	00000008 	andeq	r0, r0, r8
    10a8:	000a6618 	andeq	r6, sl, r8, lsl r6
    10ac:	029d0500 	addseq	r0, sp, #0, 10
    10b0:	00086618 	andeq	r6, r8, r8, lsl r6
    10b4:	09007800 	stmdbeq	r0, {fp, ip, sp, lr}
    10b8:	00000306 	andeq	r0, r0, r6, lsl #6
    10bc:	00000866 	andeq	r0, r0, r6, ror #16
    10c0:	0000250a 	andeq	r2, r0, sl, lsl #10
    10c4:	09001d00 	stmdbeq	r0, {r8, sl, fp, ip}
    10c8:	00000025 	andeq	r0, r0, r5, lsr #32
    10cc:	00000876 	andeq	r0, r0, r6, ror r8
    10d0:	0000250a 	andeq	r2, r0, sl, lsl #10
    10d4:	1c001d00 	stcne	13, cr1, [r0], {-0}
    10d8:	027e05f0 	rsbseq	r0, lr, #240, 10	; 0x3c000000
    10dc:	00089b03 	andeq	r9, r8, r3, lsl #22
    10e0:	09581d00 	ldmdbeq	r8, {r8, sl, fp, ip}^
    10e4:	95050000 	strls	r0, [r5, #-0]
    10e8:	06ea0b02 	strbteq	r0, [sl], r2, lsl #22
    10ec:	9b1d0000 	blls	7410f4 <mailbuffer+0x713f54>
    10f0:	0500000a 	streq	r0, [r0, #-10]
    10f4:	2f0b029e 	svccs	0x000b029e
    10f8:	00000008 	andeq	r0, r0, r8
    10fc:	00011e09 	andeq	r1, r1, r9, lsl #28
    1100:	0008ab00 	andeq	sl, r8, r0, lsl #22
    1104:	00250a00 	eoreq	r0, r5, r0, lsl #20
    1108:	00180000 	andseq	r0, r8, r0
    110c:	00067e1e 	andeq	r7, r6, lr, lsl lr
    1110:	ab040e00 	blge	104918 <mailbuffer+0xd7778>
    1114:	1f000008 	svcne	0x00000008
    1118:	000008c1 	andeq	r0, r0, r1, asr #17
    111c:	00046d16 	andeq	r6, r4, r6, lsl sp
    1120:	040e0000 	streq	r0, [lr], #-0
    1124:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    1128:	0190040e 	orrseq	r0, r0, lr, lsl #8
    112c:	d81f0000 	ldmdale	pc, {}	; <UNPREDICTABLE>
    1130:	16000008 	strne	r0, [r0], -r8
    1134:	0000002c 	andeq	r0, r0, ip, lsr #32
    1138:	de040e00 	cdple	14, 0, cr0, cr4, cr0, {0}
    113c:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    1140:	0008cd04 	andeq	ip, r8, r4, lsl #26
    1144:	064f0900 	strbeq	r0, [pc], -r0, lsl #18
    1148:	08f40000 	ldmeq	r4!, {}^	; <UNPREDICTABLE>
    114c:	250a0000 	strcs	r0, [sl, #-0]
    1150:	02000000 	andeq	r0, r0, #0
    1154:	09e72000 	stmibeq	r7!, {sp}^
    1158:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    115c:	046d1703 	strbteq	r1, [sp], #-1795	; 0xfffff8fd
    1160:	e0200000 	eor	r0, r0, r0
    1164:	05000009 	streq	r0, [r0, #-9]
    1168:	731d032f 	tstvc	sp, #-1140850688	; 0xbc000000
    116c:	21000004 	tstcs	r0, r4
    1170:	0000086b 	andeq	r0, r0, fp, ror #16
    1174:	180e6406 	stmdane	lr, {r1, r2, sl, sp, lr}
    1178:	05000001 	streq	r0, [r0, #-1]
    117c:	0000000c 	andeq	r0, r0, ip
    1180:	641c6107 	ldrvs	r6, [ip], #-263	; 0xfffffef9
    1184:	10000000 	andne	r0, r0, r0
    1188:	0000035f 	andeq	r0, r0, pc, asr r3
    118c:	08690814 	stmdaeq	r9!, {r2, r4, fp}^
    1190:	00000975 	andeq	r0, r0, r5, ror r9
    1194:	0003120c 	andeq	r1, r3, ip, lsl #4
    1198:	0f6b0800 	svceq	0x006b0800
    119c:	0000091a 	andeq	r0, r0, sl, lsl r9
    11a0:	04fd0c00 	ldrbteq	r0, [sp], #3072	; 0xc00
    11a4:	6c080000 	stcvs	0, cr0, [r8], {-0}
    11a8:	00097a1f 	andeq	r7, r9, pc, lsl sl
    11ac:	cf0c0400 	svcgt	0x000c0400
    11b0:	08000003 	stmdaeq	r0, {r0, r1}
    11b4:	097a1f6d 	ldmdbeq	sl!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip}^
    11b8:	0c080000 	stceq	0, cr0, [r8], {-0}
    11bc:	00000334 	andeq	r0, r0, r4, lsr r3
    11c0:	16096e08 	strne	r6, [r9], -r8, lsl #28
    11c4:	0c000001 	stceq	0, cr0, [r0], {1}
    11c8:	0002dd0c 	andeq	sp, r2, ip, lsl #26
    11cc:	096f0800 	stmdbeq	pc!, {fp}^	; <UNPREDICTABLE>
    11d0:	00000116 	andeq	r0, r0, r6, lsl r1
    11d4:	26040010 			; <UNDEFINED> instruction: 0x26040010
    11d8:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    11dc:	00097504 	andeq	r7, r9, r4, lsl #10
    11e0:	05100500 	ldreq	r0, [r0, #-1280]	; 0xfffffb00
    11e4:	71080000 	mrsvc	r0, (UNDEF: 8)
    11e8:	0009261b 	andeq	r2, r9, fp, lsl r6
    11ec:	09800400 	stmibeq	r0, {sl}
    11f0:	6c100000 	ldcvs	0, cr0, [r0], {-0}
    11f4:	0c000005 	stceq	0, cr0, [r0], {5}
    11f8:	c6087308 	strgt	r7, [r8], -r8, lsl #6
    11fc:	0c000009 	stceq	0, cr0, [r0], {9}
    1200:	00000312 	andeq	r0, r0, r2, lsl r3
    1204:	1a0f7508 	bne	3de62c <mailbuffer+0x3b148c>
    1208:	00000009 	andeq	r0, r0, r9
    120c:	0004fd0c 	andeq	pc, r4, ip, lsl #26
    1210:	1e760800 	cdpne	8, 7, cr0, cr6, cr0, {0}
    1214:	0000097a 	andeq	r0, r0, sl, ror r9
    1218:	03cf0c04 	biceq	r0, pc, #4, 24	; 0x400
    121c:	77080000 	strvc	r0, [r8, -r0]
    1220:	00097a1e 	andeq	r7, r9, lr, lsl sl
    1224:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1228:	00000484 	andeq	r0, r0, r4, lsl #9
    122c:	91207908 			; <UNDEFINED> instruction: 0x91207908
    1230:	04000009 	streq	r0, [r0], #-9
    1234:	000009c6 	andeq	r0, r0, r6, asr #19
    1238:	00057c10 	andeq	r7, r5, r0, lsl ip
    123c:	7e081400 	cfcpysvc	mvf1, mvf8
    1240:	000a0c10 	andeq	r0, sl, r0, lsl ip
    1244:	04a30c00 	strteq	r0, [r3], #3072	; 0xc00
    1248:	80080000 	andhi	r0, r8, r0
    124c:	00006b22 	andeq	r6, r0, r2, lsr #22
    1250:	0a0c0000 	beq	301258 <mailbuffer+0x2d40b8>
    1254:	08000003 	stmdaeq	r0, {r0, r1}
    1258:	0a0c1781 	beq	307064 <mailbuffer+0x2d9ec4>
    125c:	0c040000 	stceq	0, cr0, [r4], {-0}
    1260:	0000032b 	andeq	r0, r0, fp, lsr #6
    1264:	d2198208 	andsle	r8, r9, #8, 4	; 0x80000000
    1268:	08000009 	stmdaeq	r0, {r0, r3}
    126c:	8c040e00 	stchi	14, cr0, [r4], {-0}
    1270:	05000009 	streq	r0, [r0, #-9]
    1274:	00000990 	muleq	r0, r0, r9
    1278:	d7038308 	strle	r8, [r3, -r8, lsl #6]
    127c:	22000009 	andcs	r0, r0, #9
    1280:	0000081f 	andeq	r0, r0, pc, lsl r8
    1284:	5806b701 	stmdapl	r6, {r0, r8, r9, sl, ip, sp, pc}
    1288:	9800010f 	stmdals	r0, {r0, r1, r2, r3, r8}
    128c:	01000000 	mrseq	r0, (UNDEF: 0)
    1290:	000a539c 	muleq	sl, ip, r3
    1294:	08442300 	stmdaeq	r4, {r8, r9, sp}^
    1298:	b7010000 	strlt	r0, [r1, -r0]
    129c:	000a531e 	andeq	r5, sl, lr, lsl r3
    12a0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    12a4:	00098f24 	andeq	r8, r9, r4, lsr #30
    12a8:	09b90100 	ldmibeq	r9!, {r8}
    12ac:	00000a59 	andeq	r0, r0, r9, asr sl
    12b0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    12b4:	0980040e 	stmibeq	r0, {r1, r2, r3, sl}
    12b8:	040e0000 	streq	r0, [lr], #-0
    12bc:	00000a12 	andeq	r0, r0, r2, lsl sl
    12c0:	00097b22 	andeq	r7, r9, r2, lsr #22
    12c4:	067e0100 	ldrbteq	r0, [lr], -r0, lsl #2
    12c8:	00010e80 	andeq	r0, r1, r0, lsl #29
    12cc:	000000d8 	ldrdeq	r0, [r0], -r8
    12d0:	0ab29c01 	beq	feca82dc <_estack+0xf6c982dc>
    12d4:	8f230000 	svchi	0x00230000
    12d8:	01000009 	tsteq	r0, r9
    12dc:	0a591a7e 	beq	1647cdc <mailbuffer+0x161ab3c>
    12e0:	91020000 	mrsls	r0, (UNDEF: 2)
    12e4:	0689236c 	streq	r2, [r9], ip, ror #6
    12e8:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    12ec:	000a532d 	andeq	r5, sl, sp, lsr #6
    12f0:	68910200 	ldmvs	r1, {r9}
    12f4:	0009c024 	andeq	ip, r9, r4, lsr #32
    12f8:	15800100 	strne	r0, [r0, #256]	; 0x100
    12fc:	00000a0c 	andeq	r0, r0, ip, lsl #20
    1300:	24749102 	ldrbtcs	r9, [r4], #-258	; 0xfffffefe
    1304:	00000a83 	andeq	r0, r0, r3, lsl #21
    1308:	1a0e8101 	bne	3a1714 <mailbuffer+0x374574>
    130c:	02000009 	andeq	r0, r0, #9
    1310:	22007091 	andcs	r7, r0, #145	; 0x91
    1314:	0000072c 	andeq	r0, r0, ip, lsr #14
    1318:	e8066701 	stmda	r6, {r0, r8, r9, sl, sp, lr}
    131c:	9800010d 	stmdals	r0, {r0, r2, r3, r8}
    1320:	01000000 	mrseq	r0, (UNDEF: 0)
    1324:	000af69c 	muleq	sl, ip, r6
    1328:	098f2300 	stmibeq	pc, {r8, r9, sp}	; <UNPREDICTABLE>
    132c:	67010000 	strvs	r0, [r1, -r0]
    1330:	000a591d 	andeq	r5, sl, sp, lsl r9
    1334:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1338:	00068923 	andeq	r8, r6, r3, lsr #18
    133c:	30670100 	rsbcc	r0, r7, r0, lsl #2
    1340:	00000a53 	andeq	r0, r0, r3, asr sl
    1344:	24689102 	strbtcs	r9, [r8], #-258	; 0xfffffefe
    1348:	0000030a 	andeq	r0, r0, sl, lsl #6
    134c:	0c166901 			; <UNDEFINED> instruction: 0x0c166901
    1350:	0200000a 	andeq	r0, r0, #10
    1354:	22007491 	andcs	r7, r0, #-1862270976	; 0x91000000
    1358:	00000767 	andeq	r0, r0, r7, ror #14
    135c:	bc066001 	stclt	0, cr6, [r6], {1}
    1360:	2c00010d 	stfcss	f0, [r0], {13}
    1364:	01000000 	mrseq	r0, (UNDEF: 0)
    1368:	000b1c9c 	muleq	fp, ip, ip
    136c:	07252300 	streq	r2, [r5, -r0, lsl #6]!
    1370:	60010000 	andvs	r0, r1, r0
    1374:	000a5326 	andeq	r5, sl, r6, lsr #6
    1378:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    137c:	0a412500 	beq	104a784 <mailbuffer+0x101d5e4>
    1380:	4c010000 	stcmi	0, cr0, [r1], {-0}
    1384:	010d5406 	tsteq	sp, r6, lsl #8
    1388:	00006800 	andeq	r6, r0, r0, lsl #16
    138c:	239c0100 	orrscs	r0, ip, #0, 2
    1390:	0000098f 	andeq	r0, r0, pc, lsl #19
    1394:	591e4c01 	ldmdbpl	lr, {r0, sl, fp, lr}
    1398:	0200000a 	andeq	r0, r0, #10
    139c:	00007491 	muleq	r0, r1, r4
    13a0:	0000101e 	andeq	r1, r0, lr, lsl r0
    13a4:	05cd0004 	strbeq	r0, [sp, #4]
    13a8:	01040000 	mrseq	r0, (UNDEF: 4)
    13ac:	00000059 	andeq	r0, r0, r9, asr r0
    13b0:	000c610c 	andeq	r6, ip, ip, lsl #2
    13b4:	0000cf00 	andeq	ip, r0, r0, lsl #30
    13b8:	010ff000 	mrseq	pc, CPSR	; <UNPREDICTABLE>
    13bc:	000bb000 	andeq	fp, fp, r0
    13c0:	00081400 	andeq	r1, r8, r0, lsl #8
    13c4:	0b430200 	bleq	10c1bcc <mailbuffer+0x1094a2c>
    13c8:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    13cc:	00003117 	andeq	r3, r0, r7, lsl r1
    13d0:	07040300 	streq	r0, [r4, -r0, lsl #6]
    13d4:	00000668 	andeq	r0, r0, r8, ror #12
    13d8:	69050404 	stmdbvs	r5, {r2, sl}
    13dc:	0300746e 	movweq	r7, #1134	; 0x46e
    13e0:	00f90508 	rscseq	r0, r9, r8, lsl #10
    13e4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    13e8:	00018104 	andeq	r8, r1, r4, lsl #2
    13ec:	06010300 	streq	r0, [r1], -r0, lsl #6
    13f0:	000008a8 	andeq	r0, r0, r8, lsr #17
    13f4:	a6080103 	strge	r0, [r8], -r3, lsl #2
    13f8:	03000008 	movweq	r0, #8
    13fc:	08c20502 	stmiaeq	r2, {r1, r8, sl}^
    1400:	02030000 	andeq	r0, r3, #0
    1404:	00009507 	andeq	r9, r0, r7, lsl #10
    1408:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    140c:	000000fe 	strdeq	r0, [r0], -lr
    1410:	00006905 	andeq	r6, r0, r5, lsl #18
    1414:	07040300 	streq	r0, [r4, -r0, lsl #6]
    1418:	00000663 	andeq	r0, r0, r3, ror #12
    141c:	00007505 	andeq	r7, r0, r5, lsl #10
    1420:	07080300 	streq	r0, [r8, -r0, lsl #6]
    1424:	0000065e 	andeq	r0, r0, lr, asr r6
    1428:	00088702 	andeq	r8, r8, r2, lsl #14
    142c:	0d0c0300 	stceq	3, cr0, [ip, #-0]
    1430:	00000038 	andeq	r0, r0, r8, lsr r0
    1434:	00088002 	andeq	r8, r8, r2
    1438:	0e2c0400 	cdpeq	4, 2, cr0, cr12, cr0, {0}
    143c:	00000069 	andeq	r0, r0, r9, rrx
    1440:	00098702 	andeq	r8, r9, r2, lsl #14
    1444:	0e720400 	cdpeq	4, 7, cr0, cr2, cr0, {0}
    1448:	00000069 	andeq	r0, r0, r9, rrx
    144c:	00081206 	andeq	r1, r8, r6, lsl #4
    1450:	01650200 	cmneq	r5, r0, lsl #4
    1454:	00003117 	andeq	r3, r0, r7, lsl r1
    1458:	04040700 	streq	r0, [r4], #-1792	; 0xfffff900
    145c:	00db03a6 	sbcseq	r0, fp, r6, lsr #7
    1460:	0c080000 	stceq	0, cr0, [r8], {-0}
    1464:	04000008 	streq	r0, [r0], #-8
    1468:	00ac0ca8 	adceq	r0, ip, r8, lsr #25
    146c:	be080000 	cdplt	0, 0, cr0, cr8, cr0, {0}
    1470:	04000007 	streq	r0, [r0], #-7
    1474:	00db13a9 	sbcseq	r1, fp, r9, lsr #7
    1478:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    147c:	00000054 	andeq	r0, r0, r4, asr r0
    1480:	000000eb 	andeq	r0, r0, fp, ror #1
    1484:	0000310a 	andeq	r3, r0, sl, lsl #2
    1488:	0b000300 	bleq	2090 <_start-0x5f70>
    148c:	09a30408 	stmibeq	r3!, {r3, sl}
    1490:	0000010f 	andeq	r0, r0, pc, lsl #2
    1494:	0009650c 	andeq	r6, r9, ip, lsl #10
    1498:	07a50400 	streq	r0, [r5, r0, lsl #8]!
    149c:	00000038 	andeq	r0, r0, r8, lsr r0
    14a0:	096d0c00 	stmdbeq	sp!, {sl, fp}^
    14a4:	aa040000 	bge	1014ac <mailbuffer+0xd430c>
    14a8:	0000b905 	andeq	fp, r0, r5, lsl #18
    14ac:	02000400 	andeq	r0, r0, #0, 8
    14b0:	000008ee 	andeq	r0, r0, lr, ror #17
    14b4:	eb03ab04 	bl	ec0cc <mailbuffer+0xbef2c>
    14b8:	02000000 	andeq	r0, r0, #0
    14bc:	00000781 	andeq	r0, r0, r1, lsl #15
    14c0:	881baf04 	ldmdahi	fp, {r2, r8, r9, sl, fp, sp, pc}
    14c4:	0d000000 	stceq	0, cr0, [r0, #-0]
    14c8:	01270e04 			; <UNDEFINED> instruction: 0x01270e04
    14cc:	040f0000 	streq	r0, [pc], #-0	; 14d4 <_start-0x6b2c>
    14d0:	00000134 	andeq	r0, r0, r4, lsr r1
    14d4:	af080103 	svcge	0x00080103
    14d8:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    14dc:	00000134 	andeq	r0, r0, r4, lsr r1
    14e0:	0009cb02 	andeq	ip, r9, r2, lsl #22
    14e4:	19160500 	ldmdbne	r6, {r8, sl}
    14e8:	00000075 	andeq	r0, r0, r5, ror r0
    14ec:	00079210 	andeq	r9, r7, r0, lsl r2
    14f0:	2f051800 	svccs	0x00051800
    14f4:	0001a608 	andeq	sl, r1, r8, lsl #12
    14f8:	090f0c00 	stmdbeq	pc, {sl, fp}	; <UNPREDICTABLE>
    14fc:	31050000 	mrscc	r0, (UNDEF: 5)
    1500:	0001a613 	andeq	sl, r1, r3, lsl r6
    1504:	5f110000 	svcpl	0x00110000
    1508:	3205006b 	andcc	r0, r5, #107	; 0x6b
    150c:	00003807 	andeq	r3, r0, r7, lsl #16
    1510:	500c0400 	andpl	r0, ip, r0, lsl #8
    1514:	05000009 	streq	r0, [r0, #-9]
    1518:	00380b32 	eorseq	r0, r8, r2, lsr fp
    151c:	0c080000 	stceq	0, cr0, [r8], {-0}
    1520:	0000077b 	andeq	r0, r0, fp, ror r7
    1524:	38143205 	ldmdacc	r4, {r0, r2, r9, ip, sp}
    1528:	0c000000 	stceq	0, cr0, [r0], {-0}
    152c:	000a510c 	andeq	r5, sl, ip, lsl #2
    1530:	1b320500 	blne	c82938 <mailbuffer+0xc55798>
    1534:	00000038 	andeq	r0, r0, r8, lsr r0
    1538:	785f1110 	ldmdavc	pc, {r4, r8, ip}^	; <UNPREDICTABLE>
    153c:	0b330500 	bleq	cc2944 <mailbuffer+0xc957a4>
    1540:	000001ac 	andeq	r0, r0, ip, lsr #3
    1544:	040f0014 	streq	r0, [pc], #-20	; 154c <_start-0x6ab4>
    1548:	0000014c 	andeq	r0, r0, ip, asr #2
    154c:	00014009 	andeq	r4, r1, r9
    1550:	0001bc00 	andeq	fp, r1, r0, lsl #24
    1554:	00310a00 	eorseq	r0, r1, r0, lsl #20
    1558:	00000000 	andeq	r0, r0, r0
    155c:	0007b910 	andeq	fp, r7, r0, lsl r9
    1560:	37052400 	strcc	r2, [r5, -r0, lsl #8]
    1564:	00023f08 	andeq	r3, r2, r8, lsl #30
    1568:	06b40c00 	ldrteq	r0, [r4], r0, lsl #24
    156c:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    1570:	00003809 	andeq	r3, r0, r9, lsl #16
    1574:	960c0000 	strls	r0, [ip], -r0
    1578:	05000009 	streq	r0, [r0, #-9]
    157c:	0038093a 	eorseq	r0, r8, sl, lsr r9
    1580:	0c040000 	stceq	0, cr0, [r4], {-0}
    1584:	000006c9 	andeq	r0, r0, r9, asr #13
    1588:	38093b05 	stmdacc	r9, {r0, r2, r8, r9, fp, ip, sp}
    158c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1590:	000adc0c 	andeq	sp, sl, ip, lsl #24
    1594:	093c0500 	ldmdbeq	ip!, {r8, sl}
    1598:	00000038 	andeq	r0, r0, r8, lsr r0
    159c:	085a0c0c 	ldmdaeq	sl, {r2, r3, sl, fp}^
    15a0:	3d050000 	stccc	0, cr0, [r5, #-0]
    15a4:	00003809 	andeq	r3, r0, r9, lsl #16
    15a8:	3a0c1000 	bcc	3055b0 <mailbuffer+0x2d8410>
    15ac:	05000008 	streq	r0, [r0, #-8]
    15b0:	0038093e 	eorseq	r0, r8, lr, lsr r9
    15b4:	0c140000 	ldceq	0, cr0, [r4], {-0}
    15b8:	00000a56 	andeq	r0, r0, r6, asr sl
    15bc:	38093f05 	stmdacc	r9, {r0, r2, r8, r9, sl, fp, ip, sp}
    15c0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    15c4:	0008cc0c 	andeq	ip, r8, ip, lsl #24
    15c8:	09400500 	stmdbeq	r0, {r8, sl}^
    15cc:	00000038 	andeq	r0, r0, r8, lsr r0
    15d0:	0aa30c1c 	beq	fe8c4648 <_estack+0xf68b4648>
    15d4:	41050000 	mrsmi	r0, (UNDEF: 5)
    15d8:	00003809 	andeq	r3, r0, r9, lsl #16
    15dc:	12002000 	andne	r2, r0, #0
    15e0:	000006d8 	ldrdeq	r0, [r0], -r8
    15e4:	4a050108 	bmi	141a0c <mailbuffer+0x11486c>
    15e8:	00028408 	andeq	r8, r2, r8, lsl #8
    15ec:	075a0c00 	ldrbeq	r0, [sl, -r0, lsl #24]
    15f0:	4b050000 	blmi	1415f8 <mailbuffer+0x114458>
    15f4:	0002840a 	andeq	r8, r2, sl, lsl #8
    15f8:	130c0000 	movwne	r0, #49152	; 0xc000
    15fc:	05000006 	streq	r0, [r0, #-6]
    1600:	0284094c 	addeq	r0, r4, #76, 18	; 0x130000
    1604:	13800000 	orrne	r0, r0, #0
    1608:	000009b2 			; <UNDEFINED> instruction: 0x000009b2
    160c:	400a4e05 	andmi	r4, sl, r5, lsl #28
    1610:	00000001 	andeq	r0, r0, r1
    1614:	06fd1301 	ldrbteq	r1, [sp], r1, lsl #6
    1618:	51050000 	mrspl	r0, (UNDEF: 5)
    161c:	0001400a 	andeq	r4, r1, sl
    1620:	00010400 	andeq	r0, r1, r0, lsl #8
    1624:	00012709 	andeq	r2, r1, r9, lsl #14
    1628:	00029400 	andeq	r9, r2, r0, lsl #8
    162c:	00310a00 	eorseq	r0, r1, r0, lsl #20
    1630:	001f0000 	andseq	r0, pc, r0
    1634:	00086312 	andeq	r6, r8, r2, lsl r3
    1638:	05019000 	streq	r9, [r1, #-0]
    163c:	02d7085d 	sbcseq	r0, r7, #6094848	; 0x5d0000
    1640:	0f0c0000 	svceq	0x000c0000
    1644:	05000009 	streq	r0, [r0, #-9]
    1648:	02d7125e 	sbcseq	r1, r7, #-536870907	; 0xe0000005
    164c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1650:	00000920 	andeq	r0, r0, r0, lsr #18
    1654:	38065f05 	stmdacc	r6, {r0, r2, r8, r9, sl, fp, ip, lr}
    1658:	04000000 	streq	r0, [r0], #-0
    165c:	0007620c 	andeq	r6, r7, ip, lsl #4
    1660:	09610500 	stmdbeq	r1!, {r8, sl}^
    1664:	000002dd 	ldrdeq	r0, [r0], -sp
    1668:	06d80c08 	ldrbeq	r0, [r8], r8, lsl #24
    166c:	62050000 	andvs	r0, r5, #0
    1670:	00023f1e 	andeq	r3, r2, lr, lsl pc
    1674:	0f008800 	svceq	0x00008800
    1678:	00029404 	andeq	r9, r2, r4, lsl #8
    167c:	02ed0900 	rsceq	r0, sp, #0, 18
    1680:	02ed0000 	rsceq	r0, sp, #0
    1684:	310a0000 	mrscc	r0, (UNDEF: 10)
    1688:	1f000000 	svcne	0x00000000
    168c:	f3040f00 	vpmax.f32	d0, d4, d0
    1690:	14000002 	strne	r0, [r0], #-2
    1694:	0008d610 	andeq	sp, r8, r0, lsl r6
    1698:	75050800 	strvc	r0, [r5, #-2048]	; 0xfffff800
    169c:	00031c08 	andeq	r1, r3, r8, lsl #24
    16a0:	06c30c00 	strbeq	r0, [r3], r0, lsl #24
    16a4:	76050000 	strvc	r0, [r5], -r0
    16a8:	00031c11 	andeq	r1, r3, r1, lsl ip
    16ac:	1f0c0000 	svcne	0x000c0000
    16b0:	05000006 	streq	r0, [r0, #-6]
    16b4:	00380677 	eorseq	r0, r8, r7, ror r6
    16b8:	00040000 	andeq	r0, r4, r0
    16bc:	0054040f 	subseq	r0, r4, pc, lsl #8
    16c0:	f9100000 			; <UNDEFINED> instruction: 0xf9100000
    16c4:	68000008 	stmdavs	r0, {r3}
    16c8:	6508b505 	strvs	fp, [r8, #-1285]	; 0xfffffafb
    16cc:	11000004 	tstne	r0, r4
    16d0:	0500705f 	streq	r7, [r0, #-95]	; 0xffffffa1
    16d4:	031c12b6 	tsteq	ip, #1610612747	; 0x6000000b
    16d8:	11000000 	mrsne	r0, (UNDEF: 0)
    16dc:	0500725f 	streq	r7, [r0, #-607]	; 0xfffffda1
    16e0:	003807b7 	ldrhteq	r0, [r8], -r7
    16e4:	11040000 	mrsne	r0, (UNDEF: 4)
    16e8:	0500775f 	streq	r7, [r0, #-1887]	; 0xfffff8a1
    16ec:	003807b8 	ldrhteq	r0, [r8], -r8
    16f0:	0c080000 	stceq	0, cr0, [r8], {-0}
    16f4:	000006f6 	strdeq	r0, [r0], -r6
    16f8:	5b09b905 	blpl	26fb14 <mailbuffer+0x242974>
    16fc:	0c000000 	stceq	0, cr0, [r0], {-0}
    1700:	0007d50c 	andeq	sp, r7, ip, lsl #10
    1704:	09ba0500 	ldmibeq	sl!, {r8, sl}
    1708:	0000005b 	andeq	r0, r0, fp, asr r0
    170c:	625f110e 	subsvs	r1, pc, #-2147483645	; 0x80000003
    1710:	bb050066 	bllt	1418b0 <mailbuffer+0x114710>
    1714:	0002f411 	andeq	pc, r2, r1, lsl r4	; <UNPREDICTABLE>
    1718:	750c1000 	strvc	r1, [ip, #-0]
    171c:	05000006 	streq	r0, [r0, #-6]
    1720:	003807bc 	ldrhteq	r0, [r8], -ip
    1724:	0c180000 	ldceq	0, cr0, [r8], {-0}
    1728:	000006e6 	andeq	r0, r0, r6, ror #13
    172c:	270ac305 	strcs	ip, [sl, -r5, lsl #6]
    1730:	1c000001 	stcne	0, cr0, [r0], {1}
    1734:	0007a90c 	andeq	sl, r7, ip, lsl #18
    1738:	1dc50500 	cfstr64ne	mvdx0, [r5]
    173c:	000005d7 	ldrdeq	r0, [r0], -r7
    1740:	08330c20 	ldmdaeq	r3!, {r5, sl, fp}
    1744:	c7050000 	strgt	r0, [r5, -r0]
    1748:	0006011d 	andeq	r0, r6, sp, lsl r1
    174c:	750c2400 	strvc	r2, [ip, #-1024]	; 0xfffffc00
    1750:	05000009 	streq	r0, [r0, #-9]
    1754:	06250dca 	strteq	r0, [r5], -sl, asr #27
    1758:	0c280000 	stceq	0, cr0, [r8], #-0
    175c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    1760:	3f09cb05 	svccc	0x0009cb05
    1764:	2c000006 	stccs	0, cr0, [r0], {6}
    1768:	62755f11 	rsbsvs	r5, r5, #17, 30	; 0x44
    176c:	11ce0500 	bicne	r0, lr, r0, lsl #10
    1770:	000002f4 	strdeq	r0, [r0], -r4
    1774:	755f1130 	ldrbvc	r1, [pc, #-304]	; 164c <_start-0x69b4>
    1778:	cf050070 	svcgt	0x00050070
    177c:	00031c12 	andeq	r1, r3, r2, lsl ip
    1780:	5f113800 	svcpl	0x00113800
    1784:	05007275 	streq	r7, [r0, #-629]	; 0xfffffd8b
    1788:	003807d0 	ldrsbteq	r0, [r8], -r0
    178c:	0c3c0000 	ldceq	0, cr0, [ip], #-0
    1790:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    1794:	4511d305 	ldrmi	sp, [r1, #-773]	; 0xfffffcfb
    1798:	40000006 	andmi	r0, r0, r6
    179c:	000a950c 	andeq	r9, sl, ip, lsl #10
    17a0:	11d40500 	bicsne	r0, r4, r0, lsl #10
    17a4:	00000655 	andeq	r0, r0, r5, asr r6
    17a8:	6c5f1143 	ldfvse	f1, [pc], {67}	; 0x43
    17ac:	d7050062 	strle	r0, [r5, -r2, rrx]
    17b0:	0002f411 	andeq	pc, r2, r1, lsl r4	; <UNPREDICTABLE>
    17b4:	0c0c4400 	cfstrseq	mvf4, [ip], {-0}
    17b8:	05000007 	streq	r0, [r0, #-7]
    17bc:	003807da 	ldrsbteq	r0, [r8], -sl
    17c0:	0c4c0000 	mareq	acc0, r0, ip
    17c4:	0000071d 	andeq	r0, r0, sp, lsl r7
    17c8:	940adb05 	strls	sp, [sl], #-2821	; 0xfffff4fb
    17cc:	50000000 	andpl	r0, r0, r0
    17d0:	0006380c 	andeq	r3, r6, ip, lsl #16
    17d4:	12de0500 	sbcsne	r0, lr, #0, 10
    17d8:	00000483 	andeq	r0, r0, r3, lsl #9
    17dc:	08190c54 	ldmdaeq	r9, {r2, r4, r6, sl, fp}
    17e0:	e2050000 	and	r0, r5, #0
    17e4:	00011b0c 	andeq	r1, r1, ip, lsl #22
    17e8:	010c5800 	tsteq	ip, r0, lsl #16
    17ec:	05000009 	streq	r0, [r0, #-9]
    17f0:	010f0ee4 	smlatteq	pc, r4, lr, r0
    17f4:	0c5c0000 	mraeq	r0, ip, acc0
    17f8:	0000082b 	andeq	r0, r0, fp, lsr #16
    17fc:	3809e505 	stmdacc	r9, {r0, r2, r8, sl, sp, lr, pc}
    1800:	64000000 	strvs	r0, [r0], #-0
    1804:	00381500 	eorseq	r1, r8, r0, lsl #10
    1808:	04830000 	streq	r0, [r3], #0
    180c:	83160000 	tsthi	r6, #0
    1810:	16000004 	strne	r0, [r0], -r4
    1814:	00000127 	andeq	r0, r0, r7, lsr #2
    1818:	00012e16 	andeq	r2, r1, r6, lsl lr
    181c:	00381600 	eorseq	r1, r8, r0, lsl #12
    1820:	0f000000 	svceq	0x00000000
    1824:	00048e04 	andeq	r8, r4, r4, lsl #28
    1828:	04830e00 	streq	r0, [r3], #3584	; 0xe00
    182c:	58170000 	ldmdapl	r7, {}	; <UNPREDICTABLE>
    1830:	28000009 	stmdacs	r0, {r0, r3}
    1834:	02600504 	rsbeq	r0, r0, #4, 10	; 0x1000000
    1838:	0005d708 	andeq	sp, r5, r8, lsl #14
    183c:	08bb1800 	ldmeq	fp!, {fp, ip}
    1840:	62050000 	andvs	r0, r5, #0
    1844:	00380702 	eorseq	r0, r8, r2, lsl #14
    1848:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    184c:	00000705 	andeq	r0, r0, r5, lsl #14
    1850:	0b026705 	bleq	9b46c <mailbuffer+0x6e2cc>
    1854:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
    1858:	07c51804 	strbeq	r1, [r5, r4, lsl #16]
    185c:	67050000 	strvs	r0, [r5, -r0]
    1860:	06b11402 	ldrteq	r1, [r1], r2, lsl #8
    1864:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    1868:	0000078a 	andeq	r0, r0, sl, lsl #15
    186c:	1e026705 	cdpne	7, 0, cr6, cr2, cr5, {0}
    1870:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
    1874:	091b180c 	ldmdbeq	fp, {r2, r3, fp, ip}
    1878:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
    187c:	00380802 	eorseq	r0, r8, r2, lsl #16
    1880:	18100000 	ldmdane	r0, {}	; <UNPREDICTABLE>
    1884:	0000062d 	andeq	r0, r0, sp, lsr #12
    1888:	08026a05 	stmdaeq	r2, {r0, r2, r9, fp, sp, lr}
    188c:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    1890:	09371814 	ldmdbeq	r7!, {r2, r4, fp, ip}
    1894:	6d050000 	stcvs	0, cr0, [r5, #-0]
    1898:	00380702 	eorseq	r0, r8, r2, lsl #14
    189c:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
    18a0:	00000925 	andeq	r0, r0, r5, lsr #18
    18a4:	16026e05 	strne	r6, [r2], -r5, lsl #28
    18a8:	000008c6 	andeq	r0, r0, r6, asr #17
    18ac:	08751834 	ldmdaeq	r5!, {r2, r4, r5, fp, ip}^
    18b0:	70050000 	andvc	r0, r5, r0
    18b4:	00380702 	eorseq	r0, r8, r2, lsl #14
    18b8:	18380000 	ldmdane	r8!, {}	; <UNPREDICTABLE>
    18bc:	0000092d 	andeq	r0, r0, sp, lsr #18
    18c0:	0a027205 	beq	9e0dc <mailbuffer+0x70f3c>
    18c4:	000008d7 	ldrdeq	r0, [r0], -r7
    18c8:	0804183c 	stmdaeq	r4, {r2, r3, r4, r5, fp, ip}
    18cc:	75050000 	strvc	r0, [r5, #-0]
    18d0:	01a61302 			; <UNDEFINED> instruction: 0x01a61302
    18d4:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
    18d8:	000007af 	andeq	r0, r0, pc, lsr #15
    18dc:	07027605 	streq	r7, [r2, -r5, lsl #12]
    18e0:	00000038 	andeq	r0, r0, r8, lsr r0
    18e4:	0ad71844 	beq	ff5c79fc <_estack+0xf75b79fc>
    18e8:	77050000 	strvc	r0, [r5, -r0]
    18ec:	01a61302 			; <UNDEFINED> instruction: 0x01a61302
    18f0:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    18f4:	000008dd 	ldrdeq	r0, [r0], -sp
    18f8:	14027805 	strne	r7, [r2], #-2053	; 0xfffff7fb
    18fc:	000008dd 	ldrdeq	r0, [r0], -sp
    1900:	07cd184c 	strbeq	r1, [sp, ip, asr #16]
    1904:	7b050000 	blvc	14190c <mailbuffer+0x11476c>
    1908:	00380702 	eorseq	r0, r8, r2, lsl #14
    190c:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
    1910:	00000715 	andeq	r0, r0, r5, lsl r7
    1914:	09027c05 	stmdbeq	r2, {r0, r2, sl, fp, ip, sp, lr}
    1918:	0000012e 	andeq	r0, r0, lr, lsr #2
    191c:	08b41854 	ldmeq	r4!, {r2, r4, r6, fp, ip}
    1920:	9f050000 	svcls	0x00050000
    1924:	088c0702 	stmeq	ip, {r1, r8, r9, sl}
    1928:	19580000 	ldmdbne	r8, {}^	; <UNPREDICTABLE>
    192c:	00000863 	andeq	r0, r0, r3, ror #16
    1930:	1302a305 	movwne	sl, #8965	; 0x2305
    1934:	000002d7 	ldrdeq	r0, [r0], -r7
    1938:	e2190148 	ands	r0, r9, #72, 2
    193c:	05000007 	streq	r0, [r0, #-7]
    1940:	941202a4 	ldrls	r0, [r2], #-676	; 0xfffffd5c
    1944:	4c000002 	stcmi	0, cr0, [r0], {2}
    1948:	0a791901 	beq	1e47d54 <mailbuffer+0x1e1abb4>
    194c:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
    1950:	08ee0c02 	stmiaeq	lr!, {r1, sl, fp}^
    1954:	02dc0000 	sbcseq	r0, ip, #0
    1958:	0006ee19 	andeq	lr, r6, r9, lsl lr
    195c:	02ad0500 	adceq	r0, sp, #0, 10
    1960:	00067210 	andeq	r7, r6, r0, lsl r2
    1964:	1902e000 	stmdbne	r2, {sp, lr, pc}
    1968:	000006d3 	ldrdeq	r0, [r0], -r3
    196c:	0a02af05 	beq	ad588 <mailbuffer+0x803e8>
    1970:	000008fa 	strdeq	r0, [r0], -sl
    1974:	0f0002ec 	svceq	0x000002ec
    1978:	00046504 	andeq	r6, r4, r4, lsl #10
    197c:	00381500 	eorseq	r1, r8, r0, lsl #10
    1980:	05fb0000 	ldrbeq	r0, [fp, #0]!
    1984:	83160000 	tsthi	r6, #0
    1988:	16000004 	strne	r0, [r0], -r4
    198c:	00000127 	andeq	r0, r0, r7, lsr #2
    1990:	0005fb16 	andeq	pc, r5, r6, lsl fp	; <UNPREDICTABLE>
    1994:	00381600 	eorseq	r1, r8, r0, lsl #12
    1998:	0f000000 	svceq	0x00000000
    199c:	00013b04 	andeq	r3, r1, r4, lsl #22
    19a0:	dd040f00 	stcle	15, cr0, [r4, #-0]
    19a4:	15000005 	strne	r0, [r0, #-5]
    19a8:	000000a0 	andeq	r0, r0, r0, lsr #1
    19ac:	00000625 	andeq	r0, r0, r5, lsr #12
    19b0:	00048316 	andeq	r8, r4, r6, lsl r3
    19b4:	01271600 			; <UNDEFINED> instruction: 0x01271600
    19b8:	a0160000 	andsge	r0, r6, r0
    19bc:	16000000 	strne	r0, [r0], -r0
    19c0:	00000038 	andeq	r0, r0, r8, lsr r0
    19c4:	07040f00 	streq	r0, [r4, -r0, lsl #30]
    19c8:	15000006 	strne	r0, [r0, #-6]
    19cc:	00000038 	andeq	r0, r0, r8, lsr r0
    19d0:	0000063f 	andeq	r0, r0, pc, lsr r6
    19d4:	00048316 	andeq	r8, r4, r6, lsl r3
    19d8:	01271600 			; <UNDEFINED> instruction: 0x01271600
    19dc:	0f000000 	svceq	0x00000000
    19e0:	00062b04 	andeq	r2, r6, r4, lsl #22
    19e4:	00540900 	subseq	r0, r4, r0, lsl #18
    19e8:	06550000 	ldrbeq	r0, [r5], -r0
    19ec:	310a0000 	mrscc	r0, (UNDEF: 10)
    19f0:	02000000 	andeq	r0, r0, #0
    19f4:	00540900 	subseq	r0, r4, r0, lsl #18
    19f8:	06650000 	strbteq	r0, [r5], -r0
    19fc:	310a0000 	mrscc	r0, (UNDEF: 10)
    1a00:	00000000 	andeq	r0, r0, r0
    1a04:	08e70600 	stmiaeq	r7!, {r9, sl}^
    1a08:	1f050000 	svcne	0x00050000
    1a0c:	03221a01 			; <UNDEFINED> instruction: 0x03221a01
    1a10:	601a0000 	andsvs	r0, sl, r0
    1a14:	0c00000a 	stceq	0, cr0, [r0], {10}
    1a18:	08012305 	stmdaeq	r1, {r0, r2, r8, r9, sp}
    1a1c:	000006ab 	andeq	r0, r0, fp, lsr #13
    1a20:	00090f18 	andeq	r0, r9, r8, lsl pc
    1a24:	01250500 			; <UNDEFINED> instruction: 0x01250500
    1a28:	0006ab11 	andeq	sl, r6, r1, lsl fp
    1a2c:	db180000 	blle	601a34 <mailbuffer+0x5d4894>
    1a30:	05000007 	streq	r0, [r0, #-7]
    1a34:	38070126 	stmdacc	r7, {r1, r2, r5, r8}
    1a38:	04000000 	streq	r0, [r0], #-0
    1a3c:	00091518 	andeq	r1, r9, r8, lsl r5
    1a40:	01270500 			; <UNDEFINED> instruction: 0x01270500
    1a44:	0006b10b 	andeq	fp, r6, fp, lsl #2
    1a48:	0f000800 	svceq	0x00000800
    1a4c:	00067204 	andeq	r7, r6, r4, lsl #4
    1a50:	65040f00 	strvs	r0, [r4, #-3840]	; 0xfffff100
    1a54:	1a000006 	bne	1a74 <_start-0x658c>
    1a58:	00000625 	andeq	r0, r0, r5, lsr #12
    1a5c:	013f050e 	teqeq	pc, lr, lsl #10
    1a60:	0006f008 	andeq	pc, r6, r8
    1a64:	095f1800 	ldmdbeq	pc, {fp, ip}^	; <UNPREDICTABLE>
    1a68:	40050000 	andmi	r0, r5, r0
    1a6c:	06f01201 	ldrbteq	r1, [r0], r1, lsl #4
    1a70:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1a74:	0000099f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
    1a78:	12014105 	andne	r4, r1, #1073741825	; 0x40000001
    1a7c:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a80:	09bb1806 	ldmibeq	fp!, {r1, r2, fp, ip}
    1a84:	42050000 	andmi	r0, r5, #0
    1a88:	00621201 	rsbeq	r1, r2, r1, lsl #4
    1a8c:	000c0000 	andeq	r0, ip, r0
    1a90:	00006209 	andeq	r6, r0, r9, lsl #4
    1a94:	00070000 	andeq	r0, r7, r0
    1a98:	00310a00 	eorseq	r0, r1, r0, lsl #20
    1a9c:	00020000 	andeq	r0, r2, r0
    1aa0:	8005d01b 	andhi	sp, r5, fp, lsl r0
    1aa4:	08150702 	ldmdaeq	r5, {r1, r8, r9, sl}
    1aa8:	34180000 	ldrcc	r0, [r8], #-0
    1aac:	0500000a 	streq	r0, [r0, #-10]
    1ab0:	31180282 	tstcc	r8, r2, lsl #5
    1ab4:	00000000 	andeq	r0, r0, r0
    1ab8:	0009a518 	andeq	sl, r9, r8, lsl r5
    1abc:	02830500 	addeq	r0, r3, #0, 10
    1ac0:	00012e12 	andeq	r2, r1, r2, lsl lr
    1ac4:	f7180400 			; <UNDEFINED> instruction: 0xf7180400
    1ac8:	05000007 	streq	r0, [r0, #-7]
    1acc:	15100284 	ldrne	r0, [r0, #-644]	; 0xfffffd7c
    1ad0:	08000008 	stmdaeq	r0, {r3}
    1ad4:	000aae18 	andeq	sl, sl, r8, lsl lr
    1ad8:	02850500 	addeq	r0, r5, #0, 10
    1adc:	0001bc17 	andeq	fp, r1, r7, lsl ip
    1ae0:	9a182400 	bls	60aae8 <mailbuffer+0x5dd948>
    1ae4:	05000007 	streq	r0, [r0, #-7]
    1ae8:	380f0286 	stmdacc	pc, {r1, r2, r7, r9}	; <UNPREDICTABLE>
    1aec:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    1af0:	00090a18 	andeq	r0, r9, r8, lsl sl
    1af4:	02870500 	addeq	r0, r7, #0, 10
    1af8:	0000812c 	andeq	r8, r0, ip, lsr #2
    1afc:	c4185000 	ldrgt	r5, [r8], #-0
    1b00:	0500000a 	streq	r0, [r0, #-10]
    1b04:	b71a0288 	ldrlt	r0, [sl, -r8, lsl #5]
    1b08:	58000006 	stmdapl	r0, {r1, r2}
    1b0c:	00089918 	andeq	r9, r8, r8, lsl r9
    1b10:	02890500 	addeq	r0, r9, #0, 10
    1b14:	00010f16 	andeq	r0, r1, r6, lsl pc
    1b18:	c9186800 	ldmdbgt	r8, {fp, sp, lr}
    1b1c:	0500000a 	streq	r0, [r0, #-10]
    1b20:	0f16028a 	svceq	0x0016028a
    1b24:	70000001 	andvc	r0, r0, r1
    1b28:	0006a618 	andeq	sl, r6, r8, lsl r6
    1b2c:	028b0500 	addeq	r0, fp, #0, 10
    1b30:	00010f16 	andeq	r0, r1, r6, lsl pc
    1b34:	6f187800 	svcvs	0x00187800
    1b38:	0500000a 	streq	r0, [r0, #-10]
    1b3c:	2510028c 	ldrcs	r0, [r0, #-652]	; 0xfffffd74
    1b40:	80000008 	andhi	r0, r0, r8
    1b44:	0007eb18 	andeq	lr, r7, r8, lsl fp
    1b48:	028d0500 	addeq	r0, sp, #0, 10
    1b4c:	00083510 	andeq	r3, r8, r0, lsl r5
    1b50:	d3188800 	tstle	r8, #0, 16
    1b54:	05000009 	streq	r0, [r0, #-9]
    1b58:	380f028e 	stmdacc	pc, {r1, r2, r3, r7, r9}	; <UNPREDICTABLE>
    1b5c:	a0000000 	andge	r0, r0, r0
    1b60:	00074c18 	andeq	r4, r7, r8, lsl ip
    1b64:	028f0500 	addeq	r0, pc, #0, 10
    1b68:	00010f16 	andeq	r0, r1, r6, lsl pc
    1b6c:	9718a400 	ldrls	sl, [r8, -r0, lsl #8]
    1b70:	05000006 	streq	r0, [r0, #-6]
    1b74:	0f160290 	svceq	0x00160290
    1b78:	ac000001 	stcge	0, cr0, [r0], {1}
    1b7c:	00073b18 	andeq	r3, r7, r8, lsl fp
    1b80:	02910500 	addseq	r0, r1, #0, 10
    1b84:	00010f16 	andeq	r0, r1, r6, lsl pc
    1b88:	3e18b400 	cfmulscc	mvf11, mvf8, mvf0
    1b8c:	05000006 	streq	r0, [r0, #-6]
    1b90:	0f160292 	svceq	0x00160292
    1b94:	bc000001 	stclt	0, cr0, [r0], {1}
    1b98:	00064d18 	andeq	r4, r6, r8, lsl sp
    1b9c:	02930500 	addseq	r0, r3, #0, 10
    1ba0:	00010f16 	andeq	r0, r1, r6, lsl pc
    1ba4:	b918c400 	ldmdblt	r8, {sl, lr, pc}
    1ba8:	05000008 	streq	r0, [r0, #-8]
    1bac:	38080294 	stmdacc	r8, {r2, r4, r7, r9}
    1bb0:	cc000000 	stcgt	0, cr0, [r0], {-0}
    1bb4:	01340900 	teqeq	r4, r0, lsl #18
    1bb8:	08250000 	stmdaeq	r5!, {}	; <UNPREDICTABLE>
    1bbc:	310a0000 	mrscc	r0, (UNDEF: 10)
    1bc0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1bc4:	01340900 	teqeq	r4, r0, lsl #18
    1bc8:	08350000 	ldmdaeq	r5!, {}	; <UNPREDICTABLE>
    1bcc:	310a0000 	mrscc	r0, (UNDEF: 10)
    1bd0:	07000000 	streq	r0, [r0, -r0]
    1bd4:	01340900 	teqeq	r4, r0, lsl #18
    1bd8:	08450000 	stmdaeq	r5, {}^	; <UNPREDICTABLE>
    1bdc:	310a0000 	mrscc	r0, (UNDEF: 10)
    1be0:	17000000 	strne	r0, [r0, -r0]
    1be4:	05f01b00 	ldrbeq	r1, [r0, #2816]!	; 0xb00
    1be8:	6c070299 	sfmvs	f0, 4, [r7], {153}	; 0x99
    1bec:	18000008 	stmdane	r0, {r3}
    1bf0:	00000853 	andeq	r0, r0, r3, asr r8
    1bf4:	1b029c05 	blne	a8c10 <mailbuffer+0x7ba70>
    1bf8:	0000086c 	andeq	r0, r0, ip, ror #16
    1bfc:	0a661800 	beq	1987c04 <mailbuffer+0x195aa64>
    1c00:	9d050000 	stcls	0, cr0, [r5, #-0]
    1c04:	087c1802 	ldmdaeq	ip!, {r1, fp, ip}^
    1c08:	00780000 	rsbseq	r0, r8, r0
    1c0c:	00031c09 	andeq	r1, r3, r9, lsl #24
    1c10:	00087c00 	andeq	r7, r8, r0, lsl #24
    1c14:	00310a00 	eorseq	r0, r1, r0, lsl #20
    1c18:	001d0000 	andseq	r0, sp, r0
    1c1c:	00003109 	andeq	r3, r0, r9, lsl #2
    1c20:	00088c00 	andeq	r8, r8, r0, lsl #24
    1c24:	00310a00 	eorseq	r0, r1, r0, lsl #20
    1c28:	001d0000 	andseq	r0, sp, r0
    1c2c:	7e05f01c 	mcrvc	0, 0, pc, cr5, cr12, {0}	; <UNPREDICTABLE>
    1c30:	08b10302 	ldmeq	r1!, {r1, r8, r9}
    1c34:	581d0000 	ldmdapl	sp, {}	; <UNPREDICTABLE>
    1c38:	05000009 	streq	r0, [r0, #-9]
    1c3c:	000b0295 	muleq	fp, r5, r2
    1c40:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    1c44:	00000a9b 	muleq	r0, fp, sl
    1c48:	0b029e05 	bleq	a9464 <mailbuffer+0x7c2c4>
    1c4c:	00000845 	andeq	r0, r0, r5, asr #16
    1c50:	01340900 	teqeq	r4, r0, lsl #18
    1c54:	08c10000 	stmiaeq	r1, {}^	; <UNPREDICTABLE>
    1c58:	310a0000 	mrscc	r0, (UNDEF: 10)
    1c5c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1c60:	067e1e00 	ldrbteq	r1, [lr], -r0, lsl #28
    1c64:	040f0000 	streq	r0, [pc], #-0	; 1c6c <_start-0x6394>
    1c68:	000008c1 	andeq	r0, r0, r1, asr #17
    1c6c:	0008d71f 	andeq	sp, r8, pc, lsl r7
    1c70:	04831600 	streq	r1, [r3], #1536	; 0x600
    1c74:	0f000000 	svceq	0x00000000
    1c78:	0008cc04 	andeq	ip, r8, r4, lsl #24
    1c7c:	a6040f00 	strge	r0, [r4], -r0, lsl #30
    1c80:	1f000001 	svcne	0x00000001
    1c84:	000008ee 	andeq	r0, r0, lr, ror #17
    1c88:	00003816 	andeq	r3, r0, r6, lsl r8
    1c8c:	040f0000 	streq	r0, [pc], #-0	; 1c94 <_start-0x636c>
    1c90:	000008f4 	strdeq	r0, [r0], -r4
    1c94:	08e3040f 	stmiaeq	r3!, {r0, r1, r2, r3, sl}^
    1c98:	65090000 	strvs	r0, [r9, #-0]
    1c9c:	0a000006 	beq	1cbc <_start-0x6344>
    1ca0:	0a000009 	beq	1ccc <_start-0x6334>
    1ca4:	00000031 	andeq	r0, r0, r1, lsr r0
    1ca8:	e7200002 	str	r0, [r0, -r2]!
    1cac:	05000009 	streq	r0, [r0, #-9]
    1cb0:	8317032e 	tsthi	r7, #-1207959552	; 0xb8000000
    1cb4:	20000004 	andcs	r0, r0, r4
    1cb8:	000009e0 	andeq	r0, r0, r0, ror #19
    1cbc:	1d032f05 	stcne	15, cr2, [r3, #-20]	; 0xffffffec
    1cc0:	00000489 	andeq	r0, r0, r9, lsl #9
    1cc4:	092f040f 	stmdbeq	pc!, {r0, r1, r2, r3, sl}	; <UNPREDICTABLE>
    1cc8:	240e0000 	strcs	r0, [lr], #-0
    1ccc:	21000009 	tstcs	r0, r9
    1cd0:	00086b22 	andeq	r6, r8, r2, lsr #22
    1cd4:	0e640600 	cdpeq	6, 6, cr0, cr4, cr0, {0}
    1cd8:	0000012e 	andeq	r0, r0, lr, lsr #2
    1cdc:	00000c02 	andeq	r0, r0, r2, lsl #24
    1ce0:	1c610700 	stclne	7, cr0, [r1], #-0
    1ce4:	00000075 	andeq	r0, r0, r5, ror r0
    1ce8:	00035f10 	andeq	r5, r3, r0, lsl pc
    1cec:	69081400 	stmdbvs	r8, {sl, ip}
    1cf0:	00099708 	andeq	r9, r9, r8, lsl #14
    1cf4:	03120c00 	tsteq	r2, #0, 24
    1cf8:	6b080000 	blvs	201d00 <mailbuffer+0x1d4b60>
    1cfc:	00093c0f 	andeq	r3, r9, pc, lsl #24
    1d00:	fd0c0000 	stc2	0, cr0, [ip, #-0]
    1d04:	08000004 	stmdaeq	r0, {r2}
    1d08:	099c1f6c 	ldmibeq	ip, {r2, r3, r5, r6, r8, r9, sl, fp, ip}
    1d0c:	0c040000 	stceq	0, cr0, [r4], {-0}
    1d10:	000003cf 	andeq	r0, r0, pc, asr #7
    1d14:	9c1f6d08 	ldcls	13, cr6, [pc], {8}
    1d18:	08000009 	stmdaeq	r0, {r0, r3}
    1d1c:	0003340c 	andeq	r3, r3, ip, lsl #8
    1d20:	096e0800 	stmdbeq	lr!, {fp}^
    1d24:	00000127 	andeq	r0, r0, r7, lsr #2
    1d28:	02dd0c0c 	sbcseq	r0, sp, #12, 24	; 0xc00
    1d2c:	6f080000 	svcvs	0x00080000
    1d30:	00012709 	andeq	r2, r1, r9, lsl #14
    1d34:	05001000 	streq	r1, [r0, #-0]
    1d38:	00000948 	andeq	r0, r0, r8, asr #18
    1d3c:	0997040f 	ldmibeq	r7, {r0, r1, r2, r3, sl}
    1d40:	10020000 	andne	r0, r2, r0
    1d44:	08000005 	stmdaeq	r0, {r0, r2}
    1d48:	09481b71 	stmdbeq	r8, {r0, r4, r5, r6, r8, r9, fp, ip}^
    1d4c:	a2050000 	andge	r0, r5, #0
    1d50:	10000009 	andne	r0, r0, r9
    1d54:	0000056c 	andeq	r0, r0, ip, ror #10
    1d58:	0873080c 	ldmdaeq	r3!, {r2, r3, fp}^
    1d5c:	000009e8 	andeq	r0, r0, r8, ror #19
    1d60:	0003120c 	andeq	r1, r3, ip, lsl #4
    1d64:	0f750800 	svceq	0x00750800
    1d68:	0000093c 	andeq	r0, r0, ip, lsr r9
    1d6c:	04fd0c00 	ldrbteq	r0, [sp], #3072	; 0xc00
    1d70:	76080000 	strvc	r0, [r8], -r0
    1d74:	00099c1e 	andeq	r9, r9, lr, lsl ip
    1d78:	cf0c0400 	svcgt	0x000c0400
    1d7c:	08000003 	stmdaeq	r0, {r0, r1}
    1d80:	099c1e77 	ldmibeq	ip, {r0, r1, r2, r4, r5, r6, r9, sl, fp, ip}
    1d84:	00080000 	andeq	r0, r8, r0
    1d88:	00048402 	andeq	r8, r4, r2, lsl #8
    1d8c:	20790800 	rsbscs	r0, r9, r0, lsl #16
    1d90:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
    1d94:	0009e805 	andeq	lr, r9, r5, lsl #16
    1d98:	057c1000 	ldrbeq	r1, [ip, #-0]!
    1d9c:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    1da0:	0a2e107e 	beq	b85fa0 <mailbuffer+0xb58e00>
    1da4:	a30c0000 	movwge	r0, #49152	; 0xc000
    1da8:	08000004 	stmdaeq	r0, {r2}
    1dac:	007c2280 	rsbseq	r2, ip, r0, lsl #5
    1db0:	0c000000 	stceq	0, cr0, [r0], {-0}
    1db4:	0000030a 	andeq	r0, r0, sl, lsl #6
    1db8:	2e178108 	mnfcss	f0, #0.0
    1dbc:	0400000a 	streq	r0, [r0], #-10
    1dc0:	00032b0c 	andeq	r2, r3, ip, lsl #22
    1dc4:	19820800 	stmibne	r2, {fp}
    1dc8:	000009f4 	strdeq	r0, [r0], -r4
    1dcc:	040f0008 	streq	r0, [pc], #-8	; 1dd4 <_start-0x622c>
    1dd0:	000009ae 	andeq	r0, r0, lr, lsr #19
    1dd4:	00099002 	andeq	r9, r9, r2
    1dd8:	03830800 	orreq	r0, r3, #0, 16
    1ddc:	000009f9 	strdeq	r0, [r0], -r9
    1de0:	000ba310 	andeq	sl, fp, r0, lsl r3
    1de4:	68090800 	stmdavs	r9, {fp}
    1de8:	000a6810 	andeq	r6, sl, r0, lsl r8
    1dec:	0bb80c00 	bleq	fee04df4 <_estack+0xf6df4df4>
    1df0:	6a090000 	bvs	241df8 <mailbuffer+0x214c58>
    1df4:	00006910 	andeq	r6, r0, r0, lsl r9
    1df8:	150c0000 	strne	r0, [ip, #-0]
    1dfc:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    1e00:	093c106b 	ldmdbeq	ip!, {r0, r1, r3, r5, r6, ip}
    1e04:	00040000 	andeq	r0, r4, r0
    1e08:	000c2902 	andeq	r2, ip, r2, lsl #18
    1e0c:	036c0900 	cmneq	ip, #0, 18
    1e10:	00000a40 	andeq	r0, r0, r0, asr #20
    1e14:	000d3b10 	andeq	r3, sp, r0, lsl fp
    1e18:	79014c00 	stmdbvc	r1, {sl, fp, lr}
    1e1c:	000b1110 	andeq	r1, fp, r0, lsl r1
    1e20:	0bf30c00 	bleq	ffcc4e28 <_estack+0xf7cb4e28>
    1e24:	7b010000 	blvc	41e2c <mailbuffer+0x14c8c>
    1e28:	000b110f 	andeq	r1, fp, pc, lsl #2
    1e2c:	c90c0000 	stmdbgt	ip, {}	; <UNPREDICTABLE>
    1e30:	0100000d 	tsteq	r0, sp
    1e34:	0b110f7c 	bleq	445c2c <mailbuffer+0x418a8c>
    1e38:	0c040000 	stceq	0, cr0, [r4], {-0}
    1e3c:	00000e00 	andeq	r0, r0, r0, lsl #28
    1e40:	110f7e01 	tstne	pc, r1, lsl #28
    1e44:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    1e48:	000bad0c 	andeq	sl, fp, ip, lsl #26
    1e4c:	0f7f0100 	svceq	0x007f0100
    1e50:	00000b11 	andeq	r0, r0, r1, lsl fp
    1e54:	0dda0c0c 	ldcleq	12, cr0, [sl, #48]	; 0x30
    1e58:	81010000 	mrshi	r0, (UNDEF: 1)
    1e5c:	000a3408 	andeq	r3, sl, r8, lsl #8
    1e60:	790c1000 	stmdbvc	ip, {ip}
    1e64:	0100000b 	tsteq	r0, fp
    1e68:	0a340882 	beq	d04078 <mailbuffer+0xcd6ed8>
    1e6c:	0c240000 	stceq	0, cr0, [r4], #-0
    1e70:	00000d7f 	andeq	r0, r0, pc, ror sp
    1e74:	7c228401 	cfstrsvc	mvf8, [r2], #-4
    1e78:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    1e7c:	000cb20c 	andeq	fp, ip, ip, lsl #4
    1e80:	19850100 	stmibne	r5, {r8}
    1e84:	00000075 	andeq	r0, r0, r5, ror r0
    1e88:	0e0a0c3c 	mcreq	12, 0, r0, cr10, cr12, {1}
    1e8c:	86010000 	strhi	r0, [r1], -r0
    1e90:	00007519 	andeq	r7, r0, r9, lsl r5
    1e94:	c10c4000 	mrsgt	r4, (UNDEF: 12)
    1e98:	0100000d 	tsteq	r0, sp
    1e9c:	00702088 	rsbseq	r2, r0, r8, lsl #1
    1ea0:	0c440000 	mareq	acc0, r0, r4
    1ea4:	00000b64 	andeq	r0, r0, r4, ror #22
    1ea8:	70208901 	eorvc	r8, r0, r1, lsl #18
    1eac:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    1eb0:	4d040f00 	stcmi	15, cr0, [r4, #-0]
    1eb4:	02000000 	andeq	r0, r0, #0
    1eb8:	00000d26 	andeq	r0, r0, r6, lsr #26
    1ebc:	74039001 	strvc	r9, [r3], #-1
    1ec0:	0200000a 	andeq	r0, r0, #10
    1ec4:	00000c3f 	andeq	r0, r0, pc, lsr ip
    1ec8:	34129801 	ldrcc	r9, [r2], #-2049	; 0xfffff7ff
    1ecc:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    1ed0:	00000b23 	andeq	r0, r0, r3, lsr #22
    1ed4:	0b17040f 	bleq	5c2f18 <mailbuffer+0x595d78>
    1ed8:	340e0000 	strcc	r0, [lr], #-0
    1edc:	2300000b 	movwcs	r0, #11
    1ee0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1ee4:	16056901 	strne	r6, [r5], -r1, lsl #18
    1ee8:	00000069 	andeq	r0, r0, r9, rrx
    1eec:	00011b58 	andeq	r1, r1, r8, asr fp
    1ef0:	00000048 	andeq	r0, r0, r8, asr #32
    1ef4:	0b7b9c01 	bleq	1ee8f00 <mailbuffer+0x1ebbd60>
    1ef8:	3b240000 	blcc	901f00 <mailbuffer+0x8d4d60>
    1efc:	0100000b 	tsteq	r0, fp
    1f00:	2f430569 	svccs	0x00430569
    1f04:	0200000b 	andeq	r0, r0, #11
    1f08:	37256c91 			; <UNDEFINED> instruction: 0x37256c91
    1f0c:	0100000c 	tsteq	r0, ip
    1f10:	6916056b 	ldmdbvs	r6, {r0, r1, r3, r5, r6, r8, sl}
    1f14:	02000000 	andeq	r0, r0, #0
    1f18:	26007491 			; <UNDEFINED> instruction: 0x26007491
    1f1c:	00000ca3 	andeq	r0, r0, r3, lsr #25
    1f20:	1d055d01 	stcne	13, cr5, [r5, #-4]
    1f24:	00000069 	andeq	r0, r0, r9, rrx
    1f28:	00011b0c 	andeq	r1, r1, ip, lsl #22
    1f2c:	0000004c 	andeq	r0, r0, ip, asr #32
    1f30:	0bb79c01 	bleq	fede8f3c <_estack+0xf6dd8f3c>
    1f34:	3b240000 	blcc	901f3c <mailbuffer+0x8d4d9c>
    1f38:	0100000b 	tsteq	r0, fp
    1f3c:	2f40055d 	svccs	0x0040055d
    1f40:	0200000b 	andeq	r0, r0, #11
    1f44:	37256c91 			; <UNDEFINED> instruction: 0x37256c91
    1f48:	0100000c 	tsteq	r0, ip
    1f4c:	6916055f 	ldmdbvs	r6, {r0, r1, r2, r3, r4, r6, r8, sl}
    1f50:	02000000 	andeq	r0, r0, #0
    1f54:	23007491 	movwcs	r7, #1169	; 0x491
    1f58:	00000b4a 	andeq	r0, r0, sl, asr #22
    1f5c:	16055201 	strne	r5, [r5], -r1, lsl #4
    1f60:	00000069 	andeq	r0, r0, r9, rrx
    1f64:	00011acc 	andeq	r1, r1, ip, asr #21
    1f68:	00000040 	andeq	r0, r0, r0, asr #32
    1f6c:	0bf39c01 	bleq	ffce8f78 <_estack+0xf7cd8f78>
    1f70:	3b240000 	blcc	901f78 <mailbuffer+0x8d4dd8>
    1f74:	0100000b 	tsteq	r0, fp
    1f78:	2f440552 	svccs	0x00440552
    1f7c:	0200000b 	andeq	r0, r0, #11
    1f80:	37256c91 			; <UNDEFINED> instruction: 0x37256c91
    1f84:	0100000c 	tsteq	r0, ip
    1f88:	69160554 	ldmdbvs	r6, {r2, r4, r6, r8, sl}
    1f8c:	02000000 	andeq	r0, r0, #0
    1f90:	26007491 			; <UNDEFINED> instruction: 0x26007491
    1f94:	00000c07 	andeq	r0, r0, r7, lsl #24
    1f98:	1d054601 	stcne	6, cr4, [r5, #-4]
    1f9c:	00000069 	andeq	r0, r0, r9, rrx
    1fa0:	00011a88 	andeq	r1, r1, r8, lsl #21
    1fa4:	00000044 	andeq	r0, r0, r4, asr #32
    1fa8:	0c2f9c01 	stceq	12, cr9, [pc], #-4	; 1fac <_start-0x6054>
    1fac:	3b240000 	blcc	901fb4 <mailbuffer+0x8d4e14>
    1fb0:	0100000b 	tsteq	r0, fp
    1fb4:	2f410546 	svccs	0x00410546
    1fb8:	0200000b 	andeq	r0, r0, #11
    1fbc:	37256c91 			; <UNDEFINED> instruction: 0x37256c91
    1fc0:	0100000c 	tsteq	r0, ip
    1fc4:	69160548 	ldmdbvs	r6, {r3, r6, r8, sl}
    1fc8:	02000000 	andeq	r0, r0, #0
    1fcc:	27007491 			; <UNDEFINED> instruction: 0x27007491
    1fd0:	00000db2 			; <UNDEFINED> instruction: 0x00000db2
    1fd4:	0d050601 	stceq	6, cr0, [r5, #-4]
    1fd8:	00011984 	andeq	r1, r1, r4, lsl #19
    1fdc:	00000104 	andeq	r0, r0, r4, lsl #2
    1fe0:	0c579c01 	mrrceq	12, 0, r9, r7, cr1
    1fe4:	3b240000 	blcc	901fec <mailbuffer+0x8d4e4c>
    1fe8:	0100000b 	tsteq	r0, fp
    1fec:	232a0506 			; <UNDEFINED> instruction: 0x232a0506
    1ff0:	0200000b 	andeq	r0, r0, #11
    1ff4:	27007491 			; <UNDEFINED> instruction: 0x27007491
    1ff8:	00000d6a 	andeq	r0, r0, sl, ror #26
    1ffc:	0d04f801 	stceq	8, cr15, [r4, #-4]
    2000:	000118f4 	strdeq	r1, [r1], -r4
    2004:	00000090 	muleq	r0, r0, r0
    2008:	0c8f9c01 	stceq	12, cr9, [pc], {1}
    200c:	3b240000 	blcc	902014 <mailbuffer+0x8d4e74>
    2010:	0100000b 	tsteq	r0, fp
    2014:	3a3204f8 	bcc	c833fc <mailbuffer+0xc5625c>
    2018:	0200000b 	andeq	r0, r0, #11
    201c:	25247491 	strcs	r7, [r4, #-1169]!	; 0xfffffb6f
    2020:	0100000e 	tsteq	r0, lr
    2024:	244704f8 	strbcs	r0, [r7], #-1272	; 0xfffffb08
    2028:	02000009 	andeq	r0, r0, #9
    202c:	27007091 			; <UNDEFINED> instruction: 0x27007091
    2030:	00000b90 	muleq	r0, r0, fp
    2034:	0d04d201 	sfmeq	f5, 1, [r4, #-4]
    2038:	000117c8 	andeq	r1, r1, r8, asr #15
    203c:	0000012c 	andeq	r0, r0, ip, lsr #2
    2040:	0cd79c01 	ldcleq	12, cr9, [r7], {1}
    2044:	3b240000 	blcc	90204c <mailbuffer+0x8d4eac>
    2048:	0100000b 	tsteq	r0, fp
    204c:	342904d2 	strtcc	r0, [r9], #-1234	; 0xfffffb2e
    2050:	0200000b 	andeq	r0, r0, #11
    2054:	18247491 	stmdane	r4!, {r0, r4, r7, sl, ip, sp, lr}
    2058:	0100000d 	tsteq	r0, sp
    205c:	243e04d2 	ldrtcs	r0, [lr], #-1234	; 0xfffffb2e
    2060:	02000009 	andeq	r0, r0, #9
    2064:	d0247091 	mlale	r4, r1, r0, r7
    2068:	0100000d 	tsteq	r0, sp
    206c:	695b04d2 	ldmdbvs	fp, {r1, r4, r6, r7, sl}^
    2070:	02000000 	andeq	r0, r0, #0
    2074:	28006c91 	stmdacs	r0, {r0, r4, r7, sl, fp, sp, lr}
    2078:	00000b6c 	andeq	r0, r0, ip, ror #22
    207c:	0604a901 	streq	sl, [r4], -r1, lsl #18
    2080:	00011794 	muleq	r1, r4, r7
    2084:	00000034 	andeq	r0, r0, r4, lsr r0
    2088:	0cff9c01 	ldcleq	12, cr9, [pc], #4	; 2094 <_start-0x5f6c>
    208c:	3b240000 	blcc	902094 <mailbuffer+0x8d4ef4>
    2090:	0100000b 	tsteq	r0, fp
    2094:	232104a9 			; <UNDEFINED> instruction: 0x232104a9
    2098:	0200000b 	andeq	r0, r0, #11
    209c:	23007491 	movwcs	r7, #1169	; 0x491
    20a0:	00000cfa 	strdeq	r0, [r0], -sl
    20a4:	18049d01 	stmdane	r4, {r0, r8, sl, fp, ip, pc}
    20a8:	00000075 	andeq	r0, r0, r5, ror r0
    20ac:	00011764 	andeq	r1, r1, r4, ror #14
    20b0:	00000030 	andeq	r0, r0, r0, lsr r0
    20b4:	0d3b9c01 	ldceq	12, cr9, [fp, #-4]!
    20b8:	3b240000 	blcc	9020c0 <mailbuffer+0x8d4f20>
    20bc:	0100000b 	tsteq	r0, fp
    20c0:	2f4a049d 	svccs	0x004a049d
    20c4:	0200000b 	andeq	r0, r0, #11
    20c8:	36256c91 			; <UNDEFINED> instruction: 0x36256c91
    20cc:	0100000c 	tsteq	r0, ip
    20d0:	7518049f 	ldrvc	r0, [r8, #-1183]	; 0xfffffb61
    20d4:	02000000 	andeq	r0, r0, #0
    20d8:	29007491 	stmdbcs	r0, {r0, r4, r7, sl, ip, sp, lr}
    20dc:	00000b24 	andeq	r0, r0, r4, lsr #22
    20e0:	18048f01 	stmdane	r4, {r0, r8, r9, sl, fp, pc}
    20e4:	00000075 	andeq	r0, r0, r5, ror r0
    20e8:	00011730 	andeq	r1, r1, r0, lsr r7
    20ec:	00000034 	andeq	r0, r0, r4, lsr r0
    20f0:	0d779c01 	ldcleq	12, cr9, [r7, #-4]!
    20f4:	3b240000 	blcc	9020fc <mailbuffer+0x8d4f5c>
    20f8:	0100000b 	tsteq	r0, fp
    20fc:	2f43048f 	svccs	0x0043048f
    2100:	0200000b 	andeq	r0, r0, #11
    2104:	36256c91 			; <UNDEFINED> instruction: 0x36256c91
    2108:	0100000c 	tsteq	r0, ip
    210c:	75180491 	ldrvc	r0, [r8, #-1169]	; 0xfffffb6f
    2110:	02000000 	andeq	r0, r0, #0
    2114:	29007491 	stmdbcs	r0, {r0, r4, r7, sl, ip, sp, lr}
    2118:	00000c4c 	andeq	r0, r0, ip, asr #24
    211c:	16045601 	strne	r5, [r4], -r1, lsl #12
    2120:	00000069 	andeq	r0, r0, r9, rrx
    2124:	00011650 	andeq	r1, r1, r0, asr r6
    2128:	000000e0 	andeq	r0, r0, r0, ror #1
    212c:	0de39c01 	stcleq	12, cr9, [r3, #4]!
    2130:	3b240000 	blcc	902138 <mailbuffer+0x8d4f98>
    2134:	0100000b 	tsteq	r0, fp
    2138:	23390456 	teqcs	r9, #1442840576	; 0x56000000
    213c:	0200000b 	andeq	r0, r0, #11
    2140:	25246c91 	strcs	r6, [r4, #-3217]!	; 0xfffff36f
    2144:	0100000e 	tsteq	r0, lr
    2148:	294f0456 	stmdbcs	pc, {r1, r2, r4, r6, sl}^	; <UNPREDICTABLE>
    214c:	02000001 	andeq	r0, r0, #1
    2150:	d2246891 	eorle	r6, r4, #9502720	; 0x910000
    2154:	0100000c 	tsteq	r0, ip
    2158:	e36f0456 	cmn	pc, #1442840576	; 0x56000000
    215c:	0200000d 	andeq	r0, r0, #13
    2160:	37256491 			; <UNDEFINED> instruction: 0x37256491
    2164:	0100000c 	tsteq	r0, ip
    2168:	69160458 	ldmdbvs	r6, {r3, r4, r6, sl}
    216c:	02000000 	andeq	r0, r0, #0
    2170:	dc257491 	cfstrsle	mvf7, [r5], #-580	; 0xfffffdbc
    2174:	0100000b 	tsteq	r0, fp
    2178:	75180459 	ldrvc	r0, [r8, #-1113]	; 0xfffffba7
    217c:	02000000 	andeq	r0, r0, #0
    2180:	0f007091 	svceq	0x00007091
    2184:	00006904 	andeq	r6, r0, r4, lsl #18
    2188:	0bc72900 	bleq	ff1cc590 <_estack+0xf71bc590>
    218c:	c1010000 	mrsgt	r0, (UNDEF: 1)
    2190:	00691603 	rsbeq	r1, r9, r3, lsl #12
    2194:	144c0000 	strbne	r0, [ip], #-0
    2198:	02040001 	andeq	r0, r4, #1
    219c:	9c010000 	stcls	0, cr0, [r1], {-0}
    21a0:	00000e75 	andeq	r0, r0, r5, ror lr
    21a4:	000b3b24 	andeq	r3, fp, r4, lsr #22
    21a8:	03c10100 	biceq	r0, r1, #0, 2
    21ac:	000b2339 	andeq	r2, fp, r9, lsr r3
    21b0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    21b4:	000e2524 	andeq	r2, lr, r4, lsr #10
    21b8:	03c10100 	biceq	r0, r1, #0, 2
    21bc:	0001294f 	andeq	r2, r1, pc, asr #18
    21c0:	60910200 	addsvs	r0, r1, r0, lsl #4
    21c4:	00106824 	andseq	r6, r0, r4, lsr #16
    21c8:	03c10100 	biceq	r0, r1, #0, 2
    21cc:	00093c66 	andeq	r3, r9, r6, ror #24
    21d0:	5c910200 	lfmpl	f0, 4, [r1], {0}
    21d4:	000bfa24 	andeq	pc, fp, r4, lsr #20
    21d8:	03c10100 	biceq	r0, r1, #0, 2
    21dc:	00006982 	andeq	r6, r0, r2, lsl #19
    21e0:	58910200 	ldmpl	r1, {r9}
    21e4:	000d2d25 	andeq	r2, sp, r5, lsr #26
    21e8:	03c30100 	biceq	r0, r3, #0, 2
    21ec:	00006916 	andeq	r6, r0, r6, lsl r9
    21f0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    21f4:	00119525 	andseq	r9, r1, r5, lsr #10
    21f8:	03c40100 	biceq	r0, r4, #0, 2
    21fc:	000a680e 	andeq	r6, sl, lr, lsl #16
    2200:	68910200 	ldmvs	r1, {r9}
    2204:	000cbb25 	andeq	fp, ip, r5, lsr #22
    2208:	03c50100 	biceq	r0, r5, #0, 2
    220c:	000b110e 	andeq	r1, fp, lr, lsl #2
    2210:	70910200 	addsvc	r0, r1, r0, lsl #4
    2214:	0ae62900 	beq	ff98c61c <_estack+0xf797c61c>
    2218:	86010000 	strhi	r0, [r1], -r0
    221c:	00691603 	rsbeq	r1, r9, r3, lsl #12
    2220:	13700000 	cmnne	r0, #0
    2224:	00dc0001 	sbcseq	r0, ip, r1
    2228:	9c010000 	stcls	0, cr0, [r1], {-0}
    222c:	00000ef1 	strdeq	r0, [r0], -r1
    2230:	000b3b24 	andeq	r3, fp, r4, lsr #22
    2234:	03860100 	orreq	r0, r6, #0, 2
    2238:	000b233d 	andeq	r2, fp, sp, lsr r3
    223c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2240:	000d1824 	andeq	r1, sp, r4, lsr #16
    2244:	03860100 	orreq	r0, r6, #0, 2
    2248:	00092a59 	andeq	r2, r9, r9, asr sl
    224c:	68910200 	ldmvs	r1, {r9}
    2250:	000cd224 	andeq	sp, ip, r4, lsr #4
    2254:	03860100 	orreq	r0, r6, #0, 2
    2258:	000de37e 	andeq	lr, sp, lr, ror r3
    225c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2260:	000da424 	andeq	sl, sp, r4, lsr #8
    2264:	03860100 	orreq	r0, r6, #0, 2
    2268:	000069a7 	andeq	r6, r0, r7, lsr #19
    226c:	60910200 	addsvs	r0, r1, r0, lsl #4
    2270:	000c3725 	andeq	r3, ip, r5, lsr #14
    2274:	03880100 	orreq	r0, r8, #0, 2
    2278:	00006916 	andeq	r6, r0, r6, lsl r9
    227c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2280:	000bdc25 	andeq	sp, fp, r5, lsr #24
    2284:	03890100 	orreq	r0, r9, #0, 2
    2288:	00007518 	andeq	r7, r0, r8, lsl r5
    228c:	70910200 	addsvc	r0, r1, r0, lsl #4
    2290:	0c172900 			; <UNDEFINED> instruction: 0x0c172900
    2294:	41010000 	mrsmi	r0, (UNDEF: 1)
    2298:	00691602 	rsbeq	r1, r9, r2, lsl #12
    229c:	11cc0000 	bicne	r0, ip, r0
    22a0:	01a40001 			; <UNDEFINED> instruction: 0x01a40001
    22a4:	9c010000 	stcls	0, cr0, [r1], {-0}
    22a8:	00000f6d 	andeq	r0, r0, sp, ror #30
    22ac:	000b3b24 	andeq	r3, fp, r4, lsr #22
    22b0:	02410100 	subeq	r0, r1, #0, 2
    22b4:	000b2336 	andeq	r2, fp, r6, lsr r3
    22b8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    22bc:	000d1824 	andeq	r1, sp, r4, lsr #16
    22c0:	02410100 	subeq	r0, r1, #0, 2
    22c4:	00092a52 	andeq	r2, r9, r2, asr sl
    22c8:	60910200 	addsvs	r0, r1, r0, lsl #4
    22cc:	00106824 	andseq	r6, r0, r4, lsr #16
    22d0:	02410100 	subeq	r0, r1, #0, 2
    22d4:	00093c6e 	andeq	r3, r9, lr, ror #24
    22d8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    22dc:	000da424 	andeq	sl, sp, r4, lsr #8
    22e0:	02410100 	subeq	r0, r1, #0, 2
    22e4:	0000698a 	andeq	r6, r0, sl, lsl #19
    22e8:	58910200 	ldmpl	r1, {r9}
    22ec:	000d2d25 	andeq	r2, sp, r5, lsr #26
    22f0:	02430100 	subeq	r0, r3, #0, 2
    22f4:	00006916 	andeq	r6, r0, r6, lsl r9
    22f8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    22fc:	00119525 	andseq	r9, r1, r5, lsr #10
    2300:	02440100 	subeq	r0, r4, #0, 2
    2304:	000a680e 	andeq	r6, sl, lr, lsl #16
    2308:	6c910200 	lfmvs	f0, 4, [r1], {0}
    230c:	0d562900 	vldreq.16	s5, [r6, #-0]	; <UNPREDICTABLE>
    2310:	42010000 	andmi	r0, r1, #0
    2314:	0b230e01 	bleq	8c5b20 <mailbuffer+0x898980>
    2318:	11040000 	mrsne	r0, (UNDEF: 4)
    231c:	00c80001 	sbceq	r0, r8, r1
    2320:	9c010000 	stcls	0, cr0, [r1], {-0}
    2324:	00000fe9 	andeq	r0, r0, r9, ror #31
    2328:	000cec24 	andeq	lr, ip, r4, lsr #24
    232c:	01420100 	mrseq	r0, (UNDEF: 82)
    2330:	0000753a 	andeq	r7, r0, sl, lsr r5
    2334:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2338:	000e0a24 	andeq	r0, lr, r4, lsr #20
    233c:	01420100 	mrseq	r0, (UNDEF: 82)
    2340:	00007560 	andeq	r7, r0, r0, ror #10
    2344:	60910200 	addsvs	r0, r1, r0, lsl #4
    2348:	000aff24 	andeq	pc, sl, r4, lsr #30
    234c:	01420100 	mrseq	r0, (UNDEF: 82)
    2350:	0000547a 	andeq	r5, r0, sl, ror r4
    2354:	5f910200 	svcpl	0x00910200
    2358:	000d4b25 	andeq	r4, sp, r5, lsr #22
    235c:	01440100 	mrseq	r0, (UNDEF: 84)
    2360:	000b3409 	andeq	r3, fp, r9, lsl #8
    2364:	70910200 	addsvc	r0, r1, r0, lsl #4
    2368:	000dee25 	andeq	lr, sp, r5, lsr #28
    236c:	01450100 	mrseq	r0, (UNDEF: 85)
    2370:	00002508 	andeq	r2, r0, r8, lsl #10
    2374:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2378:	000c3725 	andeq	r3, ip, r5, lsr #14
    237c:	01460100 	mrseq	r0, (UNDEF: 86)
    2380:	000b230e 	andeq	r2, fp, lr, lsl #6
    2384:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2388:	0d912a00 	vldreq	s4, [r1]
    238c:	17010000 	strne	r0, [r1, -r0]
    2390:	00690f01 	rsbeq	r0, r9, r1, lsl #30
    2394:	0ff00000 	svceq	0x00f00000	; IMB
    2398:	01140001 	tsteq	r4, r1
    239c:	9c010000 	stcls	0, cr0, [r1], {-0}
    23a0:	000b3b24 	andeq	r3, fp, r4, lsr #22
    23a4:	01170100 	tsteq	r7, r0, lsl #2
    23a8:	000b2330 	andeq	r2, fp, r0, lsr r3
    23ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    23b0:	000d4c24 	andeq	r4, sp, r4, lsr #24
    23b4:	01170100 	tsteq	r7, r0, lsl #2
    23b8:	00006947 	andeq	r6, r0, r7, asr #18
    23bc:	70910200 	addsvc	r0, r1, r0, lsl #4
    23c0:	166c0000 	strbtne	r0, [ip], -r0
    23c4:	00040000 	andeq	r0, r4, r0
    23c8:	0000085a 	andeq	r0, r0, sl, asr r8
    23cc:	00590104 	subseq	r0, r9, r4, lsl #2
    23d0:	dd0c0000 	stcle	0, cr0, [ip, #-0]
    23d4:	cf000011 	svcgt	0x00000011
    23d8:	a0000000 	andge	r0, r0, r0
    23dc:	2400011b 	strcs	r0, [r0], #-283	; 0xfffffee5
    23e0:	a1000019 	tstge	r0, r9, lsl r0
    23e4:	0200000d 	andeq	r0, r0, #13
    23e8:	08a80601 	stmiaeq	r8!, {r0, r9, sl}
    23ec:	25030000 	strcs	r0, [r3, #-0]
    23f0:	02000000 	andeq	r0, r0, #0
    23f4:	08a60801 	stmiaeq	r6!, {r0, fp}
    23f8:	02020000 	andeq	r0, r2, #0
    23fc:	0008c205 	andeq	ip, r8, r5, lsl #4
    2400:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2404:	00000095 	muleq	r0, r5, r0
    2408:	fe050402 	cdp2	4, 0, cr0, cr5, cr2, {0}
    240c:	04000000 	streq	r0, [r0], #-0
    2410:	00000046 	andeq	r0, r0, r6, asr #32
    2414:	63070402 	movwvs	r0, #29698	; 0x7402
    2418:	04000006 	streq	r0, [r0], #-6
    241c:	00000052 	andeq	r0, r0, r2, asr r0
    2420:	f9050802 			; <UNDEFINED> instruction: 0xf9050802
    2424:	02000000 	andeq	r0, r0, #0
    2428:	065e0708 	ldrbeq	r0, [lr], -r8, lsl #14
    242c:	04050000 	streq	r0, [r5], #-0
    2430:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2434:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2438:	00000668 	andeq	r0, r0, r8, ror #12
    243c:	000b4306 	andeq	r4, fp, r6, lsl #6
    2440:	17d80200 	ldrbne	r0, [r8, r0, lsl #4]
    2444:	00000073 	andeq	r0, r0, r3, ror r0
    2448:	81040802 	tsthi	r4, r2, lsl #16
    244c:	07000001 	streq	r0, [r0, -r1]
    2450:	08870604 	stmeq	r7, {r2, r9, sl}
    2454:	0c030000 	stceq	0, cr0, [r3], {-0}
    2458:	00006c0d 	andeq	r6, r0, sp, lsl #24
    245c:	08800600 	stmeq	r0, {r9, sl}
    2460:	2c040000 	stccs	0, cr0, [r4], {-0}
    2464:	0000460e 	andeq	r4, r0, lr, lsl #12
    2468:	09870600 	stmibeq	r7, {r9, sl}
    246c:	72040000 	andvc	r0, r4, #0
    2470:	0000460e 	andeq	r4, r0, lr, lsl #12
    2474:	08120800 	ldmdaeq	r2, {fp}
    2478:	65020000 	strvs	r0, [r2, #-0]
    247c:	00731701 	rsbseq	r1, r3, r1, lsl #14
    2480:	04090000 	streq	r0, [r9], #-0
    2484:	e203a604 	and	sl, r3, #4, 12	; 0x400000
    2488:	0a000000 	beq	2490 <_start-0x5b70>
    248c:	0000080c 	andeq	r0, r0, ip, lsl #16
    2490:	b30ca804 	movwlt	sl, #51204	; 0xc804
    2494:	0a000000 	beq	249c <_start-0x5b64>
    2498:	000007be 			; <UNDEFINED> instruction: 0x000007be
    249c:	e213a904 	ands	sl, r3, #4, 18	; 0x10000
    24a0:	00000000 	andeq	r0, r0, r0
    24a4:	0000310b 	andeq	r3, r0, fp, lsl #2
    24a8:	0000f200 	andeq	pc, r0, r0, lsl #4
    24ac:	00730c00 	rsbseq	r0, r3, r0, lsl #24
    24b0:	00030000 	andeq	r0, r3, r0
    24b4:	a304080d 	movwge	r0, #18445	; 0x480d
    24b8:	00011609 	andeq	r1, r1, r9, lsl #12
    24bc:	09650e00 	stmdbeq	r5!, {r9, sl, fp}^
    24c0:	a5040000 	strge	r0, [r4, #-0]
    24c4:	00006c07 	andeq	r6, r0, r7, lsl #24
    24c8:	6d0e0000 	stcvs	0, cr0, [lr, #-0]
    24cc:	04000009 	streq	r0, [r0], #-9
    24d0:	00c005aa 	sbceq	r0, r0, sl, lsr #11
    24d4:	00040000 	andeq	r0, r4, r0
    24d8:	0008ee06 	andeq	lr, r8, r6, lsl #28
    24dc:	03ab0400 			; <UNDEFINED> instruction: 0x03ab0400
    24e0:	000000f2 	strdeq	r0, [r0], -r2
    24e4:	00078106 	andeq	r8, r7, r6, lsl #2
    24e8:	1baf0400 	blne	febc34f0 <_estack+0xf6bb34f0>
    24ec:	0000008f 	andeq	r0, r0, pc, lsl #1
    24f0:	0009cb06 	andeq	ip, r9, r6, lsl #22
    24f4:	19160500 	ldmdbne	r6, {r8, sl}
    24f8:	00000052 	andeq	r0, r0, r2, asr r0
    24fc:	0007920f 	andeq	r9, r7, pc, lsl #4
    2500:	2f051800 	svccs	0x00051800
    2504:	00019408 	andeq	r9, r1, r8, lsl #8
    2508:	090f0e00 	stmdbeq	pc, {r9, sl, fp}	; <UNPREDICTABLE>
    250c:	31050000 	mrscc	r0, (UNDEF: 5)
    2510:	00019413 	andeq	r9, r1, r3, lsl r4
    2514:	5f100000 	svcpl	0x00100000
    2518:	3205006b 	andcc	r0, r5, #107	; 0x6b
    251c:	00006c07 	andeq	r6, r0, r7, lsl #24
    2520:	500e0400 	andpl	r0, lr, r0, lsl #8
    2524:	05000009 	streq	r0, [r0, #-9]
    2528:	006c0b32 	rsbeq	r0, ip, r2, lsr fp
    252c:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    2530:	0000077b 	andeq	r0, r0, fp, ror r7
    2534:	6c143205 	lfmvs	f3, 4, [r4], {5}
    2538:	0c000000 	stceq	0, cr0, [r0], {-0}
    253c:	000a510e 	andeq	r5, sl, lr, lsl #2
    2540:	1b320500 	blne	c83948 <mailbuffer+0xc567a8>
    2544:	0000006c 	andeq	r0, r0, ip, rrx
    2548:	785f1010 	ldmdavc	pc, {r4, ip}^	; <UNPREDICTABLE>
    254c:	0b330500 	bleq	cc3954 <mailbuffer+0xc967b4>
    2550:	0000019a 	muleq	r0, sl, r1
    2554:	04110014 	ldreq	r0, [r1], #-20	; 0xffffffec
    2558:	0000013a 	andeq	r0, r0, sl, lsr r1
    255c:	00012e0b 	andeq	r2, r1, fp, lsl #28
    2560:	0001aa00 	andeq	sl, r1, r0, lsl #20
    2564:	00730c00 	rsbseq	r0, r3, r0, lsl #24
    2568:	00000000 	andeq	r0, r0, r0
    256c:	0007b90f 	andeq	fp, r7, pc, lsl #18
    2570:	37052400 	strcc	r2, [r5, -r0, lsl #8]
    2574:	00022d08 	andeq	r2, r2, r8, lsl #26
    2578:	06b40e00 	ldrteq	r0, [r4], r0, lsl #28
    257c:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    2580:	00006c09 	andeq	r6, r0, r9, lsl #24
    2584:	960e0000 	strls	r0, [lr], -r0
    2588:	05000009 	streq	r0, [r0, #-9]
    258c:	006c093a 	rsbeq	r0, ip, sl, lsr r9
    2590:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    2594:	000006c9 	andeq	r0, r0, r9, asr #13
    2598:	6c093b05 			; <UNDEFINED> instruction: 0x6c093b05
    259c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    25a0:	000adc0e 	andeq	sp, sl, lr, lsl #24
    25a4:	093c0500 	ldmdbeq	ip!, {r8, sl}
    25a8:	0000006c 	andeq	r0, r0, ip, rrx
    25ac:	085a0e0c 	ldmdaeq	sl, {r2, r3, r9, sl, fp}^
    25b0:	3d050000 	stccc	0, cr0, [r5, #-0]
    25b4:	00006c09 	andeq	r6, r0, r9, lsl #24
    25b8:	3a0e1000 	bcc	3865c0 <mailbuffer+0x359420>
    25bc:	05000008 	streq	r0, [r0, #-8]
    25c0:	006c093e 	rsbeq	r0, ip, lr, lsr r9
    25c4:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
    25c8:	00000a56 	andeq	r0, r0, r6, asr sl
    25cc:	6c093f05 	stcvs	15, cr3, [r9], {5}
    25d0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    25d4:	0008cc0e 	andeq	ip, r8, lr, lsl #24
    25d8:	09400500 	stmdbeq	r0, {r8, sl}^
    25dc:	0000006c 	andeq	r0, r0, ip, rrx
    25e0:	0aa30e1c 	beq	fe8c5e58 <_estack+0xf68b5e58>
    25e4:	41050000 	mrsmi	r0, (UNDEF: 5)
    25e8:	00006c09 	andeq	r6, r0, r9, lsl #24
    25ec:	12002000 	andne	r2, r0, #0
    25f0:	000006d8 	ldrdeq	r0, [r0], -r8
    25f4:	4a050108 	bmi	142a1c <mailbuffer+0x11587c>
    25f8:	00027208 	andeq	r7, r2, r8, lsl #4
    25fc:	075a0e00 	ldrbeq	r0, [sl, -r0, lsl #28]
    2600:	4b050000 	blmi	142608 <mailbuffer+0x115468>
    2604:	0002720a 	andeq	r7, r2, sl, lsl #4
    2608:	130e0000 	movwne	r0, #57344	; 0xe000
    260c:	05000006 	streq	r0, [r0, #-6]
    2610:	0272094c 	rsbseq	r0, r2, #76, 18	; 0x130000
    2614:	13800000 	orrne	r0, r0, #0
    2618:	000009b2 			; <UNDEFINED> instruction: 0x000009b2
    261c:	2e0a4e05 	cdpcs	14, 0, cr4, cr10, cr5, {0}
    2620:	00000001 	andeq	r0, r0, r1
    2624:	06fd1301 	ldrbteq	r1, [sp], r1, lsl #6
    2628:	51050000 	mrspl	r0, (UNDEF: 5)
    262c:	00012e0a 	andeq	r2, r1, sl, lsl #28
    2630:	00010400 	andeq	r0, r1, r0, lsl #8
    2634:	00008d0b 	andeq	r8, r0, fp, lsl #26
    2638:	00028200 	andeq	r8, r2, r0, lsl #4
    263c:	00730c00 	rsbseq	r0, r3, r0, lsl #24
    2640:	001f0000 	andseq	r0, pc, r0
    2644:	00086312 	andeq	r6, r8, r2, lsl r3
    2648:	05019000 	streq	r9, [r1, #-0]
    264c:	02c5085d 	sbceq	r0, r5, #6094848	; 0x5d0000
    2650:	0f0e0000 	svceq	0x000e0000
    2654:	05000009 	streq	r0, [r0, #-9]
    2658:	02c5125e 	sbceq	r1, r5, #-536870907	; 0xe0000005
    265c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2660:	00000920 	andeq	r0, r0, r0, lsr #18
    2664:	6c065f05 	stcvs	15, cr5, [r6], {5}
    2668:	04000000 	streq	r0, [r0], #-0
    266c:	0007620e 	andeq	r6, r7, lr, lsl #4
    2670:	09610500 	stmdbeq	r1!, {r8, sl}^
    2674:	000002cb 	andeq	r0, r0, fp, asr #5
    2678:	06d80e08 	ldrbeq	r0, [r8], r8, lsl #28
    267c:	62050000 	andvs	r0, r5, #0
    2680:	00022d1e 	andeq	r2, r2, lr, lsl sp
    2684:	11008800 	tstne	r0, r0, lsl #16
    2688:	00028204 	andeq	r8, r2, r4, lsl #4
    268c:	02db0b00 	sbcseq	r0, fp, #0, 22
    2690:	02db0000 	sbcseq	r0, fp, #0
    2694:	730c0000 	movwvc	r0, #49152	; 0xc000
    2698:	1f000000 	svcne	0x00000000
    269c:	e1041100 	mrs	r1, (UNDEF: 20)
    26a0:	14000002 	strne	r0, [r0], #-2
    26a4:	0008d60f 	andeq	sp, r8, pc, lsl #12
    26a8:	75050800 	strvc	r0, [r5, #-2048]	; 0xfffff800
    26ac:	00030a08 	andeq	r0, r3, r8, lsl #20
    26b0:	06c30e00 	strbeq	r0, [r3], r0, lsl #28
    26b4:	76050000 	strvc	r0, [r5], -r0
    26b8:	00030a11 	andeq	r0, r3, r1, lsl sl
    26bc:	1f0e0000 	svcne	0x000e0000
    26c0:	05000006 	streq	r0, [r0, #-6]
    26c4:	006c0677 	rsbeq	r0, ip, r7, ror r6
    26c8:	00040000 	andeq	r0, r4, r0
    26cc:	00310411 	eorseq	r0, r1, r1, lsl r4
    26d0:	f90f0000 			; <UNDEFINED> instruction: 0xf90f0000
    26d4:	68000008 	stmdavs	r0, {r3}
    26d8:	5308b505 	movwpl	fp, #34053	; 0x8505
    26dc:	10000004 	andne	r0, r0, r4
    26e0:	0500705f 	streq	r7, [r0, #-95]	; 0xffffffa1
    26e4:	030a12b6 	movweq	r1, #41654	; 0xa2b6
    26e8:	10000000 	andne	r0, r0, r0
    26ec:	0500725f 	streq	r7, [r0, #-607]	; 0xfffffda1
    26f0:	006c07b7 	strhteq	r0, [ip], #-119	; 0xffffff89
    26f4:	10040000 	andne	r0, r4, r0
    26f8:	0500775f 	streq	r7, [r0, #-1887]	; 0xfffff8a1
    26fc:	006c07b8 	strhteq	r0, [ip], #-120	; 0xffffff88
    2700:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    2704:	000006f6 	strdeq	r0, [r0], -r6
    2708:	3809b905 	stmdacc	r9, {r0, r2, r8, fp, ip, sp, pc}
    270c:	0c000000 	stceq	0, cr0, [r0], {-0}
    2710:	0007d50e 	andeq	sp, r7, lr, lsl #10
    2714:	09ba0500 	ldmibeq	sl!, {r8, sl}
    2718:	00000038 	andeq	r0, r0, r8, lsr r0
    271c:	625f100e 	subsvs	r1, pc, #14
    2720:	bb050066 	bllt	1428c0 <mailbuffer+0x115720>
    2724:	0002e211 	andeq	lr, r2, r1, lsl r2
    2728:	750e1000 	strvc	r1, [lr, #-0]
    272c:	05000006 	streq	r0, [r0, #-6]
    2730:	006c07bc 	strhteq	r0, [ip], #-124	; 0xffffff84
    2734:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    2738:	000006e6 	andeq	r0, r0, r6, ror #13
    273c:	8d0ac305 	stchi	3, cr12, [sl, #-20]	; 0xffffffec
    2740:	1c000000 	stcne	0, cr0, [r0], {-0}
    2744:	0007a90e 	andeq	sl, r7, lr, lsl #18
    2748:	1dc50500 	cfstr64ne	mvdx0, [r5]
    274c:	000005d7 	ldrdeq	r0, [r0], -r7
    2750:	08330e20 	ldmdaeq	r3!, {r5, r9, sl, fp}
    2754:	c7050000 	strgt	r0, [r5, -r0]
    2758:	0006011d 	andeq	r0, r6, sp, lsl r1
    275c:	750e2400 	strvc	r2, [lr, #-1024]	; 0xfffffc00
    2760:	05000009 	streq	r0, [r0, #-9]
    2764:	06250dca 	strteq	r0, [r5], -sl, asr #27
    2768:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    276c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    2770:	3f09cb05 	svccc	0x0009cb05
    2774:	2c000006 	stccs	0, cr0, [r0], {6}
    2778:	62755f10 	rsbsvs	r5, r5, #16, 30	; 0x40
    277c:	11ce0500 	bicne	r0, lr, r0, lsl #10
    2780:	000002e2 	andeq	r0, r0, r2, ror #5
    2784:	755f1030 	ldrbvc	r1, [pc, #-48]	; 275c <_start-0x58a4>
    2788:	cf050070 	svcgt	0x00050070
    278c:	00030a12 	andeq	r0, r3, r2, lsl sl
    2790:	5f103800 	svcpl	0x00103800
    2794:	05007275 	streq	r7, [r0, #-629]	; 0xfffffd8b
    2798:	006c07d0 	ldrdeq	r0, [ip], #-112	; 0xffffff90	; <UNPREDICTABLE>
    279c:	0e3c0000 	cdpeq	0, 3, cr0, cr12, cr0, {0}
    27a0:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    27a4:	4511d305 	ldrmi	sp, [r1, #-773]	; 0xfffffcfb
    27a8:	40000006 	andmi	r0, r0, r6
    27ac:	000a950e 	andeq	r9, sl, lr, lsl #10
    27b0:	11d40500 	bicsne	r0, r4, r0, lsl #10
    27b4:	00000655 	andeq	r0, r0, r5, asr r6
    27b8:	6c5f1043 	mrrcvs	0, 4, r1, pc, cr3	; <UNPREDICTABLE>
    27bc:	d7050062 	strle	r0, [r5, -r2, rrx]
    27c0:	0002e211 	andeq	lr, r2, r1, lsl r2
    27c4:	0c0e4400 	cfstrseq	mvf4, [lr], {-0}
    27c8:	05000007 	streq	r0, [r0, #-7]
    27cc:	006c07da 	ldrdeq	r0, [ip], #-122	; 0xffffff86	; <UNPREDICTABLE>
    27d0:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
    27d4:	0000071d 	andeq	r0, r0, sp, lsl r7
    27d8:	9b0adb05 	blls	2b93f4 <mailbuffer+0x28c254>
    27dc:	50000000 	andpl	r0, r0, r0
    27e0:	0006380e 	andeq	r3, r6, lr, lsl #16
    27e4:	12de0500 	sbcsne	r0, lr, #0, 10
    27e8:	00000471 	andeq	r0, r0, r1, ror r4
    27ec:	08190e54 	ldmdaeq	r9, {r2, r4, r6, r9, sl, fp}
    27f0:	e2050000 	and	r0, r5, #0
    27f4:	0001220c 	andeq	r2, r1, ip, lsl #4
    27f8:	010e5800 	tsteq	lr, r0, lsl #16
    27fc:	05000009 	streq	r0, [r0, #-9]
    2800:	01160ee4 	tsteq	r6, r4, ror #29
    2804:	0e5c0000 	cdpeq	0, 5, cr0, cr12, cr0, {0}
    2808:	0000082b 	andeq	r0, r0, fp, lsr #16
    280c:	6c09e505 	cfstr32vs	mvfx14, [r9], {5}
    2810:	64000000 	strvs	r0, [r0], #-0
    2814:	006c1500 	rsbeq	r1, ip, r0, lsl #10
    2818:	04710000 	ldrbteq	r0, [r1], #-0
    281c:	71160000 	tstvc	r6, r0
    2820:	16000004 	strne	r0, [r0], -r4
    2824:	0000008d 	andeq	r0, r0, sp, lsl #1
    2828:	0005c516 	andeq	ip, r5, r6, lsl r5
    282c:	006c1600 	rsbeq	r1, ip, r0, lsl #12
    2830:	11000000 	mrsne	r0, (UNDEF: 0)
    2834:	00047c04 	andeq	r7, r4, r4, lsl #24
    2838:	04710300 	ldrbteq	r0, [r1], #-768	; 0xfffffd00
    283c:	58170000 	ldmdapl	r7, {}	; <UNPREDICTABLE>
    2840:	28000009 	stmdacs	r0, {r0, r3}
    2844:	02600504 	rsbeq	r0, r0, #4, 10	; 0x1000000
    2848:	0005c508 	andeq	ip, r5, r8, lsl #10
    284c:	08bb1800 	ldmeq	fp!, {fp, ip}
    2850:	62050000 	andvs	r0, r5, #0
    2854:	006c0702 	rsbeq	r0, ip, r2, lsl #14
    2858:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    285c:	00000705 	andeq	r0, r0, r5, lsl #14
    2860:	0b026705 	bleq	9c47c <mailbuffer+0x6f2dc>
    2864:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
    2868:	07c51804 	strbeq	r1, [r5, r4, lsl #16]
    286c:	67050000 	strvs	r0, [r5, -r0]
    2870:	06b11402 	ldrteq	r1, [r1], r2, lsl #8
    2874:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    2878:	0000078a 	andeq	r0, r0, sl, lsl #15
    287c:	1e026705 	cdpne	7, 0, cr6, cr2, cr5, {0}
    2880:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
    2884:	091b180c 	ldmdbeq	fp, {r2, r3, fp, ip}
    2888:	69050000 	stmdbvs	r5, {}	; <UNPREDICTABLE>
    288c:	006c0802 	rsbeq	r0, ip, r2, lsl #16
    2890:	18100000 	ldmdane	r0, {}	; <UNPREDICTABLE>
    2894:	0000062d 	andeq	r0, r0, sp, lsr #12
    2898:	08026a05 	stmdaeq	r2, {r0, r2, r9, fp, sp, lr}
    289c:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    28a0:	09371814 	ldmdbeq	r7!, {r2, r4, fp, ip}
    28a4:	6d050000 	stcvs	0, cr0, [r5, #-0]
    28a8:	006c0702 	rsbeq	r0, ip, r2, lsl #14
    28ac:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
    28b0:	00000925 	andeq	r0, r0, r5, lsr #18
    28b4:	16026e05 	strne	r6, [r2], -r5, lsl #28
    28b8:	000008c6 	andeq	r0, r0, r6, asr #17
    28bc:	08751834 	ldmdaeq	r5!, {r2, r4, r5, fp, ip}^
    28c0:	70050000 	andvc	r0, r5, r0
    28c4:	006c0702 	rsbeq	r0, ip, r2, lsl #14
    28c8:	18380000 	ldmdane	r8!, {}	; <UNPREDICTABLE>
    28cc:	0000092d 	andeq	r0, r0, sp, lsr #18
    28d0:	0a027205 	beq	9f0ec <mailbuffer+0x71f4c>
    28d4:	000008d7 	ldrdeq	r0, [r0], -r7
    28d8:	0804183c 	stmdaeq	r4, {r2, r3, r4, r5, fp, ip}
    28dc:	75050000 	strvc	r0, [r5, #-0]
    28e0:	01941302 	orrseq	r1, r4, r2, lsl #6
    28e4:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
    28e8:	000007af 	andeq	r0, r0, pc, lsr #15
    28ec:	07027605 	streq	r7, [r2, -r5, lsl #12]
    28f0:	0000006c 	andeq	r0, r0, ip, rrx
    28f4:	0ad71844 	beq	ff5c8a0c <_estack+0xf75b8a0c>
    28f8:	77050000 	strvc	r0, [r5, -r0]
    28fc:	01941302 	orrseq	r1, r4, r2, lsl #6
    2900:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    2904:	000008dd 	ldrdeq	r0, [r0], -sp
    2908:	14027805 	strne	r7, [r2], #-2053	; 0xfffff7fb
    290c:	000008dd 	ldrdeq	r0, [r0], -sp
    2910:	07cd184c 	strbeq	r1, [sp, ip, asr #16]
    2914:	7b050000 	blvc	14291c <mailbuffer+0x11577c>
    2918:	006c0702 	rsbeq	r0, ip, r2, lsl #14
    291c:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
    2920:	00000715 	andeq	r0, r0, r5, lsl r7
    2924:	09027c05 	stmdbeq	r2, {r0, r2, sl, fp, ip, sp, lr}
    2928:	000005c5 	andeq	r0, r0, r5, asr #11
    292c:	08b41854 	ldmeq	r4!, {r2, r4, r6, fp, ip}
    2930:	9f050000 	svcls	0x00050000
    2934:	088c0702 	stmeq	ip, {r1, r8, r9, sl}
    2938:	19580000 	ldmdbne	r8, {}^	; <UNPREDICTABLE>
    293c:	00000863 	andeq	r0, r0, r3, ror #16
    2940:	1302a305 	movwne	sl, #8965	; 0x2305
    2944:	000002c5 	andeq	r0, r0, r5, asr #5
    2948:	e2190148 	ands	r0, r9, #72, 2
    294c:	05000007 	streq	r0, [r0, #-7]
    2950:	821202a4 	andshi	r0, r2, #164, 4	; 0x4000000a
    2954:	4c000002 	stcmi	0, cr0, [r0], {2}
    2958:	0a791901 	beq	1e48d64 <mailbuffer+0x1e1bbc4>
    295c:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
    2960:	08ee0c02 	stmiaeq	lr!, {r1, sl, fp}^
    2964:	02dc0000 	sbcseq	r0, ip, #0
    2968:	0006ee19 	andeq	lr, r6, r9, lsl lr
    296c:	02ad0500 	adceq	r0, sp, #0, 10
    2970:	00067210 	andeq	r7, r6, r0, lsl r2
    2974:	1902e000 	stmdbne	r2, {sp, lr, pc}
    2978:	000006d3 	ldrdeq	r0, [r0], -r3
    297c:	0a02af05 	beq	ae598 <mailbuffer+0x813f8>
    2980:	000008fa 	strdeq	r0, [r0], -sl
    2984:	110002ec 	smlattne	r0, ip, r2, r0
    2988:	0005cb04 	andeq	ip, r5, r4, lsl #22
    298c:	08010200 	stmdaeq	r1, {r9}
    2990:	000008af 	andeq	r0, r0, pc, lsr #17
    2994:	0005cb03 	andeq	ip, r5, r3, lsl #22
    2998:	53041100 	movwpl	r1, #16640	; 0x4100
    299c:	15000004 	strne	r0, [r0, #-4]
    29a0:	0000006c 	andeq	r0, r0, ip, rrx
    29a4:	000005fb 	strdeq	r0, [r0], -fp
    29a8:	00047116 	andeq	r7, r4, r6, lsl r1
    29ac:	008d1600 	addeq	r1, sp, r0, lsl #12
    29b0:	fb160000 	blx	5829ba <mailbuffer+0x55581a>
    29b4:	16000005 	strne	r0, [r0], -r5
    29b8:	0000006c 	andeq	r0, r0, ip, rrx
    29bc:	d2041100 	andle	r1, r4, #0, 2
    29c0:	11000005 	tstne	r0, r5
    29c4:	0005dd04 	andeq	sp, r5, r4, lsl #26
    29c8:	00a71500 	adceq	r1, r7, r0, lsl #10
    29cc:	06250000 	strteq	r0, [r5], -r0
    29d0:	71160000 	tstvc	r6, r0
    29d4:	16000004 	strne	r0, [r0], -r4
    29d8:	0000008d 	andeq	r0, r0, sp, lsl #1
    29dc:	0000a716 	andeq	sl, r0, r6, lsl r7
    29e0:	006c1600 	rsbeq	r1, ip, r0, lsl #12
    29e4:	11000000 	mrsne	r0, (UNDEF: 0)
    29e8:	00060704 	andeq	r0, r6, r4, lsl #14
    29ec:	006c1500 	rsbeq	r1, ip, r0, lsl #10
    29f0:	063f0000 	ldrteq	r0, [pc], -r0
    29f4:	71160000 	tstvc	r6, r0
    29f8:	16000004 	strne	r0, [r0], -r4
    29fc:	0000008d 	andeq	r0, r0, sp, lsl #1
    2a00:	2b041100 	blcs	106e08 <mailbuffer+0xd9c68>
    2a04:	0b000006 	bleq	2a24 <_start-0x55dc>
    2a08:	00000031 	andeq	r0, r0, r1, lsr r0
    2a0c:	00000655 	andeq	r0, r0, r5, asr r6
    2a10:	0000730c 	andeq	r7, r0, ip, lsl #6
    2a14:	0b000200 	bleq	321c <_start-0x4de4>
    2a18:	00000031 	andeq	r0, r0, r1, lsr r0
    2a1c:	00000665 	andeq	r0, r0, r5, ror #12
    2a20:	0000730c 	andeq	r7, r0, ip, lsl #6
    2a24:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2a28:	000008e7 	andeq	r0, r0, r7, ror #17
    2a2c:	1a011f05 	bne	4a648 <mailbuffer+0x1d4a8>
    2a30:	00000310 	andeq	r0, r0, r0, lsl r3
    2a34:	000a601a 	andeq	r6, sl, sl, lsl r0
    2a38:	23050c00 	movwcs	r0, #23552	; 0x5c00
    2a3c:	06ab0801 	strteq	r0, [fp], r1, lsl #16
    2a40:	0f180000 	svceq	0x00180000
    2a44:	05000009 	streq	r0, [r0, #-9]
    2a48:	ab110125 	blge	442ee4 <mailbuffer+0x415d44>
    2a4c:	00000006 	andeq	r0, r0, r6
    2a50:	0007db18 	andeq	sp, r7, r8, lsl fp
    2a54:	01260500 			; <UNDEFINED> instruction: 0x01260500
    2a58:	00006c07 	andeq	r6, r0, r7, lsl #24
    2a5c:	15180400 	ldrne	r0, [r8, #-1024]	; 0xfffffc00
    2a60:	05000009 	streq	r0, [r0, #-9]
    2a64:	b10b0127 	tstlt	fp, r7, lsr #2
    2a68:	08000006 	stmdaeq	r0, {r1, r2}
    2a6c:	72041100 	andvc	r1, r4, #0, 2
    2a70:	11000006 	tstne	r0, r6
    2a74:	00066504 	andeq	r6, r6, r4, lsl #10
    2a78:	06251a00 	strteq	r1, [r5], -r0, lsl #20
    2a7c:	050e0000 	streq	r0, [lr, #-0]
    2a80:	f008013f 			; <UNDEFINED> instruction: 0xf008013f
    2a84:	18000006 	stmdane	r0, {r1, r2}
    2a88:	0000095f 	andeq	r0, r0, pc, asr r9
    2a8c:	12014005 	andne	r4, r1, #5
    2a90:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2a94:	099f1800 	ldmibeq	pc, {fp, ip}	; <UNPREDICTABLE>
    2a98:	41050000 	mrsmi	r0, (UNDEF: 5)
    2a9c:	06f01201 	ldrbteq	r1, [r0], r1, lsl #4
    2aa0:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    2aa4:	000009bb 			; <UNDEFINED> instruction: 0x000009bb
    2aa8:	12014205 	andne	r4, r1, #1342177280	; 0x50000000
    2aac:	0000003f 	andeq	r0, r0, pc, lsr r0
    2ab0:	3f0b000c 	svccc	0x000b000c
    2ab4:	00000000 	andeq	r0, r0, r0
    2ab8:	0c000007 	stceq	0, cr0, [r0], {7}
    2abc:	00000073 	andeq	r0, r0, r3, ror r0
    2ac0:	d01b0002 	andsle	r0, fp, r2
    2ac4:	07028005 	streq	r8, [r2, -r5]
    2ac8:	00000815 	andeq	r0, r0, r5, lsl r8
    2acc:	000a3418 	andeq	r3, sl, r8, lsl r4
    2ad0:	02820500 	addeq	r0, r2, #0, 10
    2ad4:	00007318 	andeq	r7, r0, r8, lsl r3
    2ad8:	a5180000 	ldrge	r0, [r8, #-0]
    2adc:	05000009 	streq	r0, [r0, #-9]
    2ae0:	c5120283 	ldrgt	r0, [r2, #-643]	; 0xfffffd7d
    2ae4:	04000005 	streq	r0, [r0], #-5
    2ae8:	0007f718 	andeq	pc, r7, r8, lsl r7	; <UNPREDICTABLE>
    2aec:	02840500 	addeq	r0, r4, #0, 10
    2af0:	00081510 	andeq	r1, r8, r0, lsl r5
    2af4:	ae180800 	cdpge	8, 1, cr0, cr8, cr0, {0}
    2af8:	0500000a 	streq	r0, [r0, #-10]
    2afc:	aa170285 	bge	5c3518 <mailbuffer+0x596378>
    2b00:	24000001 	strcs	r0, [r0], #-1
    2b04:	00079a18 	andeq	r9, r7, r8, lsl sl
    2b08:	02860500 	addeq	r0, r6, #0, 10
    2b0c:	00006c0f 	andeq	r6, r0, pc, lsl #24
    2b10:	0a184800 	beq	614b18 <mailbuffer+0x5e7978>
    2b14:	05000009 	streq	r0, [r0, #-9]
    2b18:	652c0287 	strvs	r0, [ip, #-647]!	; 0xfffffd79
    2b1c:	50000000 	andpl	r0, r0, r0
    2b20:	000ac418 	andeq	ip, sl, r8, lsl r4
    2b24:	02880500 	addeq	r0, r8, #0, 10
    2b28:	0006b71a 	andeq	fp, r6, sl, lsl r7
    2b2c:	99185800 	ldmdbls	r8, {fp, ip, lr}
    2b30:	05000008 	streq	r0, [r0, #-8]
    2b34:	16160289 	ldrne	r0, [r6], -r9, lsl #5
    2b38:	68000001 	stmdavs	r0, {r0}
    2b3c:	000ac918 	andeq	ip, sl, r8, lsl r9
    2b40:	028a0500 	addeq	r0, sl, #0, 10
    2b44:	00011616 	andeq	r1, r1, r6, lsl r6
    2b48:	a6187000 	ldrge	r7, [r8], -r0
    2b4c:	05000006 	streq	r0, [r0, #-6]
    2b50:	1616028b 	ldrne	r0, [r6], -fp, lsl #5
    2b54:	78000001 	stmdavc	r0, {r0}
    2b58:	000a6f18 	andeq	r6, sl, r8, lsl pc
    2b5c:	028c0500 	addeq	r0, ip, #0, 10
    2b60:	00082510 	andeq	r2, r8, r0, lsl r5
    2b64:	eb188000 	bl	622b6c <mailbuffer+0x5f59cc>
    2b68:	05000007 	streq	r0, [r0, #-7]
    2b6c:	3510028d 	ldrcc	r0, [r0, #-653]	; 0xfffffd73
    2b70:	88000008 	stmdahi	r0, {r3}
    2b74:	0009d318 	andeq	sp, r9, r8, lsl r3
    2b78:	028e0500 	addeq	r0, lr, #0, 10
    2b7c:	00006c0f 	andeq	r6, r0, pc, lsl #24
    2b80:	4c18a000 	ldcmi	0, cr10, [r8], {-0}
    2b84:	05000007 	streq	r0, [r0, #-7]
    2b88:	1616028f 	ldrne	r0, [r6], -pc, lsl #5
    2b8c:	a4000001 	strge	r0, [r0], #-1
    2b90:	00069718 	andeq	r9, r6, r8, lsl r7
    2b94:	02900500 	addseq	r0, r0, #0, 10
    2b98:	00011616 	andeq	r1, r1, r6, lsl r6
    2b9c:	3b18ac00 	blcc	62dba4 <mailbuffer+0x600a04>
    2ba0:	05000007 	streq	r0, [r0, #-7]
    2ba4:	16160291 			; <UNDEFINED> instruction: 0x16160291
    2ba8:	b4000001 	strlt	r0, [r0], #-1
    2bac:	00063e18 	andeq	r3, r6, r8, lsl lr
    2bb0:	02920500 	addseq	r0, r2, #0, 10
    2bb4:	00011616 	andeq	r1, r1, r6, lsl r6
    2bb8:	4d18bc00 	ldcmi	12, cr11, [r8, #-0]
    2bbc:	05000006 	streq	r0, [r0, #-6]
    2bc0:	16160293 			; <UNDEFINED> instruction: 0x16160293
    2bc4:	c4000001 	strgt	r0, [r0], #-1
    2bc8:	0008b918 	andeq	fp, r8, r8, lsl r9
    2bcc:	02940500 	addseq	r0, r4, #0, 10
    2bd0:	00006c08 	andeq	r6, r0, r8, lsl #24
    2bd4:	0b00cc00 	bleq	35bdc <mailbuffer+0x8a3c>
    2bd8:	000005cb 	andeq	r0, r0, fp, asr #11
    2bdc:	00000825 	andeq	r0, r0, r5, lsr #16
    2be0:	0000730c 	andeq	r7, r0, ip, lsl #6
    2be4:	0b001900 	bleq	8fec <__module_entries_end+0xf48>
    2be8:	000005cb 	andeq	r0, r0, fp, asr #11
    2bec:	00000835 	andeq	r0, r0, r5, lsr r8
    2bf0:	0000730c 	andeq	r7, r0, ip, lsl #6
    2bf4:	0b000700 	bleq	47fc <_start-0x3804>
    2bf8:	000005cb 	andeq	r0, r0, fp, asr #11
    2bfc:	00000845 	andeq	r0, r0, r5, asr #16
    2c00:	0000730c 	andeq	r7, r0, ip, lsl #6
    2c04:	1b001700 	blne	880c <__module_entries_end+0x768>
    2c08:	029905f0 	addseq	r0, r9, #240, 10	; 0x3c000000
    2c0c:	00086c07 	andeq	r6, r8, r7, lsl #24
    2c10:	08531800 	ldmdaeq	r3, {fp, ip}^
    2c14:	9c050000 	stcls	0, cr0, [r5], {-0}
    2c18:	086c1b02 	stmdaeq	ip!, {r1, r8, r9, fp, ip}^
    2c1c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2c20:	00000a66 	andeq	r0, r0, r6, ror #20
    2c24:	18029d05 	stmdane	r2, {r0, r2, r8, sl, fp, ip, pc}
    2c28:	0000087c 	andeq	r0, r0, ip, ror r8
    2c2c:	0a0b0078 	beq	2c2e14 <mailbuffer+0x295c74>
    2c30:	7c000003 	stcvc	0, cr0, [r0], {3}
    2c34:	0c000008 	stceq	0, cr0, [r0], {8}
    2c38:	00000073 	andeq	r0, r0, r3, ror r0
    2c3c:	730b001d 	movwvc	r0, #45085	; 0xb01d
    2c40:	8c000000 	stchi	0, cr0, [r0], {-0}
    2c44:	0c000008 	stceq	0, cr0, [r0], {8}
    2c48:	00000073 	andeq	r0, r0, r3, ror r0
    2c4c:	f01c001d 			; <UNDEFINED> instruction: 0xf01c001d
    2c50:	03027e05 	movweq	r7, #11781	; 0x2e05
    2c54:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    2c58:	0009581d 	andeq	r5, r9, sp, lsl r8
    2c5c:	02950500 	addseq	r0, r5, #0, 10
    2c60:	0007000b 	andeq	r0, r7, fp
    2c64:	0a9b1d00 	beq	fe6ca06c <_estack+0xf66ba06c>
    2c68:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    2c6c:	08450b02 	stmdaeq	r5, {r1, r8, r9, fp}^
    2c70:	0b000000 	bleq	2c78 <_start-0x5388>
    2c74:	000005cb 	andeq	r0, r0, fp, asr #11
    2c78:	000008c1 	andeq	r0, r0, r1, asr #17
    2c7c:	0000730c 	andeq	r7, r0, ip, lsl #6
    2c80:	1e001800 	cdpne	8, 0, cr1, cr0, cr0, {0}
    2c84:	0000067e 	andeq	r0, r0, lr, ror r6
    2c88:	08c10411 	stmiaeq	r1, {r0, r4, sl}^
    2c8c:	d71f0000 	ldrle	r0, [pc, -r0]
    2c90:	16000008 	strne	r0, [r0], -r8
    2c94:	00000471 	andeq	r0, r0, r1, ror r4
    2c98:	cc041100 	stfgts	f1, [r4], {-0}
    2c9c:	11000008 	tstne	r0, r8
    2ca0:	00019404 	andeq	r9, r1, r4, lsl #8
    2ca4:	08ee1f00 	stmiaeq	lr!, {r8, r9, sl, fp, ip}^
    2ca8:	6c160000 	ldcvs	0, cr0, [r6], {-0}
    2cac:	00000000 	andeq	r0, r0, r0
    2cb0:	08f40411 	ldmeq	r4!, {r0, r4, sl}^
    2cb4:	04110000 	ldreq	r0, [r1], #-0
    2cb8:	000008e3 	andeq	r0, r0, r3, ror #17
    2cbc:	0006650b 	andeq	r6, r6, fp, lsl #10
    2cc0:	00090a00 	andeq	r0, r9, r0, lsl #20
    2cc4:	00730c00 	rsbseq	r0, r3, r0, lsl #24
    2cc8:	00020000 	andeq	r0, r2, r0
    2ccc:	0009e720 	andeq	lr, r9, r0, lsr #14
    2cd0:	032e0500 			; <UNDEFINED> instruction: 0x032e0500
    2cd4:	00047117 	andeq	r7, r4, r7, lsl r1
    2cd8:	09e02000 	stmibeq	r0!, {sp}^
    2cdc:	2f050000 	svccs	0x00050000
    2ce0:	04771d03 	ldrbteq	r1, [r7], #-3331	; 0xfffff2fd
    2ce4:	6b210000 	blvs	842cec <mailbuffer+0x815b4c>
    2ce8:	06000008 	streq	r0, [r0], -r8
    2cec:	05c50e64 	strbeq	r0, [r5, #3684]	; 0xe64
    2cf0:	a8060000 	stmdage	r6, {}	; <UNPREDICTABLE>
    2cf4:	07000000 	streq	r0, [r0, -r0]
    2cf8:	093c1047 	ldmdbeq	ip!, {r0, r1, r2, r6, ip}
    2cfc:	04110000 	ldreq	r0, [r1], #-0
    2d00:	00000942 	andeq	r0, r0, r2, asr #18
    2d04:	00094d1f 	andeq	r4, r9, pc, lsl sp
    2d08:	008d1600 	addeq	r1, sp, r0, lsl #12
    2d0c:	06000000 	streq	r0, [r0], -r0
    2d10:	0000000c 	andeq	r0, r0, ip
    2d14:	521c6108 	andspl	r6, ip, #8, 2
    2d18:	04000000 	streq	r0, [r0], #-0
    2d1c:	0000094d 	andeq	r0, r0, sp, asr #18
    2d20:	00110306 	andseq	r0, r1, r6, lsl #6
    2d24:	19570900 	ldmdbne	r7, {r8, fp}^
    2d28:	0000096a 	andeq	r0, r0, sl, ror #18
    2d2c:	09700411 	ldmdbeq	r0!, {r0, r4, sl}^
    2d30:	46150000 	ldrmi	r0, [r5], -r0
    2d34:	7f000000 	svcvc	0x00000000
    2d38:	16000009 	strne	r0, [r0], -r9
    2d3c:	0000008d 	andeq	r0, r0, sp, lsl #1
    2d40:	035f0f00 	cmpeq	pc, #0, 30
    2d44:	0a140000 	beq	502d4c <mailbuffer+0x4d5bac>
    2d48:	09ce0869 	stmibeq	lr, {r0, r3, r5, r6, fp}^
    2d4c:	120e0000 	andne	r0, lr, #0
    2d50:	0a000003 	beq	2d64 <_start-0x529c>
    2d54:	094d0f6b 	stmdbeq	sp, {r0, r1, r3, r5, r6, r8, r9, sl, fp}^
    2d58:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2d5c:	000004fd 	strdeq	r0, [r0], -sp
    2d60:	d31f6c0a 	tstle	pc, #2560	; 0xa00
    2d64:	04000009 	streq	r0, [r0], #-9
    2d68:	0003cf0e 	andeq	ip, r3, lr, lsl #30
    2d6c:	1f6d0a00 	svcne	0x006d0a00
    2d70:	000009d3 	ldrdeq	r0, [r0], -r3
    2d74:	03340e08 	teqeq	r4, #8, 28	; 0x80
    2d78:	6e0a0000 	cdpvs	0, 0, cr0, cr10, cr0, {0}
    2d7c:	00008d09 	andeq	r8, r0, r9, lsl #26
    2d80:	dd0e0c00 	stcle	12, cr0, [lr, #-0]
    2d84:	0a000002 	beq	2d94 <_start-0x526c>
    2d88:	008d096f 	addeq	r0, sp, pc, ror #18
    2d8c:	00100000 	andseq	r0, r0, r0
    2d90:	00097f04 	andeq	r7, r9, r4, lsl #30
    2d94:	ce041100 	adfgts	f1, f4, f0
    2d98:	06000009 	streq	r0, [r0], -r9
    2d9c:	00000510 	andeq	r0, r0, r0, lsl r5
    2da0:	7f1b710a 	svcvc	0x001b710a
    2da4:	04000009 	streq	r0, [r0], #-9
    2da8:	000009d9 	ldrdeq	r0, [r0], -r9
    2dac:	00056c0f 	andeq	r6, r5, pc, lsl #24
    2db0:	730a0c00 	movwvc	r0, #44032	; 0xac00
    2db4:	000a1f08 	andeq	r1, sl, r8, lsl #30
    2db8:	03120e00 	tsteq	r2, #0, 28
    2dbc:	750a0000 	strvc	r0, [sl, #-0]
    2dc0:	00094d0f 	andeq	r4, r9, pc, lsl #26
    2dc4:	fd0e0000 	stc2	0, cr0, [lr, #-0]
    2dc8:	0a000004 	beq	2de0 <_start-0x5220>
    2dcc:	09d31e76 	ldmibeq	r3, {r1, r2, r4, r5, r6, r9, sl, fp, ip}^
    2dd0:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    2dd4:	000003cf 	andeq	r0, r0, pc, asr #7
    2dd8:	d31e770a 	tstle	lr, #2621440	; 0x280000
    2ddc:	08000009 	stmdaeq	r0, {r0, r3}
    2de0:	04840600 	streq	r0, [r4], #1536	; 0x600
    2de4:	790a0000 	stmdbvc	sl, {}	; <UNPREDICTABLE>
    2de8:	0009ea20 	andeq	lr, r9, r0, lsr #20
    2dec:	0a1f0400 	beq	7c3df4 <mailbuffer+0x796c54>
    2df0:	7c0f0000 	stcvc	0, cr0, [pc], {-0}
    2df4:	14000005 	strne	r0, [r0], #-5
    2df8:	65107e0a 	ldrvs	r7, [r0, #-3594]	; 0xfffff1f6
    2dfc:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    2e00:	000004a3 	andeq	r0, r0, r3, lsr #9
    2e04:	5922800a 	stmdbpl	r2!, {r1, r3, pc}
    2e08:	00000000 	andeq	r0, r0, r0
    2e0c:	00030a0e 	andeq	r0, r3, lr, lsl #20
    2e10:	17810a00 	strne	r0, [r1, r0, lsl #20]
    2e14:	00000a65 	andeq	r0, r0, r5, ror #20
    2e18:	032b0e04 			; <UNDEFINED> instruction: 0x032b0e04
    2e1c:	820a0000 	andhi	r0, sl, #0
    2e20:	000a2b19 	andeq	r2, sl, r9, lsl fp
    2e24:	11000800 	tstne	r0, r0, lsl #16
    2e28:	0009e504 	andeq	lr, r9, r4, lsl #10
    2e2c:	09900600 	ldmibeq	r0, {r9, sl}
    2e30:	830a0000 	movwhi	r0, #40960	; 0xa000
    2e34:	000a3003 	andeq	r3, sl, r3
    2e38:	0a6b0300 	beq	1ac3a40 <mailbuffer+0x1a968a0>
    2e3c:	54060000 	strpl	r0, [r6], #-0
    2e40:	0b000010 	bleq	2e88 <_start-0x5178>
    2e44:	008d1063 	addeq	r1, sp, r3, rrx
    2e48:	a30f0000 	movwge	r0, #61440	; 0xf000
    2e4c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2e50:	b010680b 	andslt	r6, r0, fp, lsl #16
    2e54:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    2e58:	00000bb8 			; <UNDEFINED> instruction: 0x00000bb8
    2e5c:	46106a0b 	ldrmi	r6, [r0], -fp, lsl #20
    2e60:	00000000 	andeq	r0, r0, r0
    2e64:	000e150e 	andeq	r1, lr, lr, lsl #10
    2e68:	106b0b00 	rsbne	r0, fp, r0, lsl #22
    2e6c:	0000094d 	andeq	r0, r0, sp, asr #18
    2e70:	29060004 	stmdbcs	r6, {r2}
    2e74:	0b00000c 	bleq	2eac <_start-0x5154>
    2e78:	0a88036c 	beq	fe203c30 <_estack+0xf61f3c30>
    2e7c:	390f0000 	stmdbcc	pc, {}	; <UNPREDICTABLE>
    2e80:	0c000012 	stceq	0, cr0, [r0], {18}
    2e84:	f110710b 			; <UNDEFINED> instruction: 0xf110710b
    2e88:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    2e8c:	000013aa 	andeq	r1, r0, sl, lsr #7
    2e90:	8d08730b 	stchi	3, cr7, [r8, #-44]	; 0xffffffd4
    2e94:	00000000 	andeq	r0, r0, r0
    2e98:	0013330e 	andseq	r3, r3, lr, lsl #6
    2e9c:	10740b00 	rsbsne	r0, r4, r0, lsl #22
    2ea0:	00000052 	andeq	r0, r0, r2, asr r0
    2ea4:	0ebf0e04 	cdpeq	14, 11, cr0, cr15, cr4, {0}
    2ea8:	750b0000 	strvc	r0, [fp, #-0]
    2eac:	00005210 	andeq	r5, r0, r0, lsl r2
    2eb0:	06000800 	streq	r0, [r0], -r0, lsl #16
    2eb4:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
    2eb8:	bc03760b 	stclt	6, cr7, [r3], {11}
    2ebc:	0300000a 	movweq	r0, #10
    2ec0:	00000af1 	strdeq	r0, [r0], -r1
    2ec4:	002c0411 	eoreq	r0, ip, r1, lsl r4
    2ec8:	02030000 	andeq	r0, r3, #0
    2ecc:	1100000b 	tstne	r0, fp
    2ed0:	00005204 	andeq	r5, r0, r4, lsl #4
    2ed4:	0e4b0f00 	cdpeq	15, 4, cr0, cr11, cr0, {0}
    2ed8:	01480000 	mrseq	r0, (UNDEF: 72)
    2edc:	0b7c1066 	bleq	1f0707c <mailbuffer+0x1ed9edc>
    2ee0:	1a0e0000 	bne	382ee8 <mailbuffer+0x355d48>
    2ee4:	01000001 	tsteq	r0, r1
    2ee8:	0b7c1b68 	bleq	1f09c90 <mailbuffer+0x1edcaf0>
    2eec:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    2ef0:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
    2ef4:	d90f6e01 	stmdble	pc, {r0, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2ef8:	04000009 	streq	r0, [r0], #-9
    2efc:	0005df0e 	andeq	sp, r5, lr, lsl #30
    2f00:	0f6f0100 	svceq	0x006f0100
    2f04:	000009d9 	ldrdeq	r0, [r0], -r9
    2f08:	04c60e18 	strbeq	r0, [r6], #3608	; 0xe18
    2f0c:	70010000 	andvc	r0, r1, r0
    2f10:	00005219 	andeq	r5, r0, r9, lsl r2
    2f14:	b10e2c00 	tstlt	lr, r0, lsl #24
    2f18:	01000012 	tsteq	r0, r2, lsl r0
    2f1c:	0b0d1471 	bleq	3480e8 <mailbuffer+0x31af48>
    2f20:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
    2f24:	00000e2e 	andeq	r0, r0, lr, lsr #28
    2f28:	82117201 	andshi	r7, r1, #268435456	; 0x10000000
    2f2c:	3400000b 	strcc	r0, [r0], #-11
    2f30:	0012a70e 	andseq	sl, r2, lr, lsl #14
    2f34:	14860100 	strne	r0, [r6], #256	; 0x100
    2f38:	0000095e 	andeq	r0, r0, lr, asr r9
    2f3c:	04110044 	ldreq	r0, [r1], #-68	; 0xffffffbc
    2f40:	00000059 	andeq	r0, r0, r9, asr r0
    2f44:	0000250b 	andeq	r2, r0, fp, lsl #10
    2f48:	000b9200 	andeq	r9, fp, r0, lsl #4
    2f4c:	00730c00 	rsbseq	r0, r3, r0, lsl #24
    2f50:	000f0000 	andeq	r0, pc, r0
    2f54:	00106006 	andseq	r6, r0, r6
    2f58:	03930100 	orrseq	r0, r3, #0, 2
    2f5c:	00000b13 	andeq	r0, r0, r3, lsl fp
    2f60:	000b9203 	andeq	r9, fp, r3, lsl #4
    2f64:	029e2200 	addseq	r2, lr, #0, 4
    2f68:	9f010000 	svcls	0x00010000
    2f6c:	000bbb23 	andeq	fp, fp, r3, lsr #22
    2f70:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    2f74:	110002bd 			; <UNDEFINED> instruction: 0x110002bd
    2f78:	000b9204 	andeq	r9, fp, r4, lsl #4
    2f7c:	0bb50400 	bleq	fed43f84 <_estack+0xf6d33f84>
    2f80:	6b0b0000 	blvs	2c2f88 <mailbuffer+0x295de8>
    2f84:	d000000a 	andle	r0, r0, sl
    2f88:	0c00000b 	stceq	0, cr0, [r0], {11}
    2f8c:	00000073 	andeq	r0, r0, r3, ror r0
    2f90:	ad230004 	stcge	0, cr0, [r3, #-16]!
    2f94:	0100000e 	tsteq	r0, lr
    2f98:	0bc01ea3 	bleq	ff00aa2c <_estack+0xf6ffaa2c>
    2f9c:	03050000 	movweq	r0, #20480	; 0x5000
    2fa0:	0002bde8 	andeq	fp, r2, r8, ror #27
    2fa4:	000ef323 	andeq	pc, lr, r3, lsr #6
    2fa8:	1ea40100 	fdvnes	f0, f4, f0
    2fac:	00000a6b 	andeq	r0, r0, fp, ror #20
    2fb0:	be4c0305 	cdplt	3, 4, cr0, cr12, cr5, {0}
    2fb4:	05230002 	streq	r0, [r3, #-2]!
    2fb8:	0100000f 	tsteq	r0, pc
    2fbc:	0a6b1ea5 	beq	1acaa58 <mailbuffer+0x1a9d8b8>
    2fc0:	03050000 	movweq	r0, #20480	; 0x5000
    2fc4:	0002be60 	andeq	fp, r2, r0, ror #28
    2fc8:	0012c823 	andseq	ip, r2, r3, lsr #16
    2fcc:	29a60100 	stmibcs	r6!, {r8}
    2fd0:	00000c1e 	andeq	r0, r0, lr, lsl ip
    2fd4:	be740305 	cdplt	3, 7, cr0, cr4, cr5, {0}
    2fd8:	04110002 	ldreq	r0, [r1], #-2
    2fdc:	00000a6b 	andeq	r0, r0, fp, ror #20
    2fe0:	000c1804 	andeq	r1, ip, r4, lsl #16
    2fe4:	0c180300 	ldceq	3, cr0, [r8], {-0}
    2fe8:	8f230000 	svchi	0x00230000
    2fec:	01000010 	tsteq	r0, r0, lsl r0
    2ff0:	0c1e29a7 			; <UNDEFINED> instruction: 0x0c1e29a7
    2ff4:	03050000 	movweq	r0, #20480	; 0x5000
    2ff8:	0002be78 	andeq	fp, r2, r8, ror lr
    2ffc:	000fc523 	andeq	ip, pc, r3, lsr #10
    3000:	1ea80100 	fdvnee	f0, f0, f0
    3004:	00000a6b 	andeq	r0, r0, fp, ror #20
    3008:	be7c0305 	cdplt	3, 7, cr0, cr12, cr5, {0}
    300c:	1e230002 	cdpne	0, 2, cr0, cr3, cr2, {0}
    3010:	01000010 	tsteq	r0, r0, lsl r0
    3014:	0a6b1fac 	beq	1acaecc <mailbuffer+0x1a9dd2c>
    3018:	03050000 	movweq	r0, #20480	; 0x5000
    301c:	0002be90 	muleq	r2, r0, lr
    3020:	00107523 	andseq	r7, r0, r3, lsr #10
    3024:	39ad0100 	stmibcc	sp!, {r8}
    3028:	00000059 	andeq	r0, r0, r9, asr r0
    302c:	bea40305 	cdplt	3, 10, cr0, cr4, cr5, {0}
    3030:	99230002 	stmdbls	r3!, {r1}
    3034:	0100000f 	tsteq	r0, pc
    3038:	0a6b1fb3 	beq	1acaf0c <mailbuffer+0x1a9dd6c>
    303c:	03050000 	movweq	r0, #20480	; 0x5000
    3040:	0002bea8 	andeq	fp, r2, r8, lsr #29
    3044:	00142623 	andseq	r2, r4, r3, lsr #12
    3048:	38be0100 	ldmcc	lr!, {r8}
    304c:	00000059 	andeq	r0, r0, r9, asr r0
    3050:	bebc0305 	cdplt	3, 11, cr0, cr12, cr5, {0}
    3054:	84230002 	strthi	r0, [r3], #-2
    3058:	01000010 	tsteq	r0, r0, lsl r0
    305c:	09592ebf 	ldmdbeq	r9, {r0, r1, r2, r3, r4, r5, r7, r9, sl, fp, sp}^
    3060:	03050000 	movweq	r0, #20480	; 0x5000
    3064:	0002bec0 	andeq	fp, r2, r0, asr #29
    3068:	0012da23 	andseq	sp, r2, r3, lsr #20
    306c:	2fc00100 	svccs	0x00c00100
    3070:	00000052 	andeq	r0, r0, r2, asr r0
    3074:	bec40305 	cdplt	3, 12, cr0, cr4, cr5, {0}
    3078:	76230002 	strtvc	r0, [r3], -r2
    307c:	0100000e 	tsteq	r0, lr
    3080:	005938c1 	subseq	r3, r9, r1, asr #17
    3084:	03050000 	movweq	r0, #20480	; 0x5000
    3088:	0002bec8 	andeq	fp, r2, r8, asr #29
    308c:	000e9b23 	andeq	r9, lr, r3, lsr #22
    3090:	36c20100 	strbcc	r0, [r2], r0, lsl #2
    3094:	0000004d 	andeq	r0, r0, sp, asr #32
    3098:	becc0305 	cdplt	3, 12, cr0, cr12, cr5, {0}
    309c:	5e230002 	cdppl	0, 2, cr0, cr3, cr2, {0}
    30a0:	0100000f 	tsteq	r0, pc
    30a4:	005938c3 	subseq	r3, r9, r3, asr #17
    30a8:	03050000 	movweq	r0, #20480	; 0x5000
    30ac:	0002bed0 	ldrdeq	fp, [r2], -r0
    30b0:	000f3223 	andeq	r3, pc, r3, lsr #4
    30b4:	38c40100 	stmiacc	r4, {r8}^
    30b8:	00000059 	andeq	r0, r0, r9, asr r0
    30bc:	bed40305 	cdplt	3, 13, cr0, cr4, cr5, {0}
    30c0:	37230002 	strcc	r0, [r3, -r2]!
    30c4:	01000010 	tsteq	r0, r0, lsl r0
    30c8:	004d2fc5 	subeq	r2, sp, r5, asr #31
    30cc:	03050000 	movweq	r0, #20480	; 0x5000
    30d0:	0002bed8 	ldrdeq	fp, [r2], -r8
    30d4:	00129723 	andseq	r9, r2, r3, lsr #14
    30d8:	2fc60100 	svccs	0x00c60100
    30dc:	0000004d 	andeq	r0, r0, sp, asr #32
    30e0:	bedc0305 	cdplt	3, 13, cr0, cr12, cr5, {0}
    30e4:	9e230002 	cdpls	0, 2, cr0, cr3, cr2, {0}
    30e8:	01000011 	tsteq	r0, r1, lsl r0
    30ec:	00522fc7 	subseq	r2, r2, r7, asr #31
    30f0:	03050000 	movweq	r0, #20480	; 0x5000
    30f4:	0002bee0 	andeq	fp, r2, r0, ror #29
    30f8:	00115623 	andseq	r5, r1, r3, lsr #12
    30fc:	25c80100 	strbcs	r0, [r8, #256]	; 0x100
    3100:	0000094d 	andeq	r0, r0, sp, asr #18
    3104:	bcc40305 	stcllt	3, cr0, [r4], {5}
    3108:	c8240002 	stmdagt	r4!, {r1}
    310c:	01000013 	tsteq	r0, r3, lsl r0
    3110:	900e0929 	andls	r0, lr, r9, lsr #18
    3114:	34000134 	strcc	r0, [r0], #-308	; 0xfffffecc
    3118:	01000000 	mrseq	r0, (UNDEF: 0)
    311c:	000d709c 	muleq	sp, ip, r0
    3120:	144c2500 	strbne	r2, [ip], #-1280	; 0xfffffb00
    3124:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    3128:	0bb52409 	bleq	fed4c154 <_estack+0xf6d3c154>
    312c:	91020000 	mrsls	r0, (UNDEF: 2)
    3130:	82260074 	eorhi	r0, r6, #116	; 0x74
    3134:	0100000f 	tsteq	r0, pc
    3138:	b510086a 	ldrlt	r0, [r0, #-2154]	; 0xfffff796
    313c:	e000000b 	and	r0, r0, fp
    3140:	b0000133 	andlt	r0, r0, r3, lsr r1
    3144:	01000000 	mrseq	r0, (UNDEF: 0)
    3148:	000dbc9c 	muleq	sp, ip, ip
    314c:	116b2500 	cmnne	fp, r0, lsl #10
    3150:	6a010000 	bvs	43158 <mailbuffer+0x15fb8>
    3154:	003f3708 	eorseq	r3, pc, r8, lsl #14
    3158:	91020000 	mrsls	r0, (UNDEF: 2)
    315c:	1367256e 	cmnne	r7, #461373440	; 0x1b800000
    3160:	6a010000 	bvs	43168 <mailbuffer+0x15fc8>
    3164:	0b0d5508 	bleq	35858c <mailbuffer+0x32b3ec>
    3168:	91020000 	mrsls	r0, (UNDEF: 2)
    316c:	11302768 	teqne	r0, r8, ror #14
    3170:	6c010000 	stcvs	0, cr0, [r1], {-0}
    3174:	0bb50908 	bleq	fed4559c <_estack+0xf6d3559c>
    3178:	91020000 	mrsls	r0, (UNDEF: 2)
    317c:	07240074 			; <UNDEFINED> instruction: 0x07240074
    3180:	01000014 	tsteq	r0, r4, lsl r0
    3184:	280d0850 	stmdacs	sp, {r4, r6, fp}
    3188:	b8000133 	stmdalt	r0, {r0, r1, r4, r5, r8}
    318c:	01000000 	mrseq	r0, (UNDEF: 0)
    3190:	000de49c 	muleq	sp, ip, r4
    3194:	052d2500 	streq	r2, [sp, #-1280]!	; 0xfffffb00
    3198:	50010000 	andpl	r0, r1, r0
    319c:	094d3a08 	stmdbeq	sp, {r3, r9, fp, ip, sp}^
    31a0:	91020000 	mrsls	r0, (UNDEF: 2)
    31a4:	8a240074 	bhi	90337c <mailbuffer+0x8d61dc>
    31a8:	01000013 	tsteq	r0, r3, lsl r0
    31ac:	6c0d082d 	stcvs	8, cr0, [sp], {45}	; 0x2d
    31b0:	bc000132 	stflts	f0, [r0], {50}	; 0x32
    31b4:	01000000 	mrseq	r0, (UNDEF: 0)
    31b8:	000e309c 	muleq	lr, ip, r0
    31bc:	32782800 	rsbscc	r2, r8, #0, 16
    31c0:	00980001 	addseq	r0, r8, r1
    31c4:	14270000 	strtne	r0, [r7], #-0
    31c8:	01000011 	tsteq	r0, r1, lsl r0
    31cc:	46110831 			; <UNDEFINED> instruction: 0x46110831
    31d0:	02000000 	andeq	r0, r0, #0
    31d4:	b8287491 	stmdalt	r8!, {r0, r4, r7, sl, ip, sp, lr}
    31d8:	58000132 	stmdapl	r0, {r1, r4, r5, r8}
    31dc:	27000000 	strcs	r0, [r0, -r0]
    31e0:	0000144c 	andeq	r1, r0, ip, asr #8
    31e4:	0d083d01 	stceq	13, cr3, [r8, #-4]
    31e8:	00000bb5 			; <UNDEFINED> instruction: 0x00000bb5
    31ec:	00709102 	rsbseq	r9, r0, r2, lsl #2
    31f0:	ec240000 	stc	0, cr0, [r4], #-0
    31f4:	0100000f 	tsteq	r0, pc
    31f8:	ac0d080d 	stcge	8, cr0, [sp], {13}
    31fc:	c0000131 	andgt	r0, r0, r1, lsr r1
    3200:	01000000 	mrseq	r0, (UNDEF: 0)
    3204:	000e589c 	muleq	lr, ip, r8
    3208:	04c62700 	strbeq	r2, [r6], #1792	; 0x700
    320c:	0f010000 	svceq	0x00010000
    3210:	00521808 	subseq	r1, r2, r8, lsl #16
    3214:	91020000 	mrsls	r0, (UNDEF: 2)
    3218:	1f240074 	svcne	0x00240074
    321c:	01000012 	tsteq	r0, r2, lsl r0
    3220:	ec0d07b7 	stc	7, cr0, [sp], {183}	; 0xb7
    3224:	c0000130 	andgt	r0, r0, r0, lsr r1
    3228:	01000000 	mrseq	r0, (UNDEF: 0)
    322c:	000ec09c 	muleq	lr, ip, r0
    3230:	144c2500 	strbne	r2, [ip], #-1280	; 0xfffffb00
    3234:	b7010000 	strlt	r0, [r1, -r0]
    3238:	0bb53007 	bleq	fed4f25c <_estack+0xf6d3f25c>
    323c:	91020000 	mrsls	r0, (UNDEF: 2)
    3240:	118d2574 	orrne	r2, sp, r4, ror r5
    3244:	b7010000 	strlt	r0, [r1, -r0]
    3248:	0b085107 	bleq	21766c <mailbuffer+0x1ea4cc>
    324c:	91020000 	mrsls	r0, (UNDEF: 2)
    3250:	04c62570 	strbeq	r2, [r6], #1392	; 0x570
    3254:	b7010000 	strlt	r0, [r1, -r0]
    3258:	00527007 	subseq	r7, r2, r7
    325c:	91020000 	mrsls	r0, (UNDEF: 2)
    3260:	13fe256c 	mvnsne	r2, #108, 10	; 0x1b000000
    3264:	b7010000 	strlt	r0, [r1, -r0]
    3268:	0ec69807 	cdpeq	8, 12, cr9, cr6, cr7, {0}
    326c:	91020000 	mrsls	r0, (UNDEF: 2)
    3270:	116b2568 	cmnne	fp, r8, ror #10
    3274:	b7010000 	strlt	r0, [r1, -r0]
    3278:	003fb107 	eorseq	fp, pc, r7, lsl #2
    327c:	91020000 	mrsls	r0, (UNDEF: 2)
    3280:	04110000 	ldreq	r0, [r1], #-0
    3284:	00000afd 	strdeq	r0, [r0], -sp
    3288:	000ec003 	andeq	ip, lr, r3
    328c:	10f72400 	rscsne	r2, r7, r0, lsl #8
    3290:	76010000 	strvc	r0, [r1], -r0
    3294:	30bc0807 	adcscc	r0, ip, r7, lsl #16
    3298:	00300001 	eorseq	r0, r0, r1
    329c:	9c010000 	stcls	0, cr0, [r1], {-0}
    32a0:	00000ef3 	strdeq	r0, [r0], -r3
    32a4:	00010725 	andeq	r0, r1, r5, lsr #14
    32a8:	07760100 	ldrbeq	r0, [r6, -r0, lsl #2]!
    32ac:	00008d08 	andeq	r8, r0, r8, lsl #26
    32b0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    32b4:	13562900 	cmpne	r6, #0, 18
    32b8:	42010000 	andmi	r0, r1, #0
    32bc:	30940607 	addscc	r0, r4, r7, lsl #12
    32c0:	00280001 	eoreq	r0, r8, r1
    32c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    32c8:	0012ec2a 	andseq	lr, r2, sl, lsr #24
    32cc:	07140100 	ldreq	r0, [r4, -r0, lsl #2]
    32d0:	0000460f 	andeq	r4, r0, pc, lsl #12
    32d4:	012fa000 			; <UNDEFINED> instruction: 0x012fa000
    32d8:	0000f400 	andeq	pc, r0, r0, lsl #8
    32dc:	529c0100 	addspl	r0, ip, #0, 2
    32e0:	2500000f 	strcs	r0, [r0, #-15]
    32e4:	00001194 	muleq	r0, r4, r1
    32e8:	3a071401 	bcc	1c82f4 <mailbuffer+0x19b154>
    32ec:	00000f58 	andeq	r0, r0, r8, asr pc
    32f0:	256c9102 	strbcs	r9, [ip, #-258]!	; 0xfffffefe
    32f4:	00001067 	andeq	r1, r0, r7, rrx
    32f8:	5a071401 	bpl	1c8304 <mailbuffer+0x19b164>
    32fc:	00000f63 	andeq	r0, r0, r3, ror #30
    3300:	27689102 	strbcs	r9, [r8, -r2, lsl #2]!
    3304:	00000c37 	andeq	r0, r0, r7, lsr ip
    3308:	0f071601 	svceq	0x00071601
    330c:	00000046 	andeq	r0, r0, r6, asr #32
    3310:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3314:	0ab00411 	beq	fec04360 <_estack+0xf6bf4360>
    3318:	52030000 	andpl	r0, r3, #0
    331c:	1100000f 	tstne	r0, pc
    3320:	00094d04 	andeq	r4, r9, r4, lsl #26
    3324:	0f5d0300 	svceq	0x005d0300
    3328:	cc2b0000 	stcgt	0, cr0, [fp], #-0
    332c:	0100000e 	tsteq	r0, lr
    3330:	5806070c 	stmdapl	r6, {r2, r3, r8, r9, sl}
    3334:	4800012f 	stmdami	r0, {r0, r1, r2, r3, r5, r8}
    3338:	01000000 	mrseq	r0, (UNDEF: 0)
    333c:	000f909c 	muleq	pc, ip, r0	; <UNPREDICTABLE>
    3340:	11942500 	orrsne	r2, r4, r0, lsl #10
    3344:	0c010000 	stceq	0, cr0, [r1], {-0}
    3348:	0f583107 	svceq	0x00583107
    334c:	91020000 	mrsls	r0, (UNDEF: 2)
    3350:	d12a0074 			; <UNDEFINED> instruction: 0xd12a0074
    3354:	01000010 	tsteq	r0, r0, lsl r0
    3358:	461606d9 			; <UNDEFINED> instruction: 0x461606d9
    335c:	40000000 	andmi	r0, r0, r0
    3360:	1800012e 	stmdane	r0, {r1, r2, r3, r5, r8}
    3364:	01000001 	tsteq	r0, r1
    3368:	000fdc9c 	muleq	pc, ip, ip	; <UNPREDICTABLE>
    336c:	05042500 	streq	r2, [r4, #-1280]	; 0xfffffb00
    3370:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    3374:	0fe24406 	svceq	0x00e24406
    3378:	91020000 	mrsls	r0, (UNDEF: 2)
    337c:	0f73276c 	svceq	0x0073276c
    3380:	db010000 	blle	43388 <mailbuffer+0x161e8>
    3384:	0bb50906 	bleq	fed457a4 <_estack+0xf6d357a4>
    3388:	91020000 	mrsls	r0, (UNDEF: 2)
    338c:	0c372770 	ldceq	7, cr2, [r7], #-448	; 0xfffffe40
    3390:	dc010000 	stcle	0, cr0, [r1], {-0}
    3394:	00460f06 	subeq	r0, r6, r6, lsl #30
    3398:	91020000 	mrsls	r0, (UNDEF: 2)
    339c:	04110074 	ldreq	r0, [r1], #-116	; 0xffffff8c
    33a0:	00000a77 	andeq	r0, r0, r7, ror sl
    33a4:	000fdc03 	andeq	sp, pc, r3, lsl #24
    33a8:	10a92c00 	adcne	r2, r9, r0, lsl #24
    33ac:	87010000 	strhi	r0, [r1, -r0]
    33b0:	2da40606 	stccs	6, cr0, [r4, #24]!
    33b4:	009c0001 	addseq	r0, ip, r1
    33b8:	9c010000 	stcls	0, cr0, [r1], {-0}
    33bc:	0000102f 	andeq	r1, r0, pc, lsr #32
    33c0:	00050425 	andeq	r0, r5, r5, lsr #8
    33c4:	06870100 	streq	r0, [r7], r0, lsl #2
    33c8:	000fe231 	andeq	lr, pc, r1, lsr r2	; <UNPREDICTABLE>
    33cc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    33d0:	00106825 	andseq	r6, r0, r5, lsr #16
    33d4:	06870100 	streq	r0, [r7], r0, lsl #2
    33d8:	00094d4b 	andeq	r4, r9, fp, asr #26
    33dc:	68910200 	ldmvs	r1, {r9}
    33e0:	00052d27 	andeq	r2, r5, r7, lsr #26
    33e4:	06890100 	streq	r0, [r9], r0, lsl #2
    33e8:	00094d0e 	andeq	r4, r9, lr, lsl #26
    33ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    33f0:	12842b00 	addne	r2, r4, #0, 22
    33f4:	4b010000 	blmi	433fc <mailbuffer+0x1625c>
    33f8:	2c9c0606 	ldccs	6, cr0, [ip], {6}
    33fc:	01080001 	tsteq	r8, r1
    3400:	9c010000 	stcls	0, cr0, [r1], {-0}
    3404:	00001061 	andeq	r1, r0, r1, rrx
    3408:	012d0828 			; <UNDEFINED> instruction: 0x012d0828
    340c:	00007800 	andeq	r7, r0, r0, lsl #16
    3410:	036a2700 	cmneq	sl, #0, 14
    3414:	7c010000 	stcvc	0, cr0, [r1], {-0}
    3418:	0c230306 	stceq	3, cr0, [r3], #-24	; 0xffffffe8
    341c:	91020000 	mrsls	r0, (UNDEF: 2)
    3420:	2a000074 	bcs	35f8 <_start-0x4a08>
    3424:	00001254 	andeq	r1, r0, r4, asr r2
    3428:	10062d01 	andne	r2, r6, r1, lsl #26
    342c:	00000046 	andeq	r0, r0, r6, asr #32
    3430:	00012c20 	andeq	r2, r1, r0, lsr #24
    3434:	0000007c 	andeq	r0, r0, ip, ror r0
    3438:	10bd9c01 	adcsne	r9, sp, r1, lsl #24
    343c:	cb250000 	blgt	943444 <mailbuffer+0x9162a4>
    3440:	01000010 	tsteq	r0, r0, lsl r0
    3444:	7c3a062d 	ldcvc	6, cr0, [sl], #-180	; 0xffffff4c
    3448:	0200000a 	andeq	r0, r0, #10
    344c:	f2256c91 	vfms.f32	d6, d21, d1
    3450:	01000013 	tsteq	r0, r3, lsl r0
    3454:	8d47062d 	stclhi	6, cr0, [r7, #-180]	; 0xffffff4c
    3458:	02000000 	andeq	r0, r0, #0
    345c:	4d276891 	stcmi	8, cr6, [r7, #-580]!	; 0xfffffdbc
    3460:	01000014 	tsteq	r0, r4, lsl r0
    3464:	b50a062f 	strlt	r0, [sl, #-1583]	; 0xfffff9d1
    3468:	0200000b 	andeq	r0, r0, #11
    346c:	37277491 			; <UNDEFINED> instruction: 0x37277491
    3470:	0100000c 	tsteq	r0, ip
    3474:	46100630 			; <UNDEFINED> instruction: 0x46100630
    3478:	02000000 	andeq	r0, r0, #0
    347c:	2a007091 	bcs	1f6c8 <LAN7800DeviceConfigure+0x4b0>
    3480:	00001003 	andeq	r1, r0, r3
    3484:	13061001 	movwne	r1, #24577	; 0x6001
    3488:	0000095e 	andeq	r0, r0, lr, asr r9
    348c:	00012bc4 	andeq	r2, r1, r4, asr #23
    3490:	0000005c 	andeq	r0, r0, ip, asr r0
    3494:	11099c01 	tstne	r9, r1, lsl #24
    3498:	cb250000 	blgt	9434a0 <mailbuffer+0x916300>
    349c:	01000010 	tsteq	r0, r0, lsl r0
    34a0:	7c3b0610 	ldcvc	6, cr0, [fp], #-64	; 0xffffffc0
    34a4:	0200000a 	andeq	r0, r0, #10
    34a8:	4d276c91 	stcmi	12, cr6, [r7, #-580]!	; 0xfffffdbc
    34ac:	01000014 	tsteq	r0, r4, lsl r0
    34b0:	b50a0612 	strlt	r0, [sl, #-1554]	; 0xfffff9ee
    34b4:	0200000b 	andeq	r0, r0, #11
    34b8:	37277491 			; <UNDEFINED> instruction: 0x37277491
    34bc:	0100000c 	tsteq	r0, ip
    34c0:	5e130613 	mrcpl	6, 0, r0, cr3, cr3, {0}
    34c4:	02000009 	andeq	r0, r0, #9
    34c8:	2c007091 	stccs	0, cr7, [r0], {145}	; 0x91
    34cc:	00000f17 	andeq	r0, r0, r7, lsl pc
    34d0:	0705f601 	streq	pc, [r5, -r1, lsl #12]
    34d4:	00012b68 	andeq	r2, r1, r8, ror #22
    34d8:	0000005c 	andeq	r0, r0, ip, asr r0
    34dc:	11519c01 	cmpne	r1, r1, lsl #24
    34e0:	cb250000 	blgt	9434e8 <mailbuffer+0x916348>
    34e4:	01000010 	tsteq	r0, r0, lsl r0
    34e8:	7c2f05f6 	cfstr32vc	mvfx0, [pc], #-984	; 3118 <_start-0x4ee8>
    34ec:	0200000a 	andeq	r0, r0, #10
    34f0:	21256c91 			; <UNDEFINED> instruction: 0x21256c91
    34f4:	01000011 	tsteq	r0, r1, lsl r0
    34f8:	5e4705f6 	mcrpl	5, 2, r0, cr7, cr6, {7}
    34fc:	02000009 	andeq	r0, r0, #9
    3500:	4d276891 	stcmi	8, cr6, [r7, #-580]!	; 0xfffffdbc
    3504:	01000014 	tsteq	r0, r4, lsl r0
    3508:	b50a05f8 	strlt	r0, [sl, #-1528]	; 0xfffffa08
    350c:	0200000b 	andeq	r0, r0, #11
    3510:	2c007491 	cfstrscs	mvf7, [r0], {145}	; 0x91
    3514:	000011ca 	andeq	r1, r0, sl, asr #3
    3518:	0605a901 	streq	sl, [r5], -r1, lsl #18
    351c:	0001294c 	andeq	r2, r1, ip, asr #18
    3520:	0000021c 	andeq	r0, r0, ip, lsl r2
    3524:	11b19c01 			; <UNDEFINED> instruction: 0x11b19c01
    3528:	4c270000 	stcmi	0, cr0, [r7], #-0
    352c:	01000014 	tsteq	r0, r4, lsl r0
    3530:	b50a05ab 	strlt	r0, [sl, #-1451]	; 0xfffffa55
    3534:	0200000b 	andeq	r0, r0, #11
    3538:	8c2d7091 	stchi	0, cr7, [sp], #-580	; 0xfffffdbc
    353c:	84000129 	strhi	r0, [r0], #-297	; 0xfffffed7
    3540:	96000000 	strls	r0, [r0], -r0
    3544:	27000011 	smladcs	r0, r1, r0, r0
    3548:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    354c:	0b05b501 	bleq	170958 <mailbuffer+0x1437b8>
    3550:	00000c18 	andeq	r0, r0, r8, lsl ip
    3554:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3558:	012a1028 			; <UNDEFINED> instruction: 0x012a1028
    355c:	00011000 	andeq	r1, r1, r0
    3560:	03122700 	tsteq	r2, #0, 14
    3564:	d6010000 	strle	r0, [r1], -r0
    3568:	094d0305 	stmdbeq	sp, {r0, r2, r8, r9}^
    356c:	91020000 	mrsls	r0, (UNDEF: 2)
    3570:	2e00006c 	cdpcs	0, 0, cr0, cr0, cr12, {3}
    3574:	00000e5f 	andeq	r0, r0, pc, asr lr
    3578:	1804f701 	stmdane	r4, {r0, r8, r9, sl, ip, sp, lr, pc}
    357c:	00000052 	andeq	r0, r0, r2, asr r0
    3580:	00012928 	andeq	r2, r1, r8, lsr #18
    3584:	00000024 	andeq	r0, r0, r4, lsr #32
    3588:	ac2f9c01 	stcge	12, cr9, [pc], #-4	; 358c <_start-0x4a74>
    358c:	0100000f 	tsteq	r0, pc
    3590:	4d0e04ea 	cfstrsmi	mvf0, [lr, #-936]	; 0xfffffc58
    3594:	f0000009 			; <UNDEFINED> instruction: 0xf0000009
    3598:	38000128 	stmdacc	r0, {r3, r5, r8}
    359c:	01000000 	mrseq	r0, (UNDEF: 0)
    35a0:	0012049c 	mulseq	r2, ip, r4
    35a4:	0c372700 	ldceq	7, cr2, [r7], #-0
    35a8:	ec010000 	stc	0, cr0, [r1], {-0}
    35ac:	094d0e04 	stmdbeq	sp, {r2, r9, sl, fp}^
    35b0:	91020000 	mrsls	r0, (UNDEF: 2)
    35b4:	0bdc2770 	bleq	ff70d37c <_estack+0xf76fd37c>
    35b8:	ed010000 	stc	0, cr0, [r1, #-0]
    35bc:	00521804 	subseq	r1, r2, r4, lsl #16
    35c0:	91020000 	mrsls	r0, (UNDEF: 2)
    35c4:	442a0074 	strtmi	r0, [sl], #-116	; 0xffffff8c
    35c8:	01000011 	tsteq	r0, r1, lsl r0
    35cc:	4d0e04db 	cfstrsmi	mvf0, [lr, #-876]	; 0xfffffc94
    35d0:	bc000009 	stclt	0, cr0, [r0], {9}
    35d4:	34000128 	strcc	r0, [r0], #-296	; 0xfffffed8
    35d8:	01000000 	mrseq	r0, (UNDEF: 0)
    35dc:	0012309c 	mulseq	r2, ip, r0
    35e0:	11782700 	cmnne	r8, r0, lsl #14
    35e4:	dd010000 	stcle	0, cr0, [r1, #-0]
    35e8:	094d0e04 	stmdbeq	sp, {r2, r9, sl, fp}^
    35ec:	91020000 	mrsls	r0, (UNDEF: 2)
    35f0:	b92a0074 	stmdblt	sl!, {r2, r4, r5, r6}
    35f4:	01000012 	tsteq	r0, r2, lsl r0
    35f8:	46160484 	ldrmi	r0, [r6], -r4, lsl #9
    35fc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3600:	a4000127 	strge	r0, [r0], #-295	; 0xfffffed9
    3604:	01000001 	tsteq	r0, r1
    3608:	0012859c 	mulseq	r2, ip, r5
    360c:	144c2700 	strbne	r2, [ip], #-1792	; 0xfffff900
    3610:	86010000 	strhi	r0, [r1], -r0
    3614:	0bb51204 	bleq	fed47e2c <_estack+0xf6d37e2c>
    3618:	54010000 	strpl	r0, [r1], #-0
    361c:	0013e227 	andseq	lr, r3, r7, lsr #4
    3620:	04870100 	streq	r0, [r7], #256	; 0x100
    3624:	00004616 	andeq	r4, r0, r6, lsl r6
    3628:	6c910200 	lfmvs	f0, 4, [r1], {0}
    362c:	01276428 			; <UNDEFINED> instruction: 0x01276428
    3630:	00012400 	andeq	r2, r1, r0, lsl #8
    3634:	0f4f2700 	svceq	0x004f2700
    3638:	9a010000 	bls	43640 <mailbuffer+0x164a0>
    363c:	00461304 	subeq	r1, r6, r4, lsl #6
    3640:	91020000 	mrsls	r0, (UNDEF: 2)
    3644:	29000068 	stmdbcs	r0, {r3, r5, r6}
    3648:	00001044 	andeq	r1, r0, r4, asr #32
    364c:	06047c01 	streq	r7, [r4], -r1, lsl #24
    3650:	000126e8 	andeq	r2, r1, r8, ror #13
    3654:	00000030 	andeq	r0, r0, r0, lsr r0
    3658:	39309c01 	ldmdbcc	r0!, {r0, sl, fp, ip, pc}
    365c:	0100000e 	tsteq	r0, lr
    3660:	b0060471 	andlt	r0, r6, r1, ror r4
    3664:	38000126 	stmdacc	r0, {r1, r2, r5, r8}
    3668:	01000000 	mrseq	r0, (UNDEF: 0)
    366c:	13762c9c 	cmnne	r6, #156, 24	; 0x9c00
    3670:	30010000 	andcc	r0, r1, r0
    3674:	26140604 	ldrcs	r0, [r4], -r4, lsl #12
    3678:	009c0001 	addseq	r0, ip, r1
    367c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3680:	000012d3 	ldrdeq	r1, [r0], -r3
    3684:	000c3727 	andeq	r3, ip, r7, lsr #14
    3688:	04320100 	ldrteq	r0, [r2], #-256	; 0xffffff00
    368c:	0000460f 	andeq	r4, r0, pc, lsl #12
    3690:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3694:	13432a00 	movtne	r2, #14848	; 0x3a00
    3698:	02010000 	andeq	r0, r1, #0
    369c:	00461004 	subeq	r1, r6, r4
    36a0:	24f80000 	ldrbtcs	r0, [r8], #0
    36a4:	011c0001 	tsteq	ip, r1
    36a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    36ac:	0000132f 	andeq	r1, r0, pc, lsr #6
    36b0:	000f4025 	andeq	r4, pc, r5, lsr #32
    36b4:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
    36b8:	000a7c30 	andeq	r7, sl, r0, lsr ip
    36bc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    36c0:	000f4f27 	andeq	r4, pc, r7, lsr #30
    36c4:	04040100 	streq	r0, [r4], #-256	; 0xffffff00
    36c8:	00004610 	andeq	r4, r0, r0, lsl r6
    36cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    36d0:	00144c27 	andseq	r4, r4, r7, lsr #24
    36d4:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    36d8:	000bb50a 	andeq	fp, fp, sl, lsl #10
    36dc:	70910200 	addsvc	r0, r1, r0, lsl #4
    36e0:	000bdc27 	andeq	sp, fp, r7, lsr #24
    36e4:	04060100 	streq	r0, [r6], #-256	; 0xffffff00
    36e8:	00005219 	andeq	r5, r0, r9, lsl r2
    36ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    36f0:	14522c00 	ldrbne	r2, [r2], #-3072	; 0xfffff400
    36f4:	d5010000 	strle	r0, [r1, #-0]
    36f8:	24000703 	strcs	r0, [r0], #-1795	; 0xfffff8fd
    36fc:	00f80001 	rscseq	r0, r8, r1
    3700:	9c010000 	stcls	0, cr0, [r1], {-0}
    3704:	00001367 	andeq	r1, r0, r7, ror #6
    3708:	000f4025 	andeq	r4, pc, r5, lsr #32
    370c:	03d50100 	bicseq	r0, r5, #0, 2
    3710:	000a7c20 	andeq	r7, sl, r0, lsr #24
    3714:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3718:	00144c27 	andseq	r4, r4, r7, lsr #24
    371c:	03d70100 	bicseq	r0, r7, #0, 2
    3720:	000bb50a 	andeq	fp, fp, sl, lsl #10
    3724:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3728:	0fd72f00 	svceq	0x00d72f00
    372c:	b3010000 	movwlt	r0, #4096	; 0x1000
    3730:	00461703 	subeq	r1, r6, r3, lsl #14
    3734:	23840000 	orrcs	r0, r4, #0
    3738:	007c0001 	rsbseq	r0, ip, r1
    373c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3740:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
    3744:	0010cb25 	andseq	ip, r0, r5, lsr #22
    3748:	03b30100 			; <UNDEFINED> instruction: 0x03b30100
    374c:	000a7c39 	andeq	r7, sl, r9, lsr ip
    3750:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3754:	000c3727 	andeq	r3, ip, r7, lsr #14
    3758:	03b50100 			; <UNDEFINED> instruction: 0x03b50100
    375c:	00004610 	andeq	r4, r0, r0, lsl r6
    3760:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3764:	00144c27 	andseq	r4, r4, r7, lsr #24
    3768:	03b60100 			; <UNDEFINED> instruction: 0x03b60100
    376c:	0013b917 	andseq	fp, r3, r7, lsl r9
    3770:	70910200 	addsvc	r0, r1, r0, lsl #4
    3774:	9e041100 	adflss	f1, f4, f0
    3778:	0300000b 	movweq	r0, #11
    377c:	000013b3 			; <UNDEFINED> instruction: 0x000013b3
    3780:	0013d52c 	andseq	sp, r3, ip, lsr #10
    3784:	03730100 	cmneq	r3, #0, 2
    3788:	01228007 			; <UNDEFINED> instruction: 0x01228007
    378c:	00010400 	andeq	r0, r1, r0, lsl #8
    3790:	f69c0100 			; <UNDEFINED> instruction: 0xf69c0100
    3794:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    3798:	00001301 	andeq	r1, r0, r1, lsl #6
    379c:	21037301 	tstcs	r3, r1, lsl #6
    37a0:	00000a7c 	andeq	r0, r0, ip, ror sl
    37a4:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    37a8:	0000144c 	andeq	r1, r0, ip, asr #8
    37ac:	0a037501 	beq	e0bb8 <mailbuffer+0xb3a18>
    37b0:	00000bb5 			; <UNDEFINED> instruction: 0x00000bb5
    37b4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    37b8:	0011ab2c 	andseq	sl, r1, ip, lsr #22
    37bc:	03070100 	movweq	r0, #28928	; 0x7100
    37c0:	0120d807 			; <UNDEFINED> instruction: 0x0120d807
    37c4:	0001a800 	andeq	sl, r1, r0, lsl #16
    37c8:	5e9c0100 	fmlple	f0, f4, f0
    37cc:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    37d0:	000010ca 	andeq	r1, r0, sl, asr #1
    37d4:	25030701 	strcs	r0, [r3, #-1793]	; 0xfffff8ff
    37d8:	00000a7c 	andeq	r0, r0, ip, ror sl
    37dc:	25649102 	strbcs	r9, [r4, #-258]!	; 0xfffffefe
    37e0:	0000117f 	andeq	r1, r0, pc, ror r1
    37e4:	44030701 	strmi	r0, [r3], #-1793	; 0xfffff8ff
    37e8:	00000052 	andeq	r0, r0, r2, asr r0
    37ec:	27609102 	strbcs	r9, [r0, -r2, lsl #2]!
    37f0:	0000144c 	andeq	r1, r0, ip, asr #8
    37f4:	0a030901 	beq	c5c00 <mailbuffer+0x98a60>
    37f8:	00000bb5 			; <UNDEFINED> instruction: 0x00000bb5
    37fc:	27709102 	ldrbcs	r9, [r0, -r2, lsl #2]!
    3800:	00000ee1 	andeq	r0, r0, r1, ror #29
    3804:	19030a01 	stmdbne	r3, {r0, r9, fp}
    3808:	00000052 	andeq	r0, r0, r2, asr r0
    380c:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    3810:	00000f4f 	andeq	r0, r0, pc, asr #30
    3814:	10030b01 	andne	r0, r3, r1, lsl #22
    3818:	00000046 	andeq	r0, r0, r6, asr #32
    381c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3820:	000e892a 	andeq	r8, lr, sl, lsr #18
    3824:	02f10100 	rscseq	r0, r1, #0, 2
    3828:	00005219 	andeq	r5, r0, r9, lsl r2
    382c:	01208000 			; <UNDEFINED> instruction: 0x01208000
    3830:	00005800 	andeq	r5, r0, r0, lsl #16
    3834:	aa9c0100 	bge	fe703c3c <_estack+0xf66f3c3c>
    3838:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    383c:	000010ca 	andeq	r1, r0, sl, asr #1
    3840:	3802f101 	stmdacc	r2, {r0, r8, ip, sp, lr, pc}
    3844:	00000a7c 	andeq	r0, r0, ip, ror sl
    3848:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    384c:	0000144c 	andeq	r1, r0, ip, asr #8
    3850:	0a02f301 	beq	c045c <mailbuffer+0x932bc>
    3854:	00000bb5 			; <UNDEFINED> instruction: 0x00000bb5
    3858:	27749102 	ldrbcs	r9, [r4, -r2, lsl #2]!
    385c:	00000c36 	andeq	r0, r0, r6, lsr ip
    3860:	1902f401 	stmdbne	r2, {r0, sl, ip, sp, lr, pc}
    3864:	00000052 	andeq	r0, r0, r2, asr r0
    3868:	00709102 	rsbseq	r9, r0, r2, lsl #2
    386c:	0010bf2c 	andseq	fp, r0, ip, lsr #30
    3870:	02c30100 	sbceq	r0, r3, #0, 2
    3874:	011ffc07 	tsteq	pc, r7, lsl #24	; <UNPREDICTABLE>
    3878:	00008400 	andeq	r8, r0, r0, lsl #8
    387c:	f29c0100 	vaddw.s16	q0, q6, d0
    3880:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    3884:	0000031d 	andeq	r0, r0, sp, lsl r3
    3888:	2002c301 	andcs	ip, r2, r1, lsl #6
    388c:	0000094d 	andeq	r0, r0, sp, asr #18
    3890:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    3894:	0000052d 	andeq	r0, r0, sp, lsr #10
    3898:	0f02c501 	svceq	0x0002c501
    389c:	0000094d 	andeq	r0, r0, sp, asr #18
    38a0:	27709102 	ldrbcs	r9, [r0, -r2, lsl #2]!
    38a4:	000013e2 	andeq	r1, r0, r2, ror #7
    38a8:	1702c601 	strne	ip, [r2, -r1, lsl #12]
    38ac:	00000046 	andeq	r0, r0, r6, asr #32
    38b0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    38b4:	0013b82c 	andseq	fp, r3, ip, lsr #16
    38b8:	02820100 	addeq	r0, r2, #0, 2
    38bc:	011eec07 	tsteq	lr, r7, lsl #24
    38c0:	00011000 	andeq	r1, r1, r0
    38c4:	5a9c0100 	bpl	fe703ccc <_estack+0xf66f3ccc>
    38c8:	25000015 	strcs	r0, [r0, #-21]	; 0xffffffeb
    38cc:	00001311 	andeq	r1, r0, r1, lsl r3
    38d0:	2d028201 	sfmcs	f0, 1, [r2, #-4]
    38d4:	00000f63 	andeq	r0, r0, r3, ror #30
    38d8:	25649102 	strbcs	r9, [r4, #-258]!	; 0xfffffefe
    38dc:	0000143d 	andeq	r1, r0, sp, lsr r4
    38e0:	4e028201 	cdpmi	2, 0, cr8, cr2, cr1, {0}
    38e4:	0000094d 	andeq	r0, r0, sp, asr #18
    38e8:	27609102 	strbcs	r9, [r0, -r2, lsl #2]!
    38ec:	0000052d 	andeq	r0, r0, sp, lsr #10
    38f0:	0f028401 	svceq	0x00028401
    38f4:	0000094d 	andeq	r0, r0, sp, asr #18
    38f8:	27709102 	ldrbcs	r9, [r0, -r2, lsl #2]!
    38fc:	000013e2 	andeq	r1, r0, r2, ror #7
    3900:	10028501 	andne	r8, r2, r1, lsl #10
    3904:	00000046 	andeq	r0, r0, r6, asr #32
    3908:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    390c:	000010ea 	andeq	r1, r0, sl, ror #1
    3910:	21028501 	tstcs	r2, r1, lsl #10
    3914:	00000046 	andeq	r0, r0, r6, asr #32
    3918:	00749102 	rsbseq	r9, r4, r2, lsl #2
    391c:	0012482c 	andseq	r4, r2, ip, lsr #16
    3920:	02400100 	subeq	r0, r0, #0, 2
    3924:	011dec07 	tsteq	sp, r7, lsl #24
    3928:	00010000 	andeq	r0, r1, r0
    392c:	929c0100 	addsls	r0, ip, #0, 2
    3930:	25000015 	strcs	r0, [r0, #-21]	; 0xffffffeb
    3934:	00001324 	andeq	r1, r0, r4, lsr #6
    3938:	20024001 	andcs	r4, r2, r1
    393c:	00000a7c 	andeq	r0, r0, ip, ror sl
    3940:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    3944:	0000144c 	andeq	r1, r0, ip, asr #8
    3948:	0a024201 	beq	94154 <mailbuffer+0x66fb4>
    394c:	00000bb5 			; <UNDEFINED> instruction: 0x00000bb5
    3950:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3954:	0012712a 	andseq	r7, r2, sl, lsr #2
    3958:	019b0100 	orrseq	r0, fp, r0, lsl #2
    395c:	00004616 	andeq	r4, r0, r6, lsl r6
    3960:	011ba000 	tsteq	fp, r0
    3964:	00024c00 	andeq	r4, r2, r0, lsl #24
    3968:	699c0100 	ldmibvs	ip, {r8}
    396c:	25000016 	strcs	r0, [r0, #-22]	; 0xffffffea
    3970:	00001139 	andeq	r1, r0, r9, lsr r1
    3974:	36019b01 	strcc	r9, [r1], -r1, lsl #22
    3978:	00000930 	andeq	r0, r0, r0, lsr r9
    397c:	25649102 	strbcs	r9, [r4, #-258]!	; 0xfffffefe
    3980:	0000118d 	andeq	r1, r0, sp, lsl #3
    3984:	5c019b01 			; <UNDEFINED> instruction: 0x5c019b01
    3988:	00000b08 	andeq	r0, r0, r8, lsl #22
    398c:	25609102 	strbcs	r9, [r0, #-258]!	; 0xfffffefe
    3990:	0000116b 	andeq	r1, r0, fp, ror #2
    3994:	73019b01 	movwvc	r9, #6913	; 0x1b01
    3998:	0000003f 	andeq	r0, r0, pc, lsr r0
    399c:	255e9102 	ldrbcs	r9, [lr, #-258]	; 0xfffffefe
    39a0:	00000107 	andeq	r0, r0, r7, lsl #2
    39a4:	87019b01 	strhi	r9, [r1, -r1, lsl #22]
    39a8:	0000008d 	andeq	r0, r0, sp, lsl #1
    39ac:	25589102 	ldrbcs	r9, [r8, #-258]	; 0xfffffefe
    39b0:	000004c6 	andeq	r0, r0, r6, asr #9
    39b4:	ac019b01 			; <UNDEFINED> instruction: 0xac019b01
    39b8:	00000052 	andeq	r0, r0, r2, asr r0
    39bc:	25009102 	strcs	r9, [r0, #-258]	; 0xfffffefe
    39c0:	0000145e 	andeq	r1, r0, lr, asr r4
    39c4:	c5019b01 	strgt	r9, [r1, #-2817]	; 0xfffff4ff
    39c8:	00001669 	andeq	r1, r0, r9, ror #12
    39cc:	25049102 	strcs	r9, [r4, #-258]	; 0xfffffefe
    39d0:	00001367 	andeq	r1, r0, r7, ror #6
    39d4:	e4019b01 	str	r9, [r1], #-2817	; 0xfffff4ff
    39d8:	00000b0d 	andeq	r0, r0, sp, lsl #22
    39dc:	31089102 	tstcc	r8, r2, lsl #2
    39e0:	000013fe 	strdeq	r1, [r0], -lr
    39e4:	10019b01 	andne	r9, r1, r1, lsl #22
    39e8:	000ec601 	andeq	ip, lr, r1, lsl #12
    39ec:	0c910200 	lfmeq	f0, 4, [r1], {0}
    39f0:	000c3727 	andeq	r3, ip, r7, lsr #14
    39f4:	019d0100 	orrseq	r0, sp, r0, lsl #2
    39f8:	00004616 	andeq	r4, r0, r6, lsl r6
    39fc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3a00:	00113027 	andseq	r3, r1, r7, lsr #32
    3a04:	019e0100 	orrseq	r0, lr, r0, lsl #2
    3a08:	000bb50a 	andeq	fp, fp, sl, lsl #10
    3a0c:	70910200 	addsvc	r0, r1, r0, lsl #4
    3a10:	011be028 	tsteq	fp, r8, lsr #32
    3a14:	00019c00 	andeq	r9, r1, r0, lsl #24
    3a18:	011a2700 	tsteq	sl, r0, lsl #14
    3a1c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    3a20:	0b0d1301 	bleq	34862c <mailbuffer+0x31b48c>
    3a24:	91020000 	mrsls	r0, (UNDEF: 2)
    3a28:	1100006c 	tstne	r0, ip, rrx
    3a2c:	000a7c04 	andeq	r7, sl, r4, lsl #24
    3a30:	02d70000 	sbcseq	r0, r7, #0
    3a34:	00040000 	andeq	r0, r4, r0
    3a38:	00000b7b 	andeq	r0, r0, fp, ror fp
    3a3c:	00590104 	subseq	r0, r9, r4, lsl #2
    3a40:	a50c0000 	strge	r0, [ip, #-0]
    3a44:	cf000014 	svcgt	0x00000014
    3a48:	c4000000 	strgt	r0, [r0], #-0
    3a4c:	a0000134 	andge	r0, r0, r4, lsr r1
    3a50:	8b000003 	blhi	3a64 <_start-0x459c>
    3a54:	02000016 	andeq	r0, r0, #22
    3a58:	00001572 	andeq	r1, r0, r2, ror r5
    3a5c:	31100b02 	tstcc	r0, r2, lsl #22
    3a60:	03000000 	movweq	r0, #0
    3a64:	00003704 	andeq	r3, r0, r4, lsl #14
    3a68:	00470400 	subeq	r0, r7, r0, lsl #8
    3a6c:	47050000 	strmi	r0, [r5, -r0]
    3a70:	05000000 	streq	r0, [r0, #-0]
    3a74:	00000053 	andeq	r0, r0, r3, asr r0
    3a78:	07040600 	streq	r0, [r4, -r0, lsl #12]
    3a7c:	00000668 	andeq	r0, r0, r8, ror #12
    3a80:	00004707 	andeq	r4, r0, r7, lsl #14
    3a84:	09040800 	stmdbeq	r4, {fp}
    3a88:	090d0208 	stmdbeq	sp, {r3, r9}
    3a8c:	00000079 	andeq	r0, r0, r9, ror r0
    3a90:	00152a0a 	andseq	r2, r5, sl, lsl #20
    3a94:	180e0200 	stmdane	lr, {r9}
    3a98:	00000025 	andeq	r0, r0, r5, lsr #32
    3a9c:	00300a00 	eorseq	r0, r0, r0, lsl #20
    3aa0:	0f020000 	svceq	0x00020000
    3aa4:	0000530f 	andeq	r5, r0, pc, lsl #6
    3aa8:	02000400 	andeq	r0, r0, #0, 8
    3aac:	00001587 	andeq	r1, r0, r7, lsl #11
    3ab0:	55031002 	strpl	r1, [r3, #-2]
    3ab4:	0b000000 	bleq	3abc <_start-0x4544>
    3ab8:	00000079 	andeq	r0, r0, r9, ror r0
    3abc:	00000095 	muleq	r0, r5, r0
    3ac0:	0000470c 	andeq	r4, r0, ip, lsl #14
    3ac4:	0d004700 	stceq	7, cr4, [r0, #-0]
    3ac8:	0000155a 	andeq	r1, r0, sl, asr r5
    3acc:	85190901 	ldrhi	r0, [r9, #-2305]	; 0xfffff6ff
    3ad0:	05000000 	streq	r0, [r0, #-0]
    3ad4:	02bee403 	adcseq	lr, lr, #50331648	; 0x3000000
    3ad8:	01280900 			; <UNDEFINED> instruction: 0x01280900
    3adc:	0133090c 	teqeq	r3, ip, lsl #18
    3ae0:	a00a0000 	andge	r0, sl, r0
    3ae4:	01000015 	tsteq	r0, r5, lsl r0
    3ae8:	0133100d 	teqeq	r3, sp
    3aec:	0a000000 	beq	3af4 <_start-0x450c>
    3af0:	0000146c 	andeq	r1, r0, ip, ror #8
    3af4:	33100e01 	tstcc	r0, #1, 28
    3af8:	04000001 	streq	r0, [r0], #-1
    3afc:	0014750a 	andseq	r7, r4, sl, lsl #10
    3b00:	100f0100 	andne	r0, pc, r0, lsl #2
    3b04:	00000133 	andeq	r0, r0, r3, lsr r1
    3b08:	149d0a08 	ldrne	r0, [sp], #2568	; 0xa08
    3b0c:	10010000 	andne	r0, r1, r0
    3b10:	00013310 	andeq	r3, r1, r0, lsl r3
    3b14:	c00a0c00 	andgt	r0, sl, r0, lsl #24
    3b18:	01000015 	tsteq	r0, r5, lsl r0
    3b1c:	01331011 	teqeq	r3, r1, lsl r0
    3b20:	0a100000 	beq	403b28 <mailbuffer+0x3d6988>
    3b24:	00001540 	andeq	r1, r0, r0, asr #10
    3b28:	33101201 	tstcc	r0, #268435456	; 0x10000000
    3b2c:	14000001 	strne	r0, [r0], #-1
    3b30:	0015b40a 	andseq	fp, r5, sl, lsl #8
    3b34:	10130100 	andsne	r0, r3, r0, lsl #2
    3b38:	00000133 	andeq	r0, r0, r3, lsr r1
    3b3c:	15480a18 	strbne	r0, [r8, #-2584]	; 0xfffff5e8
    3b40:	14010000 	strne	r0, [r1], #-0
    3b44:	00013310 	andeq	r3, r1, r0, lsl r3
    3b48:	510a1c00 	tstpl	sl, r0, lsl #24
    3b4c:	01000015 	tsteq	r0, r5, lsl r0
    3b50:	01331015 	teqeq	r3, r5, lsl r0
    3b54:	0a200000 	beq	803b5c <mailbuffer+0x7d69bc>
    3b58:	0000147e 	andeq	r1, r0, lr, ror r4
    3b5c:	33101601 	tstcc	r0, #1048576	; 0x100000
    3b60:	24000001 	strcs	r0, [r0], #-1
    3b64:	07040600 	streq	r0, [r4, -r0, lsl #12]
    3b68:	00000663 	andeq	r0, r0, r3, ror #12
    3b6c:	00148b02 	andseq	r8, r4, r2, lsl #22
    3b70:	03170100 	tsteq	r7, #0, 2
    3b74:	000000a7 	andeq	r0, r0, r7, lsr #1
    3b78:	00013a0e 	andeq	r3, r1, lr, lsl #20
    3b7c:	01140d00 	tsteq	r4, r0, lsl #26
    3b80:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    3b84:	0001632b 	andeq	r6, r1, fp, lsr #6
    3b88:	78030500 	stmdavc	r3, {r8, sl}
    3b8c:	03000282 	movweq	r0, #642	; 0x282
    3b90:	00014604 	andeq	r4, r1, r4, lsl #12
    3b94:	015d0700 	cmpeq	sp, r0, lsl #14
    3b98:	330b0000 	movwcc	r0, #45056	; 0xb000
    3b9c:	78000001 	stmdavc	r0, {r0}
    3ba0:	0c000001 	stceq	0, cr0, [r0], {1}
    3ba4:	00000047 	andeq	r0, r0, r7, asr #32
    3ba8:	fa0d0002 	blx	343bb8 <mailbuffer+0x316a18>
    3bac:	01000014 	tsteq	r0, r4, lsl r0
    3bb0:	0168161c 	cmneq	r8, ip, lsl r6
    3bb4:	03050000 	movweq	r0, #20480	; 0x5000
    3bb8:	0002c124 	andeq	ip, r2, r4, lsr #2
    3bbc:	0015130f 	andseq	r1, r5, pc, lsl #6
    3bc0:	066d0100 	strbteq	r0, [sp], -r0, lsl #2
    3bc4:	00013784 	andeq	r3, r1, r4, lsl #15
    3bc8:	000000e0 	andeq	r0, r0, r0, ror #1
    3bcc:	01bf9c01 			; <UNDEFINED> instruction: 0x01bf9c01
    3bd0:	69100000 	ldmdbvs	r0, {}	; <UNPREDICTABLE>
    3bd4:	01007172 	tsteq	r0, r2, ror r1
    3bd8:	004e256d 	subeq	r2, lr, sp, ror #10
    3bdc:	91020000 	mrsls	r0, (UNDEF: 2)
    3be0:	150e0d6c 	strne	r0, [lr, #-3436]	; 0xfffff294
    3be4:	6f010000 	svcvs	0x00010000
    3be8:	00013310 	andeq	r3, r1, r0, lsl r3
    3bec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3bf0:	15680f00 	strbne	r0, [r8, #-3840]!	; 0xfffff100
    3bf4:	5b010000 	blpl	43bfc <mailbuffer+0x16a5c>
    3bf8:	0136b006 	teqeq	r6, r6
    3bfc:	0000d400 	andeq	sp, r0, r0, lsl #8
    3c00:	f49c0100 			; <UNDEFINED> instruction: 0xf49c0100
    3c04:	10000001 	andne	r0, r0, r1
    3c08:	00717269 	rsbseq	r7, r1, r9, ror #4
    3c0c:	4e245b01 	vmulmi.f64	d5, d4, d1
    3c10:	02000000 	andeq	r0, r0, #0
    3c14:	0e0d6c91 	mcreq	12, 0, r6, cr13, cr1, {4}
    3c18:	01000015 	tsteq	r0, r5, lsl r0
    3c1c:	0133105d 	teqeq	r3, sp, asr r0
    3c20:	91020000 	mrsls	r0, (UNDEF: 2)
    3c24:	1e110074 	mrcne	0, 0, r0, cr1, cr4, {3}
    3c28:	01000015 	tsteq	r0, r5, lsl r0
    3c2c:	364c0651 			; <UNDEFINED> instruction: 0x364c0651
    3c30:	00640001 	rsbeq	r0, r4, r1
    3c34:	9c010000 	stcls	0, cr0, [r1], {-0}
    3c38:	00000238 	andeq	r0, r0, r8, lsr r2
    3c3c:	71726910 	cmnvc	r2, r0, lsl r9
    3c40:	26510100 	ldrbcs	r0, [r1], -r0, lsl #2
    3c44:	0000004e 	andeq	r0, r0, lr, asr #32
    3c48:	12749102 	rsbsne	r9, r4, #-2147483648	; 0x80000000
    3c4c:	0000152a 	andeq	r1, r0, sl, lsr #10
    3c50:	25405101 	strbcs	r5, [r0, #-257]	; 0xfffffeff
    3c54:	02000000 	andeq	r0, r0, #0
    3c58:	30127091 	mulscc	r2, r1, r0
    3c5c:	01000000 	mrseq	r0, (UNDEF: 0)
    3c60:	00535251 	subseq	r5, r3, r1, asr r2
    3c64:	91020000 	mrsls	r0, (UNDEF: 2)
    3c68:	e213006c 	ands	r0, r3, #108	; 0x6c
    3c6c:	01000014 	tsteq	r0, r4, lsl r0
    3c70:	3630064c 	ldrtcc	r0, [r0], -ip, asr #12
    3c74:	001c0001 	andseq	r0, ip, r1
    3c78:	9c010000 	stcls	0, cr0, [r1], {-0}
    3c7c:	0015a913 	andseq	sl, r5, r3, lsl r9
    3c80:	06470100 	strbeq	r0, [r7], -r0, lsl #2
    3c84:	00013614 	andeq	r3, r1, r4, lsl r6
    3c88:	0000001c 	andeq	r0, r0, ip, lsl r0
    3c8c:	35119c01 	ldrcc	r9, [r1, #-3073]	; 0xfffff3ff
    3c90:	01000015 	tsteq	r0, r5, lsl r0
    3c94:	35740636 	ldrbcc	r0, [r4, #-1590]!	; 0xfffff9ca
    3c98:	00a00001 	adceq	r0, r0, r1
    3c9c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3ca0:	00000281 	andeq	r0, r0, r1, lsl #5
    3ca4:	0014eb0d 	andseq	lr, r4, sp, lsl #22
    3ca8:	19380100 	ldmdbne	r8!, {r8}
    3cac:	00000133 	andeq	r0, r0, r3, lsr r1
    3cb0:	14005401 	strne	r5, [r0], #-1025	; 0xfffffbff
    3cb4:	00001502 	andeq	r1, r0, r2, lsl #10
    3cb8:	c40d1e01 	strgt	r1, [sp], #-3585	; 0xfffff1ff
    3cbc:	b0000134 	andlt	r0, r0, r4, lsr r1
    3cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    3cc4:	1598129c 	ldrne	r1, [r8, #668]	; 0x29c
    3cc8:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    3ccc:	00013328 	andeq	r3, r1, r8, lsr #6
    3cd0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3cd4:	0006c412 	andeq	ip, r6, r2, lsl r4
    3cd8:	441e0100 	ldrmi	r0, [lr], #-256	; 0xffffff00
    3cdc:	0000004e 	andeq	r0, r0, lr, asr #32
    3ce0:	15689102 	strbne	r9, [r8, #-258]!	; 0xfffffefe
    3ce4:	000134dc 	ldrdeq	r3, [r1], -ip
    3ce8:	0000007c 	andeq	r0, r0, ip, ror r0
    3cec:	74696216 	strbtvc	r6, [r9], #-534	; 0xfffffdea
    3cf0:	10230100 	eorne	r0, r3, r0, lsl #2
    3cf4:	00000047 	andeq	r0, r0, r7, asr #32
    3cf8:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
    3cfc:	00717269 	rsbseq	r7, r1, r9, ror #4
    3d00:	47102601 	ldrmi	r2, [r0, -r1, lsl #12]
    3d04:	02000000 	andeq	r0, r0, #0
    3d08:	00007091 	muleq	r0, r1, r0
    3d0c:	00043400 	andeq	r3, r4, r0, lsl #8
    3d10:	c0000400 	andgt	r0, r0, r0, lsl #8
    3d14:	0400000c 	streq	r0, [r0], #-12
    3d18:	00005901 	andeq	r5, r0, r1, lsl #18
    3d1c:	165c0c00 	ldrbne	r0, [ip], -r0, lsl #24
    3d20:	00cf0000 	sbceq	r0, pc, r0
    3d24:	38640000 	stmdacc	r4!, {}^	; <UNPREDICTABLE>
    3d28:	05d80001 	ldrbeq	r0, [r8, #1]
    3d2c:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    3d30:	b1020000 	mrslt	r0, (UNDEF: 2)
    3d34:	07000016 	smladeq	r0, r6, r0, r0
    3d38:	00006201 	andeq	r6, r0, r1, lsl #4
    3d3c:	06470200 	strbeq	r0, [r7], -r0, lsl #4
    3d40:	00000062 	andeq	r0, r0, r2, rrx
    3d44:	00170903 	andseq	r0, r7, r3, lsl #18
    3d48:	24030000 	strcs	r0, [r3], #-0
    3d4c:	01000017 	tsteq	r0, r7, lsl r0
    3d50:	0017c603 	andseq	ip, r7, r3, lsl #12
    3d54:	fd030200 	stc2	2, cr0, [r3, #-0]
    3d58:	03000016 	movweq	r0, #22
    3d5c:	00173203 	andseq	r3, r7, r3, lsl #4
    3d60:	19030400 	stmdbne	r3, {sl}
    3d64:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    3d68:	00162d03 	andseq	r2, r6, r3, lsl #26
    3d6c:	04000600 	streq	r0, [r0], #-1536	; 0xfffffa00
    3d70:	08a60801 	stmiaeq	r6!, {r0, fp}
    3d74:	e6020000 	str	r0, [r2], -r0
    3d78:	07000016 	smladeq	r0, r6, r0, r0
    3d7c:	00006201 	andeq	r6, r0, r1, lsl #4
    3d80:	065a0200 	ldrbeq	r0, [sl], -r0, lsl #4
    3d84:	00000088 	andeq	r0, r0, r8, lsl #1
    3d88:	0016f503 	andseq	pc, r6, r3, lsl #10
    3d8c:	f3030000 	vhadd.u8	d0, d3, d0
    3d90:	01000017 	tsteq	r0, r7, lsl r0
    3d94:	01a00500 	lsleq	r0, r0, #10
    3d98:	01ca094a 	biceq	r0, sl, sl, asr #18
    3d9c:	5c060000 	stcpl	0, cr0, [r6], {-0}
    3da0:	01000017 	tsteq	r0, r7, lsl r0
    3da4:	01ca104b 	biceq	r1, sl, fp, asr #32
    3da8:	06000000 	streq	r0, [r0], -r0
    3dac:	00001763 	andeq	r1, r0, r3, ror #14
    3db0:	e1104c01 	tst	r0, r1, lsl #24
    3db4:	18000001 	stmdane	r0, {r0}
    3db8:	0015cf06 	andseq	ip, r5, r6, lsl #30
    3dbc:	104d0100 	subne	r0, sp, r0, lsl #2
    3dc0:	000001e8 	andeq	r0, r0, r8, ror #3
    3dc4:	176e061c 			; <UNDEFINED> instruction: 0x176e061c
    3dc8:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    3dcc:	0001e110 	andeq	lr, r1, r0, lsl r1
    3dd0:	0d062400 	cfstrseq	mvf2, [r6, #-0]
    3dd4:	01000016 	tsteq	r0, r6, lsl r0
    3dd8:	01e8104f 	mvneq	r1, pc, asr #32
    3ddc:	06280000 	strteq	r0, [r8], -r0
    3de0:	00001779 	andeq	r1, r0, r9, ror r7
    3de4:	e1105001 	tst	r0, r1
    3de8:	30000001 	andcc	r0, r0, r1
    3dec:	00173d06 	andseq	r3, r7, r6, lsl #26
    3df0:	10510100 	subsne	r0, r1, r0, lsl #2
    3df4:	000001e8 	andeq	r0, r0, r8, ror #3
    3df8:	17840634 			; <UNDEFINED> instruction: 0x17840634
    3dfc:	52010000 	andpl	r0, r1, #0
    3e00:	0001e110 	andeq	lr, r1, r0, lsl r1
    3e04:	51063c00 	tstpl	r6, r0, lsl #24
    3e08:	01000017 	tsteq	r0, r7, lsl r0
    3e0c:	01e81053 	mvneq	r1, r3, asr r0
    3e10:	06400000 	strbeq	r0, [r0], -r0
    3e14:	0000178f 	andeq	r1, r0, pc, lsl #15
    3e18:	e1105401 	tst	r0, r1, lsl #8
    3e1c:	48000001 	stmdami	r0, {r0}
    3e20:	00174b06 	andseq	r4, r7, r6, lsl #22
    3e24:	10550100 	subsne	r0, r5, r0, lsl #2
    3e28:	000001e8 	andeq	r0, r0, r8, ror #3
    3e2c:	179a064c 	ldrne	r0, [sl, ip, asr #12]
    3e30:	56010000 	strpl	r0, [r1], -r0
    3e34:	0001e110 	andeq	lr, r1, r0, lsl r1
    3e38:	ef065400 	svc	0x00065400
    3e3c:	01000016 	tsteq	r0, r6, lsl r0
    3e40:	01e81057 	mvneq	r1, r7, asr r0
    3e44:	06580000 	ldrbeq	r0, [r8], -r0
    3e48:	000017a5 	andeq	r1, r0, r5, lsr #15
    3e4c:	e1105801 	tst	r0, r1, lsl #16
    3e50:	60000001 	andvs	r0, r0, r1
    3e54:	00161306 	andseq	r1, r6, r6, lsl #6
    3e58:	10590100 	subsne	r0, r9, r0, lsl #2
    3e5c:	000001e8 	andeq	r0, r0, r8, ror #3
    3e60:	17b00664 	ldrne	r0, [r0, r4, ror #12]!
    3e64:	5a010000 	bpl	43e6c <mailbuffer+0x16ccc>
    3e68:	0001e110 	andeq	lr, r1, r0, lsl r1
    3e6c:	15066c00 	strne	r6, [r6, #-3072]	; 0xfffff400
    3e70:	01000017 	tsteq	r0, r7, lsl r0
    3e74:	01e8105b 	mvneq	r1, fp, asr r0
    3e78:	06700000 	ldrbteq	r0, [r0], -r0
    3e7c:	000017bb 			; <UNDEFINED> instruction: 0x000017bb
    3e80:	e1105c01 	tst	r0, r1, lsl #24
    3e84:	78000001 	stmdavc	r0, {r0}
    3e88:	0016bd06 	andseq	fp, r6, r6, lsl #26
    3e8c:	105d0100 	subsne	r0, sp, r0, lsl #2
    3e90:	000001e8 	andeq	r0, r0, r8, ror #3
    3e94:	17dd067c 			; <UNDEFINED> instruction: 0x17dd067c
    3e98:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    3e9c:	0001e110 	andeq	lr, r1, r0, lsl r1
    3ea0:	55068400 	strpl	r8, [r6, #-1024]	; 0xfffffc00
    3ea4:	01000016 	tsteq	r0, r6, lsl r0
    3ea8:	01e8105f 	mvneq	r1, pc, asr r0
    3eac:	06880000 	streq	r0, [r8], r0
    3eb0:	000017e8 	andeq	r1, r0, r8, ror #15
    3eb4:	e1106001 	tst	r0, r1
    3eb8:	90000001 	andls	r0, r0, r1
    3ebc:	0016ab06 	andseq	sl, r6, r6, lsl #22
    3ec0:	10610100 	rsbne	r0, r1, r0, lsl #2
    3ec4:	000001f8 	strdeq	r0, [r0], -r8
    3ec8:	171b0694 			; <UNDEFINED> instruction: 0x171b0694
    3ecc:	62010000 	andvs	r0, r1, #0
    3ed0:	0001e810 	andeq	lr, r1, r0, lsl r8
    3ed4:	07009800 	streq	r9, [r0, -r0, lsl #16]
    3ed8:	000001e1 	andeq	r0, r0, r1, ror #3
    3edc:	000001da 	ldrdeq	r0, [r0], -sl
    3ee0:	0001da08 	andeq	sp, r1, r8, lsl #20
    3ee4:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
    3ee8:	06680704 	strbteq	r0, [r8], -r4, lsl #14
    3eec:	04040000 	streq	r0, [r4], #-0
    3ef0:	00066307 	andeq	r6, r6, r7, lsl #6
    3ef4:	01e10700 	mvneq	r0, r0, lsl #14
    3ef8:	01f80000 	mvnseq	r0, r0
    3efc:	da080000 	ble	203f04 <mailbuffer+0x1d6d64>
    3f00:	01000001 	tsteq	r0, r1
    3f04:	01e10700 	mvneq	r0, r0, lsl #14
    3f08:	02080000 	andeq	r0, r8, #0
    3f0c:	da080000 	ble	203f14 <mailbuffer+0x1d6d74>
    3f10:	00000001 	andeq	r0, r0, r1
    3f14:	15d50900 	ldrbne	r0, [r5, #2304]	; 0x900
    3f18:	64010000 	strvs	r0, [r1], #-0
    3f1c:	00008803 	andeq	r8, r0, r3, lsl #16
    3f20:	02080a00 	andeq	r0, r8, #0, 20
    3f24:	140b0000 	strne	r0, [fp], #-0
    3f28:	01000001 	tsteq	r0, r1
    3f2c:	02312466 	eorseq	r2, r1, #1711276032	; 0x66000000
    3f30:	03050000 	movweq	r0, #20480	; 0x5000
    3f34:	0002827c 	andeq	r8, r2, ip, ror r2
    3f38:	0214040c 	andseq	r0, r4, #12, 8	; 0xc000000
    3f3c:	2b0d0000 	blcs	343f44 <mailbuffer+0x316da4>
    3f40:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3f44:	00001642 	andeq	r1, r0, r2, asr #12
    3f48:	e406c201 	str	ip, [r6], #-513	; 0xfffffdff
    3f4c:	5800013d 	stmdapl	r0, {r0, r2, r3, r4, r5, r8}
    3f50:	01000000 	mrseq	r0, (UNDEF: 0)
    3f54:	00027a9c 	muleq	r2, ip, sl
    3f58:	15ec0f00 	strbne	r0, [ip, #3840]!	; 0xf00
    3f5c:	c2010000 	andgt	r0, r1, #0
    3f60:	0001da26 	andeq	sp, r1, r6, lsr #20
    3f64:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3f68:	00150e10 	andseq	r0, r5, r0, lsl lr
    3f6c:	10c40100 	sbcne	r0, r4, r0, lsl #2
    3f70:	000001e1 	andeq	r0, r0, r1, ror #3
    3f74:	10749102 	rsbsne	r9, r4, r2, lsl #2
    3f78:	0000071e 	andeq	r0, r0, lr, lsl r7
    3f7c:	e110c501 	tst	r0, r1, lsl #10
    3f80:	02000001 	andeq	r0, r0, #1
    3f84:	0e007091 	mcreq	0, 0, r7, cr0, cr1, {4}
    3f88:	000016c4 	andeq	r1, r0, r4, asr #13
    3f8c:	2c06a501 	cfstr32cs	mvfx10, [r6], {1}
    3f90:	b800013c 	stmdalt	r0, {r2, r3, r4, r5, r8}
    3f94:	01000001 	tsteq	r0, r1
    3f98:	0002cd9c 	muleq	r2, ip, sp
    3f9c:	15ec0f00 	strbne	r0, [ip, #3840]!	; 0xf00
    3fa0:	a5010000 	strge	r0, [r1, #-0]
    3fa4:	0001da25 	andeq	sp, r1, r5, lsr #20
    3fa8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3fac:	0017570f 	andseq	r5, r7, pc, lsl #14
    3fb0:	3ea50100 	fdvccs	f0, f5, f0
    3fb4:	00000025 	andeq	r0, r0, r5, lsr #32
    3fb8:	106b9102 	rsbne	r9, fp, r2, lsl #2
    3fbc:	0000150e 	andeq	r1, r0, lr, lsl #10
    3fc0:	e110a701 	tst	r0, r1, lsl #14
    3fc4:	02000001 	andeq	r0, r0, #1
    3fc8:	1e107491 	cfcmpsne	r7, mvf0, mvf1
    3fcc:	01000007 	tsteq	r0, r7
    3fd0:	01e110a8 	mvneq	r1, r8, lsr #1
    3fd4:	91020000 	mrsls	r0, (UNDEF: 2)
    3fd8:	9a0e0070 	bls	3841a0 <mailbuffer+0x357000>
    3fdc:	01000016 	tsteq	r0, r6, lsl r0
    3fe0:	3a7c0688 	bcc	1f05a08 <mailbuffer+0x1ed8868>
    3fe4:	01b00001 	movseq	r0, r1
    3fe8:	9c010000 	stcls	0, cr0, [r1], {-0}
    3fec:	00000320 	andeq	r0, r0, r0, lsr #6
    3ff0:	0015ec0f 	andseq	lr, r5, pc, lsl #24
    3ff4:	24880100 	strcs	r0, [r8], #256	; 0x100
    3ff8:	000001da 	ldrdeq	r0, [r0], -sl
    3ffc:	0f6c9102 	svceq	0x006c9102
    4000:	00001757 	andeq	r1, r0, r7, asr r7
    4004:	253d8801 	ldrcs	r8, [sp, #-2049]!	; 0xfffff7ff
    4008:	02000000 	andeq	r0, r0, #0
    400c:	0e106b91 	vmoveq.32	r6, d16[0]
    4010:	01000015 	tsteq	r0, r5, lsl r0
    4014:	01e1108a 	mvneq	r1, sl, lsl #1
    4018:	91020000 	mrsls	r0, (UNDEF: 2)
    401c:	071e1074 			; <UNDEFINED> instruction: 0x071e1074
    4020:	8b010000 	blhi	44028 <mailbuffer+0x16e88>
    4024:	0001e110 	andeq	lr, r1, r0, lsl r1
    4028:	70910200 	addsvc	r0, r1, r0, lsl #4
    402c:	15f31100 	ldrbne	r1, [r3, #256]!	; 0x100
    4030:	84010000 	strhi	r0, [r1], #-0
    4034:	00034a05 	andeq	r4, r3, r5, lsl #20
    4038:	013a2c00 	teqeq	sl, r0, lsl #24
    403c:	00005000 	andeq	r5, r0, r0
    4040:	4a9c0100 	bmi	fe704448 <_estack+0xf66f4448>
    4044:	0f000003 	svceq	0x00000003
    4048:	000015ec 	andeq	r1, r0, ip, ror #11
    404c:	da1b8401 	ble	6e5058 <mailbuffer+0x6b7eb8>
    4050:	02000001 	andeq	r0, r0, #1
    4054:	12007491 	andne	r7, r0, #-1862270976	; 0x91000000
    4058:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    405c:	d50e0074 	strle	r0, [lr, #-116]	; 0xffffff8c
    4060:	01000017 	tsteq	r0, r7, lsl r0
    4064:	39740679 	ldmdbcc	r4!, {r0, r3, r4, r5, r6, r9, sl}^
    4068:	00b80001 	adcseq	r0, r8, r1
    406c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4070:	000003a4 	andeq	r0, r0, r4, lsr #7
    4074:	0015ec0f 	andseq	lr, r5, pc, lsl #24
    4078:	1b790100 	blne	1e44480 <mailbuffer+0x1e172e0>
    407c:	000001da 	ldrdeq	r0, [r0], -sl
    4080:	0f6c9102 	svceq	0x006c9102
    4084:	000015c8 	andeq	r1, r0, r8, asr #11
    4088:	da307901 	ble	c22494 <mailbuffer+0xbf52f4>
    408c:	02000001 	andeq	r0, r0, #1
    4090:	1e106891 	mrcne	8, 0, r6, cr0, cr1, {4}
    4094:	01000007 	tsteq	r0, r7
    4098:	01e1107a 	mvneq	r1, sl, ror r0
    409c:	91020000 	mrsls	r0, (UNDEF: 2)
    40a0:	150e1074 	strne	r1, [lr, #-116]	; 0xffffff8c
    40a4:	7b010000 	blvc	440ac <mailbuffer+0x16f0c>
    40a8:	0001e110 	andeq	lr, r1, r0, lsl r1
    40ac:	70910200 	addsvc	r0, r1, r0, lsl #4
    40b0:	15fc1300 	ldrbne	r1, [ip, #768]!	; 0x300
    40b4:	75010000 	strvc	r0, [r1, #-0]
    40b8:	01394006 	teqeq	r9, r6
    40bc:	00003400 	andeq	r3, r0, r0, lsl #8
    40c0:	d99c0100 	ldmible	ip, {r8}
    40c4:	0f000003 	svceq	0x00000003
    40c8:	000015ec 	andeq	r1, r0, ip, ror #11
    40cc:	da247501 	ble	9214d8 <mailbuffer+0x8f4338>
    40d0:	02000001 	andeq	r0, r0, #1
    40d4:	64147491 	ldrvs	r7, [r4], #-1169	; 0xfffffb6f
    40d8:	01007269 	tsteq	r0, r9, ror #4
    40dc:	00693a75 	rsbeq	r3, r9, r5, ror sl
    40e0:	91020000 	mrsls	r0, (UNDEF: 2)
    40e4:	d6150073 			; <UNDEFINED> instruction: 0xd6150073
    40e8:	01000016 	tsteq	r0, r6, lsl r0
    40ec:	38640669 	stmdacc	r4!, {r0, r3, r5, r6, r9, sl}^
    40f0:	00dc0001 	sbcseq	r0, ip, r1
    40f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    40f8:	0015ec0f 	andseq	lr, r5, pc, lsl #24
    40fc:	23690100 	cmncs	r9, #0, 2
    4100:	000001da 	ldrdeq	r0, [r0], -sl
    4104:	0f649102 	svceq	0x00649102
    4108:	00001743 	andeq	r1, r0, r3, asr #14
    410c:	da386901 	ble	e1e518 <mailbuffer+0xdf1378>
    4110:	02000001 	andeq	r0, r0, #1
    4114:	1e106091 	mrcne	0, 0, r6, cr0, cr1, {4}
    4118:	01000007 	tsteq	r0, r7
    411c:	034a066b 	movteq	r0, #42603	; 0xa66b
    4120:	91020000 	mrsls	r0, (UNDEF: 2)
    4124:	61761674 	cmnvs	r6, r4, ror r6
    4128:	6d01006c 	stcvs	0, cr0, [r1, #-432]	; 0xfffffe50
    412c:	0001e110 	andeq	lr, r1, r0, lsl r1
    4130:	70910200 	addsvc	r0, r1, r0, lsl #4
    4134:	0015e710 	andseq	lr, r5, r0, lsl r7
    4138:	066f0100 	strbteq	r0, [pc], -r0, lsl #2
    413c:	0000034a 	andeq	r0, r0, sl, asr #6
    4140:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    4144:	0000b000 	andeq	fp, r0, r0
    4148:	27000400 	strcs	r0, [r0, -r0, lsl #8]
    414c:	0400000e 	streq	r0, [r0], #-14
    4150:	00005901 	andeq	r5, r0, r1, lsl #18
    4154:	17fc0c00 	ldrbne	r0, [ip, r0, lsl #24]!
    4158:	00cf0000 	sbceq	r0, pc, r0
    415c:	3e3c0000 	cdpcc	0, 3, cr0, cr12, cr0, {0}
    4160:	00ec0001 	rsceq	r0, ip, r1
    4164:	19830000 	stmibne	r3, {}	; <UNPREDICTABLE>
    4168:	5c020000 	stcpl	0, cr0, [r2], {-0}
    416c:	01000018 	tsteq	r0, r8, lsl r0
    4170:	006c0519 	rsbeq	r0, ip, r9, lsl r5
    4174:	3ea80000 	cdpcc	0, 10, cr0, cr8, cr0, {0}
    4178:	00800001 	addeq	r0, r0, r1
    417c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4180:	0000006c 	andeq	r0, r0, ip, rrx
    4184:	00183d03 	andseq	r3, r8, r3, lsl #26
    4188:	15190100 	ldrne	r0, [r9, #-256]	; 0xffffff00
    418c:	0000006c 	andeq	r0, r0, ip, rrx
    4190:	046c9102 	strbteq	r9, [ip], #-258	; 0xfffffefe
    4194:	01006172 	tsteq	r0, r2, ror r1
    4198:	006c061a 	rsbeq	r0, ip, sl, lsl r6
    419c:	91020000 	mrsls	r0, (UNDEF: 2)
    41a0:	18680570 	stmdane	r8!, {r4, r5, r6, r8, sl}^
    41a4:	1b010000 	blne	441ac <mailbuffer+0x1700c>
    41a8:	00006c06 	andeq	r6, r0, r6, lsl #24
    41ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    41b0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    41b4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    41b8:	00184f07 	andseq	r4, r8, r7, lsl #30
    41bc:	06100100 	ldreq	r0, [r0], -r0, lsl #2
    41c0:	00013e3c 	andeq	r3, r1, ip, lsr lr
    41c4:	0000006c 	andeq	r0, r0, ip, rrx
    41c8:	45039c01 	strmi	r9, [r3, #-3073]	; 0xfffff3ff
    41cc:	01000018 	tsteq	r0, r8, lsl r0
    41d0:	006c1710 	rsbeq	r1, ip, r0, lsl r7
    41d4:	91020000 	mrsls	r0, (UNDEF: 2)
    41d8:	183d036c 	ldmdane	sp!, {r2, r3, r5, r6, r8, r9}
    41dc:	10010000 	andne	r0, r1, r0
    41e0:	00006c26 	andeq	r6, r0, r6, lsr #24
    41e4:	68910200 	ldmvs	r1, {r9}
    41e8:	00186805 	andseq	r6, r8, r5, lsl #16
    41ec:	06110100 	ldreq	r0, [r1], -r0, lsl #2
    41f0:	0000006c 	andeq	r0, r0, ip, rrx
    41f4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    41f8:	0003fe00 	andeq	pc, r3, r0, lsl #28
    41fc:	b1000400 	tstlt	r0, r0, lsl #8
    4200:	0400000e 	streq	r0, [r0], #-14
    4204:	00005901 	andeq	r5, r0, r1, lsl #18
    4208:	19010c00 	stmdbne	r1, {sl, fp}
    420c:	00cf0000 	sbceq	r0, pc, r0
    4210:	3f280000 	svccc	0x00280000
    4214:	098c0001 	stmibeq	ip, {r0}
    4218:	1a340000 	bne	d04220 <mailbuffer+0xcd7080>
    421c:	b6020000 	strlt	r0, [r2], -r0
    4220:	02000018 	andeq	r0, r0, #24
    4224:	00370603 	eorseq	r0, r7, r3, lsl #12
    4228:	03050000 	movweq	r0, #20480	; 0x5000
    422c:	0002c130 	andeq	ip, r2, r0, lsr r1
    4230:	af080103 	svcge	0x00080103
    4234:	04000008 	streq	r0, [r0], #-8
    4238:	00000037 	andeq	r0, r0, r7, lsr r0
    423c:	00006c05 	andeq	r6, r0, r5, lsl #24
    4240:	00005900 	andeq	r5, r0, r0, lsl #18
    4244:	005e0600 	subseq	r0, lr, r0, lsl #12
    4248:	065f0000 	ldrbeq	r0, [pc], -r0
    424c:	0000005e 	andeq	r0, r0, lr, asr r0
    4250:	43040005 	movwmi	r0, #16389	; 0x4005
    4254:	03000000 	movweq	r0, #0
    4258:	06680704 	strbteq	r0, [r8], -r4, lsl #14
    425c:	01030000 	mrseq	r0, (UNDEF: 3)
    4260:	0008a608 	andeq	sl, r8, r8, lsl #12
    4264:	00650400 	rsbeq	r0, r5, r0, lsl #8
    4268:	fc020000 	stc2	0, cr0, [r2], {-0}
    426c:	03000018 	movweq	r0, #24
    4270:	00591501 	subseq	r1, r9, r1, lsl #10
    4274:	03050000 	movweq	r0, #20480	; 0x5000
    4278:	00028280 	andeq	r8, r2, r0, lsl #5
    427c:	00194c02 	andseq	r4, r9, r2, lsl #24
    4280:	050c0100 	streq	r0, [ip, #-256]	; 0xffffff00
    4284:	00000095 	muleq	r0, r5, r0
    4288:	d1900305 	orrsle	r0, r0, r5, lsl #6
    428c:	04070002 	streq	r0, [r7], #-2
    4290:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4294:	00950800 	addseq	r0, r5, r0, lsl #16
    4298:	9f020000 	svcls	0x00020000
    429c:	01000018 	tsteq	r0, r8, lsl r0
    42a0:	0095050d 	addseq	r0, r5, sp, lsl #10
    42a4:	03050000 	movweq	r0, #20480	; 0x5000
    42a8:	0002d194 	muleq	r2, r4, r1
    42ac:	00005e05 	andeq	r5, r0, r5, lsl #28
    42b0:	0000c300 	andeq	ip, r0, r0, lsl #6
    42b4:	005e0600 	subseq	r0, lr, r0, lsl #12
    42b8:	00150000 	andseq	r0, r5, r0
    42bc:	00187f09 	andseq	r7, r8, r9, lsl #30
    42c0:	0e120100 	mufeqs	f0, f2, f0
    42c4:	000000b3 	strheq	r0, [r0], -r3
    42c8:	a0030510 	andge	r0, r3, r0, lsl r5
    42cc:	020002d1 	andeq	r0, r0, #268435469	; 0x1000000d
    42d0:	0000188a 	andeq	r1, r0, sl, lsl #17
    42d4:	e80f1301 	stmda	pc, {r0, r8, r9, ip}	; <UNPREDICTABLE>
    42d8:	05000000 	streq	r0, [r0, #-0]
    42dc:	02d19803 	sbcseq	r9, r1, #196608	; 0x30000
    42e0:	5e040a00 	vmlapl.f32	s0, s8, s0
    42e4:	02000000 	andeq	r0, r0, #0
    42e8:	000018e1 	andeq	r1, r0, r1, ror #17
    42ec:	95059601 	strls	r9, [r5, #-1537]	; 0xfffff9ff
    42f0:	05000000 	streq	r0, [r0, #-0]
    42f4:	02c13403 	sbceq	r3, r1, #50331648	; 0x3000000
    42f8:	18ec0200 	stmiane	ip!, {r9}^
    42fc:	97010000 	strls	r0, [r1, -r0]
    4300:	00009505 	andeq	r9, r0, r5, lsl #10
    4304:	38030500 	stmdacc	r3, {r8, sl}
    4308:	0b0002c1 	bleq	4e14 <_start-0x31ec>
    430c:	0000196b 	andeq	r1, r0, fp, ror #18
    4310:	c806d001 	stmdagt	r6, {r0, ip, lr, pc}
    4314:	ec000147 	stfs	f0, [r0], {71}	; 0x47
    4318:	01000000 	mrseq	r0, (UNDEF: 0)
    431c:	0001409c 	muleq	r1, ip, r0
    4320:	47d40c00 	ldrbmi	r0, [r4, r0, lsl #24]
    4324:	00540001 	subseq	r0, r4, r1
    4328:	780d0000 	stmdavc	sp, {}	; <UNPREDICTABLE>
    432c:	0ad40100 	beq	ff504734 <_estack+0xf74f4734>
    4330:	00000095 	muleq	r0, r5, r0
    4334:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4338:	18960e00 	ldmne	r6, {r9, sl, fp}
    433c:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    4340:	0145ac06 	cmpeq	r5, r6, lsl #24
    4344:	00021c00 	andeq	r1, r2, r0, lsl #24
    4348:	b19c0100 	orrslt	r0, ip, r0, lsl #2
    434c:	0f000001 	svceq	0x00000001
    4350:	00001870 	andeq	r1, r0, r0, ror r8
    4354:	b11bb901 	tstlt	fp, r1, lsl #18
    4358:	03000001 	movweq	r0, #1
    435c:	0f7e9491 	svceq	0x007e9491
    4360:	000018f7 	strdeq	r1, [r0], -r7
    4364:	9528b901 	strls	fp, [r8, #-2305]!	; 0xfffff6ff
    4368:	03000000 	movweq	r0, #0
    436c:	0f7e9091 	svceq	0x007e9091
    4370:	00001878 	andeq	r1, r0, r8, ror r8
    4374:	9532b901 	ldrls	fp, [r2, #-2305]!	; 0xfffff6ff
    4378:	03000000 	movweq	r0, #0
    437c:	0d7e8c91 	ldcleq	12, cr8, [lr, #-580]!	; 0xfffffdbc
    4380:	00786568 	rsbseq	r6, r8, r8, ror #10
    4384:	b707bb01 	strlt	fp, [r7, -r1, lsl #22]
    4388:	02000001 	andeq	r0, r0, #1
    438c:	6d0d6491 	cfstrsvs	mvf6, [sp, #-580]	; 0xfffffdbc
    4390:	07bd0100 	ldreq	r0, [sp, r0, lsl #2]!
    4394:	000001c7 	andeq	r0, r0, r7, asr #3
    4398:	7e9c9103 	cosvce	f1, f3
    439c:	0100690d 	tsteq	r0, sp, lsl #18
    43a0:	009506be 			; <UNDEFINED> instruction: 0x009506be
    43a4:	91020000 	mrsls	r0, (UNDEF: 2)
    43a8:	040a0074 	streq	r0, [sl], #-116	; 0xffffff8c
    43ac:	0000003e 	andeq	r0, r0, lr, lsr r0
    43b0:	00003705 	andeq	r3, r0, r5, lsl #14
    43b4:	0001c700 	andeq	ip, r1, r0, lsl #14
    43b8:	005e0600 	subseq	r0, lr, r0, lsl #12
    43bc:	000f0000 	andeq	r0, pc, r0
    43c0:	00003705 	andeq	r3, r0, r5, lsl #14
    43c4:	0001d700 	andeq	sp, r1, r0, lsl #14
    43c8:	005e0600 	subseq	r0, lr, r0, lsl #12
    43cc:	00c70000 	sbceq	r0, r7, r0
    43d0:	0019630e 	andseq	r6, r9, lr, lsl #6
    43d4:	06990100 	ldreq	r0, [r9], r0, lsl #2
    43d8:	000143a8 	andeq	r4, r1, r8, lsr #7
    43dc:	00000204 	andeq	r0, r0, r4, lsl #4
    43e0:	02699c01 	rsbeq	r9, r9, #256	; 0x100
    43e4:	700f0000 	andvc	r0, pc, r0
    43e8:	01000018 	tsteq	r0, r8, lsl r0
    43ec:	01b11a99 			; <UNDEFINED> instruction: 0x01b11a99
    43f0:	91020000 	mrsls	r0, (UNDEF: 2)
    43f4:	18780f5c 	ldmdane	r8!, {r2, r3, r4, r6, r8, r9, sl, fp}^
    43f8:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    43fc:	00009527 	andeq	r9, r0, r7, lsr #10
    4400:	58910200 	ldmpl	r1, {r9}
    4404:	00194510 	andseq	r4, r9, r0, lsl r5
    4408:	069c0100 	ldreq	r0, [ip], r0, lsl #2
    440c:	00000095 	muleq	r0, r5, r0
    4410:	10709102 	rsbsne	r9, r0, r2, lsl #2
    4414:	000018d2 	ldrdeq	r1, [r0], -r2
    4418:	37079e01 	strcc	r9, [r7, -r1, lsl #28]
    441c:	02000000 	andeq	r0, r0, #0
    4420:	840c6f91 	strhi	r6, [ip], #-3985	; 0xfffff06f
    4424:	a4000144 	strge	r0, [r0], #-324	; 0xfffffebc
    4428:	10000000 	andne	r0, r0, r0
    442c:	000018bd 			; <UNDEFINED> instruction: 0x000018bd
    4430:	6912a601 	ldmdbvs	r2, {r0, r9, sl, sp, pc}
    4434:	02000002 	andeq	r0, r0, #2
    4438:	40106891 	mulsmi	r0, r1, r8
    443c:	01000019 	tsteq	r0, r9, lsl r0
    4440:	009508a7 	addseq	r0, r5, r7, lsr #17
    4444:	91020000 	mrsls	r0, (UNDEF: 2)
    4448:	44bc0c64 	ldrtmi	r0, [ip], #3172	; 0xc64
    444c:	00540001 	subseq	r0, r4, r1
    4450:	780d0000 	stmdavc	sp, {}	; <UNPREDICTABLE>
    4454:	0caa0100 	stfeqs	f0, [sl]
    4458:	00000095 	muleq	r0, r5, r0
    445c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4460:	040a0000 	streq	r0, [sl], #-0
    4464:	0000009c 	muleq	r0, ip, r0
    4468:	0018c70e 	andseq	ip, r8, lr, lsl #14
    446c:	068f0100 	streq	r0, [pc], r0, lsl #2
    4470:	00014340 	andeq	r4, r1, r0, asr #6
    4474:	00000068 	andeq	r0, r0, r8, rrx
    4478:	02be9c01 	adcseq	r9, lr, #256	; 0x100
    447c:	73110000 	tstvc	r1, #0
    4480:	01007274 	tsteq	r0, r4, ror r2
    4484:	01b11d8f 			; <UNDEFINED> instruction: 0x01b11d8f
    4488:	91020000 	mrsls	r0, (UNDEF: 2)
    448c:	00781174 	rsbseq	r1, r8, r4, ror r1
    4490:	95268f01 	strls	r8, [r6, #-3841]!	; 0xfffff0ff
    4494:	02000000 	andeq	r0, r0, #0
    4498:	79117091 	ldmdbvc	r1, {r0, r4, r7, ip, sp, lr}
    449c:	2d8f0100 	stfcss	f0, [pc]	; 44a4 <_start-0x3b5c>
    44a0:	00000095 	muleq	r0, r5, r0
    44a4:	0f6c9102 	svceq	0x006c9102
    44a8:	00001878 	andeq	r1, r0, r8, ror r8
    44ac:	95348f01 	ldrls	r8, [r4, #-3841]!	; 0xfffff0ff
    44b0:	02000000 	andeq	r0, r0, #0
    44b4:	12006891 	andne	r6, r0, #9502720	; 0x910000
    44b8:	000018ad 	andeq	r1, r0, sp, lsr #17
    44bc:	0c067801 	stceq	8, cr7, [r6], {1}
    44c0:	34000142 	strcc	r0, [r0], #-322	; 0xfffffebe
    44c4:	01000001 	tsteq	r0, r1
    44c8:	0003259c 	muleq	r3, ip, r5
    44cc:	00631100 	rsbeq	r1, r3, r0, lsl #2
    44d0:	651d7801 	ldrvs	r7, [sp, #-2049]	; 0xfffff7ff
    44d4:	02000000 	andeq	r0, r0, #0
    44d8:	78116f91 	ldmdavc	r1, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
    44dc:	24780100 	ldrbtcs	r0, [r8], #-256	; 0xffffff00
    44e0:	00000095 	muleq	r0, r5, r0
    44e4:	11689102 	cmnne	r8, r2, lsl #2
    44e8:	78010079 	stmdavc	r1, {r0, r3, r4, r5, r6}
    44ec:	0000952b 	andeq	r9, r0, fp, lsr #10
    44f0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    44f4:	0018780f 	andseq	r7, r8, pc, lsl #16
    44f8:	32780100 	rsbscc	r0, r8, #0, 2
    44fc:	00000095 	muleq	r0, r5, r0
    4500:	0d609102 	stfeqp	f1, [r0, #-8]!
    4504:	79010069 	stmdbvc	r1, {r0, r3, r5, r6}
    4508:	00009506 	andeq	r9, r0, r6, lsl #10
    450c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4510:	01006a0d 	tsteq	r0, sp, lsl #20
    4514:	00950979 	addseq	r0, r5, r9, ror r9
    4518:	91020000 	mrsls	r0, (UNDEF: 2)
    451c:	7c0e0070 	stcvc	0, cr0, [lr], {112}	; 0x70
    4520:	01000019 	tsteq	r0, r9, lsl r0
    4524:	417c0663 	cmnmi	ip, r3, ror #12
    4528:	00900001 	addseq	r0, r0, r1
    452c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4530:	0000039d 	muleq	r0, sp, r3
    4534:	00317811 	eorseq	r7, r1, r1, lsl r8
    4538:	5e1c6301 	cdppl	3, 1, cr6, cr12, cr1, {0}
    453c:	02000000 	andeq	r0, r0, #0
    4540:	79116c91 	ldmdbvc	r1, {r0, r4, r7, sl, fp, sp, lr}
    4544:	63010031 	movwvs	r0, #4145	; 0x1031
    4548:	00005e2d 	andeq	r5, r0, sp, lsr #28
    454c:	68910200 	ldmvs	r1, {r9}
    4550:	00327811 	eorseq	r7, r2, r1, lsl r8
    4554:	5e3e6301 	cdppl	3, 3, cr6, cr14, cr1, {0}
    4558:	02000000 	andeq	r0, r0, #0
    455c:	79116491 	ldmdbvc	r1, {r0, r4, r7, sl, sp, lr}
    4560:	63010032 	movwvs	r0, #4146	; 0x1032
    4564:	00005e4f 	andeq	r5, r0, pc, asr #28
    4568:	60910200 	addsvs	r0, r1, r0, lsl #4
    456c:	0018780f 	andseq	r7, r8, pc, lsl #16
    4570:	57630100 	strbpl	r0, [r3, -r0, lsl #2]!
    4574:	00000095 	muleq	r0, r5, r0
    4578:	0d009102 	stfeqd	f1, [r0, #-8]
    457c:	64010069 	strvs	r0, [r1], #-105	; 0xffffff97
    4580:	00005e12 	andeq	r5, r0, r2, lsl lr
    4584:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4588:	01006a0d 	tsteq	r0, sp, lsl #20
    458c:	005e1564 	subseq	r1, lr, r4, ror #10
    4590:	91020000 	mrsls	r0, (UNDEF: 2)
    4594:	59120070 	ldmdbpl	r2, {r4, r5, r6}
    4598:	01000019 	tsteq	r0, r9, lsl r0
    459c:	4118065e 	tstmi	r8, lr, asr r6
    45a0:	00640001 	rsbeq	r0, r4, r1
    45a4:	9c010000 	stcls	0, cr0, [r1], {-0}
    45a8:	000003dd 	ldrdeq	r0, [r0], -sp
    45ac:	01007811 	tsteq	r0, r1, lsl r8
    45b0:	005e1d5e 	subseq	r1, lr, lr, asr sp
    45b4:	91020000 	mrsls	r0, (UNDEF: 2)
    45b8:	00791174 	rsbseq	r1, r9, r4, ror r1
    45bc:	5e2d5e01 	cdppl	14, 2, cr5, cr13, cr1, {0}
    45c0:	02000000 	andeq	r0, r0, #0
    45c4:	780f7091 	stmdavc	pc, {r0, r4, r7, ip, sp, lr}	; <UNPREDICTABLE>
    45c8:	01000018 	tsteq	r0, r8, lsl r0
    45cc:	0095345e 	addseq	r3, r5, lr, asr r4
    45d0:	91020000 	mrsls	r0, (UNDEF: 2)
    45d4:	7513006c 	ldrvc	r0, [r3, #-108]	; 0xffffff94
    45d8:	01000019 	tsteq	r0, r9, lsl r0
    45dc:	3f500615 	svccc	0x00500615
    45e0:	01c80001 	biceq	r0, r8, r1
    45e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    45e8:	00198514 	andseq	r8, r9, r4, lsl r5
    45ec:	060f0100 	streq	r0, [pc], -r0, lsl #2
    45f0:	00013f28 	andeq	r3, r1, r8, lsr #30
    45f4:	00000028 	andeq	r0, r0, r8, lsr #32
    45f8:	05009c01 	streq	r9, [r0, #-3073]	; 0xfffff3ff
    45fc:	04000003 	streq	r0, [r0], #-3
    4600:	000ffc00 	andeq	pc, pc, r0, lsl #24
    4604:	59010400 	stmdbpl	r1, {sl}
    4608:	0c000000 	stceq	0, cr0, [r0], {-0}
    460c:	000019c5 	andeq	r1, r0, r5, asr #19
    4610:	000000cf 	andeq	r0, r0, pc, asr #1
    4614:	000148b4 			; <UNDEFINED> instruction: 0x000148b4
    4618:	000003e4 	andeq	r0, r0, r4, ror #7
    461c:	00001d4d 	andeq	r1, r0, sp, asr #26
    4620:	69050402 	stmdbvs	r5, {r1, sl}
    4624:	0300746e 	movweq	r7, #1134	; 0x46e
    4628:	00000b43 	andeq	r0, r0, r3, asr #22
    462c:	3817d802 	ldmdacc	r7, {r1, fp, ip, lr, pc}
    4630:	04000000 	streq	r0, [r0], #-0
    4634:	06680704 	strbteq	r0, [r8], -r4, lsl #14
    4638:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    463c:	0000f905 	andeq	pc, r0, r5, lsl #18
    4640:	04080400 	streq	r0, [r8], #-1024	; 0xfffffc00
    4644:	00000181 	andeq	r0, r0, r1, lsl #3
    4648:	04040405 	streq	r0, [r4], #-1029	; 0xfffffbfb
    464c:	00066307 	andeq	r6, r6, r7, lsl #6
    4650:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    4654:	000000fe 	strdeq	r0, [r0], -lr
    4658:	00091006 	andeq	r1, r9, r6
    465c:	05440100 	strbeq	r0, [r4, #-256]	; 0xffffff00
    4660:	00000025 	andeq	r0, r0, r5, lsr #32
    4664:	bcc80305 	stcllt	3, cr0, [r8], {5}
    4668:	3c070002 	stccc	0, cr0, [r7], {2}
    466c:	0100000a 	tsteq	r0, sl
    4670:	00250545 	eoreq	r0, r5, r5, asr #10
    4674:	4c480000 	marmi	acc0, r0, r8
    4678:	00500001 	subseq	r0, r0, r1
    467c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4680:	0019be08 	andseq	fp, r9, r8, lsl #28
    4684:	083d0100 	ldmdaeq	sp!, {r8}
    4688:	0000002c 	andeq	r0, r0, ip, lsr #32
    468c:	00014bf4 	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    4690:	00000054 	andeq	r0, r0, r4, asr r0
    4694:	00ba9c01 	adcseq	r9, sl, r1, lsl #24
    4698:	73090000 	movwvc	r0, #36864	; 0x9000
    469c:	1b3d0100 	blne	f44aa4 <mailbuffer+0xf17904>
    46a0:	000000ba 	strheq	r0, [r0], -sl
    46a4:	0a6c9102 	beq	1b28ab4 <mailbuffer+0x1afb914>
    46a8:	3e010069 	cdpcc	0, 0, cr0, cr1, cr9, {3}
    46ac:	00002c0c 	andeq	r2, r0, ip, lsl #24
    46b0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    46b4:	c7040b00 	strgt	r0, [r4, -r0, lsl #22]
    46b8:	04000000 	streq	r0, [r0], #-0
    46bc:	08af0801 	stmiaeq	pc!, {r0, fp}	; <UNPREDICTABLE>
    46c0:	c00c0000 	andgt	r0, ip, r0
    46c4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    46c8:	000019ae 	andeq	r1, r0, lr, lsr #19
    46cc:	21073201 	tstcs	r7, r1, lsl #4
    46d0:	4c000001 	stcmi	0, cr0, [r0], {1}
    46d4:	a800014b 	stmdage	r0, {r0, r1, r3, r6, r8}
    46d8:	01000000 	mrseq	r0, (UNDEF: 0)
    46dc:	0001219c 	muleq	r1, ip, r1
    46e0:	199b0d00 	ldmibne	fp, {r8, sl, fp}
    46e4:	32010000 	andcc	r0, r1, #0
    46e8:	00012115 	andeq	r2, r1, r5, lsl r1
    46ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    46f0:	63727309 	cmnvs	r2, #603979776	; 0x24000000
    46f4:	27320100 	ldrcs	r0, [r2, -r0, lsl #2]!
    46f8:	000000ba 	strheq	r0, [r0], -sl
    46fc:	09689102 	stmdbeq	r8!, {r1, r8, ip, pc}^
    4700:	3201006e 	andcc	r0, r1, #110	; 0x6e
    4704:	00002c33 	andeq	r2, r0, r3, lsr ip
    4708:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    470c:	7465720a 	strbtvc	r7, [r5], #-522	; 0xfffffdf6
    4710:	0b330100 	bleq	cc4b18 <mailbuffer+0xc97978>
    4714:	00000121 	andeq	r0, r0, r1, lsr #2
    4718:	00749102 	rsbseq	r9, r4, r2, lsl #2
    471c:	00c0040b 	sbceq	r0, r0, fp, lsl #8
    4720:	a0080000 	andge	r0, r8, r0
    4724:	01000019 	tsteq	r0, r9, lsl r0
    4728:	0121072b 			; <UNDEFINED> instruction: 0x0121072b
    472c:	4aec0000 	bmi	ffb04734 <_estack+0xf7af4734>
    4730:	00600001 	rsbeq	r0, r0, r1
    4734:	9c010000 	stcls	0, cr0, [r1], {-0}
    4738:	0000016f 	andeq	r0, r0, pc, ror #2
    473c:	00199b0d 	andseq	r9, r9, sp, lsl #22
    4740:	142b0100 	strtne	r0, [fp], #-256	; 0xffffff00
    4744:	00000121 	andeq	r0, r0, r1, lsr #2
    4748:	096c9102 	stmdbeq	ip!, {r1, r8, ip, pc}^
    474c:	00637273 	rsbeq	r7, r3, r3, ror r2
    4750:	ba262b01 	blt	98f35c <mailbuffer+0x9621bc>
    4754:	02000000 	andeq	r0, r0, #0
    4758:	720a6891 	andvc	r6, sl, #9502720	; 0x910000
    475c:	01007465 	tsteq	r0, r5, ror #8
    4760:	01210b2c 			; <UNDEFINED> instruction: 0x01210b2c
    4764:	91020000 	mrsls	r0, (UNDEF: 2)
    4768:	a7080074 	smlsdxge	r8, r4, r0, r0
    476c:	01000019 	tsteq	r0, r9, lsl r0
    4770:	00250521 	eoreq	r0, r5, r1, lsr #10
    4774:	4a4c0000 	bmi	130477c <mailbuffer+0x12d75dc>
    4778:	00a00001 	adceq	r0, r0, r1
    477c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4780:	000001cf 	andeq	r0, r0, pc, asr #3
    4784:	00317309 	eorseq	r7, r1, r9, lsl #6
    4788:	cf182101 	svcgt	0x00182101
    478c:	02000001 	andeq	r0, r0, #1
    4790:	73096c91 	movwvc	r6, #40081	; 0x9c91
    4794:	21010032 	tstcs	r1, r2, lsr r0
    4798:	0001cf28 	andeq	ip, r1, r8, lsr #30
    479c:	68910200 	ldmvs	r1, {r9}
    47a0:	01006e09 	tsteq	r0, r9, lsl #28
    47a4:	002c3321 	eoreq	r3, ip, r1, lsr #6
    47a8:	91020000 	mrsls	r0, (UNDEF: 2)
    47ac:	31700a64 	cmncc	r0, r4, ror #20
    47b0:	1a220100 	bne	884bb8 <mailbuffer+0x857a18>
    47b4:	000001d6 	ldrdeq	r0, [r0], -r6
    47b8:	0a749102 	beq	1d28bc8 <mailbuffer+0x1cfba28>
    47bc:	01003270 	tsteq	r0, r0, ror r2
    47c0:	01d62422 	bicseq	r2, r6, r2, lsr #8
    47c4:	91020000 	mrsls	r0, (UNDEF: 2)
    47c8:	040b0070 	streq	r0, [fp], #-112	; 0xffffff90
    47cc:	000001d5 	ldrdeq	r0, [r0], -r5
    47d0:	e3040b0e 	movw	r0, #19214	; 0x4b0e
    47d4:	04000001 	streq	r0, [r0], #-1
    47d8:	08a60801 	stmiaeq	r6!, {r0, fp}
    47dc:	dc0c0000 	stcle	0, cr0, [ip], {-0}
    47e0:	08000001 	stmdaeq	r0, {r0}
    47e4:	000019b6 			; <UNDEFINED> instruction: 0x000019b6
    47e8:	4d071501 	cfstr32mi	mvfx1, [r7, #-4]
    47ec:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    47f0:	74000149 	strvc	r0, [r0], #-329	; 0xfffffeb7
    47f4:	01000000 	mrseq	r0, (UNDEF: 0)
    47f8:	00024a9c 	muleq	r2, ip, sl
    47fc:	199b0d00 	ldmibne	fp, {r8, sl, fp}
    4800:	15010000 	strne	r0, [r1, #-0]
    4804:	00004d15 	andeq	r4, r0, r5, lsl sp
    4808:	6c910200 	lfmvs	f0, 4, [r1], {0}
    480c:	63727309 	cmnvs	r2, #603979776	; 0x24000000
    4810:	27150100 	ldrcs	r0, [r5, -r0, lsl #2]
    4814:	000001cf 	andeq	r0, r0, pc, asr #3
    4818:	09689102 	stmdbeq	r8!, {r1, r8, ip, pc}^
    481c:	1501006e 	strne	r0, [r1, #-110]	; 0xffffff92
    4820:	00002c33 	andeq	r2, r0, r3, lsr ip
    4824:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    4828:	0070640a 	rsbseq	r6, r0, sl, lsl #8
    482c:	210b1a01 	tstcs	fp, r1, lsl #20
    4830:	02000001 	andeq	r0, r0, #1
    4834:	730a7491 	movwvc	r7, #42129	; 0xa491
    4838:	1b010070 	blne	44a00 <mailbuffer+0x17860>
    483c:	0000ba11 	andeq	fp, r0, r1, lsl sl
    4840:	70910200 	addsvc	r0, r1, r0, lsl #4
    4844:	19930f00 	ldmibne	r3, {r8, r9, sl, fp}
    4848:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    484c:	00004d07 	andeq	r4, r0, r7, lsl #26
    4850:	01491800 	cmpeq	r9, r0, lsl #16
    4854:	0000c000 	andeq	ip, r0, r0
    4858:	a09c0100 	addsge	r0, ip, r0, lsl #2
    485c:	0d000002 	stceq	0, cr0, [r0, #-8]
    4860:	0000199b 	muleq	r0, fp, r9
    4864:	4d150e01 	ldcmi	14, cr0, [r5, #-4]
    4868:	02000000 	andeq	r0, r0, #0
    486c:	73096491 	movwvc	r6, #38033	; 0x9491
    4870:	01006372 	tsteq	r0, r2, ror r3
    4874:	01cf270e 	biceq	r2, pc, lr, lsl #14
    4878:	91020000 	mrsls	r0, (UNDEF: 2)
    487c:	006e0960 	rsbeq	r0, lr, r0, ror #18
    4880:	2c330e01 	ldccs	14, cr0, [r3], #-4
    4884:	02000000 	andeq	r0, r0, #0
    4888:	740a5c91 	strvc	r5, [sl], #-3217	; 0xfffff36f
    488c:	0100706d 	tsteq	r0, sp, rrx
    4890:	02a0130f 	adceq	r1, r0, #1006632960	; 0x3c000000
    4894:	91030000 	mrsls	r0, (UNDEF: 3)
    4898:	10000668 	andne	r0, r0, r8, ror #12
    489c:	000001dc 	ldrdeq	r0, [r0], -ip
    48a0:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    48a4:	00003811 	andeq	r3, r0, r1, lsl r8
    48a8:	6c910300 	ldcvs	3, cr0, [r1], {0}
    48ac:	02080006 	andeq	r0, r8, #6
    48b0:	0100001a 	tsteq	r0, sl, lsl r0
    48b4:	004d0707 	subeq	r0, sp, r7, lsl #14
    48b8:	48b40000 	ldmmi	r4!, {}	; <UNPREDICTABLE>
    48bc:	00640001 	rsbeq	r0, r4, r1
    48c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    48c4:	00000302 	andeq	r0, r0, r2, lsl #6
    48c8:	01007309 	tsteq	r0, r9, lsl #6
    48cc:	004d1407 	subeq	r1, sp, r7, lsl #8
    48d0:	91020000 	mrsls	r0, (UNDEF: 2)
    48d4:	0063096c 	rsbeq	r0, r3, ip, ror #18
    48d8:	251b0701 	ldrcs	r0, [fp, #-1793]	; 0xfffff8ff
    48dc:	02000000 	andeq	r0, r0, #0
    48e0:	6e096891 	mcrvs	8, 0, r6, cr9, cr1, {4}
    48e4:	25070100 	strcs	r0, [r7, #-256]	; 0xffffff00
    48e8:	0000002c 	andeq	r0, r0, ip, lsr #32
    48ec:	0a649102 	beq	1928cfc <mailbuffer+0x18fbb5c>
    48f0:	08010070 	stmdaeq	r1, {r4, r5, r6}
    48f4:	00030214 	andeq	r0, r3, r4, lsl r2
    48f8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    48fc:	dc040b00 			; <UNDEFINED> instruction: 0xdc040b00
    4900:	00000001 	andeq	r0, r0, r1
    4904:	00000b79 	andeq	r0, r0, r9, ror fp
    4908:	10ff0004 	rscsne	r0, pc, r4
    490c:	01040000 	mrseq	r0, (UNDEF: 4)
    4910:	00000059 	andeq	r0, r0, r9, asr r0
    4914:	001b4c0c 	andseq	r4, fp, ip, lsl #24
    4918:	0000cf00 	andeq	ip, r0, r0, lsl #30
    491c:	014c9800 	cmpeq	ip, r0, lsl #16
    4920:	0004ac00 	andeq	sl, r4, r0, lsl #24
    4924:	001f1600 	andseq	r1, pc, r0, lsl #12
    4928:	0b430200 	bleq	10c5130 <mailbuffer+0x1097f90>
    492c:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    4930:	00003617 	andeq	r3, r0, r7, lsl r6
    4934:	00250300 	eoreq	r0, r5, r0, lsl #6
    4938:	04040000 	streq	r0, [r4], #-0
    493c:	00066807 	andeq	r6, r6, r7, lsl #16
    4940:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    4944:	00746e69 	rsbseq	r6, r4, r9, ror #28
    4948:	f9050804 			; <UNDEFINED> instruction: 0xf9050804
    494c:	04000000 	streq	r0, [r0], #-0
    4950:	01810408 	orreq	r0, r1, r8, lsl #8
    4954:	01040000 	mrseq	r0, (UNDEF: 4)
    4958:	0008a806 	andeq	sl, r8, r6, lsl #16
    495c:	08010400 	stmdaeq	r1, {sl}
    4960:	000008a6 	andeq	r0, r0, r6, lsr #17
    4964:	c2050204 	andgt	r0, r5, #4, 4	; 0x40000000
    4968:	04000008 	streq	r0, [r0], #-8
    496c:	00950702 	addseq	r0, r5, r2, lsl #14
    4970:	67030000 	strvs	r0, [r3, -r0]
    4974:	04000000 	streq	r0, [r0], #-0
    4978:	00fe0504 	rscseq	r0, lr, r4, lsl #10
    497c:	04040000 	streq	r0, [r4], #-0
    4980:	00066307 	andeq	r6, r6, r7, lsl #6
    4984:	07080400 	streq	r0, [r8, -r0, lsl #8]
    4988:	0000065e 	andeq	r0, r0, lr, asr r6
    498c:	00088702 	andeq	r8, r8, r2, lsl #14
    4990:	0d0c0300 	stceq	3, cr0, [ip, #-0]
    4994:	0000003d 	andeq	r0, r0, sp, lsr r0
    4998:	00088002 	andeq	r8, r8, r2
    499c:	0e2c0400 	cdpeq	4, 2, cr0, cr12, cr0, {0}
    49a0:	00000073 	andeq	r0, r0, r3, ror r0
    49a4:	00098702 	andeq	r8, r9, r2, lsl #14
    49a8:	0e720400 	cdpeq	4, 7, cr0, cr2, cr0, {0}
    49ac:	00000073 	andeq	r0, r0, r3, ror r0
    49b0:	00081206 	andeq	r1, r8, r6, lsl #4
    49b4:	01650200 	cmneq	r5, r0, lsl #4
    49b8:	00003617 	andeq	r3, r0, r7, lsl r6
    49bc:	04040700 	streq	r0, [r4], #-1792	; 0xfffff900
    49c0:	00db03a6 	sbcseq	r0, fp, r6, lsr #7
    49c4:	0c080000 	stceq	0, cr0, [r8], {-0}
    49c8:	04000008 	streq	r0, [r0], #-8
    49cc:	00ac0ca8 	adceq	r0, ip, r8, lsr #25
    49d0:	be080000 	cdplt	0, 0, cr0, cr8, cr0, {0}
    49d4:	04000007 	streq	r0, [r0], #-7
    49d8:	00db13a9 	sbcseq	r1, fp, r9, lsr #7
    49dc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    49e0:	00000059 	andeq	r0, r0, r9, asr r0
    49e4:	000000eb 	andeq	r0, r0, fp, ror #1
    49e8:	0000360a 	andeq	r3, r0, sl, lsl #12
    49ec:	0b000300 	bleq	55f4 <_start-0x2a0c>
    49f0:	09a30408 	stmibeq	r3!, {r3, sl}
    49f4:	0000010f 	andeq	r0, r0, pc, lsl #2
    49f8:	0009650c 	andeq	r6, r9, ip, lsl #10
    49fc:	07a50400 	streq	r0, [r5, r0, lsl #8]!
    4a00:	0000003d 	andeq	r0, r0, sp, lsr r0
    4a04:	096d0c00 	stmdbeq	sp!, {sl, fp}^
    4a08:	aa040000 	bge	104a10 <mailbuffer+0xd7870>
    4a0c:	0000b905 	andeq	fp, r0, r5, lsl #18
    4a10:	02000400 	andeq	r0, r0, #0, 8
    4a14:	000008ee 	andeq	r0, r0, lr, ror #17
    4a18:	eb03ab04 	bl	ef630 <mailbuffer+0xc2490>
    4a1c:	02000000 	andeq	r0, r0, #0
    4a20:	00000781 	andeq	r0, r0, r1, lsl #15
    4a24:	881baf04 	ldmdahi	fp, {r2, r8, r9, sl, fp, sp, pc}
    4a28:	0d000000 	stceq	0, cr0, [r0, #-0]
    4a2c:	2f040e04 	svccs	0x00040e04
    4a30:	04000001 	streq	r0, [r0], #-1
    4a34:	08af0801 	stmiaeq	pc!, {r0, fp}	; <UNPREDICTABLE>
    4a38:	2f030000 	svccs	0x00030000
    4a3c:	02000001 	andeq	r0, r0, #1
    4a40:	000009cb 	andeq	r0, r0, fp, asr #19
    4a44:	7a191605 	bvc	64a260 <mailbuffer+0x61d0c0>
    4a48:	0f000000 	svceq	0x00000000
    4a4c:	00000792 	muleq	r0, r2, r7
    4a50:	082f0518 	stmdaeq	pc!, {r3, r4, r8, sl}	; <UNPREDICTABLE>
    4a54:	000001a1 	andeq	r0, r0, r1, lsr #3
    4a58:	00090f0c 	andeq	r0, r9, ip, lsl #30
    4a5c:	13310500 	teqne	r1, #0, 10
    4a60:	000001a1 	andeq	r0, r0, r1, lsr #3
    4a64:	6b5f1000 	blvs	17c8a6c <mailbuffer+0x179b8cc>
    4a68:	07320500 	ldreq	r0, [r2, -r0, lsl #10]!
    4a6c:	0000003d 	andeq	r0, r0, sp, lsr r0
    4a70:	09500c04 	ldmdbeq	r0, {r2, sl, fp}^
    4a74:	32050000 	andcc	r0, r5, #0
    4a78:	00003d0b 	andeq	r3, r0, fp, lsl #26
    4a7c:	7b0c0800 	blvc	306a84 <mailbuffer+0x2d98e4>
    4a80:	05000007 	streq	r0, [r0, #-7]
    4a84:	003d1432 	eorseq	r1, sp, r2, lsr r4
    4a88:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    4a8c:	00000a51 	andeq	r0, r0, r1, asr sl
    4a90:	3d1b3205 	lfmcc	f3, 4, [fp, #-20]	; 0xffffffec
    4a94:	10000000 	andne	r0, r0, r0
    4a98:	00785f10 	rsbseq	r5, r8, r0, lsl pc
    4a9c:	a70b3305 	strge	r3, [fp, -r5, lsl #6]
    4aa0:	14000001 	strne	r0, [r0], #-1
    4aa4:	47040e00 	strmi	r0, [r4, -r0, lsl #28]
    4aa8:	09000001 	stmdbeq	r0, {r0}
    4aac:	0000013b 	andeq	r0, r0, fp, lsr r1
    4ab0:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    4ab4:	0000360a 	andeq	r3, r0, sl, lsl #12
    4ab8:	0f000000 	svceq	0x00000000
    4abc:	000007b9 			; <UNDEFINED> instruction: 0x000007b9
    4ac0:	08370524 	ldmdaeq	r7!, {r2, r5, r8, sl}
    4ac4:	0000023a 	andeq	r0, r0, sl, lsr r2
    4ac8:	0006b40c 	andeq	fp, r6, ip, lsl #8
    4acc:	09390500 	ldmdbeq	r9!, {r8, sl}
    4ad0:	0000003d 	andeq	r0, r0, sp, lsr r0
    4ad4:	09960c00 	ldmibeq	r6, {sl, fp}
    4ad8:	3a050000 	bcc	144ae0 <mailbuffer+0x117940>
    4adc:	00003d09 	andeq	r3, r0, r9, lsl #26
    4ae0:	c90c0400 	stmdbgt	ip, {sl}
    4ae4:	05000006 	streq	r0, [r0, #-6]
    4ae8:	003d093b 	eorseq	r0, sp, fp, lsr r9
    4aec:	0c080000 	stceq	0, cr0, [r8], {-0}
    4af0:	00000adc 	ldrdeq	r0, [r0], -ip
    4af4:	3d093c05 	stccc	12, cr3, [r9, #-20]	; 0xffffffec
    4af8:	0c000000 	stceq	0, cr0, [r0], {-0}
    4afc:	00085a0c 	andeq	r5, r8, ip, lsl #20
    4b00:	093d0500 	ldmdbeq	sp!, {r8, sl}
    4b04:	0000003d 	andeq	r0, r0, sp, lsr r0
    4b08:	083a0c10 	ldmdaeq	sl!, {r4, sl, fp}
    4b0c:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    4b10:	00003d09 	andeq	r3, r0, r9, lsl #26
    4b14:	560c1400 	strpl	r1, [ip], -r0, lsl #8
    4b18:	0500000a 	streq	r0, [r0, #-10]
    4b1c:	003d093f 	eorseq	r0, sp, pc, lsr r9
    4b20:	0c180000 	ldceq	0, cr0, [r8], {-0}
    4b24:	000008cc 	andeq	r0, r0, ip, asr #17
    4b28:	3d094005 	stccc	0, cr4, [r9, #-20]	; 0xffffffec
    4b2c:	1c000000 	stcne	0, cr0, [r0], {-0}
    4b30:	000aa30c 	andeq	sl, sl, ip, lsl #6
    4b34:	09410500 	stmdbeq	r1, {r8, sl}^
    4b38:	0000003d 	andeq	r0, r0, sp, lsr r0
    4b3c:	d8110020 	ldmdale	r1, {r5}
    4b40:	08000006 	stmdaeq	r0, {r1, r2}
    4b44:	084a0501 	stmdaeq	sl, {r0, r8, sl}^
    4b48:	0000027f 	andeq	r0, r0, pc, ror r2
    4b4c:	00075a0c 	andeq	r5, r7, ip, lsl #20
    4b50:	0a4b0500 	beq	12c5f58 <mailbuffer+0x1298db8>
    4b54:	0000027f 	andeq	r0, r0, pc, ror r2
    4b58:	06130c00 	ldreq	r0, [r3], -r0, lsl #24
    4b5c:	4c050000 	stcmi	0, cr0, [r5], {-0}
    4b60:	00027f09 	andeq	r7, r2, r9, lsl #30
    4b64:	b2128000 	andslt	r8, r2, #0
    4b68:	05000009 	streq	r0, [r0, #-9]
    4b6c:	013b0a4e 	teqeq	fp, lr, asr #20
    4b70:	01000000 	mrseq	r0, (UNDEF: 0)
    4b74:	0006fd12 	andeq	pc, r6, r2, lsl sp	; <UNPREDICTABLE>
    4b78:	0a510500 	beq	1445f80 <mailbuffer+0x1418de0>
    4b7c:	0000013b 	andeq	r0, r0, fp, lsr r1
    4b80:	09000104 	stmdbeq	r0, {r2, r8}
    4b84:	00000127 	andeq	r0, r0, r7, lsr #2
    4b88:	0000028f 	andeq	r0, r0, pc, lsl #5
    4b8c:	0000360a 	andeq	r3, r0, sl, lsl #12
    4b90:	11001f00 	tstne	r0, r0, lsl #30
    4b94:	00000863 	andeq	r0, r0, r3, ror #16
    4b98:	5d050190 	stfpls	f0, [r5, #-576]	; 0xfffffdc0
    4b9c:	0002d208 	andeq	sp, r2, r8, lsl #4
    4ba0:	090f0c00 	stmdbeq	pc, {sl, fp}	; <UNPREDICTABLE>
    4ba4:	5e050000 	cdppl	0, 0, cr0, cr5, cr0, {0}
    4ba8:	0002d212 	andeq	sp, r2, r2, lsl r2
    4bac:	200c0000 	andcs	r0, ip, r0
    4bb0:	05000009 	streq	r0, [r0, #-9]
    4bb4:	003d065f 	eorseq	r0, sp, pc, asr r6
    4bb8:	0c040000 	stceq	0, cr0, [r4], {-0}
    4bbc:	00000762 	andeq	r0, r0, r2, ror #14
    4bc0:	d8096105 	stmdale	r9, {r0, r2, r8, sp, lr}
    4bc4:	08000002 	stmdaeq	r0, {r1}
    4bc8:	0006d80c 	andeq	sp, r6, ip, lsl #16
    4bcc:	1e620500 	cdpne	5, 6, cr0, cr2, cr0, {0}
    4bd0:	0000023a 	andeq	r0, r0, sl, lsr r2
    4bd4:	040e0088 	streq	r0, [lr], #-136	; 0xffffff78
    4bd8:	0000028f 	andeq	r0, r0, pc, lsl #5
    4bdc:	0002e809 	andeq	lr, r2, r9, lsl #16
    4be0:	0002e800 	andeq	lr, r2, r0, lsl #16
    4be4:	00360a00 	eorseq	r0, r6, r0, lsl #20
    4be8:	001f0000 	andseq	r0, pc, r0
    4bec:	02ee040e 	rsceq	r0, lr, #234881024	; 0xe000000
    4bf0:	0f130000 	svceq	0x00130000
    4bf4:	000008d6 	ldrdeq	r0, [r0], -r6
    4bf8:	08750508 	ldmdaeq	r5!, {r3, r8, sl}^
    4bfc:	00000317 	andeq	r0, r0, r7, lsl r3
    4c00:	0006c30c 	andeq	ip, r6, ip, lsl #6
    4c04:	11760500 	cmnne	r6, r0, lsl #10
    4c08:	00000317 	andeq	r0, r0, r7, lsl r3
    4c0c:	061f0c00 	ldreq	r0, [pc], -r0, lsl #24
    4c10:	77050000 	strvc	r0, [r5, -r0]
    4c14:	00003d06 	andeq	r3, r0, r6, lsl #26
    4c18:	0e000400 	cfcpyseq	mvf0, mvf0
    4c1c:	00005904 	andeq	r5, r0, r4, lsl #18
    4c20:	08f90f00 	ldmeq	r9!, {r8, r9, sl, fp}^
    4c24:	05680000 	strbeq	r0, [r8, #-0]!
    4c28:	046008b5 	strbteq	r0, [r0], #-2229	; 0xfffff74b
    4c2c:	5f100000 	svcpl	0x00100000
    4c30:	b6050070 			; <UNDEFINED> instruction: 0xb6050070
    4c34:	00031712 	andeq	r1, r3, r2, lsl r7
    4c38:	5f100000 	svcpl	0x00100000
    4c3c:	b7050072 	smlsdxlt	r5, r2, r0, r0
    4c40:	00003d07 	andeq	r3, r0, r7, lsl #26
    4c44:	5f100400 	svcpl	0x00100400
    4c48:	b8050077 	stmdalt	r5, {r0, r1, r2, r4, r5, r6}
    4c4c:	00003d07 	andeq	r3, r0, r7, lsl #26
    4c50:	f60c0800 			; <UNDEFINED> instruction: 0xf60c0800
    4c54:	05000006 	streq	r0, [r0, #-6]
    4c58:	006009b9 	strhteq	r0, [r0], #-153	; 0xffffff67
    4c5c:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    4c60:	000007d5 	ldrdeq	r0, [r0], -r5
    4c64:	6009ba05 	andvs	fp, r9, r5, lsl #20
    4c68:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    4c6c:	66625f10 	uqadd16vs	r5, r2, r0
    4c70:	11bb0500 			; <UNDEFINED> instruction: 0x11bb0500
    4c74:	000002ef 	andeq	r0, r0, pc, ror #5
    4c78:	06750c10 			; <UNDEFINED> instruction: 0x06750c10
    4c7c:	bc050000 	stclt	0, cr0, [r5], {-0}
    4c80:	00003d07 	andeq	r3, r0, r7, lsl #26
    4c84:	e60c1800 	str	r1, [ip], -r0, lsl #16
    4c88:	05000006 	streq	r0, [r0, #-6]
    4c8c:	01270ac3 	smlawteq	r7, r3, sl, r0
    4c90:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    4c94:	000007a9 	andeq	r0, r0, r9, lsr #15
    4c98:	d21dc505 	andsle	ip, sp, #20971520	; 0x1400000
    4c9c:	20000005 	andcs	r0, r0, r5
    4ca0:	0008330c 	andeq	r3, r8, ip, lsl #6
    4ca4:	1dc70500 	cfstr64ne	mvdx0, [r7]
    4ca8:	000005fc 	strdeq	r0, [r0], -ip
    4cac:	09750c24 	ldmdbeq	r5!, {r2, r5, sl, fp}^
    4cb0:	ca050000 	bgt	144cb8 <mailbuffer+0x117b18>
    4cb4:	0006200d 	andeq	r2, r6, sp
    4cb8:	bd0c2800 	stclt	8, cr2, [ip, #-0]
    4cbc:	0500000a 	streq	r0, [r0, #-10]
    4cc0:	063a09cb 	ldrteq	r0, [sl], -fp, asr #19
    4cc4:	102c0000 	eorne	r0, ip, r0
    4cc8:	0062755f 	rsbeq	r7, r2, pc, asr r5
    4ccc:	ef11ce05 	svc	0x0011ce05
    4cd0:	30000002 	andcc	r0, r0, r2
    4cd4:	70755f10 	rsbsvc	r5, r5, r0, lsl pc
    4cd8:	12cf0500 	sbcne	r0, pc, #0, 10
    4cdc:	00000317 	andeq	r0, r0, r7, lsl r3
    4ce0:	755f1038 	ldrbvc	r1, [pc, #-56]	; 4cb0 <_start-0x3350>
    4ce4:	d0050072 	andle	r0, r5, r2, ror r0
    4ce8:	00003d07 	andeq	r3, r0, r7, lsl #26
    4cec:	bd0c3c00 	stclt	12, cr3, [ip, #-0]
    4cf0:	05000006 	streq	r0, [r0, #-6]
    4cf4:	064011d3 			; <UNDEFINED> instruction: 0x064011d3
    4cf8:	0c400000 	mareq	acc0, r0, r0
    4cfc:	00000a95 	muleq	r0, r5, sl
    4d00:	5011d405 	andspl	sp, r1, r5, lsl #8
    4d04:	43000006 	movwmi	r0, #6
    4d08:	626c5f10 	rsbvs	r5, ip, #16, 30	; 0x40
    4d0c:	11d70500 	bicsne	r0, r7, r0, lsl #10
    4d10:	000002ef 	andeq	r0, r0, pc, ror #5
    4d14:	070c0c44 	streq	r0, [ip, -r4, asr #24]
    4d18:	da050000 	ble	144d20 <mailbuffer+0x117b80>
    4d1c:	00003d07 	andeq	r3, r0, r7, lsl #26
    4d20:	1d0c4c00 	stcne	12, cr4, [ip, #-0]
    4d24:	05000007 	streq	r0, [r0, #-7]
    4d28:	00940adb 			; <UNDEFINED> instruction: 0x00940adb
    4d2c:	0c500000 	mraeq	r0, r0, acc0
    4d30:	00000638 	andeq	r0, r0, r8, lsr r6
    4d34:	7e12de05 	cdpvc	14, 1, cr13, cr2, cr5, {0}
    4d38:	54000004 	strpl	r0, [r0], #-4
    4d3c:	0008190c 	andeq	r1, r8, ip, lsl #18
    4d40:	0ce20500 	cfstr64eq	mvdx0, [r2]
    4d44:	0000011b 	andeq	r0, r0, fp, lsl r1
    4d48:	09010c58 	stmdbeq	r1, {r3, r4, r6, sl, fp}
    4d4c:	e4050000 	str	r0, [r5], #-0
    4d50:	00010f0e 	andeq	r0, r1, lr, lsl #30
    4d54:	2b0c5c00 	blcs	31bd5c <mailbuffer+0x2eebbc>
    4d58:	05000008 	streq	r0, [r0, #-8]
    4d5c:	003d09e5 	eorseq	r0, sp, r5, ror #19
    4d60:	00640000 	rsbeq	r0, r4, r0
    4d64:	00003d14 	andeq	r3, r0, r4, lsl sp
    4d68:	00047e00 	andeq	r7, r4, r0, lsl #28
    4d6c:	047e1500 	ldrbteq	r1, [lr], #-1280	; 0xfffffb00
    4d70:	27150000 	ldrcs	r0, [r5, -r0]
    4d74:	15000001 	strne	r0, [r0, #-1]
    4d78:	00000129 	andeq	r0, r0, r9, lsr #2
    4d7c:	00003d15 	andeq	r3, r0, r5, lsl sp
    4d80:	040e0000 	streq	r0, [lr], #-0
    4d84:	00000489 	andeq	r0, r0, r9, lsl #9
    4d88:	00047e03 	andeq	r7, r4, r3, lsl #28
    4d8c:	09581600 	ldmdbeq	r8, {r9, sl, ip}^
    4d90:	04280000 	strteq	r0, [r8], #-0
    4d94:	08026005 	stmdaeq	r2, {r0, r2, sp, lr}
    4d98:	000005d2 	ldrdeq	r0, [r0], -r2
    4d9c:	0008bb17 	andeq	fp, r8, r7, lsl fp
    4da0:	02620500 	rsbeq	r0, r2, #0, 10
    4da4:	00003d07 	andeq	r3, r0, r7, lsl #26
    4da8:	05170000 	ldreq	r0, [r7, #-0]
    4dac:	05000007 	streq	r0, [r0, #-7]
    4db0:	ac0b0267 	sfmge	f0, 4, [fp], {103}	; 0x67
    4db4:	04000006 	streq	r0, [r0], #-6
    4db8:	0007c517 	andeq	ip, r7, r7, lsl r5
    4dbc:	02670500 	rsbeq	r0, r7, #0, 10
    4dc0:	0006ac14 	andeq	sl, r6, r4, lsl ip
    4dc4:	8a170800 	bhi	5c6dcc <mailbuffer+0x599c2c>
    4dc8:	05000007 	streq	r0, [r0, #-7]
    4dcc:	ac1e0267 	lfmge	f0, 4, [lr], {103}	; 0x67
    4dd0:	0c000006 	stceq	0, cr0, [r0], {6}
    4dd4:	00091b17 	andeq	r1, r9, r7, lsl fp
    4dd8:	02690500 	rsbeq	r0, r9, #0, 10
    4ddc:	00003d08 	andeq	r3, r0, r8, lsl #26
    4de0:	2d171000 	ldccs	0, cr1, [r7, #-0]
    4de4:	05000006 	streq	r0, [r0, #-6]
    4de8:	ac08026a 	sfmge	f0, 4, [r8], {106}	; 0x6a
    4dec:	14000008 	strne	r0, [r0], #-8
    4df0:	00093717 	andeq	r3, r9, r7, lsl r7
    4df4:	026d0500 	rsbeq	r0, sp, #0, 10
    4df8:	00003d07 	andeq	r3, r0, r7, lsl #26
    4dfc:	25173000 	ldrcs	r3, [r7, #-0]
    4e00:	05000009 	streq	r0, [r0, #-9]
    4e04:	c116026e 	tstgt	r6, lr, ror #4
    4e08:	34000008 	strcc	r0, [r0], #-8
    4e0c:	00087517 	andeq	r7, r8, r7, lsl r5
    4e10:	02700500 	rsbseq	r0, r0, #0, 10
    4e14:	00003d07 	andeq	r3, r0, r7, lsl #26
    4e18:	2d173800 	ldccs	8, cr3, [r7, #-0]
    4e1c:	05000009 	streq	r0, [r0, #-9]
    4e20:	d20a0272 	andle	r0, sl, #536870919	; 0x20000007
    4e24:	3c000008 	stccc	0, cr0, [r0], {8}
    4e28:	00080417 	andeq	r0, r8, r7, lsl r4
    4e2c:	02750500 	rsbseq	r0, r5, #0, 10
    4e30:	0001a113 	andeq	sl, r1, r3, lsl r1
    4e34:	af174000 	svcge	0x00174000
    4e38:	05000007 	streq	r0, [r0, #-7]
    4e3c:	3d070276 	sfmcc	f0, 4, [r7, #-472]	; 0xfffffe28
    4e40:	44000000 	strmi	r0, [r0], #-0
    4e44:	000ad717 	andeq	sp, sl, r7, lsl r7
    4e48:	02770500 	rsbseq	r0, r7, #0, 10
    4e4c:	0001a113 	andeq	sl, r1, r3, lsl r1
    4e50:	dd174800 	ldcle	8, cr4, [r7, #-0]
    4e54:	05000008 	streq	r0, [r0, #-8]
    4e58:	d8140278 	ldmdale	r4, {r3, r4, r5, r6, r9}
    4e5c:	4c000008 	stcmi	0, cr0, [r0], {8}
    4e60:	0007cd17 	andeq	ip, r7, r7, lsl sp
    4e64:	027b0500 	rsbseq	r0, fp, #0, 10
    4e68:	00003d07 	andeq	r3, r0, r7, lsl #26
    4e6c:	15175000 	ldrne	r5, [r7, #-0]
    4e70:	05000007 	streq	r0, [r0, #-7]
    4e74:	2909027c 	stmdbcs	r9, {r2, r3, r4, r5, r6, r9}
    4e78:	54000001 	strpl	r0, [r0], #-1
    4e7c:	0008b417 	andeq	fp, r8, r7, lsl r4
    4e80:	029f0500 	addseq	r0, pc, #0, 10
    4e84:	00088707 	andeq	r8, r8, r7, lsl #14
    4e88:	63185800 	tstvs	r8, #0, 16
    4e8c:	05000008 	streq	r0, [r0, #-8]
    4e90:	d21302a3 	andsle	r0, r3, #805306378	; 0x3000000a
    4e94:	48000002 	stmdami	r0, {r1}
    4e98:	07e21801 	strbeq	r1, [r2, r1, lsl #16]!
    4e9c:	a4050000 	strge	r0, [r5], #-0
    4ea0:	028f1202 	addeq	r1, pc, #536870912	; 0x20000000
    4ea4:	014c0000 	mrseq	r0, (UNDEF: 76)
    4ea8:	000a7918 	andeq	r7, sl, r8, lsl r9
    4eac:	02a80500 	adceq	r0, r8, #0, 10
    4eb0:	0008e90c 	andeq	lr, r8, ip, lsl #18
    4eb4:	1802dc00 	stmdane	r2, {sl, fp, ip, lr, pc}
    4eb8:	000006ee 	andeq	r0, r0, lr, ror #13
    4ebc:	1002ad05 	andne	sl, r2, r5, lsl #26
    4ec0:	0000066d 	andeq	r0, r0, sp, ror #12
    4ec4:	d31802e0 	tstle	r8, #224, 4
    4ec8:	05000006 	streq	r0, [r0, #-6]
    4ecc:	f50a02af 			; <UNDEFINED> instruction: 0xf50a02af
    4ed0:	ec000008 	stc	0, cr0, [r0], {8}
    4ed4:	040e0002 	streq	r0, [lr], #-2
    4ed8:	00000460 	andeq	r0, r0, r0, ror #8
    4edc:	00003d14 	andeq	r3, r0, r4, lsl sp
    4ee0:	0005f600 	andeq	pc, r5, r0, lsl #12
    4ee4:	047e1500 	ldrbteq	r1, [lr], #-1280	; 0xfffffb00
    4ee8:	27150000 	ldrcs	r0, [r5, -r0]
    4eec:	15000001 	strne	r0, [r0, #-1]
    4ef0:	000005f6 	strdeq	r0, [r0], -r6
    4ef4:	00003d15 	andeq	r3, r0, r5, lsl sp
    4ef8:	040e0000 	streq	r0, [lr], #-0
    4efc:	00000136 	andeq	r0, r0, r6, lsr r1
    4f00:	05d8040e 	ldrbeq	r0, [r8, #1038]	; 0x40e
    4f04:	a0140000 	andsge	r0, r4, r0
    4f08:	20000000 	andcs	r0, r0, r0
    4f0c:	15000006 	strne	r0, [r0, #-6]
    4f10:	0000047e 	andeq	r0, r0, lr, ror r4
    4f14:	00012715 	andeq	r2, r1, r5, lsl r7
    4f18:	00a01500 	adceq	r1, r0, r0, lsl #10
    4f1c:	3d150000 	ldccc	0, cr0, [r5, #-0]
    4f20:	00000000 	andeq	r0, r0, r0
    4f24:	0602040e 	streq	r0, [r2], -lr, lsl #8
    4f28:	3d140000 	ldccc	0, cr0, [r4, #-0]
    4f2c:	3a000000 	bcc	4f34 <_start-0x30cc>
    4f30:	15000006 	strne	r0, [r0, #-6]
    4f34:	0000047e 	andeq	r0, r0, lr, ror r4
    4f38:	00012715 	andeq	r2, r1, r5, lsl r7
    4f3c:	040e0000 	streq	r0, [lr], #-0
    4f40:	00000626 	andeq	r0, r0, r6, lsr #12
    4f44:	00005909 	andeq	r5, r0, r9, lsl #18
    4f48:	00065000 	andeq	r5, r6, r0
    4f4c:	00360a00 	eorseq	r0, r6, r0, lsl #20
    4f50:	00020000 	andeq	r0, r2, r0
    4f54:	00005909 	andeq	r5, r0, r9, lsl #18
    4f58:	00066000 	andeq	r6, r6, r0
    4f5c:	00360a00 	eorseq	r0, r6, r0, lsl #20
    4f60:	00000000 	andeq	r0, r0, r0
    4f64:	0008e706 	andeq	lr, r8, r6, lsl #14
    4f68:	011f0500 	tsteq	pc, r0, lsl #10
    4f6c:	00031d1a 	andeq	r1, r3, sl, lsl sp
    4f70:	0a601900 	beq	180b378 <mailbuffer+0x17de1d8>
    4f74:	050c0000 	streq	r0, [ip, #-0]
    4f78:	a6080123 	strge	r0, [r8], -r3, lsr #2
    4f7c:	17000006 	strne	r0, [r0, -r6]
    4f80:	0000090f 	andeq	r0, r0, pc, lsl #18
    4f84:	11012505 	tstne	r1, r5, lsl #10
    4f88:	000006a6 	andeq	r0, r0, r6, lsr #13
    4f8c:	07db1700 	ldrbeq	r1, [fp, r0, lsl #14]
    4f90:	26050000 	strcs	r0, [r5], -r0
    4f94:	003d0701 	eorseq	r0, sp, r1, lsl #14
    4f98:	17040000 	strne	r0, [r4, -r0]
    4f9c:	00000915 	andeq	r0, r0, r5, lsl r9
    4fa0:	0b012705 	bleq	4ebbc <mailbuffer+0x21a1c>
    4fa4:	000006ac 	andeq	r0, r0, ip, lsr #13
    4fa8:	040e0008 	streq	r0, [lr], #-8
    4fac:	0000066d 	andeq	r0, r0, sp, ror #12
    4fb0:	0660040e 	strbteq	r0, [r0], -lr, lsl #8
    4fb4:	25190000 	ldrcs	r0, [r9, #-0]
    4fb8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    4fbc:	08013f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp, ip, sp}
    4fc0:	000006eb 	andeq	r0, r0, fp, ror #13
    4fc4:	00095f17 	andeq	r5, r9, r7, lsl pc
    4fc8:	01400500 	cmpeq	r0, r0, lsl #10
    4fcc:	0006eb12 	andeq	lr, r6, r2, lsl fp
    4fd0:	9f170000 	svcls	0x00170000
    4fd4:	05000009 	streq	r0, [r0, #-9]
    4fd8:	eb120141 	bl	4854e4 <mailbuffer+0x458344>
    4fdc:	06000006 	streq	r0, [r0], -r6
    4fe0:	0009bb17 	andeq	fp, r9, r7, lsl fp
    4fe4:	01420500 	cmpeq	r2, r0, lsl #10
    4fe8:	00006712 	andeq	r6, r0, r2, lsl r7
    4fec:	09000c00 	stmdbeq	r0, {sl, fp}
    4ff0:	00000067 	andeq	r0, r0, r7, rrx
    4ff4:	000006fb 	strdeq	r0, [r0], -fp
    4ff8:	0000360a 	andeq	r3, r0, sl, lsl #12
    4ffc:	1a000200 	bne	5804 <_start-0x27fc>
    5000:	028005d0 	addeq	r0, r0, #208, 10	; 0x34000000
    5004:	00081007 	andeq	r1, r8, r7
    5008:	0a341700 	beq	d0ac10 <mailbuffer+0xcdda70>
    500c:	82050000 	andhi	r0, r5, #0
    5010:	00361802 	eorseq	r1, r6, r2, lsl #16
    5014:	17000000 	strne	r0, [r0, -r0]
    5018:	000009a5 	andeq	r0, r0, r5, lsr #19
    501c:	12028305 	andne	r8, r2, #335544320	; 0x14000000
    5020:	00000129 	andeq	r0, r0, r9, lsr #2
    5024:	07f71704 	ldrbeq	r1, [r7, r4, lsl #14]!
    5028:	84050000 	strhi	r0, [r5], #-0
    502c:	08101002 	ldmdaeq	r0, {r1, ip}
    5030:	17080000 	strne	r0, [r8, -r0]
    5034:	00000aae 	andeq	r0, r0, lr, lsr #21
    5038:	17028505 	strne	r8, [r2, -r5, lsl #10]
    503c:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    5040:	079a1724 	ldreq	r1, [sl, r4, lsr #14]
    5044:	86050000 	strhi	r0, [r5], -r0
    5048:	003d0f02 	eorseq	r0, sp, r2, lsl #30
    504c:	17480000 	strbne	r0, [r8, -r0]
    5050:	0000090a 	andeq	r0, r0, sl, lsl #18
    5054:	2c028705 	stccs	7, cr8, [r2], {5}
    5058:	00000081 	andeq	r0, r0, r1, lsl #1
    505c:	0ac41750 	beq	ff10ada4 <_estack+0xf70fada4>
    5060:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
    5064:	06b21a02 	ldrteq	r1, [r2], r2, lsl #20
    5068:	17580000 	ldrbne	r0, [r8, -r0]
    506c:	00000899 	muleq	r0, r9, r8
    5070:	16028905 	strne	r8, [r2], -r5, lsl #18
    5074:	0000010f 	andeq	r0, r0, pc, lsl #2
    5078:	0ac91768 	beq	ff24ae20 <_estack+0xf723ae20>
    507c:	8a050000 	bhi	145084 <mailbuffer+0x117ee4>
    5080:	010f1602 	tsteq	pc, r2, lsl #12
    5084:	17700000 	ldrbne	r0, [r0, -r0]!
    5088:	000006a6 	andeq	r0, r0, r6, lsr #13
    508c:	16028b05 	strne	r8, [r2], -r5, lsl #22
    5090:	0000010f 	andeq	r0, r0, pc, lsl #2
    5094:	0a6f1778 	beq	1bcae7c <mailbuffer+0x1b9dcdc>
    5098:	8c050000 	stchi	0, cr0, [r5], {-0}
    509c:	08201002 	stmdaeq	r0!, {r1, ip}
    50a0:	17800000 	strne	r0, [r0, r0]
    50a4:	000007eb 	andeq	r0, r0, fp, ror #15
    50a8:	10028d05 	andne	r8, r2, r5, lsl #26
    50ac:	00000830 	andeq	r0, r0, r0, lsr r8
    50b0:	09d31788 	ldmibeq	r3, {r3, r7, r8, r9, sl, ip}^
    50b4:	8e050000 	cdphi	0, 0, cr0, cr5, cr0, {0}
    50b8:	003d0f02 	eorseq	r0, sp, r2, lsl #30
    50bc:	17a00000 	strne	r0, [r0, r0]!
    50c0:	0000074c 	andeq	r0, r0, ip, asr #14
    50c4:	16028f05 	strne	r8, [r2], -r5, lsl #30
    50c8:	0000010f 	andeq	r0, r0, pc, lsl #2
    50cc:	069717a4 	ldreq	r1, [r7], r4, lsr #15
    50d0:	90050000 	andls	r0, r5, r0
    50d4:	010f1602 	tsteq	pc, r2, lsl #12
    50d8:	17ac0000 	strne	r0, [ip, r0]!
    50dc:	0000073b 	andeq	r0, r0, fp, lsr r7
    50e0:	16029105 	strne	r9, [r2], -r5, lsl #2
    50e4:	0000010f 	andeq	r0, r0, pc, lsl #2
    50e8:	063e17b4 			; <UNDEFINED> instruction: 0x063e17b4
    50ec:	92050000 	andls	r0, r5, #0
    50f0:	010f1602 	tsteq	pc, r2, lsl #12
    50f4:	17bc0000 	ldrne	r0, [ip, r0]!
    50f8:	0000064d 	andeq	r0, r0, sp, asr #12
    50fc:	16029305 	strne	r9, [r2], -r5, lsl #6
    5100:	0000010f 	andeq	r0, r0, pc, lsl #2
    5104:	08b917c4 	ldmeq	r9!, {r2, r6, r7, r8, r9, sl, ip}
    5108:	94050000 	strls	r0, [r5], #-0
    510c:	003d0802 	eorseq	r0, sp, r2, lsl #16
    5110:	00cc0000 	sbceq	r0, ip, r0
    5114:	00012f09 	andeq	r2, r1, r9, lsl #30
    5118:	00082000 	andeq	r2, r8, r0
    511c:	00360a00 	eorseq	r0, r6, r0, lsl #20
    5120:	00190000 	andseq	r0, r9, r0
    5124:	00012f09 	andeq	r2, r1, r9, lsl #30
    5128:	00083000 	andeq	r3, r8, r0
    512c:	00360a00 	eorseq	r0, r6, r0, lsl #20
    5130:	00070000 	andeq	r0, r7, r0
    5134:	00012f09 	andeq	r2, r1, r9, lsl #30
    5138:	00084000 	andeq	r4, r8, r0
    513c:	00360a00 	eorseq	r0, r6, r0, lsl #20
    5140:	00170000 	andseq	r0, r7, r0
    5144:	9905f01a 	stmdbls	r5, {r1, r3, r4, ip, sp, lr, pc}
    5148:	08670702 	stmdaeq	r7!, {r1, r8, r9, sl}^
    514c:	53170000 	tstpl	r7, #0
    5150:	05000008 	streq	r0, [r0, #-8]
    5154:	671b029c 			; <UNDEFINED> instruction: 0x671b029c
    5158:	00000008 	andeq	r0, r0, r8
    515c:	000a6617 	andeq	r6, sl, r7, lsl r6
    5160:	029d0500 	addseq	r0, sp, #0, 10
    5164:	00087718 	andeq	r7, r8, r8, lsl r7
    5168:	09007800 	stmdbeq	r0, {fp, ip, sp, lr}
    516c:	00000317 	andeq	r0, r0, r7, lsl r3
    5170:	00000877 	andeq	r0, r0, r7, ror r8
    5174:	0000360a 	andeq	r3, r0, sl, lsl #12
    5178:	09001d00 	stmdbeq	r0, {r8, sl, fp, ip}
    517c:	00000036 	andeq	r0, r0, r6, lsr r0
    5180:	00000887 	andeq	r0, r0, r7, lsl #17
    5184:	0000360a 	andeq	r3, r0, sl, lsl #12
    5188:	1b001d00 	blne	c590 <__module_entries_end+0x44ec>
    518c:	027e05f0 	rsbseq	r0, lr, #240, 10	; 0x3c000000
    5190:	0008ac03 	andeq	sl, r8, r3, lsl #24
    5194:	09581c00 	ldmdbeq	r8, {sl, fp, ip}^
    5198:	95050000 	strls	r0, [r5, #-0]
    519c:	06fb0b02 	ldrbteq	r0, [fp], r2, lsl #22
    51a0:	9b1c0000 	blls	7051a8 <mailbuffer+0x6d8008>
    51a4:	0500000a 	streq	r0, [r0, #-10]
    51a8:	400b029e 	mulmi	fp, lr, r2
    51ac:	00000008 	andeq	r0, r0, r8
    51b0:	00012f09 	andeq	r2, r1, r9, lsl #30
    51b4:	0008bc00 	andeq	fp, r8, r0, lsl #24
    51b8:	00360a00 	eorseq	r0, r6, r0, lsl #20
    51bc:	00180000 	andseq	r0, r8, r0
    51c0:	00067e1d 	andeq	r7, r6, sp, lsl lr
    51c4:	bc040e00 	stclt	14, cr0, [r4], {-0}
    51c8:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    51cc:	000008d2 	ldrdeq	r0, [r0], -r2
    51d0:	00047e15 	andeq	r7, r4, r5, lsl lr
    51d4:	040e0000 	streq	r0, [lr], #-0
    51d8:	000008c7 	andeq	r0, r0, r7, asr #17
    51dc:	01a1040e 			; <UNDEFINED> instruction: 0x01a1040e
    51e0:	e91e0000 	ldmdb	lr, {}	; <UNPREDICTABLE>
    51e4:	15000008 	strne	r0, [r0, #-8]
    51e8:	0000003d 	andeq	r0, r0, sp, lsr r0
    51ec:	ef040e00 	svc	0x00040e00
    51f0:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    51f4:	0008de04 	andeq	sp, r8, r4, lsl #28
    51f8:	06600900 	strbteq	r0, [r0], -r0, lsl #18
    51fc:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    5200:	360a0000 	strcc	r0, [sl], -r0
    5204:	02000000 	andeq	r0, r0, #0
    5208:	09e71f00 	stmibeq	r7!, {r8, r9, sl, fp, ip}^
    520c:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    5210:	047e1703 	ldrbteq	r1, [lr], #-1795	; 0xfffff8fd
    5214:	e01f0000 	ands	r0, pc, r0
    5218:	05000009 	streq	r0, [r0, #-9]
    521c:	841d032f 	ldrhi	r0, [sp], #-815	; 0xfffffcd1
    5220:	20000004 	andcs	r0, r0, r4
    5224:	0000086b 	andeq	r0, r0, fp, ror #16
    5228:	290e6406 	stmdbcs	lr, {r1, r2, sl, sp, lr}
    522c:	21000001 	tstcs	r0, r1
    5230:	00001a52 	andeq	r1, r0, r2, asr sl
    5234:	5c011000 	stcpl	0, cr1, [r1], {-0}
    5238:	0009520e 	andeq	r5, r9, lr, lsl #4
    523c:	1a890800 	bne	fe247244 <_estack+0xf6237244>
    5240:	5f010000 	svcpl	0x00010000
    5244:	00095917 	andeq	r5, r9, r7, lsl r9
    5248:	1aaf0800 	bne	febc7250 <_estack+0xf6bb7250>
    524c:	63010000 	movwvs	r0, #4096	; 0x1000
    5250:	00095e10 	andeq	r5, r9, r0, lsl lr
    5254:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    5258:	00018604 	andeq	r8, r1, r4, lsl #12
    525c:	09522200 	ldmdbeq	r2, {r9, sp}^
    5260:	59090000 	stmdbpl	r9, {}	; <UNPREDICTABLE>
    5264:	6f000000 	svcvs	0x00000000
    5268:	23000009 	movwcs	r0, #9
    526c:	00000036 	andeq	r0, r0, r6, lsr r0
    5270:	24000fff 	strcs	r0, [r0], #-4095	; 0xfffff001
    5274:	00001bcc 	andeq	r1, r0, ip, asr #23
    5278:	2b036401 	blcs	de284 <mailbuffer+0xb10e4>
    527c:	05000009 	streq	r0, [r0, #-9]
    5280:	02c14003 	sbceq	r4, r1, #3
    5284:	1adf0f00 	bne	ff7c8e8c <_estack+0xf77b8e8c>
    5288:	01080000 	mrseq	r0, (UNDEF: 8)
    528c:	09a91068 	stmibeq	r9!, {r3, r5, r6, ip}
    5290:	3a0c0000 	bcc	305298 <mailbuffer+0x2d80f8>
    5294:	0100001a 	tsteq	r0, sl, lsl r0
    5298:	09a9176a 	stmibeq	r9!, {r1, r3, r5, r6, r8, r9, sl, ip}
    529c:	0c000000 	stceq	0, cr0, [r0], {-0}
    52a0:	00001a2f 	andeq	r1, r0, pc, lsr #20
    52a4:	25096b01 	strcs	r6, [r9, #-2817]	; 0xfffff4ff
    52a8:	04000000 	streq	r0, [r0], #-0
    52ac:	81040e00 	tsthi	r4, r0, lsl #28
    52b0:	02000009 	andeq	r0, r0, #9
    52b4:	00001bab 	andeq	r1, r0, fp, lsr #23
    52b8:	81036c01 	tsthi	r3, r1, lsl #24
    52bc:	24000009 	strcs	r0, [r0], #-9
    52c0:	00001b32 	andeq	r1, r0, r2, lsr fp
    52c4:	6e1d8201 	cdpvs	2, 1, cr8, cr13, cr1, {0}
    52c8:	05000000 	streq	r0, [r0, #-0]
    52cc:	0284dc03 	addeq	sp, r4, #768	; 0x300
    52d0:	1a192400 	bne	64e2d8 <mailbuffer+0x621138>
    52d4:	85010000 	strhi	r0, [r1, #-0]
    52d8:	00003115 	andeq	r3, r0, r5, lsl r1
    52dc:	e0030500 	and	r0, r3, r0, lsl #10
    52e0:	24000284 	strcs	r0, [r0], #-644	; 0xfffffd7c
    52e4:	00001a5d 	andeq	r1, r0, sp, asr sl
    52e8:	af138801 	svcge	0x00138801
    52ec:	05000009 	streq	r0, [r0, #-9]
    52f0:	02d14003 	sbcseq	r4, r1, #3
    52f4:	1bb62400 	blne	fed8e2fc <_estack+0xf6d7e2fc>
    52f8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    52fc:	000a031c 	andeq	r0, sl, ip, lsl r3
    5300:	48030500 	stmdami	r3, {r8, sl}
    5304:	0e0002d1 	mcreq	2, 0, r0, cr0, cr1, {6}
    5308:	0009af04 	andeq	sl, r9, r4, lsl #30
    530c:	1a9b2400 	bne	fe6ce314 <_estack+0xf66be314>
    5310:	8c010000 	stchi	0, cr0, [r1], {-0}
    5314:	0000250f 	andeq	r2, r0, pc, lsl #10
    5318:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    531c:	250002bc 	strcs	r0, [r0, #-700]	; 0xfffffd44
    5320:	00001ba1 	andeq	r1, r0, r1, lsr #23
    5324:	25089101 	strcs	r9, [r8, #-257]	; 0xfffffeff
    5328:	05000000 	streq	r0, [r0, #-0]
    532c:	02d14c03 	sbcseq	r4, r1, #768	; 0x300
    5330:	1b012600 	blne	4eb38 <mailbuffer+0x21998>
    5334:	34010000 	strcc	r0, [r1], #-0
    5338:	4ff00d01 	svcmi	0x00f00d01
    533c:	01540001 	cmpeq	r4, r1
    5340:	9c010000 	stcls	0, cr0, [r1], {-0}
    5344:	00000a75 	andeq	r0, r0, r5, ror sl
    5348:	001bbc27 	andseq	fp, fp, r7, lsr #24
    534c:	01340100 	teqeq	r4, r0, lsl #2
    5350:	000a0335 	andeq	r0, sl, r5, lsr r3
    5354:	6c910200 	lfmvs	f0, 4, [r1], {0}
    5358:	0009c028 	andeq	ip, r9, r8, lsr #32
    535c:	01360100 	teqeq	r6, r0, lsl #2
    5360:	000a030d 	andeq	r0, sl, sp, lsl #6
    5364:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    5368:	63757029 	cmnvs	r5, #41	; 0x29
    536c:	01370100 	teqeq	r7, r0, lsl #2
    5370:	00031710 	andeq	r1, r3, r0, lsl r7
    5374:	70910200 	addsvc	r0, r1, r0, lsl #4
    5378:	1a712600 	bne	1c4eb80 <mailbuffer+0x1c219e0>
    537c:	13010000 	movwne	r0, #4096	; 0x1000
    5380:	4f180d01 	svcmi	0x00180d01
    5384:	00d80001 	sbcseq	r0, r8, r1
    5388:	9c010000 	stcls	0, cr0, [r1], {-0}
    538c:	00000aad 	andeq	r0, r0, sp, lsr #21
    5390:	001ab628 	andseq	fp, sl, r8, lsr #12
    5394:	01150100 	tsteq	r5, r0, lsl #2
    5398:	000a030d 	andeq	r0, sl, sp, lsl #6
    539c:	70910200 	addsvc	r0, r1, r0, lsl #4
    53a0:	001a9028 	andseq	r9, sl, r8, lsr #32
    53a4:	01160100 	tsteq	r6, r0, lsl #2
    53a8:	00031710 	andeq	r1, r3, r0, lsl r7
    53ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    53b0:	1b1c2a00 	blne	70fbb8 <mailbuffer+0x6e2a18>
    53b4:	0d010000 	stceq	0, cr0, [r1, #-0]
    53b8:	4f000601 	svcmi	0x00000601
    53bc:	00180001 	andseq	r0, r8, r1
    53c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    53c4:	001aec2b 	andseq	lr, sl, fp, lsr #24
    53c8:	01070100 	mrseq	r0, (UNDEF: 23)
    53cc:	00002508 	andeq	r2, r0, r8, lsl #10
    53d0:	014edc00 	cmpeq	lr, r0, lsl #24
    53d4:	00002400 	andeq	r2, r0, r0, lsl #8
    53d8:	2c9c0100 	ldfcss	f0, [ip], {0}
    53dc:	00001b42 	andeq	r1, r0, r2, asr #22
    53e0:	6006ee01 	andvs	lr, r6, r1, lsl #28
    53e4:	7c00014e 	stfvcs	f0, [r0], {78}	; 0x4e
    53e8:	01000000 	mrseq	r0, (UNDEF: 0)
    53ec:	000b1a9c 	muleq	fp, ip, sl
    53f0:	76702d00 	ldrbtvc	r2, [r0], -r0, lsl #26
    53f4:	17ee0100 	strbne	r0, [lr, r0, lsl #2]!
    53f8:	00000127 	andeq	r0, r0, r7, lsr #2
    53fc:	2e6c9102 	lgncse	f1, f2
    5400:	00637570 	rsbeq	r7, r3, r0, ror r5
    5404:	1710f001 	ldrne	pc, [r0, -r1]
    5408:	02000003 	andeq	r0, r0, #3
    540c:	28247491 	stmdacs	r4!, {r0, r4, r7, sl, ip, sp, lr}
    5410:	0100001a 	tsteq	r0, sl, lsl r0
    5414:	0a030df1 	beq	c8be0 <mailbuffer+0x9ba40>
    5418:	91020000 	mrsls	r0, (UNDEF: 2)
    541c:	642f0070 	strtvs	r0, [pc], #-112	; 5424 <_start-0x2bdc>
    5420:	0100001a 	tsteq	r0, sl, lsl r0
    5424:	01270792 			; <UNDEFINED> instruction: 0x01270792
    5428:	4c980000 	ldcmi	0, cr0, [r8], {0}
    542c:	01c80001 	biceq	r0, r8, r1
    5430:	9c010000 	stcls	0, cr0, [r1], {-0}
    5434:	001a7d30 	andseq	r7, sl, r0, lsr sp
    5438:	1c920100 	ldfnes	f0, [r2], {0}
    543c:	00000025 	andeq	r0, r0, r5, lsr #32
    5440:	24649102 	strbtcs	r9, [r4], #-258	; 0xfffffefe
    5444:	00001a4a 	andeq	r1, r0, sl, asr #20
    5448:	030d9401 	movweq	r9, #54273	; 0xd401
    544c:	0200000a 	andeq	r0, r0, #10
    5450:	09247491 	stmdbeq	r4!, {r0, r4, r7, sl, ip, sp, lr}
    5454:	0100001a 	tsteq	r0, sl, lsl r0
    5458:	0a031794 	beq	cb2b0 <mailbuffer+0x9e110>
    545c:	91020000 	mrsls	r0, (UNDEF: 2)
    5460:	1ac72470 	bne	ff1ce628 <_estack+0xf71be628>
    5464:	94010000 	strls	r0, [r1], #-0
    5468:	000a0329 	andeq	r0, sl, r9, lsr #6
    546c:	68910200 	ldmvs	r1, {r9}
    5470:	001ad624 	andseq	sp, sl, r4, lsr #12
    5474:	07950100 	ldreq	r0, [r5, r0, lsl #2]
    5478:	00000127 	andeq	r0, r0, r7, lsr #2
    547c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    5480:	00015400 	andeq	r5, r1, r0, lsl #8
    5484:	e7000400 	str	r0, [r0, -r0, lsl #8]
    5488:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    548c:	00005901 	andeq	r5, r0, r1, lsl #18
    5490:	1bd20c00 	blne	ff488498 <_estack+0xf7478498>
    5494:	00cf0000 	sbceq	r0, pc, r0
    5498:	516c0000 	cmnpl	ip, r0
    549c:	02200001 	eoreq	r0, r0, #1
    54a0:	219f0000 	orrscs	r0, pc, r0
    54a4:	04020000 	streq	r0, [r2], #-0
    54a8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    54ac:	07040300 	streq	r0, [r4, -r0, lsl #6]
    54b0:	00000668 	andeq	r0, r0, r8, ror #12
    54b4:	f9050803 			; <UNDEFINED> instruction: 0xf9050803
    54b8:	03000000 	movweq	r0, #0
    54bc:	01810408 	orreq	r0, r1, r8, lsl #8
    54c0:	04040000 	streq	r0, [r4], #-0
    54c4:	63070403 	movwvs	r0, #29699	; 0x7403
    54c8:	03000006 	movweq	r0, #6
    54cc:	00fe0504 	rscseq	r0, lr, r4, lsl #10
    54d0:	01030000 	mrseq	r0, (UNDEF: 3)
    54d4:	0008a806 	andeq	sl, r8, r6, lsl #16
    54d8:	07020300 	streq	r0, [r2, -r0, lsl #6]
    54dc:	00000095 	muleq	r0, r5, r0
    54e0:	a6080103 	strge	r0, [r8], -r3, lsl #2
    54e4:	05000008 	streq	r0, [r0, #-8]
    54e8:	000018b6 			; <UNDEFINED> instruction: 0x000018b6
    54ec:	78060302 	stmdavc	r6, {r1, r8, r9}
    54f0:	05000000 	streq	r0, [r0, #-0]
    54f4:	02c13003 	sbceq	r3, r1, #3
    54f8:	08010300 	stmdaeq	r1, {r8, r9}
    54fc:	000008af 	andeq	r0, r0, pc, lsr #17
    5500:	00007806 	andeq	r7, r0, r6, lsl #16
    5504:	7f040700 	svcvc	0x00040700
    5508:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    550c:	00001c08 	andeq	r1, r0, r8, lsl #24
    5510:	b4068e01 	strlt	r8, [r6], #-3585	; 0xfffff1ff
    5514:	d8000152 	stmdale	r0, {r1, r4, r6, r8}
    5518:	01000000 	mrseq	r0, (UNDEF: 0)
    551c:	1c19099c 			; <UNDEFINED> instruction: 0x1c19099c
    5520:	67010000 	strvs	r0, [r1, -r0]
    5524:	01521406 	cmpeq	r2, r6, lsl #8
    5528:	0000a000 	andeq	sl, r0, r0
    552c:	cf9c0100 	svcgt	0x009c0100
    5530:	0a000000 	beq	5538 <_start-0x2ac8>
    5534:	00000030 	andeq	r0, r0, r0, lsr r0
    5538:	41126701 	tstmi	r2, r1, lsl #14
    553c:	02000000 	andeq	r0, r0, #0
    5540:	690b6c91 	stmdbvs	fp, {r0, r4, r7, sl, fp, sp, lr}
    5544:	09680100 	stmdbeq	r8!, {r8}^
    5548:	00000025 	andeq	r0, r0, r5, lsr #32
    554c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    5550:	001c1f0c 	andseq	r1, ip, ip, lsl #30
    5554:	0d630100 	stfeqe	f0, [r3, #-0]
    5558:	000151ec 	andeq	r5, r1, ip, ror #3
    555c:	00000028 	andeq	r0, r0, r8, lsr #32
    5560:	00f59c01 	rscseq	r9, r5, r1, lsl #24
    5564:	310a0000 	mrscc	r0, (UNDEF: 10)
    5568:	0100001c 	tsteq	r0, ip, lsl r0
    556c:	00842c63 	addeq	r2, r4, r3, ror #24
    5570:	91020000 	mrsls	r0, (UNDEF: 2)
    5574:	13090074 	movwne	r0, #36980	; 0x9074
    5578:	0100001c 	tsteq	r0, ip, lsl r0
    557c:	51a80658 			; <UNDEFINED> instruction: 0x51a80658
    5580:	00440001 	subeq	r0, r4, r1
    5584:	9c010000 	stcls	0, cr0, [r1], {-0}
    5588:	00000128 	andeq	r0, r0, r8, lsr #2
    558c:	0000300a 	andeq	r3, r0, sl
    5590:	12580100 	subsne	r0, r8, #0, 2
    5594:	00000041 	andeq	r0, r0, r1, asr #32
    5598:	0b6c9102 	bleq	1b299a8 <mailbuffer+0x1afc808>
    559c:	5a010069 	bpl	45748 <mailbuffer+0x185a8>
    55a0:	00002506 	andeq	r2, r0, r6, lsl #10
    55a4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    55a8:	1c0d0d00 	stcne	13, cr0, [sp], {-0}
    55ac:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    55b0:	01516c06 	cmpeq	r1, r6, lsl #24
    55b4:	00003c00 	andeq	r3, r0, r0, lsl #24
    55b8:	0a9c0100 	beq	fe7059c0 <_estack+0xf66f59c0>
    55bc:	00000030 	andeq	r0, r0, r0, lsr r0
    55c0:	41124e01 	tstmi	r2, r1, lsl #28
    55c4:	02000000 	andeq	r0, r0, #0
    55c8:	690b6c91 	stmdbvs	fp, {r0, r4, r7, sl, fp, sp, lr}
    55cc:	06500100 	ldrbeq	r0, [r0], -r0, lsl #2
    55d0:	00000025 	andeq	r0, r0, r5, lsr #32
    55d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	110e1b0e 	tstne	lr, lr, lsl #22
       c:	10061201 	andne	r1, r6, r1, lsl #4
      10:	02000017 	andeq	r0, r0, #23
      14:	0b0b0024 	bleq	2c00ac <mailbuffer+0x292f0c>
      18:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      1c:	24030000 	strcs	r0, [r3], #-0
      20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      24:	000e030b 	andeq	r0, lr, fp, lsl #6
      28:	00160400 	andseq	r0, r6, r0, lsl #8
      2c:	0b3a0e03 	bleq	e83840 <mailbuffer+0xe566a0>
      30:	0b390b3b 	bleq	e42d24 <mailbuffer+0xe15b84>
      34:	00001349 	andeq	r1, r0, r9, asr #6
      38:	0b000f05 	bleq	3c54 <_start-0x43ac>
      3c:	0013490b 	andseq	r4, r3, fp, lsl #18
      40:	01150600 	tsteq	r5, r0, lsl #12
      44:	13011927 	movwne	r1, #6439	; 0x1927
      48:	05070000 	streq	r0, [r7, #-0]
      4c:	00134900 	andseq	r4, r3, r0, lsl #18
      50:	000f0800 	andeq	r0, pc, r0, lsl #16
      54:	00000b0b 	andeq	r0, r0, fp, lsl #22
      58:	03011309 	movweq	r1, #4873	; 0x1309
      5c:	3a0b0b0e 	bcc	2c2c9c <mailbuffer+0x295afc>
      60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      64:	0013010b 	andseq	r0, r3, fp, lsl #2
      68:	000d0a00 	andeq	r0, sp, r0, lsl #20
      6c:	0b3a0803 	bleq	e82080 <mailbuffer+0xe54ee0>
      70:	0b390b3b 	bleq	e42d64 <mailbuffer+0xe15bc4>
      74:	0b381349 	bleq	e04da0 <mailbuffer+0xdd7c00>
      78:	350b0000 	strcc	r0, [fp, #-0]
      7c:	00134900 	andseq	r4, r3, r0, lsl #18
      80:	00340c00 	eorseq	r0, r4, r0, lsl #24
      84:	0b3a0e03 	bleq	e83898 <mailbuffer+0xe566f8>
      88:	0b390b3b 	bleq	e42d7c <mailbuffer+0xe15bdc>
      8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
      90:	260d0000 	strcs	r0, [sp], -r0
      94:	00134900 	andseq	r4, r3, r0, lsl #18
      98:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
      9c:	0b3a0e03 	bleq	e838b0 <mailbuffer+0xe56710>
      a0:	0b390b3b 	bleq	e42d94 <mailbuffer+0xe15bf4>
      a4:	01111927 	tsteq	r1, r7, lsr #18
      a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
      ac:	01194296 			; <UNDEFINED> instruction: 0x01194296
      b0:	0f000013 	svceq	0x00000013
      b4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
      b8:	0b3a0e03 	bleq	e838cc <mailbuffer+0xe5672c>
      bc:	0b390b3b 	bleq	e42db0 <mailbuffer+0xe15c10>
      c0:	01111927 	tsteq	r1, r7, lsr #18
      c4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
      c8:	01194296 			; <UNDEFINED> instruction: 0x01194296
      cc:	10000013 	andne	r0, r0, r3, lsl r0
      d0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
      d4:	0b3b0b3a 	bleq	ec2dc4 <mailbuffer+0xe95c24>
      d8:	13490b39 	movtne	r0, #39737	; 0x9b39
      dc:	00001802 	andeq	r1, r0, r2, lsl #16
      e0:	3f002e11 	svccc	0x00002e11
      e4:	3a0e0319 	bcc	380d50 <mailbuffer+0x353bb0>
      e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      ec:	1119270b 	tstne	r9, fp, lsl #14
      f0:	40061201 	andmi	r1, r6, r1, lsl #4
      f4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
      f8:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
      fc:	03193f00 	tsteq	r9, #0, 30
     100:	3b0b3a0e 	blcc	2ce940 <mailbuffer+0x2a17a0>
     104:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     108:	11134919 	tstne	r3, r9, lsl r9
     10c:	40061201 	andmi	r1, r6, r1, lsl #4
     110:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     114:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     118:	03193f01 	tsteq	r9, #1, 30
     11c:	3b0b3a0e 	blcc	2ce95c <mailbuffer+0x2a17bc>
     120:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     124:	11134919 	tstne	r3, r9, lsl r9
     128:	40061201 	andmi	r1, r6, r1, lsl #4
     12c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     130:	01000000 	mrseq	r0, (UNDEF: 0)
     134:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     138:	0e030b13 	vmoveq.32	d3[0], r0
     13c:	01110e1b 	tsteq	r1, fp, lsl lr
     140:	17100612 			; <UNDEFINED> instruction: 0x17100612
     144:	24020000 	strcs	r0, [r2], #-0
     148:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     14c:	0008030b 	andeq	r0, r8, fp, lsl #6
     150:	00240300 	eoreq	r0, r4, r0, lsl #6
     154:	0b3e0b0b 	bleq	f82d88 <mailbuffer+0xf55be8>
     158:	00000e03 	andeq	r0, r0, r3, lsl #28
     15c:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     160:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     164:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     168:	0b3b0b3a 	bleq	ec2e58 <mailbuffer+0xe95cb8>
     16c:	13490b39 	movtne	r0, #39737	; 0x9b39
     170:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     174:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
     178:	03193f00 	tsteq	r9, #0, 30
     17c:	3b0b3a0e 	blcc	2ce9bc <mailbuffer+0x2a181c>
     180:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     184:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     188:	97184006 	ldrls	r4, [r8, -r6]
     18c:	00001942 	andeq	r1, r0, r2, asr #18
     190:	3f012e07 	svccc	0x00012e07
     194:	3a0e0319 	bcc	380e00 <mailbuffer+0x353c60>
     198:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     19c:	1119270b 	tstne	r9, fp, lsl #14
     1a0:	40061201 	andmi	r1, r6, r1, lsl #4
     1a4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     1a8:	00001301 	andeq	r1, r0, r1, lsl #6
     1ac:	11010b08 	tstne	r1, r8, lsl #22
     1b0:	01061201 	tsteq	r6, r1, lsl #4
     1b4:	09000013 	stmdbeq	r0, {r0, r1, r4}
     1b8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     1bc:	0b3b0b3a 	bleq	ec2eac <mailbuffer+0xe95d0c>
     1c0:	13490b39 	movtne	r0, #39737	; 0x9b39
     1c4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     1c8:	0b0a0000 	bleq	2801d0 <mailbuffer+0x253030>
     1cc:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     1d0:	0b000006 	bleq	1f0 <_start-0x7e10>
     1d4:	0b0b000f 	bleq	2c0218 <mailbuffer+0x293078>
     1d8:	00001349 	andeq	r1, r0, r9, asr #6
     1dc:	0000350c 	andeq	r3, r0, ip, lsl #10
     1e0:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     1e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     1e8:	0b3b0b3a 	bleq	ec2ed8 <mailbuffer+0xe95d38>
     1ec:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     1f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     1f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     1f8:	00130119 	andseq	r0, r3, r9, lsl r1
     1fc:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
     200:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     204:	0b3b0b3a 	bleq	ec2ef4 <mailbuffer+0xe95d54>
     208:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     20c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     210:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     214:	00000019 	andeq	r0, r0, r9, lsl r0
     218:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     21c:	030b130e 	movweq	r1, #45838	; 0xb30e
     220:	110e1b0e 	tstne	lr, lr, lsl #22
     224:	10061201 	andne	r1, r6, r1, lsl #4
     228:	02000017 	andeq	r0, r0, #23
     22c:	0b0b0024 	bleq	2c02c4 <mailbuffer+0x293124>
     230:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     234:	24030000 	strcs	r0, [r3], #-0
     238:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     23c:	000e030b 	andeq	r0, lr, fp, lsl #6
     240:	000f0400 	andeq	r0, pc, r0, lsl #8
     244:	00000b0b 	andeq	r0, r0, fp, lsl #22
     248:	03001605 	movweq	r1, #1541	; 0x605
     24c:	3b0b3a0e 	blcc	2cea8c <mailbuffer+0x2a18ec>
     250:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     254:	06000013 			; <UNDEFINED> instruction: 0x06000013
     258:	13490035 	movtne	r0, #36917	; 0x9035
     25c:	13070000 	movwne	r0, #28672	; 0x7000
     260:	0b0e0301 	bleq	380e6c <mailbuffer+0x353ccc>
     264:	3b0b3a0b 	blcc	2cea98 <mailbuffer+0x2a18f8>
     268:	010b390b 	tsteq	fp, fp, lsl #18
     26c:	08000013 	stmdaeq	r0, {r0, r1, r4}
     270:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     274:	0b3b0b3a 	bleq	ec2f64 <mailbuffer+0xe95dc4>
     278:	13490b39 	movtne	r0, #39737	; 0x9b39
     27c:	00000b38 	andeq	r0, r0, r8, lsr fp
     280:	0b000f09 	bleq	3eac <_start-0x4154>
     284:	0013490b 	andseq	r4, r3, fp, lsl #18
     288:	00260a00 	eoreq	r0, r6, r0, lsl #20
     28c:	00001349 	andeq	r1, r0, r9, asr #6
     290:	2701150b 	strcs	r1, [r1, -fp, lsl #10]
     294:	00130119 	andseq	r0, r3, r9, lsl r1
     298:	00050c00 	andeq	r0, r5, r0, lsl #24
     29c:	00001349 	andeq	r1, r0, r9, asr #6
     2a0:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
     2a4:	00130113 	andseq	r0, r3, r3, lsl r1
     2a8:	00210e00 	eoreq	r0, r1, r0, lsl #28
     2ac:	0b2f1349 	bleq	bc4fd8 <mailbuffer+0xb97e38>
     2b0:	340f0000 	strcc	r0, [pc], #-0	; 2b8 <_start-0x7d48>
     2b4:	3a0e0300 	bcc	380ebc <mailbuffer+0x353d1c>
     2b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2bc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     2c0:	10000018 	andne	r0, r0, r8, lsl r0
     2c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2c8:	0b3b0b3a 	bleq	ec2fb8 <mailbuffer+0xe95e18>
     2cc:	13490b39 	movtne	r0, #39737	; 0x9b39
     2d0:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     2d4:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     2d8:	03193f01 	tsteq	r9, #1, 30
     2dc:	3b0b3a0e 	blcc	2ceb1c <mailbuffer+0x2a197c>
     2e0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     2e4:	11134919 	tstne	r3, r9, lsl r9
     2e8:	40061201 	andmi	r1, r6, r1, lsl #4
     2ec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     2f0:	00001301 	andeq	r1, r0, r1, lsl #6
     2f4:	03000512 	movweq	r0, #1298	; 0x512
     2f8:	3b0b3a0e 	blcc	2ceb38 <mailbuffer+0x2a1998>
     2fc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     300:	00180213 	andseq	r0, r8, r3, lsl r2
     304:	00341300 	eorseq	r1, r4, r0, lsl #6
     308:	0b3a0e03 	bleq	e83b1c <mailbuffer+0xe5697c>
     30c:	0b39053b 	bleq	e41800 <mailbuffer+0xe14660>
     310:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     314:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     318:	3a0e0301 	bcc	380f24 <mailbuffer+0x353d84>
     31c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     320:	1119270b 	tstne	r9, fp, lsl #14
     324:	40061201 	andmi	r1, r6, r1, lsl #4
     328:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     32c:	00001301 	andeq	r1, r0, r1, lsl #6
     330:	3f012e15 	svccc	0x00012e15
     334:	3a0e0319 	bcc	380fa0 <mailbuffer+0x353e00>
     338:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     33c:	1119270b 	tstne	r9, fp, lsl #14
     340:	40061201 	andmi	r1, r6, r1, lsl #4
     344:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     348:	00001301 	andeq	r1, r0, r1, lsl #6
     34c:	11010b16 	tstne	r1, r6, lsl fp
     350:	00061201 	andeq	r1, r6, r1, lsl #4
     354:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     358:	0b3a0e03 	bleq	e83b6c <mailbuffer+0xe569cc>
     35c:	0b390b3b 	bleq	e43050 <mailbuffer+0xe15eb0>
     360:	01111927 	tsteq	r1, r7, lsr #18
     364:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     368:	01194296 			; <UNDEFINED> instruction: 0x01194296
     36c:	18000013 	stmdane	r0, {r0, r1, r4}
     370:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     374:	0b3a0e03 	bleq	e83b88 <mailbuffer+0xe569e8>
     378:	0b390b3b 	bleq	e4306c <mailbuffer+0xe15ecc>
     37c:	01111927 	tsteq	r1, r7, lsr #18
     380:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     384:	01194296 			; <UNDEFINED> instruction: 0x01194296
     388:	19000013 	stmdbne	r0, {r0, r1, r4}
     38c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     390:	0b3b0b3a 	bleq	ec3080 <mailbuffer+0xe95ee0>
     394:	13490b39 	movtne	r0, #39737	; 0x9b39
     398:	00001802 	andeq	r1, r0, r2, lsl #16
     39c:	3f012e1a 	svccc	0x00012e1a
     3a0:	3a0e0319 	bcc	38100c <mailbuffer+0x353e6c>
     3a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3a8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     3ac:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     3b0:	96184006 	ldrls	r4, [r8], -r6
     3b4:	00001942 	andeq	r1, r0, r2, asr #18
     3b8:	01110100 	tsteq	r1, r0, lsl #2
     3bc:	0b130e25 	bleq	4c3c58 <mailbuffer+0x496ab8>
     3c0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     3c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     3c8:	00001710 	andeq	r1, r0, r0, lsl r7
     3cc:	0b002402 	bleq	93dc <__module_entries_end+0x1338>
     3d0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     3d4:	0300000e 	movweq	r0, #14
     3d8:	0b0b0024 	bleq	2c0470 <mailbuffer+0x2932d0>
     3dc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     3e0:	35040000 	strcc	r0, [r4, #-0]
     3e4:	00134900 	andseq	r4, r3, r0, lsl #18
     3e8:	00160500 	andseq	r0, r6, r0, lsl #10
     3ec:	0b3a0e03 	bleq	e83c00 <mailbuffer+0xe56a60>
     3f0:	0b390b3b 	bleq	e430e4 <mailbuffer+0xe15f44>
     3f4:	00001349 	andeq	r1, r0, r9, asr #6
     3f8:	03001606 	movweq	r1, #1542	; 0x606
     3fc:	3b0b3a0e 	blcc	2cec3c <mailbuffer+0x2a1a9c>
     400:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     404:	07000013 	smladeq	r0, r3, r0, r0
     408:	0b0b0117 	bleq	2c086c <mailbuffer+0x2936cc>
     40c:	0b3b0b3a 	bleq	ec30fc <mailbuffer+0xe95f5c>
     410:	13010b39 	movwne	r0, #6969	; 0x1b39
     414:	0d080000 	stceq	0, cr0, [r8, #-0]
     418:	3a0e0300 	bcc	381020 <mailbuffer+0x353e80>
     41c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     420:	0013490b 	andseq	r4, r3, fp, lsl #18
     424:	01010900 	tsteq	r1, r0, lsl #18
     428:	13011349 	movwne	r1, #4937	; 0x1349
     42c:	210a0000 	mrscs	r0, (UNDEF: 10)
     430:	2f134900 	svccs	0x00134900
     434:	0b00000b 	bleq	468 <_start-0x7b98>
     438:	0b0b0113 	bleq	2c088c <mailbuffer+0x2936ec>
     43c:	0b3b0b3a 	bleq	ec312c <mailbuffer+0xe95f8c>
     440:	13010b39 	movwne	r0, #6969	; 0x1b39
     444:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     448:	3a0e0300 	bcc	381050 <mailbuffer+0x353eb0>
     44c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     450:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     454:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     458:	0b0b000f 	bleq	2c049c <mailbuffer+0x2932fc>
     45c:	0f0e0000 	svceq	0x000e0000
     460:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     464:	0f000013 	svceq	0x00000013
     468:	13490026 	movtne	r0, #36902	; 0x9026
     46c:	13100000 	tstne	r0, #0
     470:	0b0e0301 	bleq	38107c <mailbuffer+0x353edc>
     474:	3b0b3a0b 	blcc	2ceca8 <mailbuffer+0x2a1b08>
     478:	010b390b 	tsteq	fp, fp, lsl #18
     47c:	11000013 	tstne	r0, r3, lsl r0
     480:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     484:	0b3b0b3a 	bleq	ec3174 <mailbuffer+0xe95fd4>
     488:	13490b39 	movtne	r0, #39737	; 0x9b39
     48c:	00000b38 	andeq	r0, r0, r8, lsr fp
     490:	03011312 	movweq	r1, #4882	; 0x1312
     494:	3a050b0e 	bcc	1430d4 <mailbuffer+0x115f34>
     498:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     49c:	0013010b 	andseq	r0, r3, fp, lsl #2
     4a0:	000d1300 	andeq	r1, sp, r0, lsl #6
     4a4:	0b3a0e03 	bleq	e83cb8 <mailbuffer+0xe56b18>
     4a8:	0b390b3b 	bleq	e4319c <mailbuffer+0xe15ffc>
     4ac:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     4b0:	15140000 	ldrne	r0, [r4, #-0]
     4b4:	00192700 	andseq	r2, r9, r0, lsl #14
     4b8:	01151500 	tsteq	r5, r0, lsl #10
     4bc:	13491927 	movtne	r1, #39207	; 0x9927
     4c0:	00001301 	andeq	r1, r0, r1, lsl #6
     4c4:	49000516 	stmdbmi	r0, {r1, r2, r4, r8, sl}
     4c8:	17000013 	smladne	r0, r3, r0, r0
     4cc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     4d0:	0b3a050b 	bleq	e81904 <mailbuffer+0xe54764>
     4d4:	0b39053b 	bleq	e419c8 <mailbuffer+0xe14828>
     4d8:	00001301 	andeq	r1, r0, r1, lsl #6
     4dc:	03000d18 	movweq	r0, #3352	; 0xd18
     4e0:	3b0b3a0e 	blcc	2ced20 <mailbuffer+0x2a1b80>
     4e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     4e8:	000b3813 	andeq	r3, fp, r3, lsl r8
     4ec:	000d1900 	andeq	r1, sp, r0, lsl #18
     4f0:	0b3a0e03 	bleq	e83d04 <mailbuffer+0xe56b64>
     4f4:	0b39053b 	bleq	e419e8 <mailbuffer+0xe14848>
     4f8:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     4fc:	131a0000 	tstne	sl, #0
     500:	0b0e0301 	bleq	38110c <mailbuffer+0x353f6c>
     504:	3b0b3a0b 	blcc	2ced38 <mailbuffer+0x2a1b98>
     508:	010b3905 	tsteq	fp, r5, lsl #18
     50c:	1b000013 	blne	560 <_start-0x7aa0>
     510:	0b0b0113 	bleq	2c0964 <mailbuffer+0x2937c4>
     514:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     518:	13010b39 	movwne	r0, #6969	; 0x1b39
     51c:	171c0000 	ldrne	r0, [ip, -r0]
     520:	3a0b0b01 	bcc	2c312c <mailbuffer+0x295f8c>
     524:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     528:	0013010b 	andseq	r0, r3, fp, lsl #2
     52c:	000d1d00 	andeq	r1, sp, r0, lsl #26
     530:	0b3a0e03 	bleq	e83d44 <mailbuffer+0xe56ba4>
     534:	0b39053b 	bleq	e41a28 <mailbuffer+0xe14888>
     538:	00001349 	andeq	r1, r0, r9, asr #6
     53c:	0300131e 	movweq	r1, #798	; 0x31e
     540:	00193c0e 	andseq	r3, r9, lr, lsl #24
     544:	01151f00 	tsteq	r5, r0, lsl #30
     548:	13011927 	movwne	r1, #6439	; 0x1927
     54c:	34200000 	strtcc	r0, [r0], #-0
     550:	3a0e0300 	bcc	381158 <mailbuffer+0x353fb8>
     554:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     558:	3f13490b 	svccc	0x0013490b
     55c:	00193c19 	andseq	r3, r9, r9, lsl ip
     560:	00342100 	eorseq	r2, r4, r0, lsl #2
     564:	0b3a0e03 	bleq	e83d78 <mailbuffer+0xe56bd8>
     568:	0b390b3b 	bleq	e4325c <mailbuffer+0xe160bc>
     56c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     570:	0000193c 	andeq	r1, r0, ip, lsr r9
     574:	3f012e22 	svccc	0x00012e22
     578:	3a0e0319 	bcc	3811e4 <mailbuffer+0x354044>
     57c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     580:	1119270b 	tstne	r9, fp, lsl #14
     584:	40061201 	andmi	r1, r6, r1, lsl #4
     588:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     58c:	00001301 	andeq	r1, r0, r1, lsl #6
     590:	03000523 	movweq	r0, #1315	; 0x523
     594:	3b0b3a0e 	blcc	2cedd4 <mailbuffer+0x2a1c34>
     598:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     59c:	00180213 	andseq	r0, r8, r3, lsl r2
     5a0:	00342400 	eorseq	r2, r4, r0, lsl #8
     5a4:	0b3a0e03 	bleq	e83db8 <mailbuffer+0xe56c18>
     5a8:	0b390b3b 	bleq	e4329c <mailbuffer+0xe160fc>
     5ac:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     5b0:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     5b4:	03193f01 	tsteq	r9, #1, 30
     5b8:	3b0b3a0e 	blcc	2cedf8 <mailbuffer+0x2a1c58>
     5bc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     5c0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     5c4:	97184006 	ldrls	r4, [r8, -r6]
     5c8:	00001942 	andeq	r1, r0, r2, asr #18
     5cc:	01110100 	tsteq	r1, r0, lsl #2
     5d0:	0b130e25 	bleq	4c3e6c <mailbuffer+0x496ccc>
     5d4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     5d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     5dc:	00001710 	andeq	r1, r0, r0, lsl r7
     5e0:	03001602 	movweq	r1, #1538	; 0x602
     5e4:	3b0b3a0e 	blcc	2cee24 <mailbuffer+0x2a1c84>
     5e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5ec:	03000013 	movweq	r0, #19
     5f0:	0b0b0024 	bleq	2c0688 <mailbuffer+0x2934e8>
     5f4:	0e030b3e 	vmoveq.16	d3[0], r0
     5f8:	24040000 	strcs	r0, [r4], #-0
     5fc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     600:	0008030b 	andeq	r0, r8, fp, lsl #6
     604:	00350500 	eorseq	r0, r5, r0, lsl #10
     608:	00001349 	andeq	r1, r0, r9, asr #6
     60c:	03001606 	movweq	r1, #1542	; 0x606
     610:	3b0b3a0e 	blcc	2cee50 <mailbuffer+0x2a1cb0>
     614:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     618:	07000013 	smladeq	r0, r3, r0, r0
     61c:	0b0b0117 	bleq	2c0a80 <mailbuffer+0x2938e0>
     620:	0b3b0b3a 	bleq	ec3310 <mailbuffer+0xe96170>
     624:	13010b39 	movwne	r0, #6969	; 0x1b39
     628:	0d080000 	stceq	0, cr0, [r8, #-0]
     62c:	3a0e0300 	bcc	381234 <mailbuffer+0x354094>
     630:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     634:	0013490b 	andseq	r4, r3, fp, lsl #18
     638:	01010900 	tsteq	r1, r0, lsl #18
     63c:	13011349 	movwne	r1, #4937	; 0x1349
     640:	210a0000 	mrscs	r0, (UNDEF: 10)
     644:	2f134900 	svccs	0x00134900
     648:	0b00000b 	bleq	67c <_start-0x7984>
     64c:	0b0b0113 	bleq	2c0aa0 <mailbuffer+0x293900>
     650:	0b3b0b3a 	bleq	ec3340 <mailbuffer+0xe961a0>
     654:	13010b39 	movwne	r0, #6969	; 0x1b39
     658:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     65c:	3a0e0300 	bcc	381264 <mailbuffer+0x3540c4>
     660:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     664:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     668:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     66c:	0b0b000f 	bleq	2c06b0 <mailbuffer+0x293510>
     670:	260e0000 	strcs	r0, [lr], -r0
     674:	00134900 	andseq	r4, r3, r0, lsl #18
     678:	000f0f00 	andeq	r0, pc, r0, lsl #30
     67c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     680:	13100000 	tstne	r0, #0
     684:	0b0e0301 	bleq	381290 <mailbuffer+0x3540f0>
     688:	3b0b3a0b 	blcc	2ceebc <mailbuffer+0x2a1d1c>
     68c:	010b390b 	tsteq	fp, fp, lsl #18
     690:	11000013 	tstne	r0, r3, lsl r0
     694:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     698:	0b3b0b3a 	bleq	ec3388 <mailbuffer+0xe961e8>
     69c:	13490b39 	movtne	r0, #39737	; 0x9b39
     6a0:	00000b38 	andeq	r0, r0, r8, lsr fp
     6a4:	03011312 	movweq	r1, #4882	; 0x1312
     6a8:	3a050b0e 	bcc	1432e8 <mailbuffer+0x116148>
     6ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6b0:	0013010b 	andseq	r0, r3, fp, lsl #2
     6b4:	000d1300 	andeq	r1, sp, r0, lsl #6
     6b8:	0b3a0e03 	bleq	e83ecc <mailbuffer+0xe56d2c>
     6bc:	0b390b3b 	bleq	e433b0 <mailbuffer+0xe16210>
     6c0:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     6c4:	15140000 	ldrne	r0, [r4, #-0]
     6c8:	00192700 	andseq	r2, r9, r0, lsl #14
     6cc:	01151500 	tsteq	r5, r0, lsl #10
     6d0:	13491927 	movtne	r1, #39207	; 0x9927
     6d4:	00001301 	andeq	r1, r0, r1, lsl #6
     6d8:	49000516 	stmdbmi	r0, {r1, r2, r4, r8, sl}
     6dc:	17000013 	smladne	r0, r3, r0, r0
     6e0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     6e4:	0b3a050b 	bleq	e81b18 <mailbuffer+0xe54978>
     6e8:	0b39053b 	bleq	e41bdc <mailbuffer+0xe14a3c>
     6ec:	00001301 	andeq	r1, r0, r1, lsl #6
     6f0:	03000d18 	movweq	r0, #3352	; 0xd18
     6f4:	3b0b3a0e 	blcc	2cef34 <mailbuffer+0x2a1d94>
     6f8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     6fc:	000b3813 	andeq	r3, fp, r3, lsl r8
     700:	000d1900 	andeq	r1, sp, r0, lsl #18
     704:	0b3a0e03 	bleq	e83f18 <mailbuffer+0xe56d78>
     708:	0b39053b 	bleq	e41bfc <mailbuffer+0xe14a5c>
     70c:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     710:	131a0000 	tstne	sl, #0
     714:	0b0e0301 	bleq	381320 <mailbuffer+0x354180>
     718:	3b0b3a0b 	blcc	2cef4c <mailbuffer+0x2a1dac>
     71c:	010b3905 	tsteq	fp, r5, lsl #18
     720:	1b000013 	blne	774 <_start-0x788c>
     724:	0b0b0113 	bleq	2c0b78 <mailbuffer+0x2939d8>
     728:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     72c:	13010b39 	movwne	r0, #6969	; 0x1b39
     730:	171c0000 	ldrne	r0, [ip, -r0]
     734:	3a0b0b01 	bcc	2c3340 <mailbuffer+0x2961a0>
     738:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     73c:	0013010b 	andseq	r0, r3, fp, lsl #2
     740:	000d1d00 	andeq	r1, sp, r0, lsl #26
     744:	0b3a0e03 	bleq	e83f58 <mailbuffer+0xe56db8>
     748:	0b39053b 	bleq	e41c3c <mailbuffer+0xe14a9c>
     74c:	00001349 	andeq	r1, r0, r9, asr #6
     750:	0300131e 	movweq	r1, #798	; 0x31e
     754:	00193c0e 	andseq	r3, r9, lr, lsl #24
     758:	01151f00 	tsteq	r5, r0, lsl #30
     75c:	13011927 	movwne	r1, #6439	; 0x1927
     760:	34200000 	strtcc	r0, [r0], #-0
     764:	3a0e0300 	bcc	38136c <mailbuffer+0x3541cc>
     768:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     76c:	3f13490b 	svccc	0x0013490b
     770:	00193c19 	andseq	r3, r9, r9, lsl ip
     774:	00262100 	eoreq	r2, r6, r0, lsl #2
     778:	34220000 	strtcc	r0, [r2], #-0
     77c:	3a0e0300 	bcc	381384 <mailbuffer+0x3541e4>
     780:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     784:	3f13490b 	svccc	0x0013490b
     788:	00193c19 	andseq	r3, r9, r9, lsl ip
     78c:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     790:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     794:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     798:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     79c:	01111349 	tsteq	r1, r9, asr #6
     7a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
     7a8:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     7ac:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     7b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     7b4:	13490b39 	movtne	r0, #39737	; 0x9b39
     7b8:	00001802 	andeq	r1, r0, r2, lsl #16
     7bc:	03003425 	movweq	r3, #1061	; 0x425
     7c0:	3b0b3a0e 	blcc	2cf000 <mailbuffer+0x2a1e60>
     7c4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     7c8:	00180213 	andseq	r0, r8, r3, lsl r2
     7cc:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     7d0:	0b3a0e03 	bleq	e83fe4 <mailbuffer+0xe56e44>
     7d4:	0b39053b 	bleq	e41cc8 <mailbuffer+0xe14b28>
     7d8:	13491927 	movtne	r1, #39207	; 0x9927
     7dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     7e0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     7e4:	00130119 	andseq	r0, r3, r9, lsl r1
     7e8:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
     7ec:	0b3a0e03 	bleq	e84000 <mailbuffer+0xe56e60>
     7f0:	0b39053b 	bleq	e41ce4 <mailbuffer+0xe14b44>
     7f4:	01111927 	tsteq	r1, r7, lsr #18
     7f8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7fc:	01194296 			; <UNDEFINED> instruction: 0x01194296
     800:	28000013 	stmdacs	r0, {r0, r1, r4}
     804:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     808:	0b3a0e03 	bleq	e8401c <mailbuffer+0xe56e7c>
     80c:	0b39053b 	bleq	e41d00 <mailbuffer+0xe14b60>
     810:	01111927 	tsteq	r1, r7, lsr #18
     814:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     818:	01194296 			; <UNDEFINED> instruction: 0x01194296
     81c:	29000013 	stmdbcs	r0, {r0, r1, r4}
     820:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     824:	0b3a0e03 	bleq	e84038 <mailbuffer+0xe56e98>
     828:	0b39053b 	bleq	e41d1c <mailbuffer+0xe14b7c>
     82c:	13491927 	movtne	r1, #39207	; 0x9927
     830:	06120111 			; <UNDEFINED> instruction: 0x06120111
     834:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     838:	00130119 	andseq	r0, r3, r9, lsl r1
     83c:	012e2a00 			; <UNDEFINED> instruction: 0x012e2a00
     840:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     844:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     848:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     84c:	01111349 	tsteq	r1, r9, asr #6
     850:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     854:	00194296 	mulseq	r9, r6, r2
     858:	11010000 	mrsne	r0, (UNDEF: 1)
     85c:	130e2501 	movwne	r2, #58625	; 0xe501
     860:	1b0e030b 	blne	381494 <mailbuffer+0x3542f4>
     864:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     868:	00171006 	andseq	r1, r7, r6
     86c:	00240200 	eoreq	r0, r4, r0, lsl #4
     870:	0b3e0b0b 	bleq	f834a4 <mailbuffer+0xf56304>
     874:	00000e03 	andeq	r0, r0, r3, lsl #28
     878:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
     87c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     880:	13490035 	movtne	r0, #36917	; 0x9035
     884:	24050000 	strcs	r0, [r5], #-0
     888:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     88c:	0008030b 	andeq	r0, r8, fp, lsl #6
     890:	00160600 	andseq	r0, r6, r0, lsl #12
     894:	0b3a0e03 	bleq	e840a8 <mailbuffer+0xe56f08>
     898:	0b390b3b 	bleq	e4358c <mailbuffer+0xe163ec>
     89c:	00001349 	andeq	r1, r0, r9, asr #6
     8a0:	0b000f07 	bleq	44c4 <_start-0x3b3c>
     8a4:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     8a8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     8ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     8b4:	17090000 	strne	r0, [r9, -r0]
     8b8:	3a0b0b01 	bcc	2c34c4 <mailbuffer+0x296324>
     8bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8c0:	0013010b 	andseq	r0, r3, fp, lsl #2
     8c4:	000d0a00 	andeq	r0, sp, r0, lsl #20
     8c8:	0b3a0e03 	bleq	e840dc <mailbuffer+0xe56f3c>
     8cc:	0b390b3b 	bleq	e435c0 <mailbuffer+0xe16420>
     8d0:	00001349 	andeq	r1, r0, r9, asr #6
     8d4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     8d8:	00130113 	andseq	r0, r3, r3, lsl r1
     8dc:	00210c00 	eoreq	r0, r1, r0, lsl #24
     8e0:	0b2f1349 	bleq	bc560c <mailbuffer+0xb9846c>
     8e4:	130d0000 	movwne	r0, #53248	; 0xd000
     8e8:	3a0b0b01 	bcc	2c34f4 <mailbuffer+0x296354>
     8ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8f0:	0013010b 	andseq	r0, r3, fp, lsl #2
     8f4:	000d0e00 	andeq	r0, sp, r0, lsl #28
     8f8:	0b3a0e03 	bleq	e8410c <mailbuffer+0xe56f6c>
     8fc:	0b390b3b 	bleq	e435f0 <mailbuffer+0xe16450>
     900:	0b381349 	bleq	e0562c <mailbuffer+0xdd848c>
     904:	130f0000 	movwne	r0, #61440	; 0xf000
     908:	0b0e0301 	bleq	381514 <mailbuffer+0x354374>
     90c:	3b0b3a0b 	blcc	2cf140 <mailbuffer+0x2a1fa0>
     910:	010b390b 	tsteq	fp, fp, lsl #18
     914:	10000013 	andne	r0, r0, r3, lsl r0
     918:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     91c:	0b3b0b3a 	bleq	ec360c <mailbuffer+0xe9646c>
     920:	13490b39 	movtne	r0, #39737	; 0x9b39
     924:	00000b38 	andeq	r0, r0, r8, lsr fp
     928:	0b000f11 	bleq	4574 <_start-0x3a8c>
     92c:	0013490b 	andseq	r4, r3, fp, lsl #18
     930:	01131200 	tsteq	r3, r0, lsl #4
     934:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
     938:	0b3b0b3a 	bleq	ec3628 <mailbuffer+0xe96488>
     93c:	13010b39 	movwne	r0, #6969	; 0x1b39
     940:	0d130000 	ldceq	0, cr0, [r3, #-0]
     944:	3a0e0300 	bcc	38154c <mailbuffer+0x3543ac>
     948:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     94c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     950:	14000005 	strne	r0, [r0], #-5
     954:	19270015 	stmdbne	r7!, {r0, r2, r4}
     958:	15150000 	ldrne	r0, [r5, #-0]
     95c:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
     960:	00130113 	andseq	r0, r3, r3, lsl r1
     964:	00051600 	andeq	r1, r5, r0, lsl #12
     968:	00001349 	andeq	r1, r0, r9, asr #6
     96c:	03011317 	movweq	r1, #4887	; 0x1317
     970:	3a050b0e 	bcc	1435b0 <mailbuffer+0x116410>
     974:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     978:	0013010b 	andseq	r0, r3, fp, lsl #2
     97c:	000d1800 	andeq	r1, sp, r0, lsl #16
     980:	0b3a0e03 	bleq	e84194 <mailbuffer+0xe56ff4>
     984:	0b39053b 	bleq	e41e78 <mailbuffer+0xe14cd8>
     988:	0b381349 	bleq	e056b4 <mailbuffer+0xdd8514>
     98c:	0d190000 	ldceq	0, cr0, [r9, #-0]
     990:	3a0e0300 	bcc	381598 <mailbuffer+0x3543f8>
     994:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     998:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     99c:	1a000005 	bne	9b8 <_start-0x7648>
     9a0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     9a4:	0b3a0b0b 	bleq	e835d8 <mailbuffer+0xe56438>
     9a8:	0b39053b 	bleq	e41e9c <mailbuffer+0xe14cfc>
     9ac:	00001301 	andeq	r1, r0, r1, lsl #6
     9b0:	0b01131b 	bleq	45624 <mailbuffer+0x18484>
     9b4:	3b0b3a0b 	blcc	2cf1e8 <mailbuffer+0x2a2048>
     9b8:	010b3905 	tsteq	fp, r5, lsl #18
     9bc:	1c000013 	stcne	0, cr0, [r0], {19}
     9c0:	0b0b0117 	bleq	2c0e24 <mailbuffer+0x293c84>
     9c4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9c8:	13010b39 	movwne	r0, #6969	; 0x1b39
     9cc:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
     9d0:	3a0e0300 	bcc	3815d8 <mailbuffer+0x354438>
     9d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9d8:	0013490b 	andseq	r4, r3, fp, lsl #18
     9dc:	00131e00 	andseq	r1, r3, r0, lsl #28
     9e0:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
     9e4:	151f0000 	ldrne	r0, [pc, #-0]	; 9ec <_start-0x7614>
     9e8:	01192701 	tsteq	r9, r1, lsl #14
     9ec:	20000013 	andcs	r0, r0, r3, lsl r0
     9f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     9f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9f8:	13490b39 	movtne	r0, #39737	; 0x9b39
     9fc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     a00:	34210000 	strtcc	r0, [r1], #-0
     a04:	3a0e0300 	bcc	38160c <mailbuffer+0x35446c>
     a08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a0c:	3f13490b 	svccc	0x0013490b
     a10:	00193c19 	andseq	r3, r9, r9, lsl ip
     a14:	00342200 	eorseq	r2, r4, r0, lsl #4
     a18:	0b3a0e03 	bleq	e8422c <mailbuffer+0xe5708c>
     a1c:	0b390b3b 	bleq	e43710 <mailbuffer+0xe16570>
     a20:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     a24:	00001802 	andeq	r1, r0, r2, lsl #16
     a28:	03003423 	movweq	r3, #1059	; 0x423
     a2c:	3b0b3a0e 	blcc	2cf26c <mailbuffer+0x2a20cc>
     a30:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a34:	00180213 	andseq	r0, r8, r3, lsl r2
     a38:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     a3c:	0b3a0e03 	bleq	e84250 <mailbuffer+0xe570b0>
     a40:	0b39053b 	bleq	e41f34 <mailbuffer+0xe14d94>
     a44:	01111927 	tsteq	r1, r7, lsr #18
     a48:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     a4c:	01194296 			; <UNDEFINED> instruction: 0x01194296
     a50:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     a54:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     a58:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a5c:	13490b39 	movtne	r0, #39737	; 0x9b39
     a60:	00001802 	andeq	r1, r0, r2, lsl #16
     a64:	03012e26 	movweq	r2, #7718	; 0x1e26
     a68:	3b0b3a0e 	blcc	2cf2a8 <mailbuffer+0x2a2108>
     a6c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a70:	11134919 	tstne	r3, r9, lsl r9
     a74:	40061201 	andmi	r1, r6, r1, lsl #4
     a78:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     a7c:	00001301 	andeq	r1, r0, r1, lsl #6
     a80:	03003427 	movweq	r3, #1063	; 0x427
     a84:	3b0b3a0e 	blcc	2cf2c4 <mailbuffer+0x2a2124>
     a88:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a8c:	00180213 	andseq	r0, r8, r3, lsl r2
     a90:	010b2800 	tsteq	fp, r0, lsl #16
     a94:	06120111 			; <UNDEFINED> instruction: 0x06120111
     a98:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     a9c:	03193f00 	tsteq	r9, #0, 30
     aa0:	3b0b3a0e 	blcc	2cf2e0 <mailbuffer+0x2a2140>
     aa4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     aa8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     aac:	97184006 	ldrls	r4, [r8, -r6]
     ab0:	00001942 	andeq	r1, r0, r2, asr #18
     ab4:	3f012e2a 	svccc	0x00012e2a
     ab8:	3a0e0319 	bcc	381724 <mailbuffer+0x354584>
     abc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ac0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     ac4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ac8:	96184006 	ldrls	r4, [r8], -r6
     acc:	13011942 	movwne	r1, #6466	; 0x1942
     ad0:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     ad4:	03193f01 	tsteq	r9, #1, 30
     ad8:	3b0b3a0e 	blcc	2cf318 <mailbuffer+0x2a2178>
     adc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     ae0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     ae4:	97184006 	ldrls	r4, [r8, -r6]
     ae8:	13011942 	movwne	r1, #6466	; 0x1942
     aec:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     af0:	03193f01 	tsteq	r9, #1, 30
     af4:	3b0b3a0e 	blcc	2cf334 <mailbuffer+0x2a2194>
     af8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     afc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     b00:	96184006 	ldrls	r4, [r8], -r6
     b04:	13011942 	movwne	r1, #6466	; 0x1942
     b08:	0b2d0000 	bleq	b40b10 <mailbuffer+0xb13970>
     b0c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     b10:	00130106 	andseq	r0, r3, r6, lsl #2
     b14:	002e2e00 	eoreq	r2, lr, r0, lsl #28
     b18:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     b1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b20:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     b24:	01111349 	tsteq	r1, r9, asr #6
     b28:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b2c:	00194297 	mulseq	r9, r7, r2
     b30:	012e2f00 			; <UNDEFINED> instruction: 0x012e2f00
     b34:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     b38:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b3c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     b40:	01111349 	tsteq	r1, r9, asr #6
     b44:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b48:	01194297 			; <UNDEFINED> instruction: 0x01194297
     b4c:	30000013 	andcc	r0, r0, r3, lsl r0
     b50:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     b54:	0b3a0e03 	bleq	e84368 <mailbuffer+0xe571c8>
     b58:	0b39053b 	bleq	e4204c <mailbuffer+0xe14eac>
     b5c:	01111927 	tsteq	r1, r7, lsr #18
     b60:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b64:	00194296 	mulseq	r9, r6, r2
     b68:	00053100 	andeq	r3, r5, r0, lsl #2
     b6c:	0b3a0e03 	bleq	e84380 <mailbuffer+0xe571e0>
     b70:	0539053b 	ldreq	r0, [r9, #-1339]!	; 0xfffffac5
     b74:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     b78:	01000000 	mrseq	r0, (UNDEF: 0)
     b7c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     b80:	0e030b13 	vmoveq.32	d3[0], r0
     b84:	01110e1b 	tsteq	r1, fp, lsl lr
     b88:	17100612 			; <UNDEFINED> instruction: 0x17100612
     b8c:	16020000 	strne	r0, [r2], -r0
     b90:	3a0e0300 	bcc	381798 <mailbuffer+0x3545f8>
     b94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b98:	0013490b 	andseq	r4, r3, fp, lsl #18
     b9c:	000f0300 	andeq	r0, pc, r0, lsl #6
     ba0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ba4:	15040000 	strne	r0, [r4, #-0]
     ba8:	01192701 	tsteq	r9, r1, lsl #14
     bac:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     bb0:	13490005 	movtne	r0, #36869	; 0x9005
     bb4:	24060000 	strcs	r0, [r6], #-0
     bb8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     bbc:	000e030b 	andeq	r0, lr, fp, lsl #6
     bc0:	00260700 	eoreq	r0, r6, r0, lsl #14
     bc4:	00001349 	andeq	r1, r0, r9, asr #6
     bc8:	0b000f08 	bleq	47f0 <_start-0x3810>
     bcc:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     bd0:	0b0b0113 	bleq	2c1024 <mailbuffer+0x293e84>
     bd4:	0b3b0b3a 	bleq	ec38c4 <mailbuffer+0xe96724>
     bd8:	13010b39 	movwne	r0, #6969	; 0x1b39
     bdc:	0d0a0000 	stceq	0, cr0, [sl, #-0]
     be0:	3a0e0300 	bcc	3817e8 <mailbuffer+0x354648>
     be4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     be8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     bec:	0b00000b 	bleq	c20 <_start-0x73e0>
     bf0:	13490101 	movtne	r0, #37121	; 0x9101
     bf4:	00001301 	andeq	r1, r0, r1, lsl #6
     bf8:	4900210c 	stmdbmi	r0, {r2, r3, r8, sp}
     bfc:	000b2f13 	andeq	r2, fp, r3, lsl pc
     c00:	00340d00 	eorseq	r0, r4, r0, lsl #26
     c04:	0b3a0e03 	bleq	e84418 <mailbuffer+0xe57278>
     c08:	0b390b3b 	bleq	e438fc <mailbuffer+0xe1675c>
     c0c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c10:	350e0000 	strcc	r0, [lr, #-0]
     c14:	00134900 	andseq	r4, r3, r0, lsl #18
     c18:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
     c1c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c20:	0b3b0b3a 	bleq	ec3910 <mailbuffer+0xe96770>
     c24:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     c28:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c2c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c30:	00130119 	andseq	r0, r3, r9, lsl r1
     c34:	00051000 	andeq	r1, r5, r0
     c38:	0b3a0803 	bleq	e82c4c <mailbuffer+0xe55aac>
     c3c:	0b390b3b 	bleq	e43930 <mailbuffer+0xe16790>
     c40:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c44:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     c48:	03193f01 	tsteq	r9, #1, 30
     c4c:	3b0b3a0e 	blcc	2cf48c <mailbuffer+0x2a22ec>
     c50:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     c54:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     c58:	96184006 	ldrls	r4, [r8], -r6
     c5c:	13011942 	movwne	r1, #6466	; 0x1942
     c60:	05120000 	ldreq	r0, [r2, #-0]
     c64:	3a0e0300 	bcc	38186c <mailbuffer+0x3546cc>
     c68:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c6c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c70:	13000018 	movwne	r0, #24
     c74:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     c78:	0b3a0e03 	bleq	e8448c <mailbuffer+0xe572ec>
     c7c:	0b390b3b 	bleq	e43970 <mailbuffer+0xe167d0>
     c80:	01111927 	tsteq	r1, r7, lsr #18
     c84:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     c88:	00194297 	mulseq	r9, r7, r2
     c8c:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     c90:	0b3a0e03 	bleq	e844a4 <mailbuffer+0xe57304>
     c94:	0b390b3b 	bleq	e43988 <mailbuffer+0xe167e8>
     c98:	01111927 	tsteq	r1, r7, lsr #18
     c9c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ca0:	00194296 	mulseq	r9, r6, r2
     ca4:	010b1500 	tsteq	fp, r0, lsl #10
     ca8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     cac:	34160000 	ldrcc	r0, [r6], #-0
     cb0:	3a080300 	bcc	2018b8 <mailbuffer+0x1d4718>
     cb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     cb8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     cbc:	00000018 	andeq	r0, r0, r8, lsl r0
     cc0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     cc4:	030b130e 	movweq	r1, #45838	; 0xb30e
     cc8:	110e1b0e 	tstne	lr, lr, lsl #22
     ccc:	10061201 	andne	r1, r6, r1, lsl #4
     cd0:	02000017 	andeq	r0, r0, #23
     cd4:	0e030104 	adfeqs	f0, f3, f4
     cd8:	0b0b0b3e 	bleq	2c39d8 <mailbuffer+0x296838>
     cdc:	0b3a1349 	bleq	e85a08 <mailbuffer+0xe58868>
     ce0:	0b390b3b 	bleq	e439d4 <mailbuffer+0xe16834>
     ce4:	00001301 	andeq	r1, r0, r1, lsl #6
     ce8:	03002803 	movweq	r2, #2051	; 0x803
     cec:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     cf0:	00240400 	eoreq	r0, r4, r0, lsl #8
     cf4:	0b3e0b0b 	bleq	f83928 <mailbuffer+0xf56788>
     cf8:	00000e03 	andeq	r0, r0, r3, lsl #28
     cfc:	0b011305 	bleq	45918 <mailbuffer+0x18778>
     d00:	3b0b3a0b 	blcc	2cf534 <mailbuffer+0x2a2394>
     d04:	010b390b 	tsteq	fp, fp, lsl #18
     d08:	06000013 			; <UNDEFINED> instruction: 0x06000013
     d0c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     d10:	0b3b0b3a 	bleq	ec3a00 <mailbuffer+0xe96860>
     d14:	13490b39 	movtne	r0, #39737	; 0x9b39
     d18:	00000b38 	andeq	r0, r0, r8, lsr fp
     d1c:	49010107 	stmdbmi	r1, {r0, r1, r2, r8}
     d20:	00130113 	andseq	r0, r3, r3, lsl r1
     d24:	00210800 	eoreq	r0, r1, r0, lsl #16
     d28:	0b2f1349 	bleq	bc5a54 <mailbuffer+0xb988b4>
     d2c:	16090000 	strne	r0, [r9], -r0
     d30:	3a0e0300 	bcc	381938 <mailbuffer+0x354798>
     d34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d38:	0013490b 	andseq	r4, r3, fp, lsl #18
     d3c:	00350a00 	eorseq	r0, r5, r0, lsl #20
     d40:	00001349 	andeq	r1, r0, r9, asr #6
     d44:	0300340b 	movweq	r3, #1035	; 0x40b
     d48:	3b0b3a0e 	blcc	2cf588 <mailbuffer+0x2a23e8>
     d4c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d50:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     d54:	0c000018 	stceq	0, cr0, [r0], {24}
     d58:	0b0b000f 	bleq	2c0d9c <mailbuffer+0x293bfc>
     d5c:	00001349 	andeq	r1, r0, r9, asr #6
     d60:	4900260d 	stmdbmi	r0, {r0, r2, r3, r9, sl, sp}
     d64:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     d68:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     d6c:	0b3a0e03 	bleq	e84580 <mailbuffer+0xe573e0>
     d70:	0b390b3b 	bleq	e43a64 <mailbuffer+0xe168c4>
     d74:	01111927 	tsteq	r1, r7, lsr #18
     d78:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d7c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     d80:	0f000013 	svceq	0x00000013
     d84:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     d88:	0b3b0b3a 	bleq	ec3a78 <mailbuffer+0xe968d8>
     d8c:	13490b39 	movtne	r0, #39737	; 0x9b39
     d90:	00001802 	andeq	r1, r0, r2, lsl #16
     d94:	03003410 	movweq	r3, #1040	; 0x410
     d98:	3b0b3a0e 	blcc	2cf5d8 <mailbuffer+0x2a2438>
     d9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     da0:	00180213 	andseq	r0, r8, r3, lsl r2
     da4:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
     da8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     dac:	0b3b0b3a 	bleq	ec3a9c <mailbuffer+0xe968fc>
     db0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     db4:	01111349 	tsteq	r1, r9, asr #6
     db8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     dbc:	01194297 			; <UNDEFINED> instruction: 0x01194297
     dc0:	12000013 	andne	r0, r0, #19
     dc4:	0b0b0024 	bleq	2c0e5c <mailbuffer+0x293cbc>
     dc8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     dcc:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     dd0:	03193f01 	tsteq	r9, #1, 30
     dd4:	3b0b3a0e 	blcc	2cf614 <mailbuffer+0x2a2474>
     dd8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     ddc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     de0:	96184006 	ldrls	r4, [r8], -r6
     de4:	13011942 	movwne	r1, #6466	; 0x1942
     de8:	05140000 	ldreq	r0, [r4, #-0]
     dec:	3a080300 	bcc	2019f4 <mailbuffer+0x1d4854>
     df0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     df4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     df8:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
     dfc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e00:	0b3a0e03 	bleq	e84614 <mailbuffer+0xe57474>
     e04:	0b390b3b 	bleq	e43af8 <mailbuffer+0xe16958>
     e08:	01111927 	tsteq	r1, r7, lsr #18
     e0c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     e10:	00194297 	mulseq	r9, r7, r2
     e14:	00341600 	eorseq	r1, r4, r0, lsl #12
     e18:	0b3a0803 	bleq	e82e2c <mailbuffer+0xe55c8c>
     e1c:	0b390b3b 	bleq	e43b10 <mailbuffer+0xe16970>
     e20:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     e24:	01000000 	mrseq	r0, (UNDEF: 0)
     e28:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     e2c:	0e030b13 	vmoveq.32	d3[0], r0
     e30:	01110e1b 	tsteq	r1, fp, lsl lr
     e34:	17100612 			; <UNDEFINED> instruction: 0x17100612
     e38:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
     e3c:	03193f01 	tsteq	r9, #1, 30
     e40:	3b0b3a0e 	blcc	2cf680 <mailbuffer+0x2a24e0>
     e44:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     e48:	11134919 	tstne	r3, r9, lsl r9
     e4c:	40061201 	andmi	r1, r6, r1, lsl #4
     e50:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     e54:	00001301 	andeq	r1, r0, r1, lsl #6
     e58:	03000503 	movweq	r0, #1283	; 0x503
     e5c:	3b0b3a0e 	blcc	2cf69c <mailbuffer+0x2a24fc>
     e60:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e64:	00180213 	andseq	r0, r8, r3, lsl r2
     e68:	00340400 	eorseq	r0, r4, r0, lsl #8
     e6c:	0b3a0803 	bleq	e82e80 <mailbuffer+0xe55ce0>
     e70:	0b390b3b 	bleq	e43b64 <mailbuffer+0xe169c4>
     e74:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     e78:	34050000 	strcc	r0, [r5], #-0
     e7c:	3a0e0300 	bcc	381a84 <mailbuffer+0x3548e4>
     e80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e84:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e88:	06000018 			; <UNDEFINED> instruction: 0x06000018
     e8c:	0b0b0024 	bleq	2c0f24 <mailbuffer+0x293d84>
     e90:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     e94:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
     e98:	03193f01 	tsteq	r9, #1, 30
     e9c:	3b0b3a0e 	blcc	2cf6dc <mailbuffer+0x2a253c>
     ea0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     ea4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     ea8:	96184006 	ldrls	r4, [r8], -r6
     eac:	00001942 	andeq	r1, r0, r2, asr #18
     eb0:	01110100 	tsteq	r1, r0, lsl #2
     eb4:	0b130e25 	bleq	4c4750 <mailbuffer+0x4975b0>
     eb8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     ebc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ec0:	00001710 	andeq	r1, r0, r0, lsl r7
     ec4:	03003402 	movweq	r3, #1026	; 0x402
     ec8:	3b0b3a0e 	blcc	2cf708 <mailbuffer+0x2a2568>
     ecc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ed0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     ed4:	03000018 	movweq	r0, #24
     ed8:	0b0b0024 	bleq	2c0f70 <mailbuffer+0x293dd0>
     edc:	0e030b3e 	vmoveq.16	d3[0], r0
     ee0:	26040000 	strcs	r0, [r4], -r0
     ee4:	00134900 	andseq	r4, r3, r0, lsl #18
     ee8:	01010500 	tsteq	r1, r0, lsl #10
     eec:	13011349 	movwne	r1, #4937	; 0x1349
     ef0:	21060000 	mrscs	r0, (UNDEF: 6)
     ef4:	2f134900 	svccs	0x00134900
     ef8:	0700000b 	streq	r0, [r0, -fp]
     efc:	0b0b0024 	bleq	2c0f94 <mailbuffer+0x293df4>
     f00:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     f04:	35080000 	strcc	r0, [r8, #-0]
     f08:	00134900 	andseq	r4, r3, r0, lsl #18
     f0c:	00340900 	eorseq	r0, r4, r0, lsl #18
     f10:	0b3a0e03 	bleq	e84724 <mailbuffer+0xe57584>
     f14:	0b390b3b 	bleq	e43c08 <mailbuffer+0xe16a68>
     f18:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     f1c:	020b0188 	andeq	r0, fp, #136, 2	; 0x22
     f20:	0a000018 	beq	f88 <_start-0x7078>
     f24:	0b0b000f 	bleq	2c0f68 <mailbuffer+0x293dc8>
     f28:	00001349 	andeq	r1, r0, r9, asr #6
     f2c:	3f012e0b 	svccc	0x00012e0b
     f30:	3a0e0319 	bcc	381b9c <mailbuffer+0x3549fc>
     f34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f38:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     f3c:	96184006 	ldrls	r4, [r8], -r6
     f40:	13011942 	movwne	r1, #6466	; 0x1942
     f44:	0b0c0000 	bleq	300f4c <mailbuffer+0x2d3dac>
     f48:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     f4c:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
     f50:	08030034 	stmdaeq	r3, {r2, r4, r5}
     f54:	0b3b0b3a 	bleq	ec3c44 <mailbuffer+0xe96aa4>
     f58:	13490b39 	movtne	r0, #39737	; 0x9b39
     f5c:	00001802 	andeq	r1, r0, r2, lsl #16
     f60:	3f012e0e 	svccc	0x00012e0e
     f64:	3a0e0319 	bcc	381bd0 <mailbuffer+0x354a30>
     f68:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f6c:	1119270b 	tstne	r9, fp, lsl #14
     f70:	40061201 	andmi	r1, r6, r1, lsl #4
     f74:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     f78:	00001301 	andeq	r1, r0, r1, lsl #6
     f7c:	0300050f 	movweq	r0, #1295	; 0x50f
     f80:	3b0b3a0e 	blcc	2cf7c0 <mailbuffer+0x2a2620>
     f84:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f88:	00180213 	andseq	r0, r8, r3, lsl r2
     f8c:	00341000 	eorseq	r1, r4, r0
     f90:	0b3a0e03 	bleq	e847a4 <mailbuffer+0xe57604>
     f94:	0b390b3b 	bleq	e43c88 <mailbuffer+0xe16ae8>
     f98:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     f9c:	05110000 	ldreq	r0, [r1, #-0]
     fa0:	3a080300 	bcc	201ba8 <mailbuffer+0x1d4a08>
     fa4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fa8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fac:	12000018 	andne	r0, r0, #24
     fb0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     fb4:	0b3a0e03 	bleq	e847c8 <mailbuffer+0xe57628>
     fb8:	0b390b3b 	bleq	e43cac <mailbuffer+0xe16b0c>
     fbc:	01111927 	tsteq	r1, r7, lsr #18
     fc0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     fc4:	01194297 			; <UNDEFINED> instruction: 0x01194297
     fc8:	13000013 	movwne	r0, #19
     fcc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     fd0:	0b3a0e03 	bleq	e847e4 <mailbuffer+0xe57644>
     fd4:	0b390b3b 	bleq	e43cc8 <mailbuffer+0xe16b28>
     fd8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fdc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     fe0:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
     fe4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     fe8:	0b3a0e03 	bleq	e847fc <mailbuffer+0xe5765c>
     fec:	0b390b3b 	bleq	e43ce0 <mailbuffer+0xe16b40>
     ff0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ff4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     ff8:	00000019 	andeq	r0, r0, r9, lsl r0
     ffc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1000:	030b130e 	movweq	r1, #45838	; 0xb30e
    1004:	110e1b0e 	tstne	lr, lr, lsl #22
    1008:	10061201 	andne	r1, r6, r1, lsl #4
    100c:	02000017 	andeq	r0, r0, #23
    1010:	0b0b0024 	bleq	2c10a8 <mailbuffer+0x293f08>
    1014:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1018:	16030000 	strne	r0, [r3], -r0
    101c:	3a0e0300 	bcc	381c24 <mailbuffer+0x354a84>
    1020:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1024:	0013490b 	andseq	r4, r3, fp, lsl #18
    1028:	00240400 	eoreq	r0, r4, r0, lsl #8
    102c:	0b3e0b0b 	bleq	f83c60 <mailbuffer+0xf56ac0>
    1030:	00000e03 	andeq	r0, r0, r3, lsl #28
    1034:	0b000f05 	bleq	4c50 <_start-0x33b0>
    1038:	0600000b 	streq	r0, [r0], -fp
    103c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1040:	0b3b0b3a 	bleq	ec3d30 <mailbuffer+0xe96b90>
    1044:	13490b39 	movtne	r0, #39737	; 0x9b39
    1048:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    104c:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    1050:	03193f00 	tsteq	r9, #0, 30
    1054:	3b0b3a0e 	blcc	2cf894 <mailbuffer+0x2a26f4>
    1058:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    105c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1060:	97184006 	ldrls	r4, [r8, -r6]
    1064:	00001942 	andeq	r1, r0, r2, asr #18
    1068:	3f012e08 	svccc	0x00012e08
    106c:	3a0e0319 	bcc	381cd8 <mailbuffer+0x354b38>
    1070:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1074:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1078:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    107c:	97184006 	ldrls	r4, [r8, -r6]
    1080:	13011942 	movwne	r1, #6466	; 0x1942
    1084:	05090000 	streq	r0, [r9, #-0]
    1088:	3a080300 	bcc	201c90 <mailbuffer+0x1d4af0>
    108c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1090:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1094:	0a000018 	beq	10fc <_start-0x6f04>
    1098:	08030034 	stmdaeq	r3, {r2, r4, r5}
    109c:	0b3b0b3a 	bleq	ec3d8c <mailbuffer+0xe96bec>
    10a0:	13490b39 	movtne	r0, #39737	; 0x9b39
    10a4:	00001802 	andeq	r1, r0, r2, lsl #16
    10a8:	0b000f0b 	bleq	4cdc <_start-0x3324>
    10ac:	0013490b 	andseq	r4, r3, fp, lsl #18
    10b0:	00260c00 	eoreq	r0, r6, r0, lsl #24
    10b4:	00001349 	andeq	r1, r0, r9, asr #6
    10b8:	0300050d 	movweq	r0, #1293	; 0x50d
    10bc:	3b0b3a0e 	blcc	2cf8fc <mailbuffer+0x2a275c>
    10c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    10c4:	00180213 	andseq	r0, r8, r3, lsl r2
    10c8:	00260e00 	eoreq	r0, r6, r0, lsl #28
    10cc:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    10d0:	03193f01 	tsteq	r9, #1, 30
    10d4:	3b0b3a0e 	blcc	2cf914 <mailbuffer+0x2a2774>
    10d8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    10dc:	11134919 	tstne	r3, r9, lsl r9
    10e0:	40061201 	andmi	r1, r6, r1, lsl #4
    10e4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    10e8:	00001301 	andeq	r1, r0, r1, lsl #6
    10ec:	49010110 	stmdbmi	r1, {r4, r8}
    10f0:	00130113 	andseq	r0, r3, r3, lsl r1
    10f4:	00211100 	eoreq	r1, r1, r0, lsl #2
    10f8:	182f1349 	stmdane	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    10fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1100:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1104:	0e030b13 	vmoveq.32	d3[0], r0
    1108:	01110e1b 	tsteq	r1, fp, lsl lr
    110c:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1110:	16020000 	strne	r0, [r2], -r0
    1114:	3a0e0300 	bcc	381d1c <mailbuffer+0x354b7c>
    1118:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    111c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1120:	00260300 	eoreq	r0, r6, r0, lsl #6
    1124:	00001349 	andeq	r1, r0, r9, asr #6
    1128:	0b002404 	bleq	a140 <__module_entries_end+0x209c>
    112c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1130:	0500000e 	streq	r0, [r0, #-14]
    1134:	0b0b0024 	bleq	2c11cc <mailbuffer+0x29402c>
    1138:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    113c:	16060000 	strne	r0, [r6], -r0
    1140:	3a0e0300 	bcc	381d48 <mailbuffer+0x354ba8>
    1144:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1148:	0013490b 	andseq	r4, r3, fp, lsl #18
    114c:	01170700 	tsteq	r7, r0, lsl #14
    1150:	0b3a0b0b 	bleq	e83d84 <mailbuffer+0xe56be4>
    1154:	0b390b3b 	bleq	e43e48 <mailbuffer+0xe16ca8>
    1158:	00001301 	andeq	r1, r0, r1, lsl #6
    115c:	03000d08 	movweq	r0, #3336	; 0xd08
    1160:	3b0b3a0e 	blcc	2cf9a0 <mailbuffer+0x2a2800>
    1164:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1168:	09000013 	stmdbeq	r0, {r0, r1, r4}
    116c:	13490101 	movtne	r0, #37121	; 0x9101
    1170:	00001301 	andeq	r1, r0, r1, lsl #6
    1174:	4900210a 	stmdbmi	r0, {r1, r3, r8, sp}
    1178:	000b2f13 	andeq	r2, fp, r3, lsl pc
    117c:	01130b00 	tsteq	r3, r0, lsl #22
    1180:	0b3a0b0b 	bleq	e83db4 <mailbuffer+0xe56c14>
    1184:	0b390b3b 	bleq	e43e78 <mailbuffer+0xe16cd8>
    1188:	00001301 	andeq	r1, r0, r1, lsl #6
    118c:	03000d0c 	movweq	r0, #3340	; 0xd0c
    1190:	3b0b3a0e 	blcc	2cf9d0 <mailbuffer+0x2a2830>
    1194:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1198:	000b3813 	andeq	r3, fp, r3, lsl r8
    119c:	000f0d00 	andeq	r0, pc, r0, lsl #26
    11a0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    11a4:	0b000f0e 	bleq	4de4 <_start-0x321c>
    11a8:	0013490b 	andseq	r4, r3, fp, lsl #18
    11ac:	01130f00 	tsteq	r3, r0, lsl #30
    11b0:	0b0b0e03 	bleq	2c49c4 <mailbuffer+0x297824>
    11b4:	0b3b0b3a 	bleq	ec3ea4 <mailbuffer+0xe96d04>
    11b8:	13010b39 	movwne	r0, #6969	; 0x1b39
    11bc:	0d100000 	ldceq	0, cr0, [r0, #-0]
    11c0:	3a080300 	bcc	201dc8 <mailbuffer+0x1d4c28>
    11c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11c8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    11cc:	1100000b 	tstne	r0, fp
    11d0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    11d4:	0b3a050b 	bleq	e82608 <mailbuffer+0xe55468>
    11d8:	0b390b3b 	bleq	e43ecc <mailbuffer+0xe16d2c>
    11dc:	00001301 	andeq	r1, r0, r1, lsl #6
    11e0:	03000d12 	movweq	r0, #3346	; 0xd12
    11e4:	3b0b3a0e 	blcc	2cfa24 <mailbuffer+0x2a2884>
    11e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    11ec:	00053813 	andeq	r3, r5, r3, lsl r8
    11f0:	00151300 	andseq	r1, r5, r0, lsl #6
    11f4:	00001927 	andeq	r1, r0, r7, lsr #18
    11f8:	27011514 	smladcs	r1, r4, r5, r1
    11fc:	01134919 	tsteq	r3, r9, lsl r9
    1200:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1204:	13490005 	movtne	r0, #36869	; 0x9005
    1208:	13160000 	tstne	r6, #0
    120c:	0b0e0301 	bleq	381e18 <mailbuffer+0x354c78>
    1210:	3b0b3a05 	blcc	2cfa2c <mailbuffer+0x2a288c>
    1214:	010b3905 	tsteq	fp, r5, lsl #18
    1218:	17000013 	smladne	r0, r3, r0, r0
    121c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1220:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1224:	13490b39 	movtne	r0, #39737	; 0x9b39
    1228:	00000b38 	andeq	r0, r0, r8, lsr fp
    122c:	03000d18 	movweq	r0, #3352	; 0xd18
    1230:	3b0b3a0e 	blcc	2cfa70 <mailbuffer+0x2a28d0>
    1234:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1238:	00053813 	andeq	r3, r5, r3, lsl r8
    123c:	01131900 	tsteq	r3, r0, lsl #18
    1240:	0b0b0e03 	bleq	2c4a54 <mailbuffer+0x2978b4>
    1244:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1248:	13010b39 	movwne	r0, #6969	; 0x1b39
    124c:	131a0000 	tstne	sl, #0
    1250:	3a0b0b01 	bcc	2c3e5c <mailbuffer+0x296cbc>
    1254:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1258:	0013010b 	andseq	r0, r3, fp, lsl #2
    125c:	01171b00 	tsteq	r7, r0, lsl #22
    1260:	0b3a0b0b 	bleq	e83e94 <mailbuffer+0xe56cf4>
    1264:	0b39053b 	bleq	e42758 <mailbuffer+0xe155b8>
    1268:	00001301 	andeq	r1, r0, r1, lsl #6
    126c:	03000d1c 	movweq	r0, #3356	; 0xd1c
    1270:	3b0b3a0e 	blcc	2cfab0 <mailbuffer+0x2a2910>
    1274:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1278:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    127c:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    1280:	0000193c 	andeq	r1, r0, ip, lsr r9
    1284:	2701151e 	smladcs	r1, lr, r5, r1
    1288:	00130119 	andseq	r0, r3, r9, lsl r1
    128c:	00341f00 	eorseq	r1, r4, r0, lsl #30
    1290:	0b3a0e03 	bleq	e84aa4 <mailbuffer+0xe57904>
    1294:	0b39053b 	bleq	e42788 <mailbuffer+0xe155e8>
    1298:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    129c:	0000193c 	andeq	r1, r0, ip, lsr r9
    12a0:	03003420 	movweq	r3, #1056	; 0x420
    12a4:	3b0b3a0e 	blcc	2cfae4 <mailbuffer+0x2a2944>
    12a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    12ac:	3c193f13 	ldccc	15, cr3, [r9], {19}
    12b0:	21000019 	tstcs	r0, r9, lsl r0
    12b4:	0e030117 	mcreq	1, 0, r0, cr3, cr7, {0}
    12b8:	0b3a050b 	bleq	e826ec <mailbuffer+0xe5554c>
    12bc:	0b390b3b 	bleq	e43fb0 <mailbuffer+0xe16e10>
    12c0:	00001301 	andeq	r1, r0, r1, lsl #6
    12c4:	49003522 	stmdbmi	r0, {r1, r5, r8, sl, ip, sp}
    12c8:	23000013 	movwcs	r0, #19
    12cc:	13490021 	movtne	r0, #36897	; 0x9021
    12d0:	0000052f 	andeq	r0, r0, pc, lsr #10
    12d4:	03003424 	movweq	r3, #1060	; 0x424
    12d8:	3b0b3a0e 	blcc	2cfb18 <mailbuffer+0x2a2978>
    12dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    12e0:	00180213 	andseq	r0, r8, r3, lsl r2
    12e4:	00342500 	eorseq	r2, r4, r0, lsl #10
    12e8:	0b3a0e03 	bleq	e84afc <mailbuffer+0xe5795c>
    12ec:	0b390b3b 	bleq	e43fe0 <mailbuffer+0xe16e40>
    12f0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    12f4:	00001802 	andeq	r1, r0, r2, lsl #16
    12f8:	03012e26 	movweq	r2, #7718	; 0x1e26
    12fc:	3b0b3a0e 	blcc	2cfb3c <mailbuffer+0x2a299c>
    1300:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1304:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1308:	97184006 	ldrls	r4, [r8, -r6]
    130c:	13011942 	movwne	r1, #6466	; 0x1942
    1310:	05270000 	streq	r0, [r7, #-0]!
    1314:	3a0e0300 	bcc	381f1c <mailbuffer+0x354d7c>
    1318:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    131c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1320:	28000018 	stmdacs	r0, {r3, r4}
    1324:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1328:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    132c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1330:	00001802 	andeq	r1, r0, r2, lsl #16
    1334:	03003429 	movweq	r3, #1065	; 0x429
    1338:	3b0b3a08 	blcc	2cfb60 <mailbuffer+0x2a29c0>
    133c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1340:	00180213 	andseq	r0, r8, r3, lsl r2
    1344:	002e2a00 	eoreq	r2, lr, r0, lsl #20
    1348:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    134c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1350:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1354:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1358:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    135c:	2b000019 	blcs	13c8 <_start-0x6c38>
    1360:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1364:	0b3a0e03 	bleq	e84b78 <mailbuffer+0xe579d8>
    1368:	0b39053b 	bleq	e4285c <mailbuffer+0xe156bc>
    136c:	13491927 	movtne	r1, #39207	; 0x9927
    1370:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1374:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1378:	2c000019 	stccs	0, cr0, [r0], {25}
    137c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1380:	0b3a0e03 	bleq	e84b94 <mailbuffer+0xe579f4>
    1384:	0b390b3b 	bleq	e44078 <mailbuffer+0xe16ed8>
    1388:	01111927 	tsteq	r1, r7, lsr #18
    138c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1390:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1394:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1398:	08030005 	stmdaeq	r3, {r0, r2}
    139c:	0b3b0b3a 	bleq	ec408c <mailbuffer+0xe96eec>
    13a0:	13490b39 	movtne	r0, #39737	; 0x9b39
    13a4:	00001802 	andeq	r1, r0, r2, lsl #16
    13a8:	0300342e 	movweq	r3, #1070	; 0x42e
    13ac:	3b0b3a08 	blcc	2cfbd4 <mailbuffer+0x2a2a34>
    13b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13b4:	00180213 	andseq	r0, r8, r3, lsl r2
    13b8:	012e2f00 			; <UNDEFINED> instruction: 0x012e2f00
    13bc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    13c0:	0b3b0b3a 	bleq	ec40b0 <mailbuffer+0xe96f10>
    13c4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    13c8:	01111349 	tsteq	r1, r9, asr #6
    13cc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    13d0:	00194296 	mulseq	r9, r6, r2
    13d4:	00053000 	andeq	r3, r5, r0
    13d8:	0b3a0e03 	bleq	e84bec <mailbuffer+0xe57a4c>
    13dc:	0b390b3b 	bleq	e440d0 <mailbuffer+0xe16f30>
    13e0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    13e4:	01000000 	mrseq	r0, (UNDEF: 0)
    13e8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    13ec:	0e030b13 	vmoveq.32	d3[0], r0
    13f0:	01110e1b 	tsteq	r1, fp, lsl lr
    13f4:	17100612 			; <UNDEFINED> instruction: 0x17100612
    13f8:	24020000 	strcs	r0, [r2], #-0
    13fc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1400:	0008030b 	andeq	r0, r8, fp, lsl #6
    1404:	00240300 	eoreq	r0, r4, r0, lsl #6
    1408:	0b3e0b0b 	bleq	f8403c <mailbuffer+0xf56e9c>
    140c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1410:	0b000f04 	bleq	5028 <_start-0x2fd8>
    1414:	0500000b 	streq	r0, [r0, #-11]
    1418:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    141c:	0b3b0b3a 	bleq	ec410c <mailbuffer+0xe96f6c>
    1420:	13490b39 	movtne	r0, #39737	; 0x9b39
    1424:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1428:	26060000 	strcs	r0, [r6], -r0
    142c:	00134900 	andseq	r4, r3, r0, lsl #18
    1430:	000f0700 	andeq	r0, pc, r0, lsl #14
    1434:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1438:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
    143c:	03193f00 	tsteq	r9, #0, 30
    1440:	3b0b3a0e 	blcc	2cfc80 <mailbuffer+0x2a2ae0>
    1444:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1448:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    144c:	96184006 	ldrls	r4, [r8], -r6
    1450:	00001942 	andeq	r1, r0, r2, asr #18
    1454:	3f012e09 	svccc	0x00012e09
    1458:	3a0e0319 	bcc	3820c4 <mailbuffer+0x354f24>
    145c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1460:	1119270b 	tstne	r9, fp, lsl #14
    1464:	40061201 	andmi	r1, r6, r1, lsl #4
    1468:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    146c:	00001301 	andeq	r1, r0, r1, lsl #6
    1470:	0300050a 	movweq	r0, #1290	; 0x50a
    1474:	3b0b3a0e 	blcc	2cfcb4 <mailbuffer+0x2a2b14>
    1478:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    147c:	00180213 	andseq	r0, r8, r3, lsl r2
    1480:	00340b00 	eorseq	r0, r4, r0, lsl #22
    1484:	0b3a0803 	bleq	e83498 <mailbuffer+0xe562f8>
    1488:	0b390b3b 	bleq	e4417c <mailbuffer+0xe16fdc>
    148c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1490:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    1494:	3a0e0301 	bcc	3820a0 <mailbuffer+0x354f00>
    1498:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    149c:	1119270b 	tstne	r9, fp, lsl #14
    14a0:	40061201 	andmi	r1, r6, r1, lsl #4
    14a4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    14a8:	00001301 	andeq	r1, r0, r1, lsl #6
    14ac:	3f012e0d 	svccc	0x00012e0d
    14b0:	3a0e0319 	bcc	38211c <mailbuffer+0x354f7c>
    14b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    14b8:	1119270b 	tstne	r9, fp, lsl #14
    14bc:	40061201 	andmi	r1, r6, r1, lsl #4
    14c0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    14c4:	Address 0x00000000000014c4 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	00010000 	andeq	r0, r1, r0
  14:	00000344 	andeq	r0, r0, r4, asr #6
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	02160002 	andseq	r0, r6, #2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00010344 	andeq	r0, r1, r4, asr #6
  34:	000002a4 	andeq	r0, r0, r4, lsr #5
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	03b20002 			; <UNDEFINED> instruction: 0x03b20002
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	000105f0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
  54:	00000764 	andeq	r0, r0, r4, ror #14
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	08610002 	stmdaeq	r1!, {r1}^
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	00010d54 	andeq	r0, r1, r4, asr sp
  74:	0000029c 	muleq	r0, ip, r2
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	13a00002 	movne	r0, #2
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	00010ff0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
  94:	00000bb0 			; <UNDEFINED> instruction: 0x00000bb0
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	23c20002 	biccs	r0, r2, #2
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	00011ba0 	andeq	r1, r1, r0, lsr #23
  b4:	00001924 	andeq	r1, r0, r4, lsr #18
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	3a320002 	bcc	c800d4 <mailbuffer+0xc52f34>
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	000134c4 	andeq	r3, r1, r4, asr #9
  d4:	000003a0 	andeq	r0, r0, r0, lsr #7
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	3d0d0002 	stccc	0, cr0, [sp, #-8]
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	00013864 	andeq	r3, r1, r4, ror #16
  f4:	000005d8 	ldrdeq	r0, [r0], -r8
	...
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	41450002 	cmpmi	r5, r2
 108:	00040000 	andeq	r0, r4, r0
 10c:	00000000 	andeq	r0, r0, r0
 110:	00013e3c 	andeq	r3, r1, ip, lsr lr
 114:	000000ec 	andeq	r0, r0, ip, ror #1
	...
 120:	0000001c 	andeq	r0, r0, ip, lsl r0
 124:	41f90002 	mvnsmi	r0, r2
 128:	00040000 	andeq	r0, r4, r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	00013f28 	andeq	r3, r1, r8, lsr #30
 134:	0000098c 	andeq	r0, r0, ip, lsl #19
	...
 140:	0000001c 	andeq	r0, r0, ip, lsl r0
 144:	45fb0002 	ldrbmi	r0, [fp, #2]!
 148:	00040000 	andeq	r0, r4, r0
 14c:	00000000 	andeq	r0, r0, r0
 150:	000148b4 			; <UNDEFINED> instruction: 0x000148b4
 154:	000003e4 	andeq	r0, r0, r4, ror #7
	...
 160:	0000001c 	andeq	r0, r0, ip, lsl r0
 164:	49040002 	stmdbmi	r4, {r1}
 168:	00040000 	andeq	r0, r4, r0
 16c:	00000000 	andeq	r0, r0, r0
 170:	00014c98 	muleq	r1, r8, ip
 174:	000004ac 	andeq	r0, r0, ip, lsr #9
	...
 180:	0000001c 	andeq	r0, r0, ip, lsl r0
 184:	54810002 	strpl	r0, [r1], #2
 188:	00040000 	andeq	r0, r4, r0
 18c:	00000000 	andeq	r0, r0, r0
 190:	0001516c 	andeq	r5, r1, ip, ror #2
 194:	00000220 	andeq	r0, r0, r0, lsr #4
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000001c8 	andeq	r0, r0, r8, asr #3
       4:	00cf0002 	sbceq	r0, pc, r2
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2f010000 	svccs	0x00010000
      1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
      20:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
      24:	6f442f6c 	svcvs	0x00442f6c
      28:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
      2c:	2f73746e 	svccs	0x0073746e
      30:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      34:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
      38:	2f676e69 	svccs	0x00676e69
      3c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      40:	534f5452 	movtpl	r5, #62546	; 0xf452
      44:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
      48:	4f545265 	svcmi	0x00545265
      4c:	6f532f53 	svcvs	0x00532f53
      50:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
      54:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
      58:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
      5c:	43472f65 	movtmi	r2, #32613	; 0x7f65
      60:	61522f43 	cmpvs	r2, r3, asr #30
      64:	65627073 	strbvs	r7, [r2, #-115]!	; 0xffffff8d
      68:	50797272 	rsbspl	r7, r9, r2, ror r2
      6c:	682f0069 	stmdavs	pc!, {r0, r3, r5, r6}	; <UNPREDICTABLE>
      70:	2f656d6f 	svccs	0x00656d6f
      74:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
      78:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
      7c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
      80:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
      84:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
      88:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
      8c:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
      90:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
      94:	2f534f54 	svccs	0x00534f54
      98:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
      9c:	534f5452 	movtpl	r5, #62546	; 0xf452
      a0:	756f532f 	strbvc	r5, [pc, #-815]!	; fffffd79 <_estack+0xf7fefd79>
      a4:	2f656372 	svccs	0x00656372
      a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      ac:	00656475 	rsbeq	r6, r5, r5, ror r4
      b0:	726f7000 	rsbvc	r7, pc, #0
      b4:	00632e74 	rsbeq	r2, r3, r4, ror lr
      b8:	70000001 	andvc	r0, r0, r1
      bc:	646a6f72 	strbtvs	r6, [sl], #-3954	; 0xfffff08e
      c0:	2e736665 	cdpcs	6, 7, cr6, cr3, cr5, {3}
      c4:	00020068 	andeq	r0, r2, r8, rrx
      c8:	726f7000 	rsbvc	r7, pc, #0
      cc:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
      d0:	682e6f72 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}
      d4:	00000100 	andeq	r0, r0, r0, lsl #2
      d8:	00010500 	andeq	r0, r1, r0, lsl #10
      dc:	00000205 	andeq	r0, r0, r5, lsl #4
      e0:	f7030001 			; <UNDEFINED> instruction: 0xf7030001
      e4:	10050100 	andne	r0, r5, r0, lsl #2
      e8:	4e0e05bd 	mcrmi	5, 0, r0, cr14, cr13, {5}
      ec:	056e1205 	strbeq	r1, [lr, #-517]!	; 0xfffffdfb
      f0:	10052e2c 	andne	r2, r5, ip, lsr #28
      f4:	4b0e052e 	blmi	3815b4 <mailbuffer+0x354414>
      f8:	05681005 	strbeq	r1, [r8, #-5]!
      fc:	1205670e 	andne	r6, r5, #3670016	; 0x380000
     100:	2e100567 	cfmsc32cs	mvfx0, mvfx0, mvfx7
     104:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
     108:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
     10c:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
     110:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     114:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
     118:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
     11c:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     120:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
     124:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
     128:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     12c:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
     130:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
     134:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     138:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
     13c:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
     140:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     144:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
     148:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
     14c:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     150:	10056a12 	andne	r6, r5, r2, lsl sl
     154:	4b0e052e 	blmi	381614 <mailbuffer+0x354474>
     158:	056a1005 	strbeq	r1, [sl, #-5]!
     15c:	21056808 	tstcs	r5, r8, lsl #16
     160:	2e04052e 	cfsh32cs	mvfx0, mvfx4, #30
     164:	054d1105 	strbeq	r1, [sp, #-261]	; 0xfffffefb
     168:	1005a10e 	andne	sl, r5, lr, lsl #2
     16c:	6809056c 	stmdavs	r9, {r2, r3, r5, r6, r8, sl}
     170:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     174:	02051622 	andeq	r1, r5, #35651584	; 0x2200000
     178:	0905314d 	stmdbeq	r5, {r0, r2, r3, r6, r8, ip, sp}
     17c:	2f010531 	svccs	0x00010531
     180:	0a034d4e 	beq	d36c0 <mailbuffer+0xa6520>
     184:	9f020582 	svcls	0x00020582
     188:	31070531 	tstcc	r7, r1, lsr r5
     18c:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
     190:	05884b01 	streq	r4, [r8, #2817]	; 0xb01
     194:	02056b11 	andeq	r6, r5, #17408	; 0x4400
     198:	054a0a03 	strbeq	r0, [sl, #-2563]	; 0xfffff5fd
     19c:	0d053007 	stceq	0, cr3, [r5, #-28]	; 0xffffffe4
     1a0:	4b07052e 	blmi	1c1660 <mailbuffer+0x1944c0>
     1a4:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
     1a8:	0d054b07 	vstreq	d4, [r5, #-28]	; 0xffffffe4
     1ac:	4b07052e 	blmi	1c166c <mailbuffer+0x1944cc>
     1b0:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
     1b4:	0d054b07 	vstreq	d4, [r5, #-28]	; 0xffffffe4
     1b8:	4b07052e 	blmi	1c1678 <mailbuffer+0x1944d8>
     1bc:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
     1c0:	4c844c02 	stcmi	12, cr4, [r4], {2}
     1c4:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     1c8:	0101000e 	tsteq	r1, lr
     1cc:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     1d0:	00730002 	rsbseq	r0, r3, r2
     1d4:	01020000 	mrseq	r0, (UNDEF: 2)
     1d8:	000d0efb 	strdeq	r0, [sp], -fp
     1dc:	01010101 	tsteq	r1, r1, lsl #2
     1e0:	01000000 	mrseq	r0, (UNDEF: 0)
     1e4:	2f010000 	svccs	0x00010000
     1e8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     1ec:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     1f0:	6f442f6c 	svcvs	0x00442f6c
     1f4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     1f8:	2f73746e 	svccs	0x0073746e
     1fc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     200:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     204:	2f676e69 	svccs	0x00676e69
     208:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     20c:	534f5452 	movtpl	r5, #62546	; 0xf452
     210:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     214:	4f545265 	svcmi	0x00545265
     218:	6f532f53 	svcvs	0x00532f53
     21c:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     220:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     224:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     228:	43472f65 	movtmi	r2, #32613	; 0x7f65
     22c:	61522f43 	cmpvs	r2, r3, asr #30
     230:	65627073 	strbvs	r7, [r2, #-115]!	; 0xffffff8d
     234:	50797272 	rsbspl	r7, r9, r2, ror r2
     238:	70000069 	andvc	r0, r0, r9, rrx
     23c:	6974726f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     240:	632e7273 			; <UNDEFINED> instruction: 0x632e7273
     244:	00000100 	andeq	r0, r0, r0, lsl #2
     248:	00010500 	andeq	r0, r1, r0, lsl #10
     24c:	03440205 	movteq	r0, #16901	; 0x4205
     250:	f5030001 			; <UNDEFINED> instruction: 0xf5030001
     254:	0c050100 	stfeqs	f0, [r5], {-0}
     258:	a0020552 	andge	r0, r2, r2, asr r5
     25c:	02342f2f 	eorseq	r2, r4, #47, 30	; 0xbc
     260:	01051324 	tsteq	r5, r4, lsr #6
     264:	d60e036c 	strle	r0, [lr], -ip, ror #6
     268:	31160205 	tstcc	r6, r5, lsl #4
     26c:	31152c02 	tstcc	r5, r2, lsl #24
     270:	24020105 	strcs	r0, [r2], #-261	; 0xfffffefb
     274:	031c0513 	tsteq	ip, #79691776	; 0x4c00000
     278:	02056616 	andeq	r6, r5, #23068672	; 0x1600000
     27c:	132c0213 			; <UNDEFINED> instruction: 0x132c0213
     280:	0201052f 	andeq	r0, r1, #197132288	; 0xbc00000
     284:	2a031324 	bcs	c4f1c <mailbuffer+0x97d7c>
     288:	4c020566 	cfstr32mi	mvfx0, [r2], {102}	; 0x66
     28c:	0a031305 	beq	c4ea8 <mailbuffer+0x97d08>
     290:	9f01059e 	svcls	0x0001059e
     294:	4b1805a1 	blmi	601920 <mailbuffer+0x5d4780>
     298:	054a0405 	strbeq	r0, [sl, #-1029]	; 0xfffffbfb
     29c:	19054d14 	stmdbne	r5, {r2, r4, r8, sl, fp, lr}
     2a0:	4a0505a2 	bmi	141930 <mailbuffer+0x114790>
     2a4:	054d0405 	strbeq	r0, [sp, #-1029]	; 0xfffffbfb
     2a8:	0e02a601 	cfmadd32eq	mvax0, mvfx10, mvfx2, mvfx1
     2ac:	e0010100 	and	r0, r1, r0, lsl #2
     2b0:	02000002 	andeq	r0, r0, #2
     2b4:	00011700 	andeq	r1, r1, r0, lsl #14
     2b8:	fb010200 	blx	40ac2 <mailbuffer+0x13922>
     2bc:	01000d0e 	tsteq	r0, lr, lsl #26
     2c0:	00010101 	andeq	r0, r1, r1, lsl #2
     2c4:	00010000 	andeq	r0, r1, r0
     2c8:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
     2cc:	2f656d6f 	svccs	0x00656d6f
     2d0:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
     2d4:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     2d8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     2dc:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
     2e0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     2e4:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
     2e8:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
     2ec:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
     2f0:	2f534f54 	svccs	0x00534f54
     2f4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     2f8:	534f5452 	movtpl	r5, #62546	; 0xf452
     2fc:	756f532f 	strbvc	r5, [pc, #-815]!	; ffffffd5 <_estack+0xf7feffd5>
     300:	00656372 	rsbeq	r6, r5, r2, ror r3
     304:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 250 <_start-0x7db0>
     308:	61632f65 	cmnvs	r3, r5, ror #30
     30c:	442f6c72 	strtmi	r6, [pc], #-3186	; 314 <_start-0x7cec>
     310:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     314:	73746e65 	cmnvc	r4, #1616	; 0x650
     318:	6f72702f 	svcvs	0x0072702f
     31c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     320:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
     324:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     328:	4f54522d 	svcmi	0x0054522d
     32c:	72462f53 	subvc	r2, r6, #332	; 0x14c
     330:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
     334:	532f534f 			; <UNDEFINED> instruction: 0x532f534f
     338:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     33c:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
     340:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     344:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
     348:	2f656d6f 	svccs	0x00656d6f
     34c:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
     350:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     354:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     358:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
     35c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     360:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
     364:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
     368:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
     36c:	2f534f54 	svccs	0x00534f54
     370:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     374:	534f5452 	movtpl	r5, #62546	; 0xf452
     378:	756f532f 	strbvc	r5, [pc, #-815]!	; 51 <_start-0x7faf>
     37c:	2f656372 	svccs	0x00656372
     380:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     384:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     388:	4343472f 	movtmi	r4, #14127	; 0x372f
     38c:	7361522f 	cmnvc	r1, #-268435454	; 0xf0000002
     390:	72656270 	rsbvc	r6, r5, #112, 4
     394:	69507972 	ldmdbvs	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
     398:	72630000 	rsbvc	r0, r3, #0
     39c:	6974756f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
     3a0:	632e656e 			; <UNDEFINED> instruction: 0x632e656e
     3a4:	00000100 	andeq	r0, r0, r0, lsl #2
     3a8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     3ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     3b0:	6f700000 	svcvs	0x00700000
     3b4:	616d7472 	smcvs	55106	; 0xd742
     3b8:	2e6f7263 	cdpcs	2, 6, cr7, cr15, cr3, {3}
     3bc:	00030068 	andeq	r0, r3, r8, rrx
     3c0:	6f726300 	svcvs	0x00726300
     3c4:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     3c8:	00682e65 	rsbeq	r2, r8, r5, ror #28
     3cc:	00000002 	andeq	r0, r0, r2
     3d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     3d4:	0105f002 	tsteq	r5, r2	; <UNPREDICTABLE>
     3d8:	018a0300 	orreq	r0, sl, r0, lsl #6
     3dc:	bf1e0501 	svclt	0x001e0501
     3e0:	05670405 	strbeq	r0, [r7, #-1029]!	; 0xfffffbfb
     3e4:	05056a1a 	streq	r6, [r5, #-2586]	; 0xfffff5e6
     3e8:	4c17054a 	cfldr32mi	mvfx0, [r7], {74}	; 0x4a
     3ec:	05670405 	strbeq	r0, [r7, #-1029]!	; 0xfffffbfb
     3f0:	0f053205 	svceq	0x00053205
     3f4:	4e180568 	cfmsc32mi	mvfx0, mvfx8, mvfx8
     3f8:	05671b05 	strbeq	r1, [r7, #-2821]!	; 0xfffff4fb
     3fc:	24056718 	strcs	r6, [r5], #-1816	; 0xfffff8e8
     400:	69030567 	stmdbvs	r3, {r0, r1, r2, r5, r6, r8, sl}
     404:	69678783 	stmdbvs	r7!, {r0, r1, r7, r8, r9, sl, pc}^
     408:	04020086 	streq	r0, [r2], #-134	; 0xffffff7a
     40c:	00ba0601 	adcseq	r0, sl, r1, lsl #12
     410:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
     414:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     418:	08060304 	stmdaeq	r6, {r2, r8, r9}
     41c:	09056a92 	stmdbeq	r5, {r1, r4, r7, r9, fp, sp, lr}
     420:	2f01054d 	svccs	0x0001054d
     424:	a32405be 			; <UNDEFINED> instruction: 0xa32405be
     428:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     42c:	02056b34 	andeq	r6, r5, #52, 22	; 0xd000
     430:	1205694a 	andne	r6, r5, #1212416	; 0x128000
     434:	4a040584 	bmi	101a4c <mailbuffer+0xd48ac>
     438:	056a0305 	strbeq	r0, [sl, #-773]!	; 0xfffffcfb
     43c:	03054a61 	movweq	r4, #23137	; 0x5a61
     440:	5905a44a 	stmdbpl	r5, {r1, r3, r6, sl, sp, pc}
     444:	4a03054a 	bmi	c1974 <mailbuffer+0x947d4>
     448:	05850405 	streq	r0, [r5, #1029]	; 0x405
     44c:	03056a32 	movweq	r6, #23090	; 0x5a32
     450:	8401054a 	strhi	r0, [r1], #-1354	; 0xfffffab6
     454:	6a0705da 	bvs	1c1bc4 <mailbuffer+0x194a24>
     458:	05330305 	ldreq	r0, [r3, #-773]!	; 0xfffffcfb
     45c:	1405a024 	strne	sl, [r5], #-36	; 0xffffffdc
     460:	4b04054a 	blmi	101990 <mailbuffer+0xd47f0>
     464:	a0840305 	addge	r0, r4, r5, lsl #6
     468:	04020083 	streq	r0, [r2], #-131	; 0xffffff7d
     46c:	00ba0601 	adcseq	r0, sl, r1, lsl #12
     470:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
     474:	03060905 	movweq	r0, #26885	; 0x6905
     478:	05900873 	ldreq	r0, [r0, #2163]	; 0x873
     47c:	01054a07 	tsteq	r5, r7, lsl #20
     480:	be4a0f03 	cdplt	15, 4, cr0, cr10, cr3, {0}
     484:	05691105 	strbeq	r1, [r9, #-261]!	; 0xfffffefb
     488:	0f054a25 	svceq	0x00054a25
     48c:	4b070566 	blmi	1c1a2c <mailbuffer+0x19488c>
     490:	05301605 	ldreq	r1, [r0, #-1541]!	; 0xfffff9fb
     494:	1b059f0f 	blne	1680d8 <mailbuffer+0x13af38>
     498:	4a0505a1 	bmi	141b24 <mailbuffer+0x114984>
     49c:	05500b05 	ldrbeq	r0, [r0, #-2821]	; 0xfffff4fb
     4a0:	2305671b 	movwcs	r6, #22299	; 0x571b
     4a4:	6a080583 	bvs	201ab8 <mailbuffer+0x1d4918>
     4a8:	05301b05 	ldreq	r1, [r0, #-2821]!	; 0xfffff4fb
     4ac:	1e05660b 	cfmadd32ne	mvax0, mvfx6, mvfx5, mvfx11
     4b0:	4a1c054c 	bmi	7019e8 <mailbuffer+0x6d4848>
     4b4:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
     4b8:	04054d05 	streq	r4, [r5], #-3333	; 0xfffff2fb
     4bc:	a5050531 	strge	r0, [r5, #-1329]	; 0xfffffacf
     4c0:	05851f05 	streq	r1, [r5, #3845]	; 0xf05
     4c4:	06054a07 	streq	r4, [r5], -r7, lsl #20
     4c8:	8504054c 	strhi	r0, [r4, #-1356]	; 0xfffffab4
     4cc:	040200a0 	streq	r0, [r2], #-160	; 0xffffff60
     4d0:	00ba0601 	adcseq	r0, sl, r1, lsl #12
     4d4:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
     4d8:	03060a05 	movweq	r0, #27141	; 0x6a05
     4dc:	05900865 	ldreq	r0, [r0, #2149]	; 0x865
     4e0:	09056608 	stmdbeq	r5, {r3, r9, sl, sp, lr}
     4e4:	054a6e03 	strbeq	r6, [sl, #-3587]	; 0xfffff1fd
     4e8:	11054a07 	tstne	r5, r7, lsl #20
     4ec:	054a3103 	strbeq	r3, [sl, #-259]	; 0xfffffefd
     4f0:	40088301 	andmi	r8, r8, r1, lsl #6
     4f4:	31680205 	cmncc	r8, r5, lsl #4
     4f8:	05310705 	ldreq	r0, [r1, #-1797]!	; 0xfffff8fb
     4fc:	05053023 	streq	r3, [r5, #-35]	; 0xffffffdd
     500:	4f03054a 	svcmi	0x0003054a
     504:	79030905 	stmdbvc	r3, {r0, r2, r8, fp}
     508:	0807059e 	stmdaeq	r7, {r1, r2, r3, r4, r7, r8, sl}
     50c:	03020520 	movweq	r0, #9504	; 0x2520
     510:	02004a0c 	andeq	r4, r0, #12, 20	; 0xc000
     514:	02060104 	andeq	r0, r6, #4, 2
     518:	02001228 	andeq	r1, r0, #40, 4	; 0x80000002
     51c:	059e0304 	ldreq	r0, [lr, #772]	; 0x304
     520:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
     524:	05a10603 	streq	r0, [r1, #1539]!	; 0x603
     528:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
     52c:	16059e03 	strne	r9, [r5], -r3, lsl #28
     530:	03040200 	movweq	r0, #16896	; 0x4200
     534:	0002054a 	andeq	r0, r2, sl, asr #10
     538:	68030402 	stmdavs	r3, {r1, sl}
     53c:	74030405 	strvc	r0, [r3], #-1029	; 0xfffffbfb
     540:	0301054a 	movweq	r0, #5450	; 0x154a
     544:	05a22e0d 	streq	r2, [r2, #3597]!	; 0xe0d
     548:	02056912 	andeq	r6, r5, #294912	; 0x48000
     54c:	0003054a 	andeq	r0, r3, sl, asr #10
     550:	30030402 	andcc	r0, r3, r2, lsl #8
     554:	02004f05 	andeq	r4, r0, #5, 30
     558:	1e080304 	cdpne	3, 0, cr0, cr8, cr4, {0}
     55c:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
     560:	6b660104 	blvs	1980978 <mailbuffer+0x19537d8>
     564:	19054b4b 	stmdbne	r5, {r0, r1, r3, r6, r8, r9, fp, lr}
     568:	6721054e 	strvs	r0, [r1, -lr, asr #10]!
     56c:	08670105 	stmdaeq	r7!, {r0, r2, r8}^
     570:	89220524 	stmdbhi	r2!, {r2, r5, r8, sl}
     574:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
     578:	05834b02 	streq	r4, [r3, #2818]	; 0xb02
     57c:	3705a015 	smladcc	r5, r5, r0, sl
     580:	6604054a 	strvs	r0, [r4], -sl, asr #10
     584:	6a4c0b05 	bvs	13031a0 <mailbuffer+0x12d6000>
     588:	054d0905 	strbeq	r0, [sp, #-2309]	; 0xfffff6fb
     58c:	0a022f01 	beq	8c198 <mailbuffer+0x5eff8>
     590:	7d010100 	stfvcs	f0, [r1, #-0]
     594:	02000002 	andeq	r0, r0, #2
     598:	0001a100 	andeq	sl, r1, r0, lsl #2
     59c:	fb010200 	blx	40da6 <mailbuffer+0x13c06>
     5a0:	01000d0e 	tsteq	r0, lr, lsl #26
     5a4:	00010101 	andeq	r0, r1, r1, lsl #2
     5a8:	00010000 	andeq	r0, r1, r0
     5ac:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
     5b0:	2f656d6f 	svccs	0x00656d6f
     5b4:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
     5b8:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     5bc:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     5c0:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
     5c4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     5c8:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
     5cc:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
     5d0:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
     5d4:	2f534f54 	svccs	0x00534f54
     5d8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     5dc:	534f5452 	movtpl	r5, #62546	; 0xf452
     5e0:	756f532f 	strbvc	r5, [pc, #-815]!	; 2b9 <_start-0x7d47>
     5e4:	00656372 	rsbeq	r6, r5, r2, ror r3
     5e8:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
     5ec:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     5f0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     5f4:	61652d65 	cmnvs	r5, r5, ror #26
     5f8:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     5fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     600:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     604:	2f007379 	svccs	0x00007379
     608:	2f727375 	svccs	0x00727375
     60c:	2f62696c 	svccs	0x0062696c
     610:	2f636367 	svccs	0x00636367
     614:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     618:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     61c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     620:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
     624:	2f302e32 	svccs	0x00302e32
     628:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     62c:	00656475 	rsbeq	r6, r5, r5, ror r4
     630:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
     634:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     638:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     63c:	61652d65 	cmnvs	r5, r5, ror #26
     640:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     644:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     648:	2f006564 	svccs	0x00006564
     64c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     650:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     654:	6f442f6c 	svcvs	0x00442f6c
     658:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     65c:	2f73746e 	svccs	0x0073746e
     660:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     664:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     668:	2f676e69 	svccs	0x00676e69
     66c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     670:	534f5452 	movtpl	r5, #62546	; 0xf452
     674:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     678:	4f545265 	svcmi	0x00545265
     67c:	6f532f53 	svcvs	0x00532f53
     680:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     684:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     688:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     68c:	43472f65 	movtmi	r2, #32613	; 0x7f65
     690:	61522f43 	cmpvs	r2, r3, asr #30
     694:	65627073 	strbvs	r7, [r2, #-115]!	; 0xffffff8d
     698:	50797272 	rsbspl	r7, r9, r2, ror r2
     69c:	682f0069 	stmdavs	pc!, {r0, r3, r5, r6}	; <UNPREDICTABLE>
     6a0:	2f656d6f 	svccs	0x00656d6f
     6a4:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
     6a8:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     6ac:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     6b0:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
     6b4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     6b8:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
     6bc:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
     6c0:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
     6c4:	2f534f54 	svccs	0x00534f54
     6c8:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     6cc:	534f5452 	movtpl	r5, #62546	; 0xf452
     6d0:	756f532f 	strbvc	r5, [pc, #-815]!	; 3a9 <_start-0x7c57>
     6d4:	2f656372 	svccs	0x00656372
     6d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     6dc:	00656475 	rsbeq	r6, r5, r5, ror r4
     6e0:	73696c00 	cmnvc	r9, #0, 24
     6e4:	00632e74 	rsbeq	r2, r3, r4, ror lr
     6e8:	6c000001 	stcvs	0, cr0, [r0], {1}
     6ec:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
     6f0:	00020068 	andeq	r0, r2, r8, rrx
     6f4:	79745f00 	ldmdbvc	r4!, {r8, r9, sl, fp, ip, lr}^
     6f8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     6fc:	00020068 	andeq	r0, r2, r8, rrx
     700:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     704:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     708:	00030068 	andeq	r0, r3, r8, rrx
     70c:	65657200 	strbvs	r7, [r5, #-512]!	; 0xfffffe00
     710:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     714:	00000200 	andeq	r0, r0, r0, lsl #4
     718:	6c647473 	cfstrdvs	mvd7, [r4], #-460	; 0xfffffe34
     71c:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
     720:	00000400 	andeq	r0, r0, r0, lsl #8
     724:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     728:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
     72c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     730:	6c000005 	stcvs	0, cr0, [r0], {5}
     734:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
     738:	00060068 	andeq	r0, r6, r8, rrx
     73c:	01050000 	mrseq	r0, (UNDEF: 5)
     740:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
     744:	0300010d 	movweq	r0, #269	; 0x10d
     748:	050100cc 	streq	r0, [r1, #-204]	; 0xffffff34
     74c:	12058624 	andne	r8, r5, #36, 12	; 0x2400000
     750:	4e1e054a 	cfmac32mi	mvfx0, mvfx14, mvfx10
     754:	056a2c05 	strbeq	r2, [sl, #-3077]!	; 0xfffff3fb
     758:	30054a1a 	andcc	r4, r5, sl, lsl sl
     75c:	4a1e054b 	bmi	781c90 <mailbuffer+0x754af0>
     760:	054c1a05 	strbeq	r1, [ip, #-2565]	; 0xfffff5fb
     764:	05866701 	streq	r6, [r6, #1793]	; 0x701
     768:	01058416 	tsteq	r5, r6, lsl r4
     76c:	0a058667 	beq	162110 <mailbuffer+0x134f70>
     770:	682105a5 	stmdavs	r1!, {r0, r2, r5, r7, r8, sl}
     774:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
     778:	1c054b24 			; <UNDEFINED> instruction: 0x1c054b24
     77c:	4b09054a 	blmi	241cac <mailbuffer+0x214b0c>
     780:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
     784:	05674b12 	strbeq	r4, [r7, #-2834]!	; 0xfffff4ee
     788:	0a05691d 	beq	15ac04 <mailbuffer+0x12da64>
     78c:	4a1d0568 	bmi	741d34 <mailbuffer+0x714b94>
     790:	86670105 	strbthi	r0, [r7], -r5, lsl #2
     794:	05a31405 	streq	r1, [r3, #1029]!	; 0x405
     798:	66090304 	strvs	r0, [r9], -r4, lsl #6
     79c:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
     7a0:	82140313 	andshi	r0, r4, #1275068416	; 0x4c000000
     7a4:	05660305 	strbeq	r0, [r6, #-773]!	; 0xfffffcfb
     7a8:	0402007c 	streq	r0, [r2], #-124	; 0xffffff84
     7ac:	46052e03 	strmi	r2, [r5], -r3, lsl #28
     7b0:	01040200 	mrseq	r0, R12_usr
     7b4:	004e0566 	subeq	r0, lr, r6, ror #10
     7b8:	4a010402 	bmi	417c8 <mailbuffer+0x14628>
     7bc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     7c0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     7c4:	18056d24 	stmdane	r5, {r2, r5, r8, sl, fp, sp, lr}
     7c8:	4b0f054a 	blmi	3c1cf8 <mailbuffer+0x394b58>
     7cc:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     7d0:	15054b1c 	strne	r4, [r5, #-2844]	; 0xfffff4e4
     7d4:	6a1d0567 	bvs	741d78 <mailbuffer+0x714bd8>
     7d8:	05680a05 	strbeq	r0, [r8, #-2565]!	; 0xfffff5fb
     7dc:	01054a1d 	tsteq	r5, sp, lsl sl
     7e0:	10058667 	andne	r8, r5, r7, ror #12
     7e4:	4a350585 	bmi	d41e00 <mailbuffer+0xd14c60>
     7e8:	054a2505 	strbeq	r2, [sl, #-1285]	; 0xfffffafb
     7ec:	35052f10 	strcc	r2, [r5, #-3856]	; 0xfffff0f0
     7f0:	4a25054a 	bmi	941d20 <mailbuffer+0x914b80>
     7f4:	05320905 	ldreq	r0, [r2, #-2309]!	; 0xfffff6fb
     7f8:	0405690c 	streq	r6, [r5], #-2316	; 0xfffff6f4
     7fc:	6823054a 	stmdavs	r3!, {r1, r3, r6, r8, sl}
     800:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
     804:	0a054d1e 	beq	153c84 <mailbuffer+0x126ae4>
     808:	4a1d0567 	bmi	741dac <mailbuffer+0x714c0c>
     80c:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
     810:	01010008 	tsteq	r1, r8
     814:	00000589 	andeq	r0, r0, r9, lsl #11
     818:	01ac0002 			; <UNDEFINED> instruction: 0x01ac0002
     81c:	01020000 	mrseq	r0, (UNDEF: 2)
     820:	000d0efb 	strdeq	r0, [sp], -fp
     824:	01010101 	tsteq	r1, r1, lsl #2
     828:	01000000 	mrseq	r0, (UNDEF: 0)
     82c:	2f010000 	svccs	0x00010000
     830:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     834:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     838:	6f442f6c 	svcvs	0x00442f6c
     83c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     840:	2f73746e 	svccs	0x0073746e
     844:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     848:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     84c:	2f676e69 	svccs	0x00676e69
     850:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     854:	534f5452 	movtpl	r5, #62546	; 0xf452
     858:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     85c:	4f545265 	svcmi	0x00545265
     860:	6f532f53 	svcvs	0x00532f53
     864:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     868:	73752f00 	cmnvc	r5, #0, 30
     86c:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     870:	63672f62 	cmnvs	r7, #392	; 0x188
     874:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
     878:	6f6e2d6d 	svcvs	0x006e2d6d
     87c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     880:	2f696261 	svccs	0x00696261
     884:	2e322e38 	mrccs	14, 1, r2, cr2, cr8, {1}
     888:	6e692f30 	mcrvs	15, 3, r2, cr9, cr0, {1}
     88c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     890:	752f0065 	strvc	r0, [pc, #-101]!	; 833 <_start-0x77cd>
     894:	612f7273 			; <UNDEFINED> instruction: 0x612f7273
     898:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     89c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     8a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     8a4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     8a8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     8ac:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     8b0:	73752f00 	cmnvc	r5, #0, 30
     8b4:	72612f72 	rsbvc	r2, r1, #456	; 0x1c8
     8b8:	6f6e2d6d 	svcvs	0x006e2d6d
     8bc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     8c0:	2f696261 	svccs	0x00696261
     8c4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     8c8:	00656475 	rsbeq	r6, r5, r5, ror r4
     8cc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 818 <_start-0x77e8>
     8d0:	61632f65 	cmnvs	r3, r5, ror #30
     8d4:	442f6c72 	strtmi	r6, [pc], #-3186	; 8dc <_start-0x7724>
     8d8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     8dc:	73746e65 	cmnvc	r4, #1616	; 0x650
     8e0:	6f72702f 	svcvs	0x0072702f
     8e4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     8e8:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
     8ec:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     8f0:	4f54522d 	svcmi	0x0054522d
     8f4:	72462f53 	subvc	r2, r6, #332	; 0x14c
     8f8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
     8fc:	532f534f 			; <UNDEFINED> instruction: 0x532f534f
     900:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     904:	6f702f65 	svcvs	0x00702f65
     908:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
     90c:	472f656c 	strmi	r6, [pc, -ip, ror #10]!
     910:	522f4343 	eorpl	r4, pc, #201326593	; 0xc000001
     914:	62707361 	rsbsvs	r7, r0, #-2080374783	; 0x84000001
     918:	79727265 	ldmdbvc	r2!, {r0, r2, r5, r6, r9, ip, sp, lr}^
     91c:	2f006950 	svccs	0x00006950
     920:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     924:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     928:	6f442f6c 	svcvs	0x00442f6c
     92c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     930:	2f73746e 	svccs	0x0073746e
     934:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     938:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     93c:	2f676e69 	svccs	0x00676e69
     940:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     944:	534f5452 	movtpl	r5, #62546	; 0xf452
     948:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     94c:	4f545265 	svcmi	0x00545265
     950:	6f532f53 	svcvs	0x00532f53
     954:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     958:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     95c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     960:	75710000 	ldrbvc	r0, [r1, #-0]!
     964:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
     968:	00010063 	andeq	r0, r1, r3, rrx
     96c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     970:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     974:	00020068 	andeq	r0, r2, r8, rrx
     978:	636f6c00 	cmnvs	pc, #0, 24
     97c:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     980:	5f000003 	svcpl	0x00000003
     984:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     988:	00682e73 	rsbeq	r2, r8, r3, ror lr
     98c:	72000003 	andvc	r0, r0, #3
     990:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     994:	0300682e 	movweq	r6, #2094	; 0x82e
     998:	74730000 	ldrbtvc	r0, [r3], #-0
     99c:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
     9a0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     9a4:	6f700000 	svcvs	0x00700000
     9a8:	616d7472 	smcvs	55106	; 0xd742
     9ac:	2e6f7263 	cdpcs	2, 6, cr7, cr15, cr3, {3}
     9b0:	00050068 	andeq	r0, r5, r8, rrx
     9b4:	73696c00 	cmnvc	r9, #0, 24
     9b8:	00682e74 	rsbeq	r2, r8, r4, ror lr
     9bc:	74000006 	strvc	r0, [r0], #-6
     9c0:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
     9c4:	00060068 	andeq	r0, r6, r8, rrx
     9c8:	01050000 	mrseq	r0, (UNDEF: 5)
     9cc:	f0020500 			; <UNDEFINED> instruction: 0xf0020500
     9d0:	0300010f 	movweq	r0, #271	; 0x10f
     9d4:	05010297 	streq	r0, [r1, #-663]	; 0xfffffd69
     9d8:	1c05a102 	stfned	f2, [r5], {2}
     9dc:	4a300530 	bmi	c01ea4 <mailbuffer+0xbd4d04>
     9e0:	054a4405 	strbeq	r4, [sl, #-1029]	; 0xfffffbfb
     9e4:	25054a3b 	strcs	r4, [r5, #-2619]	; 0xfffff5c5
     9e8:	2e13052e 	cfmul64cs	mvdx0, mvdx3, mvdx14
     9ec:	054b1e05 	strbeq	r1, [fp, #-3589]	; 0xfffff1fb
     9f0:	1605671f 			; <UNDEFINED> instruction: 0x1605671f
     9f4:	4b20054a 	blmi	801f24 <mailbuffer+0x7d4d84>
     9f8:	054a3605 	strbeq	r3, [sl, #-1541]	; 0xfffff9fb
     9fc:	6c054a41 			; <UNDEFINED> instruction: 0x6c054a41
     a00:	4a63052e 	bmi	18c1ec0 <mailbuffer+0x1894d20>
     a04:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
     a08:	14052e17 	strne	r2, [r5], #-3607	; 0xfffff1e9
     a0c:	0505674b 	streq	r6, [r5, #-1867]	; 0xfffff8b5
     a10:	6d080568 	cfstr32vs	mvfx0, [r8, #-416]	; 0xfffffe60
     a14:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
     a18:	09054c23 	stmdbeq	r5, {r0, r1, r5, sl, fp, lr}
     a1c:	6607054a 	strvs	r0, [r7], -sl, asr #10
     a20:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
     a24:	05835104 	streq	r5, [r3, #260]	; 0x104
     a28:	09058502 	stmdbeq	r5, {r1, r8, sl, pc}
     a2c:	2f010532 	svccs	0x00010532
     a30:	d90e056a 	stmdble	lr, {r1, r3, r5, r6, r8, sl}
     a34:	05510405 	ldrbeq	r0, [r1, #-1029]	; 0xfffffbfb
     a38:	0505681d 	streq	r6, [r5, #-2077]	; 0xfffff7e3
     a3c:	6a330567 	bvs	cc1fe0 <mailbuffer+0xc94e40>
     a40:	05661605 	strbeq	r1, [r6, #-1541]!	; 0xfffff9fb
     a44:	17054c2b 	strne	r4, [r5, -fp, lsr #24]
     a48:	4b120566 	blmi	481fe8 <mailbuffer+0x454e48>
     a4c:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
     a50:	1c054e1a 	stcne	14, cr4, [r5], {26}
     a54:	67050567 	strvs	r0, [r5, -r7, ror #10]
     a58:	056e0d05 	strbeq	r0, [lr, #-3333]!	; 0xfffff2fb
     a5c:	09056b05 	stmdbeq	r5, {r0, r2, r8, r9, fp, sp, lr}
     a60:	2f010551 	svccs	0x00010551
     a64:	6601d003 	strvs	sp, [r1], -r3
     a68:	05d71605 	ldrbeq	r1, [r7, #1541]	; 0x605
     a6c:	4a0b0303 	bmi	2c1680 <mailbuffer+0x2944e0>
     a70:	05320f05 	ldreq	r0, [r2, #-3845]!	; 0xfffff0fb
     a74:	06054a2c 	streq	r4, [r5], -ip, lsr #20
     a78:	4d05054a 	cfstr32mi	mvfx0, [r5, #-296]	; 0xfffffed8
     a7c:	05860905 	streq	r0, [r6, #2309]	; 0x905
     a80:	24054a07 	strcs	r4, [r5], #-2567	; 0xfffff5f9
     a84:	4a0a054c 	bmi	281fbc <mailbuffer+0x254e1c>
     a88:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
     a8c:	05055007 	streq	r5, [r5, #-7]
     a90:	320c0532 	andcc	r0, ip, #209715200	; 0xc800000
     a94:	054e1605 	strbeq	r1, [lr, #-1541]	; 0xfffff9fb
     a98:	06052e07 	streq	r2, [r5], -r7, lsl #28
     a9c:	330d054e 	movwcc	r0, #54606	; 0xd54e
     aa0:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
     aa4:	14056a06 	strne	r6, [r5], #-2566	; 0xfffff5fa
     aa8:	4e030567 	cfsh32mi	mvfx0, mvfx3, #55
     aac:	02002f33 	andeq	r2, r0, #51, 30	; 0xcc
     ab0:	9e060104 	adflss	f0, f6, f4
     ab4:	03040200 	movweq	r0, #16896	; 0x4200
     ab8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     abc:	02008204 	andeq	r8, r0, #4, 4	; 0x40000000
     ac0:	05660604 	strbeq	r0, [r6, #-1540]!	; 0xfffff9fc
     ac4:	04020007 	streq	r0, [r2], #-7
     ac8:	05310606 	ldreq	r0, [r1, #-1542]!	; 0xfffff9fa
     acc:	04020005 	streq	r0, [r2], #-5
     ad0:	0805ba06 	stmdaeq	r5, {r1, r2, r9, fp, ip, sp, pc}
     ad4:	6606054c 	strvs	r0, [r6], -ip, asr #10
     ad8:	054d1c05 	strbeq	r1, [sp, #-3077]	; 0xfffff3fb
     adc:	05894a05 	streq	r4, [r9, #2565]	; 0xa05
     ae0:	07055109 	streq	r5, [r5, -r9, lsl #2]
     ae4:	4c06054a 	cfstr32mi	mvfx0, [r6], {74}	; 0x4a
     ae8:	05500505 	ldrbeq	r0, [r0, #-1285]	; 0xfffffafb
     aec:	04054b0e 	streq	r4, [r5], #-2830	; 0xfffff4f2
     af0:	4b0d0550 	blmi	342038 <mailbuffer+0x314e98>
     af4:	05330b05 	ldreq	r0, [r3, #-2821]!	; 0xfffff4fb
     af8:	04020001 	streq	r0, [r2], #-1
     afc:	d2033103 	andle	r3, r3, #-1073741824	; 0xc0000000
     b00:	19056601 	stmdbne	r5, {r0, r9, sl, sp, lr}
     b04:	05d60c03 	ldrbeq	r0, [r6, #3075]	; 0xc03
     b08:	2b054c0e 	blcs	153b48 <mailbuffer+0x1269a8>
     b0c:	4a05054a 	bmi	14203c <mailbuffer+0x114e9c>
     b10:	054e0405 	strbeq	r0, [lr, #-1029]	; 0xfffffbfb
     b14:	0605860f 	streq	r8, [r5], -pc, lsl #12
     b18:	4c09054a 	cfstr32mi	mvfx0, [r9], {74}	; 0x4a
     b1c:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
     b20:	0a054c24 	beq	153bb8 <mailbuffer+0x126a18>
     b24:	6608054a 	strvs	r0, [r8], -sl, asr #10
     b28:	054e0905 	strbeq	r0, [lr, #-2309]	; 0xfffff6fb
     b2c:	10056823 	andne	r6, r5, r3, lsr #16
     b30:	05820903 	streq	r0, [r2, #2307]	; 0x903
     b34:	0c054a05 			; <UNDEFINED> instruction: 0x0c054a05
     b38:	09056b69 	stmdbeq	r5, {r0, r3, r5, r6, r8, r9, fp, sp, lr}
     b3c:	2f01054f 	svccs	0x0001054f
     b40:	d716056a 	ldrle	r0, [r6, -sl, ror #10]
     b44:	0d030305 	stceq	3, cr0, [r3, #-20]	; 0xffffffec
     b48:	320f054a 	andcc	r0, pc, #310378496	; 0x12800000
     b4c:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
     b50:	05054d1c 	streq	r4, [r5, #-3356]	; 0xfffff2e4
     b54:	68070568 	stmdavs	r7, {r3, r5, r6, r8, sl}
     b58:	056b1105 	strbeq	r1, [fp, #-261]!	; 0xfffffefb
     b5c:	0a054a06 	beq	15337c <mailbuffer+0x1261dc>
     b60:	05660d03 	strbeq	r0, [r6, #-3331]!	; 0xfffff2fd
     b64:	25054a08 	strcs	r4, [r5, #-2568]	; 0xfffff5f8
     b68:	4a0b054c 	bmi	2c20a0 <mailbuffer+0x294f00>
     b6c:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
     b70:	1a054c08 	bne	153b98 <mailbuffer+0x1269f8>
     b74:	054a0a03 	strbeq	r0, [sl, #-2563]	; 0xfffff5fd
     b78:	08056a0a 	stmdaeq	r5, {r1, r3, r9, fp, sp, lr}
     b7c:	4e25054a 	cfsh64mi	mvdx0, mvdx5, #42
     b80:	054a0b05 	strbeq	r0, [sl, #-2821]	; 0xfffff4fb
     b84:	08056609 	stmdaeq	r5, {r0, r3, r9, sl, sp, lr}
     b88:	3305054d 	movwcc	r0, #21837	; 0x554d
     b8c:	052f0c05 	streq	r0, [pc, #-3077]!	; ffffff8f <_estack+0xf7feff8f>
     b90:	07054e16 	smladeq	r5, r6, lr, r4
     b94:	4e06052e 	cfsh32mi	mvfx0, mvfx6, #30
     b98:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
     b9c:	06054c0c 	streq	r4, [r5], -ip, lsl #24
     ba0:	6714056a 	ldrvs	r0, [r4, -sl, ror #10]
     ba4:	334e0305 	movtcc	r0, #58117	; 0xe305
     ba8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     bac:	009e0601 	addseq	r0, lr, r1, lsl #12
     bb0:	66030402 	strvs	r0, [r3], -r2, lsl #8
     bb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     bb8:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
     bbc:	07056606 	streq	r6, [r5, -r6, lsl #12]
     bc0:	06040200 	streq	r0, [r4], -r0, lsl #4
     bc4:	05053106 	streq	r3, [r5, #-262]	; 0xfffffefa
     bc8:	06040200 	streq	r0, [r4], -r0, lsl #4
     bcc:	4c0805ba 	cfstr32mi	mvfx0, [r8], {186}	; 0xba
     bd0:	05660605 	strbeq	r0, [r6, #-1541]!	; 0xfffff9fb
     bd4:	4a11031c 	bmi	44184c <mailbuffer+0x4146ac>
     bd8:	834a0505 	movthi	r0, #42245	; 0xa505
     bdc:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
     be0:	06054a07 	streq	r4, [r5], -r7, lsl #20
     be4:	5005054c 	andpl	r0, r5, ip, asr #10
     be8:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
     bec:	0d054f04 	stceq	15, cr4, [r5, #-16]
     bf0:	300b054b 	andcc	r0, fp, fp, asr #10
     bf4:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
     bf8:	6a310304 	bvs	c41810 <mailbuffer+0xc14670>
     bfc:	05c11905 	strbeq	r1, [r1, #2309]	; 0x905
     c00:	05054d0e 	streq	r4, [r5, #-3342]	; 0xfffff2f2
     c04:	4e04054a 	cfsh32mi	mvfx0, mvfx4, #42
     c08:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
     c0c:	0f054a04 	svceq	0x00054a04
     c10:	4a06056b 	bmi	1821c4 <mailbuffer+0x155024>
     c14:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
     c18:	24054a07 	strcs	r4, [r5], #-2567	; 0xfffff5f9
     c1c:	4a0a054c 	bmi	282154 <mailbuffer+0x254fb4>
     c20:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
     c24:	23054e09 	movwcs	r4, #24073	; 0x5e09
     c28:	03100568 	tsteq	r0, #104, 10	; 0x1a000000
     c2c:	05058209 	streq	r8, [r5, #-521]	; 0xfffffdf7
     c30:	690c054a 	stmdbvs	ip, {r1, r3, r6, r8, sl}
     c34:	5009056a 	andpl	r0, r9, sl, ror #10
     c38:	6a2f0105 	bvs	bc1054 <mailbuffer+0xb93eb4>
     c3c:	05870205 	streq	r0, [r7, #517]	; 0x205
     c40:	02052f0c 	andeq	r2, r5, #12, 30	; 0x30
     c44:	30090567 	andcc	r0, r9, r7, ror #10
     c48:	6a2f0105 	bvs	bc1064 <mailbuffer+0xb93ec4>
     c4c:	05870b05 	streq	r0, [r7, #2821]	; 0xb05
     c50:	01056809 	tsteq	r5, r9, lsl #16
     c54:	1405862f 	strne	r8, [r5], #-1583	; 0xfffff9d1
     c58:	4a020587 	bmi	8227c <mailbuffer+0x550dc>
     c5c:	4b01054b 	blmi	42190 <mailbuffer+0x14ff0>
     c60:	05662203 	strbeq	r2, [r6, #-515]!	; 0xfffffdfd
     c64:	0405bb0d 	streq	fp, [r5], #-2829	; 0xfffff4f3
     c68:	0309054a 	movweq	r0, #38218	; 0x954a
     c6c:	1d054a0d 	vstrne	s8, [r5, #-52]	; 0xffffffcc
     c70:	4a4d0568 	bmi	1342218 <mailbuffer+0x1315078>
     c74:	054a0305 	strbeq	r0, [sl, #-773]	; 0xfffffcfb
     c78:	20056716 	andcs	r6, r5, r6, lsl r7
     c7c:	4a16054a 	bmi	5821ac <mailbuffer+0x55500c>
     c80:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
     c84:	05054a24 	streq	r4, [r5, #-2596]	; 0xfffff5dc
     c88:	4c20054a 	cfstr32mi	mvfx0, [r0], #-296	; 0xfffffed8
     c8c:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
     c90:	4e056b1d 	vmovmi.32	d5[0], r6
     c94:	4a03054a 	bmi	c21c4 <mailbuffer+0x95024>
     c98:	05671705 	strbeq	r1, [r7, #-1797]!	; 0xfffff8fb
     c9c:	17054a21 	strne	r4, [r5, -r1, lsr #20]
     ca0:	830e054a 	movwhi	r0, #58698	; 0xe54a
     ca4:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     ca8:	23054a05 	movwcs	r4, #23045	; 0x5a05
     cac:	4a35054c 	bmi	d421e4 <mailbuffer+0xd15044>
     cb0:	054a2c05 	strbeq	r2, [sl, #-3077]	; 0xfffff3fb
     cb4:	0d054a18 	vstreq	s8, [r5, #-96]	; 0xffffffa0
     cb8:	4a02054e 	bmi	821f8 <mailbuffer+0x55058>
     cbc:	6a670105 	bvs	19c10d8 <mailbuffer+0x1993f38>
     cc0:	059f0d05 	ldreq	r0, [pc, #3333]	; 19cd <_start-0x6633>
     cc4:	17054a04 	strne	r4, [r5, -r4, lsl #20]
     cc8:	4a21054c 	bmi	842200 <mailbuffer+0x815060>
     ccc:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
     cd0:	2505670e 	strcs	r6, [r5, #-1806]	; 0xfffff8f2
     cd4:	4a05054a 	bmi	142204 <mailbuffer+0x115064>
     cd8:	054c2105 	strbeq	r2, [ip, #-261]	; 0xfffffefb
     cdc:	32054a18 	andcc	r4, r5, #24, 20	; 0x18000
     ce0:	4a54054c 	bmi	1502218 <mailbuffer+0x14d5078>
     ce4:	054a0305 	strbeq	r0, [sl, #-773]	; 0xfffffcfb
     ce8:	056a6801 	strbeq	r6, [sl, #-2049]!	; 0xfffff7ff
     cec:	08058902 	stmdaeq	r5, {r1, r8, fp, pc}
     cf0:	06053231 			; <UNDEFINED> instruction: 0x06053231
     cf4:	4e23054a 	cfsh64mi	mvdx0, mvdx3, #42
     cf8:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
     cfc:	06056607 	streq	r6, [r5], -r7, lsl #12
     d00:	3110054e 	tstcc	r0, lr, asr #10
     d04:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     d08:	66710311 			; <UNDEFINED> instruction: 0x66710311
     d0c:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
     d10:	66130305 	ldrvs	r0, [r3], -r5, lsl #6
     d14:	05321405 	ldreq	r1, [r2, #-1029]!	; 0xfffffbfb
     d18:	05316802 	ldreq	r6, [r1, #-2050]!	; 0xfffff7fe
     d1c:	05303008 	ldreq	r3, [r0, #-8]!
     d20:	23054a06 	movwcs	r4, #23046	; 0x5a06
     d24:	4a09054c 	bmi	24225c <mailbuffer+0x2150bc>
     d28:	05660705 	strbeq	r0, [r6, #-1797]!	; 0xfffff8fb
     d2c:	10054c06 	andne	r4, r5, r6, lsl #24
     d30:	4a050531 	bmi	1421fc <mailbuffer+0x11505c>
     d34:	77031105 	strvc	r1, [r3, -r5, lsl #2]
     d38:	4a080566 	bmi	2022d8 <mailbuffer+0x1d5138>
     d3c:	0d030505 	cfstr32eq	mvfx0, [r3, #-20]	; 0xffffffec
     d40:	32140566 	andscc	r0, r4, #427819008	; 0x19800000
     d44:	05680205 	strbeq	r0, [r8, #-517]!	; 0xfffffdfb
     d48:	056a2f01 	strbeq	r2, [sl, #-3841]!	; 0xfffff0ff
     d4c:	16058502 	strne	r8, [r5], -r2, lsl #10
     d50:	4a2a052f 	bmi	a82214 <mailbuffer+0xa55074>
     d54:	05820b05 	streq	r0, [r2, #2821]	; 0xb05
     d58:	09052f02 	stmdbeq	r5, {r1, r8, r9, sl, fp, sp}
     d5c:	2f010530 	svccs	0x00010530
     d60:	8615056a 	ldrhi	r0, [r5], -sl, ror #10
     d64:	054a2905 	strbeq	r2, [sl, #-2309]	; 0xfffff6fb
     d68:	0905820a 	stmdbeq	r5, {r1, r3, r9, pc}
     d6c:	2f010530 	svccs	0x00010530
     d70:	85020586 	strhi	r0, [r2, #-1414]	; 0xfffffa7a
     d74:	052f1605 	streq	r1, [pc, #-1541]!	; 777 <_start-0x7889>
     d78:	2a054a34 	bcs	153650 <mailbuffer+0x1264b0>
     d7c:	820b054a 	andhi	r0, fp, #310378496	; 0x12800000
     d80:	052f0205 	streq	r0, [pc, #-517]!	; b83 <_start-0x747d>
     d84:	01053009 	tsteq	r5, r9
     d88:	15056a2f 	strne	r6, [r5, #-2607]	; 0xfffff5d1
     d8c:	4a330586 	bmi	cc23ac <mailbuffer+0xc9520c>
     d90:	054a2905 	strbeq	r2, [sl, #-2309]	; 0xfffff6fb
     d94:	0905820a 	stmdbeq	r5, {r1, r3, r9, pc}
     d98:	2f010530 	svccs	0x00010530
     d9c:	01000802 	tsteq	r0, r2, lsl #16
     da0:	0008e601 	andeq	lr, r8, r1, lsl #12
     da4:	c8000200 	stmdagt	r0, {r9}
     da8:	02000001 	andeq	r0, r0, #1
     dac:	0d0efb01 	vstreq	d15, [lr, #-4]
     db0:	01010100 	mrseq	r0, (UNDEF: 17)
     db4:	00000001 	andeq	r0, r0, r1
     db8:	01000001 	tsteq	r0, r1
     dbc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; d08 <_start-0x72f8>
     dc0:	61632f65 	cmnvs	r3, r5, ror #30
     dc4:	442f6c72 	strtmi	r6, [pc], #-3186	; dcc <_start-0x7234>
     dc8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
     dcc:	73746e65 	cmnvc	r4, #1616	; 0x650
     dd0:	6f72702f 	svcvs	0x0072702f
     dd4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     dd8:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
     ddc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     de0:	4f54522d 	svcmi	0x0054522d
     de4:	72462f53 	subvc	r2, r6, #332	; 0x14c
     de8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
     dec:	532f534f 			; <UNDEFINED> instruction: 0x532f534f
     df0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     df4:	752f0065 	strvc	r0, [pc, #-101]!	; d97 <_start-0x7269>
     df8:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; c34 <_start-0x73cc>
     dfc:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     e00:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     e04:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     e08:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     e0c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     e10:	322e382f 	eorcc	r3, lr, #3080192	; 0x2f0000
     e14:	692f302e 	stmdbvs	pc!, {r1, r2, r3, r5, ip, sp}	; <UNPREDICTABLE>
     e18:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     e1c:	2f006564 	svccs	0x00006564
     e20:	2f727375 	svccs	0x00727375
     e24:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     e28:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     e2c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     e30:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
     e34:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     e38:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     e3c:	752f0073 	strvc	r0, [pc, #-115]!	; dd1 <_start-0x722f>
     e40:	612f7273 			; <UNDEFINED> instruction: 0x612f7273
     e44:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     e48:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     e4c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     e50:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     e54:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     e58:	6f682f00 	svcvs	0x00682f00
     e5c:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
     e60:	2f6c7261 	svccs	0x006c7261
     e64:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     e68:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     e6c:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
     e70:	6172676f 	cmnvs	r2, pc, ror #14
     e74:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
     e78:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
     e7c:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
     e80:	462f534f 	strtmi	r5, [pc], -pc, asr #6
     e84:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     e88:	2f534f54 	svccs	0x00534f54
     e8c:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     e90:	692f6563 	stmdbvs	pc!, {r0, r1, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     e94:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     e98:	2f006564 	svccs	0x00006564
     e9c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     ea0:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     ea4:	6f442f6c 	svcvs	0x00442f6c
     ea8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     eac:	2f73746e 	svccs	0x0073746e
     eb0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     eb4:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     eb8:	2f676e69 	svccs	0x00676e69
     ebc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     ec0:	534f5452 	movtpl	r5, #62546	; 0xf452
     ec4:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     ec8:	4f545265 	svcmi	0x00545265
     ecc:	6f532f53 	svcvs	0x00532f53
     ed0:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     ed4:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     ed8:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     edc:	43472f65 	movtmi	r2, #32613	; 0x7f65
     ee0:	61522f43 	cmpvs	r2, r3, asr #30
     ee4:	65627073 	strbvs	r7, [r2, #-115]!	; 0xffffff8d
     ee8:	50797272 	rsbspl	r7, r9, r2, ror r2
     eec:	74000069 	strvc	r0, [r0], #-105	; 0xffffff97
     ef0:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
     ef4:	0100632e 	tsteq	r0, lr, lsr #6
     ef8:	74730000 	ldrbtvc	r0, [r3], #-0
     efc:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     f00:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     f04:	6f6c0000 	svcvs	0x006c0000
     f08:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     f0c:	00000300 	andeq	r0, r0, r0, lsl #6
     f10:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     f14:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     f18:	00000300 	andeq	r0, r0, r0, lsl #6
     f1c:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
     f20:	00682e74 	rsbeq	r2, r8, r4, ror lr
     f24:	73000003 	movwvc	r0, #3
     f28:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
     f2c:	00682e62 	rsbeq	r2, r8, r2, ror #28
     f30:	70000004 	andvc	r0, r0, r4
     f34:	646a6f72 	strbtvs	r6, [sl], #-3954	; 0xfffff08e
     f38:	2e736665 	cdpcs	6, 7, cr6, cr3, cr5, {3}
     f3c:	00050068 	andeq	r0, r5, r8, rrx
     f40:	726f7000 	rsbvc	r7, pc, #0
     f44:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
     f48:	682e6f72 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}
     f4c:	00000600 	andeq	r0, r0, r0, lsl #12
     f50:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     f54:	534f5452 	movtpl	r5, #62546	; 0xf452
     f58:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     f5c:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
     f60:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
     f64:	00000500 	andeq	r0, r0, r0, lsl #10
     f68:	6b736174 	blvs	1cd9540 <mailbuffer+0x1cac3a0>
     f6c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     f70:	05000000 	streq	r0, [r0, #-0]
     f74:	02050001 	andeq	r0, r5, #1
     f78:	00011ba0 	andeq	r1, r1, r0, lsr #23
     f7c:	01039b03 	tsteq	r3, r3, lsl #22
     f80:	09030d05 	stmdbeq	r3, {r0, r2, r8, sl, fp}
     f84:	a00405f2 	strdge	r0, [r4], -r2
     f88:	18031b05 	stmdane	r3, {r0, r2, r8, r9, fp, ip}
     f8c:	4a250566 	bmi	94252c <mailbuffer+0x91538c>
     f90:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
     f94:	55054b2c 	strpl	r4, [r5, #-2860]	; 0xfffff4d4
     f98:	2e11052e 	cfmul64cs	mvdx0, mvdx1, mvdx14
     f9c:	14030305 	strne	r0, [r3], #-773	; 0xfffffcfb
     fa0:	031d052e 	tsteq	sp, #192937984	; 0xb800000
     fa4:	1b05d60c 	blne	1767dc <mailbuffer+0x14963c>
     fa8:	5105059e 			; <UNDEFINED> instruction: 0x5105059e
     fac:	056b1305 	strbeq	r1, [fp, #-773]!	; 0xfffffcfb
     fb0:	1a056b03 	bne	15bbc4 <mailbuffer+0x12ea24>
     fb4:	9f150530 	svcls	0x00150530
     fb8:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
     fbc:	20054e12 	andcs	r4, r5, r2, lsl lr
     fc0:	4a070568 	bmi	1c2568 <mailbuffer+0x1953c8>
     fc4:	054f0605 	strbeq	r0, [pc, #-1541]	; 9c7 <_start-0x7639>
     fc8:	0705521b 	smladeq	r5, fp, r2, r5
     fcc:	4c16054a 	cfldr32mi	mvfx0, [r6], {74}	; 0x4a
     fd0:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
     fd4:	10056814 	andne	r6, r5, r4, lsl r8
     fd8:	4a1d056d 	bmi	742594 <mailbuffer+0x7153f4>
     fdc:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
     fe0:	17054c21 	strne	r4, [r5, -r1, lsr #24]
     fe4:	0310054a 	tsteq	r0, #310378496	; 0x12800000
     fe8:	04054a09 	streq	r4, [r5], #-2569	; 0xfffff5f7
     fec:	040200a0 	streq	r0, [r2], #-160	; 0xffffff60
     ff0:	00ba0601 	adcseq	r0, sl, r1, lsl #12
     ff4:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
     ff8:	02000c05 	andeq	r0, r0, #1280	; 0x500
     ffc:	08060304 	stmdaeq	r6, {r2, r8, r9}
    1000:	00030592 	muleq	r3, r2, r5
    1004:	4e030402 	cdpmi	4, 0, cr0, cr3, cr2, {0}
    1008:	054e0b05 	strbeq	r0, [lr, #-2821]	; 0xfffff4fb
    100c:	19054e04 	stmdbne	r5, {r2, r9, sl, fp, lr}
    1010:	4a050568 	bmi	1425b8 <mailbuffer+0x115418>
    1014:	054e1405 	strbeq	r1, [lr, #-1029]	; 0xfffffbfb
    1018:	05056606 	streq	r6, [r5, #-1542]	; 0xfffff9fa
    101c:	33090568 	movwcc	r0, #38248	; 0x9568
    1020:	052f0105 	streq	r0, [pc, #-261]!	; f23 <_start-0x70dd>
    1024:	05420802 	strbeq	r0, [r2, #-2050]	; 0xfffff7fe
    1028:	17058503 	strne	r8, [r5, -r3, lsl #10]
    102c:	4a060532 	bmi	1824fc <mailbuffer+0x15535c>
    1030:	05681405 	strbeq	r1, [r8, #-1029]!	; 0xfffffbfb
    1034:	02004e0c 	andeq	r4, r0, #12, 28	; 0xc0
    1038:	66060104 	strvs	r0, [r6], -r4, lsl #2
    103c:	02040200 	andeq	r0, r4, #0, 4
    1040:	000a0566 	andeq	r0, sl, r6, ror #10
    1044:	06040402 	streq	r0, [r4], -r2, lsl #8
    1048:	0004052e 	andeq	r0, r4, lr, lsr #10
    104c:	34040402 	strcc	r0, [r4], #-1026	; 0xfffffbfe
    1050:	02001d05 	andeq	r1, r0, #320	; 0x140
    1054:	05850404 	streq	r0, [r5, #1028]	; 0x404
    1058:	04020006 	streq	r0, [r2], #-6
    105c:	05054a04 	streq	r4, [r5, #-2564]	; 0xfffff5fc
    1060:	8504054c 	strhi	r0, [r4, #-1356]	; 0xfffffab4
    1064:	a21005a3 	andsge	r0, r0, #683671552	; 0x28c00000
    1068:	05a20305 	streq	r0, [r2, #773]!	; 0x305
    106c:	05053119 	streq	r3, [r5, #-281]	; 0xfffffee7
    1070:	4c06054a 	cfstr32mi	mvfx0, [r6], {74}	; 0x4a
    1074:	05680505 	strbeq	r0, [r8, #-1285]!	; 0xfffffafb
    1078:	10033102 	andne	r3, r3, r2, lsl #2
    107c:	a02105f2 	strdge	r0, [r1], -r2	; <UNPREDICTABLE>
    1080:	054f0305 	strbeq	r0, [pc, #-773]	; d83 <_start-0x727d>
    1084:	10053112 	andne	r3, r5, r2, lsl r1
    1088:	6815054a 	ldmdavs	r5, {r1, r3, r6, r8, sl}
    108c:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
    1090:	19054a06 	stmdbne	r5, {r1, r2, r9, fp, lr}
    1094:	4a070551 	bmi	1c25e0 <mailbuffer+0x195440>
    1098:	02004005 	andeq	r4, r0, #5
    109c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    10a0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    10a4:	13054a01 	movwne	r4, #23041	; 0x5a01
    10a8:	6e190568 	cfmsc32vs	mvfx0, mvfx9, mvfx8
    10ac:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    10b0:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    10b4:	2f056601 	svccs	0x00056601
    10b8:	01040200 	mrseq	r0, R12_usr
    10bc:	6813054a 	ldmdavs	r3, {r1, r3, r6, r8, sl}
    10c0:	054f1805 	strbeq	r1, [pc, #-2053]	; 8c3 <_start-0x773d>
    10c4:	31056806 	tstcc	r5, r6, lsl #16
    10c8:	4a05056d 	bmi	142684 <mailbuffer+0x1154e4>
    10cc:	4d150567 	cfldr32mi	mvfx0, [r5, #-412]	; 0xfffffe64
    10d0:	054e0505 	strbeq	r0, [lr, #-1285]	; 0xfffffafb
    10d4:	02056804 	andeq	r6, r5, #4, 16	; 0x40000
    10d8:	1705a630 	smladxne	r5, r0, r6, sl
    10dc:	4d050584 	cfstr32mi	mvfx0, [r5, #-528]	; 0xfffffdf0
    10e0:	05680405 	strbeq	r0, [r8, #-1029]!	; 0xfffffbfb
    10e4:	2e0e031e 	mcrcs	3, 0, r0, cr14, cr14, {0}
    10e8:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    10ec:	05056b31 	streq	r6, [r5, #-2865]	; 0xfffff4cf
    10f0:	1605674a 	strne	r6, [r5], -sl, asr #14
    10f4:	4f05054c 	svcmi	0x0005054c
    10f8:	05680405 	strbeq	r0, [r8, #-1029]!	; 0xfffffbfb
    10fc:	05a63002 	streq	r3, [r6, #2]!
    1100:	0c058603 	stceq	6, cr8, [r5], {3}
    1104:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    1108:	00660601 	rsbeq	r0, r6, r1, lsl #12
    110c:	66020402 	strvs	r0, [r2], -r2, lsl #8
    1110:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    1114:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
    1118:	02000d05 	andeq	r0, r0, #320	; 0x140
    111c:	052f0404 	streq	r0, [pc, #-1028]!	; d20 <_start-0x72e0>
    1120:	04020003 	streq	r0, [r2], #-3
    1124:	0a056804 	beq	15b13c <mailbuffer+0x12df9c>
    1128:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    112c:	00020530 	andeq	r0, r2, r0, lsr r5
    1130:	2f040402 	svccs	0x00040402
    1134:	a110058a 	tstge	r0, sl, lsl #11
    1138:	054f0505 	strbeq	r0, [pc, #-1285]	; c3b <_start-0x73c5>
    113c:	03056812 	movweq	r6, #22546	; 0x5812
    1140:	300f054d 	andcc	r0, pc, sp, asr #10
    1144:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    1148:	004f680c 	subeq	r6, pc, ip, lsl #16
    114c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1150:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    1154:	0a056602 	beq	15a964 <mailbuffer+0x12d7c4>
    1158:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    115c:	17052e06 	strne	r2, [r5, -r6, lsl #28]
    1160:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1164:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    1168:	04020006 	streq	r0, [r2], #-6
    116c:	07056a04 	streq	r6, [r5, -r4, lsl #20]
    1170:	84080586 	strhi	r0, [r8], #-1414	; 0xfffffa7a
    1174:	056c1605 	strbeq	r1, [ip, #-1541]!	; 0xfffff9fb
    1178:	1505690c 	strne	r6, [r5, #-2316]	; 0xfffff6f4
    117c:	0318056a 	tsteq	r8, #444596224	; 0x1a800000
    1180:	05054a13 	streq	r4, [r5, #-2579]	; 0xfffff5ed
    1184:	8809056a 	stmdahi	r9, {r1, r3, r5, r6, r8, sl}
    1188:	20080705 	andcs	r0, r8, r5, lsl #14
    118c:	834f0605 	movthi	r0, #62981	; 0xf605
    1190:	01040200 	mrseq	r0, R12_usr
    1194:	0200ba06 	andeq	fp, r0, #24576	; 0x6000
    1198:	05820304 	streq	r0, [r2, #772]	; 0x304
    119c:	93080607 	movwls	r0, #34311	; 0x8607
    11a0:	05680605 	strbeq	r0, [r8, #-1541]!	; 0xfffff9fb
    11a4:	02053203 	andeq	r3, r5, #805306368	; 0x30000000
    11a8:	0305c22f 	movweq	ip, #21039	; 0x522f
    11ac:	32180585 	andscc	r0, r8, #557842432	; 0x21400000
    11b0:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    11b4:	0c056815 	stceq	8, cr6, [r5], {21}
    11b8:	0402004e 	streq	r0, [r2], #-78	; 0xffffffb2
    11bc:	00660601 	rsbeq	r0, r6, r1, lsl #12
    11c0:	66020402 	strvs	r0, [r2], -r2, lsl #8
    11c4:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    11c8:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
    11cc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    11d0:	05330404 	ldreq	r0, [r3, #-1028]!	; 0xfffffbfc
    11d4:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    11d8:	06058504 	streq	r8, [r5], -r4, lsl #10
    11dc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    11e0:	4c05054a 	cfstr32mi	mvfx0, [r5], {74}	; 0x4a
    11e4:	05850405 	streq	r0, [r5, #1029]	; 0x405
    11e8:	0505a003 	streq	sl, [r5, #-3]
    11ec:	681a0530 	ldmdavs	sl, {r4, r5, r8, sl}
    11f0:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    11f4:	02054d05 	andeq	r4, r5, #320	; 0x140
    11f8:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    11fc:	2e720309 	cdpcs	3, 7, cr0, cr2, cr9, {0}
    1200:	054a3805 	strbeq	r3, [sl, #-2053]	; 0xfffff7fb
    1204:	13054a07 	movwne	r4, #23047	; 0x5a07
    1208:	6e020550 	cfrshl32vs	mvfx2, mvfx0, r0
    120c:	052a0605 	streq	r0, [sl, #-1541]!	; 0xfffff9fb
    1210:	05de3202 	ldrbeq	r3, [lr, #514]	; 0x202
    1214:	17058310 	smladne	r5, r0, r3, r8
    1218:	5107054b 	tstpl	r7, fp, asr #10
    121c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1220:	06056908 	streq	r6, [r5], -r8, lsl #18
    1224:	6c09054a 	cfstr32vs	mvfx0, [r9], {74}	; 0x4a
    1228:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    122c:	0a054c0e 	beq	15426c <mailbuffer+0x1270cc>
    1230:	2f02054f 	svccs	0x0002054f
    1234:	8a0905c2 	bhi	242944 <mailbuffer+0x2157a4>
    1238:	054e0505 	strbeq	r0, [lr, #-1285]	; 0xfffffafb
    123c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    1240:	19056601 	stmdbne	r5, {r0, r9, sl, sp, lr}
    1244:	01040200 	mrseq	r0, R12_usr
    1248:	6804054a 	stmdavs	r4, {r1, r3, r6, r8, sl}
    124c:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    1250:	06056607 	streq	r6, [r5], -r7, lsl #12
    1254:	02008350 	andeq	r8, r0, #80, 6	; 0x40000001
    1258:	ba060104 	blt	181670 <mailbuffer+0x1544d0>
    125c:	03040200 	movweq	r0, #16896	; 0x4200
    1260:	000f0582 	andeq	r0, pc, r2, lsl #11
    1264:	06030402 	streq	r0, [r3], -r2, lsl #8
    1268:	2b059308 	blcs	165e90 <mailbuffer+0x138cf0>
    126c:	03040200 	movweq	r0, #16896	; 0x4200
    1270:	0008054a 	andeq	r0, r8, sl, asr #10
    1274:	66030402 	strvs	r0, [r3], -r2, lsl #8
    1278:	054e0705 	strbeq	r0, [lr, #-1797]	; 0xfffff8fb
    127c:	02053204 	andeq	r3, r5, #4, 4	; 0x40000000
    1280:	ba090330 	blt	241f48 <mailbuffer+0x214da8>
    1284:	05831005 	streq	r1, [r3, #5]
    1288:	1a055009 	bne	1552b4 <mailbuffer+0x128114>
    128c:	4c08054c 	cfstr32mi	mvfx0, [r8], {76}	; 0x4c
    1290:	05660605 	strbeq	r0, [r6, #-1541]!	; 0xfffff9fb
    1294:	07054e1e 	smladeq	r5, lr, lr, r4
    1298:	4c1e054a 	cfldr32mi	mvfx0, [lr], {74}	; 0x4a
    129c:	054a3a05 	strbeq	r3, [sl, #-2565]	; 0xfffff5fb
    12a0:	1505662b 	strne	r6, [r5, #-1579]	; 0xfffff9d5
    12a4:	2f060582 	svccs	0x00060582
    12a8:	04020083 	streq	r0, [r2], #-131	; 0xffffff7d
    12ac:	00ba0601 	adcseq	r0, sl, r1, lsl #12
    12b0:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
    12b4:	05b30806 	ldreq	r0, [r3, #2054]!	; 0x806
    12b8:	0205a40a 	andeq	sl, r5, #167772160	; 0xa000000
    12bc:	0301052f 	movweq	r0, #5423	; 0x152f
    12c0:	0d05f20d 	sfmeq	f7, 1, [r5, #-52]	; 0xffffffcc
    12c4:	05660d03 	strbeq	r0, [r6, #-3331]!	; 0xfffff2fd
    12c8:	080d0304 	stmdaeq	sp, {r2, r8, r9}
    12cc:	030305ac 	movweq	r0, #13740	; 0x35ac
    12d0:	1505660a 	strne	r6, [r5, #-1546]	; 0xfffff9f6
    12d4:	670e05a0 	strvs	r0, [lr, -r0, lsr #11]
    12d8:	09030705 	stmdbeq	r3, {r0, r2, r8, r9, sl}
    12dc:	03010566 	movweq	r0, #5478	; 0x1566
    12e0:	05da2e0d 	ldrbeq	r2, [sl, #3597]	; 0xe0d
    12e4:	14054e02 	strne	r4, [r5], #-3586	; 0xfffff1fe
    12e8:	6702059f 			; <UNDEFINED> instruction: 0x6702059f
    12ec:	6a2f0105 	bvs	bc1708 <mailbuffer+0xb94568>
    12f0:	054d0205 	strbeq	r0, [sp, #-517]	; 0xfffffdfb
    12f4:	05a29f01 	streq	r9, [r2, #3841]!	; 0xf01
    12f8:	02056816 	andeq	r6, r5, #1441792	; 0x160000
    12fc:	054a0b03 	strbeq	r0, [sl, #-2819]	; 0xfffff4fd
    1300:	1c053003 	stcne	0, cr3, [r5], {3}
    1304:	4a0505a0 	bmi	14298c <mailbuffer+0x1157ec>
    1308:	054c1f05 	strbeq	r1, [ip, #-3845]	; 0xfffff0fb
    130c:	13054a06 	movwne	r4, #23046	; 0x5a06
    1310:	4e0a054c 	cfsh32mi	mvfx0, mvfx10, #44
    1314:	05301b05 	ldreq	r1, [r0, #-2821]!	; 0xfffff4fb
    1318:	06054a0c 	streq	r4, [r5], -ip, lsl #20
    131c:	0067672f 	rsbeq	r6, r7, pc, lsr #14
    1320:	06010402 	streq	r0, [r1], -r2, lsl #8
    1324:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    1328:	0f056603 	svceq	0x00056603
    132c:	03040200 	movweq	r0, #16896	; 0x4200
    1330:	055c0806 	ldrbeq	r0, [ip, #-2054]	; 0xfffff7fa
    1334:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    1338:	08052e03 	stmdaeq	r5, {r0, r1, r9, sl, fp, sp}
    133c:	03040200 	movweq	r0, #16896	; 0x4200
    1340:	4c160566 	cfldr32mi	mvfx0, [r6], {102}	; 0x66
    1344:	75030c05 	strvc	r0, [r3, #-3077]	; 0xfffff3fb
    1348:	4a0a054a 	bmi	282878 <mailbuffer+0x2556d8>
    134c:	12031705 	andne	r1, r3, #1310720	; 0x140000
    1350:	4a07054a 	bmi	1c2880 <mailbuffer+0x1956e0>
    1354:	054c0b05 	strbeq	r0, [ip, #-2821]	; 0xfffff4fb
    1358:	052f3007 	streq	r3, [pc, #-7]!	; 1359 <_start-0x6ca7>
    135c:	0b059b1b 	bleq	167fd0 <mailbuffer+0x13ae30>
    1360:	0316054a 	tsteq	r6, #310378496	; 0x12800000
    1364:	07054a0b 	streq	r4, [r5, -fp, lsl #20]
    1368:	0038054f 	eorseq	r0, r8, pc, asr #10
    136c:	66010402 	strvs	r0, [r1], -r2, lsl #8
    1370:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1374:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1378:	13054c16 	movwne	r4, #23574	; 0x5c16
    137c:	6706054b 	strvs	r0, [r6, -fp, asr #10]
    1380:	05330205 	ldreq	r0, [r3, #-517]!	; 0xfffffdfb
    1384:	01053009 	tsteq	r5, r9
    1388:	080e032f 	stmdaeq	lr, {r0, r1, r2, r3, r5, r8, r9}
    138c:	6a020558 	bvs	828f4 <mailbuffer+0x55754>
    1390:	05300a05 	ldreq	r0, [r0, #-2565]!	; 0xfffff5fb
    1394:	09056802 	stmdbeq	r5, {r1, fp, sp, lr}
    1398:	2f010530 	svccs	0x00010530
    139c:	6a190586 	bvs	6429bc <mailbuffer+0x61581c>
    13a0:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
    13a4:	01056909 	tsteq	r5, r9, lsl #18
    13a8:	0905a22f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r9, sp, pc}
    13ac:	4b01054d 	blmi	428e8 <mailbuffer+0x15748>
    13b0:	9e01ae03 	cdpls	14, 0, cr10, cr1, cr3, {0}
    13b4:	056c1b05 	strbeq	r1, [ip, #-2821]!	; 0xfffff4fb
    13b8:	03054a04 	movweq	r4, #23044	; 0x5a04
    13bc:	9f12054c 	svcls	0x0012054c
    13c0:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    13c4:	4a09030b 	bmi	241ff8 <mailbuffer+0x214e58>
    13c8:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    13cc:	1305831e 	movwne	r8, #21278	; 0x531e
    13d0:	a0080567 	andge	r0, r8, r7, ror #10
    13d4:	05660605 	strbeq	r0, [r6, #-1541]!	; 0xfffff9fb
    13d8:	058a511a 	streq	r5, [sl, #282]	; 0x11a
    13dc:	1c05660b 	stcne	6, cr6, [r5], {11}
    13e0:	4a1a054b 	bmi	682914 <mailbuffer+0x655774>
    13e4:	004f0305 	subeq	r0, pc, r5, lsl #6
    13e8:	060c0402 	streq	r0, [ip], -r2, lsl #8
    13ec:	040200ba 	streq	r0, [r2], #-186	; 0xffffff46
    13f0:	02009e02 	andeq	r9, r0, #2, 28
    13f4:	00820304 	addeq	r0, r2, r4, lsl #6
    13f8:	08040402 	stmdaeq	r4, {r1, sl}
    13fc:	04020090 	streq	r0, [r2], #-144	; 0xffffff70
    1400:	02008205 	andeq	r8, r0, #1342177280	; 0x50000000
    1404:	00f20604 	rscseq	r0, r2, r4, lsl #12
    1408:	82080402 	andhi	r0, r8, #33554432	; 0x2000000
    140c:	09040200 	stmdbeq	r4, {r9}
    1410:	040200ba 	streq	r0, [r2], #-186	; 0xffffff46
    1414:	0806820b 	stmdaeq	r6, {r0, r1, r3, r9, pc}
    1418:	030105b0 	movweq	r0, #5552	; 0x15b0
    141c:	02059e17 	andeq	r9, r5, #368	; 0x170
    1420:	05059608 	streq	r9, [r5, #-1544]	; 0xfffff9f8
    1424:	680905a2 	stmdavs	r9, {r1, r5, r7, r8, sl}
    1428:	4f030586 	svcmi	0x00030586
    142c:	052f1405 	streq	r1, [pc, #-1029]!	; 102f <_start-0x6fd1>
    1430:	02056703 	andeq	r6, r5, #786432	; 0xc0000
    1434:	05058a2f 	streq	r8, [r5, #-2607]	; 0xfffff5d1
    1438:	68090587 	stmdavs	r9, {r0, r1, r2, r7, r8, sl}
    143c:	4f030586 	svcmi	0x00030586
    1440:	052f0c05 	streq	r0, [pc, #-3077]!	; 843 <_start-0x77bd>
    1444:	0a056703 	beq	15b058 <mailbuffer+0x12deb8>
    1448:	2f020530 	svccs	0x00020530
    144c:	a305058a 	movwge	r0, #21898	; 0x558a
    1450:	86680905 	strbthi	r0, [r8], -r5, lsl #18
    1454:	054d0b05 	strbeq	r0, [sp, #-2821]	; 0xfffff4fb
    1458:	12054a05 	andne	r4, r5, #20480	; 0x5000
    145c:	4a0e054c 	bmi	382994 <mailbuffer+0x3557f4>
    1460:	05860c05 	streq	r0, [r6, #3077]	; 0xc05
    1464:	02054d0a 	andeq	r4, r5, #640	; 0x280
    1468:	8801052f 	stmdahi	r1, {r0, r1, r2, r3, r5, r8, sl}
    146c:	05671b05 	strbeq	r1, [r7, #-2821]!	; 0xfffff4fb
    1470:	10054a04 	andne	r4, r5, r4, lsl #20
    1474:	0301054e 	movweq	r0, #5454	; 0x154e
    1478:	04056633 	streq	r6, [r5], #-1587	; 0xfffff9cd
    147c:	052e6e03 	streq	r6, [lr, #-3587]!	; 0xfffff1fd
    1480:	08059b0a 	stmdaeq	r5, {r1, r3, r8, r9, fp, ip, pc}
    1484:	03052008 	movweq	r2, #20488	; 0x5008
    1488:	004a0d03 	subeq	r0, sl, r3, lsl #26
    148c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1490:	00122802 	andseq	r2, r2, r2, lsl #16
    1494:	9e030402 	cdpls	4, 0, cr0, cr3, cr2, {0}
    1498:	a6060105 	strge	r0, [r6], -r5, lsl #2
    149c:	47052408 	strmi	r2, [r5, -r8, lsl #8]
    14a0:	059e0b03 	ldreq	r0, [lr, #2819]	; 0xb03
    14a4:	2e054a02 	vmlacs.f32	s8, s10, s4
    14a8:	4a020587 	bmi	82acc <mailbuffer+0x5592c>
    14ac:	056b0505 	strbeq	r0, [fp, #-1285]!	; 0xfffffafb
    14b0:	04056b54 	streq	r6, [r5], #-2900	; 0xfffff4ac
    14b4:	0301054a 	movweq	r0, #5450	; 0x154a
    14b8:	1d058212 	sfmne	f0, 1, [r5, #-72]	; 0xffffffb8
    14bc:	052e7403 	streq	r7, [lr, #-1027]!	; 0xfffffbfd
    14c0:	04054a10 	streq	r4, [r5], #-2576	; 0xfffff5f0
    14c4:	03010567 	movweq	r0, #5479	; 0x1567
    14c8:	26034a0b 	strcs	r4, [r3], -fp, lsl #20
    14cc:	032005ba 			; <UNDEFINED> instruction: 0x032005ba
    14d0:	11058211 	tstne	r5, r1, lsl r2
    14d4:	4c02054a 	cfstr32mi	mvfx0, [r2], {74}	; 0x4a
    14d8:	05841b05 	streq	r1, [r4, #2821]	; 0xb05
    14dc:	03054a04 	movweq	r4, #23044	; 0x5a04
    14e0:	0200834c 	andeq	r8, r0, #76, 6	; 0x30000001
    14e4:	ba060104 	blt	1818fc <mailbuffer+0x15475c>
    14e8:	03040200 	movweq	r0, #16896	; 0x4200
    14ec:	b2080682 	andlt	r0, r8, #136314880	; 0x8200000
    14f0:	05a11405 	streq	r1, [r1, #1029]!	; 0x405
    14f4:	04054a30 	streq	r4, [r5], #-2608	; 0xfffff5d0
    14f8:	500b0566 	andpl	r0, fp, r6, ror #10
    14fc:	4d09056a 	cfstr32mi	mvfx0, [r9, #-424]	; 0xfffffe58
    1500:	f62f0105 			; <UNDEFINED> instruction: 0xf62f0105
    1504:	05841c05 	streq	r1, [r4, #3077]	; 0xc05
    1508:	0105831d 	tsteq	r5, sp, lsl r3
    150c:	0205be83 	andeq	fp, r5, #2096	; 0x830
    1510:	340805a4 	strcc	r0, [r8], #-1444	; 0xfffffa5c
    1514:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    1518:	25054c0d 	strcs	r4, [r5, #-3085]	; 0xfffff3f3
    151c:	4a19056b 	bmi	642ad0 <mailbuffer+0x615930>
    1520:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1524:	04020076 	streq	r0, [r2], #-118	; 0xffffff8a
    1528:	3d054a01 	vstrcc	s8, [r5, #-4]
    152c:	01040200 	mrseq	r0, R12_usr
    1530:	0038054a 	eorseq	r0, r8, sl, asr #10
    1534:	4a010402 	bmi	42544 <mailbuffer+0x153a4>
    1538:	05500c05 	ldrbeq	r0, [r0, #-3077]	; 0xfffff3fb
    153c:	59056821 	stmdbpl	r5, {r0, r5, fp, sp, lr}
    1540:	4a0e054a 	bmi	382a70 <mailbuffer+0x3558d0>
    1544:	052e7105 	streq	r7, [lr, #-261]!	; 0xfffffefb
    1548:	18054a0a 	stmdane	r5, {r1, r3, r9, fp, lr}
    154c:	4a50054d 	bmi	1402a88 <mailbuffer+0x13d58e8>
    1550:	054a3405 	strbeq	r3, [sl, #-1029]	; 0xfffffbfb
    1554:	04052e13 	streq	r2, [r5], #-3603	; 0xfffff1ed
    1558:	4b0c059f 	blmi	302bdc <mailbuffer+0x2d5a3c>
    155c:	4d02056a 	cfstr32mi	mvfx0, [r2, #-424]	; 0xfffffe58
    1560:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    1564:	05a22f01 	streq	r2, [r2, #3841]!	; 0xf01
    1568:	01054b0f 	tsteq	r5, pc, lsl #22
    156c:	9e320367 	cdpls	3, 3, cr0, cr2, cr7, {3}
    1570:	05890305 	streq	r0, [r9, #773]	; 0x305
    1574:	2e170308 	cdpcs	3, 1, cr0, cr7, cr8, {0}
    1578:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    157c:	03054c05 	movweq	r4, #23557	; 0x5c05
    1580:	052e6703 	streq	r6, [lr, #-1795]!	; 0xfffff8fd
    1584:	4a3a0301 	bmi	e82190 <mailbuffer+0xe54ff0>
    1588:	05db1705 	ldrbeq	r1, [fp, #1797]	; 0x705
    158c:	59054a03 	stmdbpl	r5, {r0, r1, r9, fp, lr}
    1590:	6a040585 	bvs	102bac <mailbuffer+0xd5a0c>
    1594:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
    1598:	02054d14 	andeq	r4, r5, #20, 26	; 0x500
    159c:	6986836d 	stmibvs	r6, {r0, r2, r3, r5, r6, r8, r9, pc}
    15a0:	03140583 	tsteq	r4, #549453824	; 0x20c00000
    15a4:	0105660a 	tsteq	r5, sl, lsl #12
    15a8:	03661403 	cmneq	r6, #50331648	; 0x3000000
    15ac:	12056617 	andne	r6, r5, #24117248	; 0x1700000
    15b0:	4a020569 	bmi	82b5c <mailbuffer+0x559bc>
    15b4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    15b8:	05300304 	ldreq	r0, [r0, #-772]!	; 0xfffffcfc
    15bc:	04020060 	streq	r0, [r2], #-96	; 0xffffffa0
    15c0:	051e0803 	ldreq	r0, [lr, #-2051]	; 0xfffff7fd
    15c4:	04020002 	streq	r0, [r2], #-2
    15c8:	4b6b6601 	blmi	1adadd4 <mailbuffer+0x1aadc34>
    15cc:	4e03054b 	cfsh32mi	mvfx0, mvfx3, #43
    15d0:	50140550 	andspl	r0, r4, r0, asr r5
    15d4:	05671c05 	strbeq	r1, [r7, #-3077]!	; 0xfffff3fb
    15d8:	5c086701 	stcpl	7, cr6, [r8], {1}
    15dc:	056d1605 	strbeq	r1, [sp, #-1541]!	; 0xfffff9fb
    15e0:	04054a05 	streq	r4, [r5], #-2565	; 0xfffff5fb
    15e4:	2f14054c 	svccs	0x0014054c
    15e8:	05ba1205 	ldreq	r1, [sl, #517]!	; 0x205
    15ec:	06052f04 	streq	r2, [r5], -r4, lsl #30
    15f0:	6a050530 	bvs	142ab8 <mailbuffer+0x115918>
    15f4:	05301b05 	ldreq	r1, [r0, #-2821]!	; 0xfffff4fb
    15f8:	06054a0c 	streq	r4, [r5], -ip, lsl #20
    15fc:	059f834b 	ldreq	r8, [pc, #843]	; 194f <_start-0x66b1>
    1600:	0530a005 	ldreq	sl, [r0, #-5]!
    1604:	05be4f01 	ldreq	r4, [lr, #3841]!	; 0xf01
    1608:	12058402 	andne	r8, r5, #33554432	; 0x2000000
    160c:	4a040584 	bmi	102c24 <mailbuffer+0xd5a84>
    1610:	05690305 	strbeq	r0, [r9, #-773]!	; 0xfffffcfb
    1614:	03054a56 	movweq	r4, #23126	; 0x5a56
    1618:	0301054a 	movweq	r0, #5450	; 0x154a
    161c:	0305820f 	movweq	r8, #21007	; 0x520f
    1620:	052e7603 	streq	r7, [lr, #-1539]!	; 0xfffff9fd
    1624:	03054a4e 	movweq	r4, #23118	; 0x5a4e
    1628:	8713054a 	ldrhi	r0, [r3, -sl, asr #10]
    162c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1630:	01056819 	tsteq	r5, r9, lsl r8
    1634:	1a05f669 	bne	17efe0 <mailbuffer+0x151e40>
    1638:	680405bf 	stmdavs	r4, {r0, r1, r2, r3, r4, r5, r7, r8, sl}
    163c:	056b1705 	strbeq	r1, [fp, #-1797]!	; 0xfffff8fb
    1640:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    1644:	17056601 	strne	r6, [r5, -r1, lsl #12]
    1648:	02040200 	andeq	r0, r4, #0, 4
    164c:	001505ba 			; <UNDEFINED> instruction: 0x001505ba
    1650:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    1654:	02000f05 	andeq	r0, r0, #5, 30
    1658:	054c0404 	strbeq	r0, [ip, #-1028]	; 0xfffffbfc
    165c:	04020005 	streq	r0, [r2], #-5
    1660:	04054a04 	streq	r4, [r5], #-2564	; 0xfffff5fc
    1664:	4b0d054d 	blmi	342ba0 <mailbuffer+0x315a00>
    1668:	056b1405 	strbeq	r1, [fp, #-1029]!	; 0xfffffbfb
    166c:	04054a3b 	streq	r4, [r5], #-2619	; 0xfffff5c5
    1670:	0309052e 	movweq	r0, #38190	; 0x952e
    1674:	0105820a 	tsteq	r5, sl, lsl #4
    1678:	0302052f 	movweq	r0, #9519	; 0x252f
    167c:	0566019d 	strbeq	r0, [r6, #-413]!	; 0xfffffe63
    1680:	05838a03 	streq	r8, [r3, #2563]	; 0xa03
    1684:	06024b02 	streq	r4, [r2], -r2, lsl #22
    1688:	77010100 	strvc	r0, [r1, -r0, lsl #2]
    168c:	02000001 	andeq	r0, r0, #1
    1690:	00005c00 	andeq	r5, r0, r0, lsl #24
    1694:	fb010200 	blx	41e9e <mailbuffer+0x14cfe>
    1698:	01000d0e 	tsteq	r0, lr, lsl #26
    169c:	00010101 	andeq	r0, r1, r1, lsl #2
    16a0:	00010000 	andeq	r0, r1, r0
    16a4:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    16a8:	2f656d6f 	svccs	0x00656d6f
    16ac:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
    16b0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    16b4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    16b8:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
    16bc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    16c0:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
    16c4:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
    16c8:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
    16cc:	2f534f54 	svccs	0x00534f54
    16d0:	6f6d6544 	svcvs	0x006d6544
    16d4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    16d8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    16dc:	72690000 	rsbvc	r0, r9, #0
    16e0:	00632e71 	rsbeq	r2, r3, r1, ror lr
    16e4:	69000001 	stmdbvs	r0, {r0}
    16e8:	682e7172 	stmdavs	lr!, {r1, r4, r5, r6, r8, ip, sp, lr}
    16ec:	00000100 	andeq	r0, r0, r0, lsl #2
    16f0:	00010500 	andeq	r0, r1, r0, lsl #10
    16f4:	34c40205 	strbcc	r0, [r4], #517	; 0x205
    16f8:	1e030001 	cdpne	0, 0, cr0, cr3, cr1, {0}
    16fc:	9f080501 	svcls	0x00080501
    1700:	05311b05 	ldreq	r1, [r1, #-2821]!	; 0xfffff4fb
    1704:	10054a19 	andne	r4, r5, r9, lsl sl
    1708:	1905312e 	stmdbne	r5, {r1, r2, r3, r5, r8, ip, sp}
    170c:	66060585 	strvs	r0, [r6], -r5, lsl #11
    1710:	054b1605 	strbeq	r1, [fp, #-1541]	; 0xfffff9fb
    1714:	14056604 	strne	r6, [r5], #-1540	; 0xfffff9fc
    1718:	660e05f5 			; <UNDEFINED> instruction: 0x660e05f5
    171c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    1720:	66730308 	ldrbtvs	r0, [r3], -r8, lsl #6
    1724:	0f030105 	svceq	0x00030105
    1728:	2f058a66 	svccs	0x00058a66
    172c:	2e19054b 	cfmac32cs	mvfx0, mvfx9, mvfx11
    1730:	05311505 	ldreq	r1, [r1, #-1285]!	; 0xfffffafb
    1734:	14052e05 	strne	r2, [r5], #-3589	; 0xfffff1fb
    1738:	4a28054b 	bmi	a02c6c <mailbuffer+0x9d5acc>
    173c:	054a0305 	strbeq	r0, [sl, #-773]	; 0xfffffcfb
    1740:	05058515 	streq	r8, [r5, #-1301]	; 0xfffffaeb
    1744:	4b14052e 	blmi	502c04 <mailbuffer+0x4d5a64>
    1748:	054a2805 	strbeq	r2, [sl, #-2053]	; 0xfffff7fb
    174c:	15054a03 	strne	r4, [r5, #-2563]	; 0xfffff5fd
    1750:	2e050585 	cfsh32cs	mvfx0, mvfx5, #-59
    1754:	054b2e05 	strbeq	r2, [fp, #-3589]	; 0xfffff1fb
    1758:	03054a25 	movweq	r4, #23077	; 0x5a25
    175c:	8301052e 	movwhi	r0, #5422	; 0x152e
    1760:	4b020585 	blmi	82d7c <mailbuffer+0x55bdc>
    1764:	852f0105 	strhi	r0, [pc, #-261]!	; 1667 <_start-0x6999>
    1768:	054b0205 	strbeq	r0, [fp, #-517]	; 0xfffffdfb
    176c:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    1770:	0305bb05 	movweq	fp, #23301	; 0x5b05
    1774:	2f210567 	svccs	0x00210567
    1778:	bb030583 	bllt	c2d8c <mailbuffer+0x95bec>
    177c:	85300105 	ldrhi	r0, [r0, #-261]!	; 0xfffffefb
    1780:	05832305 	streq	r2, [r3, #773]	; 0x305
    1784:	05054a10 	streq	r4, [r5, #-2576]	; 0xfffff5f0
    1788:	67080568 	strvs	r0, [r8, -r8, ror #10]
    178c:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    1790:	01054b0e 	tsteq	r5, lr, lsl #22
    1794:	05ba0a03 	ldreq	r0, [sl, #2563]!	; 0xa03
    1798:	2e78030a 	cdpcs	3, 7, cr0, cr8, cr10, {0}
    179c:	05670805 	strbeq	r0, [r7, #-2053]!	; 0xfffff7fb
    17a0:	0e052e12 	mcreq	14, 0, r2, cr5, cr2, {0}
    17a4:	c001054b 	andgt	r0, r1, fp, asr #10
    17a8:	052a0a05 	streq	r0, [sl, #-2565]!	; 0xfffff5fb
    17ac:	16056708 	strne	r6, [r5], -r8, lsl #14
    17b0:	4b0e052e 	blmi	382c70 <mailbuffer+0x355ad0>
    17b4:	bdbc0105 	ldflts	f0, [ip, #20]!
    17b8:	05832305 	streq	r2, [r3, #773]	; 0x305
    17bc:	05054a10 	streq	r4, [r5, #-2576]	; 0xfffff5f0
    17c0:	67080568 	strvs	r0, [r8, -r8, ror #10]
    17c4:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    17c8:	11054b0e 	tstne	r5, lr, lsl #22
    17cc:	4a0e054a 	bmi	382cfc <mailbuffer+0x355b5c>
    17d0:	0a030105 	beq	c1bec <mailbuffer+0x94a4c>
    17d4:	030a0566 	movweq	r0, #42342	; 0xa566
    17d8:	08052e78 	stmdaeq	r5, {r3, r4, r5, r6, r9, sl, fp, sp}
    17dc:	2e130567 	cfmsc32cs	mvfx0, mvfx3, mvfx7
    17e0:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
    17e4:	0e054a11 			; <UNDEFINED> instruction: 0x0e054a11
    17e8:	6c01054a 	cfstr32vs	mvfx0, [r1], {74}	; 0x4a
    17ec:	052a0a05 	streq	r0, [sl, #-2565]!	; 0xfffff5fb
    17f0:	17056708 	strne	r6, [r5, -r8, lsl #14]
    17f4:	4b0e052e 	blmi	382cb4 <mailbuffer+0x355b14>
    17f8:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    17fc:	01054a0e 	tsteq	r5, lr, lsl #20
    1800:	000c0268 	andeq	r0, ip, r8, ror #4
    1804:	01790101 	cmneq	r9, r1, lsl #2
    1808:	00020000 	andeq	r0, r2, r0
    180c:	0000005e 	andeq	r0, r0, lr, asr r0
    1810:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1814:	0101000d 	tsteq	r1, sp
    1818:	00000101 	andeq	r0, r0, r1, lsl #2
    181c:	00000100 	andeq	r0, r0, r0, lsl #2
    1820:	6f682f01 	svcvs	0x00682f01
    1824:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    1828:	2f6c7261 	svccs	0x006c7261
    182c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1830:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1834:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    1838:	6172676f 	cmnvs	r2, pc, ror #14
    183c:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    1840:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    1844:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    1848:	442f534f 	strtmi	r5, [pc], #-847	; 1850 <_start-0x67b0>
    184c:	2f6f6d65 	svccs	0x006f6d65
    1850:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1854:	00737265 	rsbseq	r7, r3, r5, ror #4
    1858:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
    185c:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    1860:	67000001 	strvs	r0, [r0, -r1]
    1864:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1868:	00010068 	andeq	r0, r1, r8, rrx
    186c:	41050000 	mrsmi	r0, (UNDEF: 5)
    1870:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
    1874:	03000138 	movweq	r0, #312	; 0x138
    1878:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    187c:	0605a016 			; <UNDEFINED> instruction: 0x0605a016
    1880:	301b0582 	andscc	r0, fp, r2, lsl #11
    1884:	052e1005 	streq	r1, [lr, #-5]!
    1888:	06056814 			; <UNDEFINED> instruction: 0x06056814
    188c:	18052008 	stmdane	r5, {r3, sp}
    1890:	820f052f 	andhi	r0, pc, #197132288	; 0xbc00000
    1894:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1898:	13054a06 	movwne	r4, #23046	; 0x5a06
    189c:	4a230567 	bmi	8c2e40 <mailbuffer+0x895ca0>
    18a0:	05821a05 	streq	r1, [r2, #2565]	; 0xa05
    18a4:	07052e06 	streq	r2, [r5, -r6, lsl #28]
    18a8:	2e180567 	cfmsc32cs	mvfx0, mvfx8, mvfx7
    18ac:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
    18b0:	0205bc3f 	andeq	fp, r5, #16128	; 0x3f00
    18b4:	830105bb 	movwhi	r0, #5563	; 0x15bb
    18b8:	05683805 	strbeq	r3, [r8, #-2053]!	; 0xfffff7fb
    18bc:	20059f10 	andcs	r9, r5, r0, lsl pc
    18c0:	4a170567 	bmi	5c2e64 <mailbuffer+0x595cc4>
    18c4:	054a1005 	strbeq	r1, [sl, #-5]
    18c8:	17053004 	strne	r3, [r5, -r4]
    18cc:	08010567 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sl}
    18d0:	2c1705b0 	cfldr32cs	mvfx0, [r7], {176}	; 0xb0
    18d4:	3e080105 	adfcce	f0, f0, f5
    18d8:	05a02305 	streq	r2, [r0, #773]!	; 0x305
    18dc:	1e058310 	mcrne	3, 0, r8, cr5, cr0, {0}
    18e0:	4a17052e 	bmi	5c2da0 <mailbuffer+0x595c00>
    18e4:	05822c05 	streq	r2, [r2, #3077]	; 0xc05
    18e8:	31054a23 	tstcc	r5, r3, lsr #20
    18ec:	2f01052e 	svccs	0x0001052e
    18f0:	bb1705a1 	bllt	5c2f7c <mailbuffer+0x595ddc>
    18f4:	2f661005 	svccs	0x00661005
    18f8:	05680205 	strbeq	r0, [r8, #-517]!	; 0xfffffdfb
    18fc:	055a0817 	ldrbeq	r0, [sl, #-2071]	; 0xfffff7e9
    1900:	05ad0803 	streq	r0, [sp, #2051]!	; 0x803
    1904:	03053017 	movweq	r3, #20503	; 0x5017
    1908:	17053d08 	strne	r3, [r5, -r8, lsl #26]
    190c:	08030530 	stmdaeq	r3, {r4, r5, r8, sl}
    1910:	301705ad 	andscc	r0, r7, sp, lsr #11
    1914:	3d080305 	stccc	3, cr0, [r8, #-20]	; 0xffffffec
    1918:	05301805 	ldreq	r1, [r0, #-2053]!	; 0xfffff7fb
    191c:	05ad0803 	streq	r0, [sp, #2051]!	; 0x803
    1920:	03053018 	movweq	r3, #20504	; 0x5018
    1924:	05303d08 	ldreq	r3, [r0, #-3336]!	; 0xfffff2f8
    1928:	05a13001 	streq	r3, [r1, #1]!
    192c:	1805bb21 	stmdane	r5, {r0, r5, r8, r9, fp, ip, sp, pc}
    1930:	4a15054a 	bmi	542e60 <mailbuffer+0x515cc0>
    1934:	2f2e1005 	svccs	0x002e1005
    1938:	05680205 	strbeq	r0, [r8, #-517]!	; 0xfffffdfb
    193c:	055a0817 	ldrbeq	r0, [sl, #-2071]	; 0xfffff7e9
    1940:	05ad0803 	streq	r0, [sp, #2051]!	; 0x803
    1944:	03053017 	movweq	r3, #20503	; 0x5017
    1948:	17053d08 	strne	r3, [r5, -r8, lsl #26]
    194c:	08030530 	stmdaeq	r3, {r4, r5, r8, sl}
    1950:	301705ad 	andscc	r0, r7, sp, lsr #11
    1954:	3d080305 	stccc	3, cr0, [r8, #-20]	; 0xffffffec
    1958:	05301805 	ldreq	r1, [r0, #-2053]!	; 0xfffff7fb
    195c:	05ad0803 	streq	r0, [sp, #2051]!	; 0x803
    1960:	03053018 	movweq	r3, #20504	; 0x5018
    1964:	05303d08 	ldreq	r3, [r0, #-3336]!	; 0xfffff2f8
    1968:	05a13001 	streq	r3, [r1, #1]!
    196c:	17058320 	strne	r8, [r5, -r0, lsr #6]
    1970:	4a10054a 	bmi	402ea0 <mailbuffer+0x3d5d00>
    1974:	6807052f 	stmdavs	r7, {r0, r1, r2, r3, r5, r8, sl}
    1978:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    197c:	0a028301 	beq	a2588 <mailbuffer+0x753e8>
    1980:	ad010100 	stfges	f0, [r1, #-0]
    1984:	02000000 	andeq	r0, r0, #0
    1988:	00005700 	andeq	r5, r0, r0, lsl #14
    198c:	fb010200 	blx	42196 <mailbuffer+0x14ff6>
    1990:	01000d0e 	tsteq	r0, lr, lsl #26
    1994:	00010101 	andeq	r0, r1, r1, lsl #2
    1998:	00010000 	andeq	r0, r1, r0
    199c:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    19a0:	2f656d6f 	svccs	0x00656d6f
    19a4:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
    19a8:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    19ac:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    19b0:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
    19b4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    19b8:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
    19bc:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
    19c0:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
    19c4:	2f534f54 	svccs	0x00534f54
    19c8:	6f6d6544 	svcvs	0x006d6544
    19cc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    19d0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    19d4:	616d0000 	cmnvs	sp, r0
    19d8:	6f626c69 	svcvs	0x00626c69
    19dc:	00632e78 	rsbeq	r2, r3, r8, ror lr
    19e0:	00000001 	andeq	r0, r0, r1
    19e4:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    19e8:	013e3c02 	teqeq	lr, r2, lsl #24
    19ec:	010f0300 	mrseq	r0, SP_hyp
    19f0:	059f0605 	ldreq	r0, [pc, #1541]	; 1ffd <_start-0x6003>
    19f4:	05054c07 	streq	r4, [r5, #-3079]	; 0xfffff3f9
    19f8:	6603059e 			; <UNDEFINED> instruction: 0x6603059e
    19fc:	d7300205 	ldrle	r0, [r0, -r5, lsl #4]!
    1a00:	052f0105 	streq	r0, [pc, #-261]!	; 1903 <_start-0x66fd>
    1a04:	0605681d 			; <UNDEFINED> instruction: 0x0605681d
    1a08:	4d090584 	cfstr32mi	mvfx0, [r9, #-528]	; 0xfffffdf0
    1a0c:	059f0a05 	ldreq	r0, [pc, #2565]	; 2419 <_start-0x5be7>
    1a10:	07054a06 	streq	r4, [r5, -r6, lsl #20]
    1a14:	2f040549 	svccs	0x00040549
    1a18:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
    1a1c:	05056709 	streq	r6, [r5, #-1801]	; 0xfffff8f7
    1a20:	0307054a 	movweq	r0, #30026	; 0x754a
    1a24:	0305667a 	movweq	r6, #22138	; 0x567a
    1a28:	30080534 	andcc	r0, r8, r4, lsr r5
    1a2c:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1a30:	01010008 	tsteq	r1, r8
    1a34:	00000315 	andeq	r0, r0, r5, lsl r3
    1a38:	006e0002 	rsbeq	r0, lr, r2
    1a3c:	01020000 	mrseq	r0, (UNDEF: 2)
    1a40:	000d0efb 	strdeq	r0, [sp], -fp
    1a44:	01010101 	tsteq	r1, r1, lsl #2
    1a48:	01000000 	mrseq	r0, (UNDEF: 0)
    1a4c:	2f010000 	svccs	0x00010000
    1a50:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    1a54:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
    1a58:	6f442f6c 	svcvs	0x00442f6c
    1a5c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
    1a60:	2f73746e 	svccs	0x0073746e
    1a64:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1a68:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
    1a6c:	2f676e69 	svccs	0x00676e69
    1a70:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1a74:	534f5452 	movtpl	r5, #62546	; 0xf452
    1a78:	6d65442f 	cfstrdvs	mvd4, [r5, #-188]!	; 0xffffff44
    1a7c:	72442f6f 	subvc	r2, r4, #444	; 0x1bc
    1a80:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1a84:	76000073 			; <UNDEFINED> instruction: 0x76000073
    1a88:	6f656469 	svcvs	0x00656469
    1a8c:	0100632e 	tsteq	r0, lr, lsr #6
    1a90:	69760000 	ldmdbvs	r6!, {}^	; <UNPREDICTABLE>
    1a94:	2e6f6564 	cdpcs	5, 6, cr6, cr15, cr4, {3}
    1a98:	00010068 	andeq	r0, r1, r8, rrx
    1a9c:	35783500 	ldrbcc	r3, [r8, #-1280]!	; 0xfffffb00
    1aa0:	6e6f665f 	mcrvs	6, 3, r6, cr15, cr15, {2}
    1aa4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1aa8:	00000001 	andeq	r0, r0, r1
    1aac:	05001505 	streq	r1, [r0, #-1285]	; 0xfffffafb
    1ab0:	013f2802 	teqeq	pc, r2, lsl #16
    1ab4:	010e0300 	mrseq	r0, ELR_hyp
    1ab8:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    1abc:	0e056601 	cfmadd32eq	mvax0, mvfx6, mvfx5, mvfx1
    1ac0:	030f05a4 	movweq	r0, #62884	; 0xf5a4
    1ac4:	10054a1c 	andne	r4, r5, ip, lsl sl
    1ac8:	68676867 	stmdavs	r7!, {r0, r1, r2, r5, r6, fp, sp, lr}^
    1acc:	9f676767 	svcls	0x00676767
    1ad0:	056767a0 	strbeq	r6, [r7, #-1952]!	; 0xfffff860
    1ad4:	a09f6711 	addsge	r6, pc, r1, lsl r7	; <UNPREDICTABLE>
    1ad8:	69676767 	stmdbvs	r7!, {r0, r1, r2, r5, r6, r8, r9, sl, sp, lr}^
    1adc:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
    1ae0:	69070568 	stmdbvs	r7, {r3, r5, r6, r8, sl}
    1ae4:	832f0305 			; <UNDEFINED> instruction: 0x832f0305
    1ae8:	05481205 	strbeq	r1, [r8, #-517]	; 0xfffffdfb
    1aec:	2a054a07 	bcs	154310 <mailbuffer+0x127170>
    1af0:	4a2f0551 	bmi	bc303c <mailbuffer+0xb95e9c>
    1af4:	052e1005 	streq	r1, [lr, #-5]!
    1af8:	09052e0e 	stmdbeq	r5, {r1, r2, r3, r9, sl, fp, sp}
    1afc:	6701054b 	strvs	r0, [r1, -fp, asr #10]
    1b00:	77083c05 	strvc	r3, [r8, -r5, lsl #24]
    1b04:	05bb1005 	ldreq	r1, [fp, #5]!
    1b08:	22054a13 	andcs	r4, r5, #77824	; 0x13000
    1b0c:	4a10059e 	bmi	40318c <mailbuffer+0x3d5fec>
    1b10:	054a2705 	strbeq	r2, [sl, #-1797]	; 0xfffff8fb
    1b14:	5f054b01 	svcpl	0x00054b01
    1b18:	d71505bd 			; <UNDEFINED> instruction: 0xd71505bd
    1b1c:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    1b20:	0f054a05 	svceq	0x00054a05
    1b24:	4a09052f 	bmi	242fe8 <mailbuffer+0x215e48>
    1b28:	02000d05 	andeq	r0, r0, #320	; 0x140
    1b2c:	052f0304 	streq	r0, [pc, #-772]!	; 1830 <_start-0x67d0>
    1b30:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    1b34:	09058103 	stmdbeq	r5, {r0, r1, r8, pc}
    1b38:	01040200 	mrseq	r0, R12_usr
    1b3c:	001a0566 	andseq	r0, sl, r6, ror #10
    1b40:	81020402 	tsthi	r2, r2, lsl #8
    1b44:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1b48:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    1b4c:	39058701 	stmdbcc	r5, {r0, r8, r9, sl, pc}
    1b50:	05660e03 	strbeq	r0, [r6, #-3587]!	; 0xfffff1fd
    1b54:	0505f604 	streq	pc, [r5, #-1540]	; 0xfffff9fc
    1b58:	05686767 	strbeq	r6, [r8, #-1895]!	; 0xfffff899
    1b5c:	02056a09 	andeq	r6, r5, #36864	; 0x9000
    1b60:	2f0a054a 	svccs	0x000a054a
    1b64:	054a0305 	strbeq	r0, [sl, #-773]	; 0xfffffcfb
    1b68:	0805300f 	stmdaeq	r5, {r0, r1, r2, r3, ip, sp}
    1b6c:	07055808 	streq	r5, [r5, -r8, lsl #16]
    1b70:	4b100566 	blmi	403110 <mailbuffer+0x3d5f70>
    1b74:	054a1405 	strbeq	r1, [sl, #-1029]	; 0xfffffbfb
    1b78:	2d056619 	stccs	6, cr6, [r5, #-100]	; 0xffffff9c
    1b7c:	66280566 	strtvs	r0, [r8], -r6, ror #10
    1b80:	052e1005 	streq	r1, [lr, #-5]!
    1b84:	21054a33 	tstcs	r5, r3, lsr sl
    1b88:	02040200 	andeq	r0, r4, #0, 4
    1b8c:	00030547 	andeq	r0, r3, r7, asr #10
    1b90:	66010402 	strvs	r0, [r1], -r2, lsl #8
    1b94:	02001f05 	andeq	r1, r0, #5, 30
    1b98:	05650204 	strbeq	r0, [r5, #-516]!	; 0xfffffdfc
    1b9c:	04020002 	streq	r0, [r2], #-2
    1ba0:	01056601 	tsteq	r5, r1, lsl #12
    1ba4:	d93b056e 	ldmdble	fp!, {r1, r2, r3, r5, r6, r8, sl}
    1ba8:	05d70805 	ldrbeq	r0, [r7, #2053]	; 0x805
    1bac:	03052f10 	movweq	r2, #24336	; 0x5f10
    1bb0:	9f050566 	svcls	0x00050566
    1bb4:	05640905 	strbeq	r0, [r4, #-2309]!	; 0xfffff6fb
    1bb8:	01054a08 	tsteq	r5, r8, lsl #20
    1bbc:	6b2e054e 	blvs	b830fc <mailbuffer+0xb55f5c>
    1bc0:	059f0c05 	ldreq	r0, [pc, #3077]	; 27cd <_start-0x5833>
    1bc4:	02054a04 	andeq	r4, r5, #4, 20	; 0x4000
    1bc8:	4b1f054d 	blmi	7c3104 <mailbuffer+0x795f64>
    1bcc:	054a2a05 	strbeq	r2, [sl, #-2565]	; 0xfffff5fb
    1bd0:	04058207 	streq	r8, [r5], #-519	; 0xfffffdf9
    1bd4:	0015052f 	andseq	r0, r5, pc, lsr #10
    1bd8:	66010402 	strvs	r0, [r1], -r2, lsl #8
    1bdc:	05300205 	ldreq	r0, [r0, #-517]!	; 0xfffffdfb
    1be0:	0d05d728 	stceq	7, cr13, [r5, #-160]	; 0xffffff60
    1be4:	4b100566 	blmi	403184 <mailbuffer+0x3d5fe4>
    1be8:	05820405 	streq	r0, [r2, #1029]	; 0x405
    1bec:	15054b25 	strne	r4, [r5, #-2853]	; 0xfffff4db
    1bf0:	2e1105d6 	mrccs	5, 0, r0, cr1, cr6, {6}
    1bf4:	05662a05 	strbeq	r2, [r6, #-2565]!	; 0xfffff5fb
    1bf8:	12054a05 	andne	r4, r5, #20480	; 0x5000
    1bfc:	4b0f054c 	blmi	3c3134 <mailbuffer+0x395f94>
    1c00:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    1c04:	1e05670a 	cdpne	7, 0, cr6, cr5, cr10, {0}
    1c08:	02040200 	andeq	r0, r4, #0, 4
    1c0c:	000b052e 	andeq	r0, fp, lr, lsr #10
    1c10:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1c14:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    1c18:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    1c1c:	0405680c 	streq	r6, [r5], #-2060	; 0xfffff7f4
    1c20:	0010054a 	andseq	r0, r0, sl, asr #10
    1c24:	2f030402 	svccs	0x00030402
    1c28:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    1c2c:	059e0304 	ldreq	r0, [lr, #772]	; 0x304
    1c30:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1c34:	24054903 	strcs	r4, [r5], #-2307	; 0xfffff6fd
    1c38:	01040200 	mrseq	r0, R12_usr
    1c3c:	00040566 	andeq	r0, r4, r6, ror #10
    1c40:	9e010402 	cdpls	4, 0, cr0, cr1, cr2, {0}
    1c44:	67690f05 	strbvs	r0, [r9, -r5, lsl #30]!
    1c48:	671f0584 	ldrvs	r0, [pc, -r4, lsl #11]
    1c4c:	05f20f05 	ldrbeq	r0, [r2, #3845]!	; 0xf05
    1c50:	1505a204 	strne	sl, [r5, #-516]	; 0xfffffdfc
    1c54:	01040200 	mrseq	r0, R12_usr
    1c58:	03120566 	tsteq	r2, #427819008	; 0x19800000
    1c5c:	01054a65 	tsteq	r5, r5, ror #20
    1c60:	052e1c03 	streq	r1, [lr, #-3075]!	; 0xfffff3fd
    1c64:	053f0839 	ldreq	r0, [pc, #-2105]!	; 1433 <_start-0x6bcd>
    1c68:	0305bb0b 	movweq	fp, #23307	; 0x5b0b
    1c6c:	4b07054a 	blmi	1c319c <mailbuffer+0x195ffc>
    1c70:	05850605 	streq	r0, [r5, #1541]	; 0x605
    1c74:	12054b08 	andne	r4, r5, #8, 22	; 0x2000
    1c78:	660a052f 	strvs	r0, [sl], -pc, lsr #10
    1c7c:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    1c80:	09059f04 	stmdbeq	r5, {r2, r8, r9, sl, fp, ip, pc}
    1c84:	4a080564 	bmi	20321c <mailbuffer+0x1d607c>
    1c88:	054f1d05 	strbeq	r1, [pc, #-3333]	; f8b <_start-0x7075>
    1c8c:	0b054a10 	bleq	1544d4 <mailbuffer+0x127334>
    1c90:	9f170566 	svcls	0x00170566
    1c94:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    1c98:	10052e06 	andne	r2, r5, r6, lsl #28
    1c9c:	660b054a 	strvs	r0, [fp], -sl, asr #10
    1ca0:	05671705 	strbeq	r1, [r7, #-1797]!	; 0xfffff8fb
    1ca4:	06054a1d 			; <UNDEFINED> instruction: 0x06054a1d
    1ca8:	4a10052e 	bmi	403168 <mailbuffer+0x3d5fc8>
    1cac:	05660b05 	strbeq	r0, [r6, #-2821]!	; 0xfffff4fb
    1cb0:	1d056717 	stcne	7, cr6, [r5, #-92]	; 0xffffffa4
    1cb4:	2e06054a 	cfsh32cs	mvfx0, mvfx6, #42
    1cb8:	054a1005 	strbeq	r1, [sl, #-5]
    1cbc:	1705660b 	strne	r6, [r5, -fp, lsl #12]
    1cc0:	4a1d0567 	bmi	743264 <mailbuffer+0x7160c4>
    1cc4:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    1cc8:	0b054a10 	bleq	154510 <mailbuffer+0x127370>
    1ccc:	67170566 	ldrvs	r0, [r7, -r6, ror #10]
    1cd0:	054a1c05 	strbeq	r1, [sl, #-3077]	; 0xfffff3fb
    1cd4:	10052e06 	andne	r2, r5, r6, lsl #28
    1cd8:	660b054a 	strvs	r0, [fp], -sl, asr #10
    1cdc:	05671705 	strbeq	r1, [r7, #-1797]!	; 0xfffff8fb
    1ce0:	06054a1c 			; <UNDEFINED> instruction: 0x06054a1c
    1ce4:	4a10052e 	bmi	4031a4 <mailbuffer+0x3d6004>
    1ce8:	05660b05 	strbeq	r0, [r6, #-2821]!	; 0xfffff4fb
    1cec:	0605671c 			; <UNDEFINED> instruction: 0x0605671c
    1cf0:	4a10054a 	bmi	403220 <mailbuffer+0x3d6080>
    1cf4:	05660b05 	strbeq	r0, [r6, #-2821]!	; 0xfffff4fb
    1cf8:	0b056706 	bleq	15b918 <mailbuffer+0x12e778>
    1cfc:	8302054a 	movwhi	r0, #9546	; 0x254a
    1d00:	6d031105 	stfvss	f1, [r3, #-20]	; 0xffffffec
    1d04:	0301059e 	movweq	r0, #5534	; 0x159e
    1d08:	11052e14 	tstne	r5, r4, lsl lr
    1d0c:	6a0a0584 	bvs	283324 <mailbuffer+0x256184>
    1d10:	054a0205 	strbeq	r0, [sl, #-517]	; 0xfffffdfb
    1d14:	0402000e 	streq	r0, [r2], #-14
    1d18:	12052f03 	andne	r2, r5, #3, 30
    1d1c:	03040200 	movweq	r0, #16896	; 0x4200
    1d20:	0034059e 	mlaseq	r4, lr, r5, r0
    1d24:	49030402 	stmdbmi	r3, {r1, sl}
    1d28:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    1d2c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    1d30:	04020002 	streq	r0, [r2], #-2
    1d34:	27059e01 	strcs	r9, [r5, -r1, lsl #28]
    1d38:	9e2b056b 	cfsh64ls	mvdx0, mvdx11, #59
    1d3c:	05d60205 	ldrbeq	r0, [r6, #517]	; 0x205
    1d40:	0205824d 	andeq	r8, r5, #-805306364	; 0xd0000004
    1d44:	8301059e 	movwhi	r0, #5534	; 0x159e
    1d48:	01001402 	tsteq	r0, r2, lsl #8
    1d4c:	0001c501 	andeq	ip, r1, r1, lsl #10
    1d50:	88000200 	stmdahi	r0, {r9}
    1d54:	02000000 	andeq	r0, r0, #0
    1d58:	0d0efb01 	vstreq	d15, [lr, #-4]
    1d5c:	01010100 	mrseq	r0, (UNDEF: 17)
    1d60:	00000001 	andeq	r0, r0, r1
    1d64:	01000001 	tsteq	r0, r1
    1d68:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1cb4 <_start-0x634c>
    1d6c:	61632f65 	cmnvs	r3, r5, ror #30
    1d70:	442f6c72 	strtmi	r6, [pc], #-3186	; 1d78 <_start-0x6288>
    1d74:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1d78:	73746e65 	cmnvc	r4, #1616	; 0x650
    1d7c:	6f72702f 	svcvs	0x0072702f
    1d80:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1d84:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
    1d88:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1d8c:	4f54522d 	svcmi	0x0054522d
    1d90:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    1d94:	442f6f6d 	strtmi	r6, [pc], #-3949	; 1d9c <_start-0x6264>
    1d98:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1d9c:	2f007372 	svccs	0x00007372
    1da0:	2f727375 	svccs	0x00727375
    1da4:	2f62696c 	svccs	0x0062696c
    1da8:	2f636367 	svccs	0x00636367
    1dac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1db0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1db4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1db8:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    1dbc:	2f302e32 	svccs	0x00302e32
    1dc0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1dc4:	00656475 	rsbeq	r6, r5, r5, ror r4
    1dc8:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    1dcc:	0100632e 	tsteq	r0, lr, lsr #6
    1dd0:	74730000 	ldrbtvc	r0, [r3], #-0
    1dd4:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    1dd8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1ddc:	05000000 	streq	r0, [r0, #-0]
    1de0:	02050027 	andeq	r0, r5, #39	; 0x27
    1de4:	000148b4 			; <UNDEFINED> instruction: 0x000148b4
    1de8:	bb140518 	bllt	503250 <mailbuffer+0x4d60b0>
    1dec:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
    1df0:	10052f0b 	andne	r2, r5, fp, lsl #30
    1df4:	4a0e0566 	bmi	383394 <mailbuffer+0x3561f4>
    1df8:	052d0c05 	streq	r0, [sp, #-3077]!	; 0xfffff3fb
    1dfc:	0c05660a 	stceq	6, cr6, [r5], {10}
    1e00:	2f01054c 	svccs	0x0001054c
    1e04:	ba843505 	blt	fe10f220 <_estack+0xf60ff220>
    1e08:	054b0505 	strbeq	r0, [fp, #-1285]	; 0xfffffafb
    1e0c:	05052e13 	streq	r2, [r5, #-3603]	; 0xfffff1ed
    1e10:	9f133002 	svcls	0x00133002
    1e14:	059f0c05 	ldreq	r0, [pc, #3077]	; 2a21 <_start-0x55df>
    1e18:	35054b01 	strcc	r4, [r5, #-2817]	; 0xfffff4ff
    1e1c:	bf0b0568 	svclt	0x000b0568
    1e20:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    1e24:	14054b0b 	strne	r4, [r5], #-2827	; 0xfffff4f5
    1e28:	660c052f 	strvs	r0, [ip], -pc, lsr #10
    1e2c:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    1e30:	0d052e0f 	stceq	14, cr2, [r5, #-60]	; 0xffffffc4
    1e34:	660b052d 	strvs	r0, [fp], -sp, lsr #10
    1e38:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    1e3c:	35052f01 	strcc	r2, [r5, #-3841]	; 0xfffff0ff
    1e40:	bb1a0584 	bllt	683458 <mailbuffer+0x6562b8>
    1e44:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    1e48:	0d054b0a 	vstreq	d4, [r5, #-40]	; 0xffffffd8
    1e4c:	4a14052f 	bmi	503310 <mailbuffer+0x4d6170>
    1e50:	054a0b05 	strbeq	r0, [sl, #-2821]	; 0xfffff4fb
    1e54:	1a054b14 	bne	154aac <mailbuffer+0x12790c>
    1e58:	4a180566 	bmi	6033f8 <mailbuffer+0x5d6258>
    1e5c:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
    1e60:	0c056614 	stceq	6, cr6, [r5], {20}
    1e64:	660a0562 	strvs	r0, [sl], -r2, ror #10
    1e68:	054f0c05 	strbeq	r0, [pc, #-3077]	; 126b <_start-0x6d95>
    1e6c:	2a052f01 	bcs	14da78 <mailbuffer+0x1208d8>
    1e70:	9f0b0584 	svcls	0x000b0584
    1e74:	001a054b 	andseq	r0, sl, fp, asr #10
    1e78:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1e7c:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    1e80:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    1e84:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    1e88:	14056601 	strne	r6, [r5], #-1537	; 0xfffff9ff
    1e8c:	01040200 	mrseq	r0, R12_usr
    1e90:	000c052e 	andeq	r0, ip, lr, lsr #10
    1e94:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1e98:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1e9c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1ea0:	01054c0c 	tsteq	r5, ip, lsl #24
    1ea4:	8435052f 	ldrthi	r0, [r5], #-1327	; 0xfffffad1
    1ea8:	05bb0b05 	ldreq	r0, [fp, #2821]!	; 0xb05
    1eac:	0c054c0f 	stceq	12, cr4, [r5], {15}
    1eb0:	4b140566 	blmi	503450 <mailbuffer+0x4d62b0>
    1eb4:	054b1c05 	strbeq	r1, [fp, #-3077]	; 0xfffff3fb
    1eb8:	18056613 	stmdane	r5, {r0, r1, r4, r9, sl, sp, lr}
    1ebc:	2e160566 	cfmsc32cs	mvfx0, mvfx6, mvfx6
    1ec0:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    1ec4:	0b052e05 	bleq	14d6e0 <mailbuffer+0x120540>
    1ec8:	2f0e054b 	svccs	0x000e054b
    1ecc:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    1ed0:	0b05490d 	bleq	15430c <mailbuffer+0x12716c>
    1ed4:	4c0c0566 	cfstr32mi	mvfx0, [ip], {102}	; 0x66
    1ed8:	052f0105 	streq	r0, [pc, #-261]!	; 1ddb <_start-0x6225>
    1edc:	0c05841d 	cfstrseq	mvf8, [r5], {29}
    1ee0:	4a050584 	bmi	1434f8 <mailbuffer+0x116358>
    1ee4:	02002005 	andeq	r2, r0, #5
    1ee8:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    1eec:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    1ef0:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
    1ef4:	01040200 	mrseq	r0, R12_usr
    1ef8:	4b0c0582 	blmi	303508 <mailbuffer+0x2d6368>
    1efc:	052f0105 	streq	r0, [pc, #-261]!	; 1dff <_start-0x6201>
    1f00:	2605860b 	strcs	r8, [r5], -fp, lsl #12
    1f04:	8233054a 	eorshi	r0, r3, #310378496	; 0x12800000
    1f08:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    1f0c:	01058213 	tsteq	r5, r3, lsl r2
    1f10:	000c024a 	andeq	r0, ip, sl, asr #4
    1f14:	02850101 	addeq	r0, r5, #1073741824	; 0x40000000
    1f18:	00020000 	andeq	r0, r2, r0
    1f1c:	00000107 	andeq	r0, r0, r7, lsl #2
    1f20:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1f24:	0101000d 	tsteq	r1, sp
    1f28:	00000101 	andeq	r0, r0, r1, lsl #2
    1f2c:	00000100 	andeq	r0, r0, r0, lsl #2
    1f30:	6f682f01 	svcvs	0x00682f01
    1f34:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    1f38:	2f6c7261 	svccs	0x006c7261
    1f3c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1f40:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1f44:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    1f48:	6172676f 	cmnvs	r2, pc, ror #14
    1f4c:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    1f50:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    1f54:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    1f58:	2f2f534f 	svccs	0x002f534f
    1f5c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    1f60:	534f5452 	movtpl	r5, #62546	; 0xf452
    1f64:	756f532f 	strbvc	r5, [pc, #-815]!	; 1c3d <_start-0x63c3>
    1f68:	2f656372 	svccs	0x00656372
    1f6c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1f70:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1f74:	6d654d2f 	stclvs	13, cr4, [r5, #-188]!	; 0xffffff44
    1f78:	676e614d 	strbvs	r6, [lr, -sp, asr #2]!
    1f7c:	73752f00 	cmnvc	r5, #0, 30
    1f80:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f84:	63672f62 	cmnvs	r7, #392	; 0x188
    1f88:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    1f8c:	6f6e2d6d 	svcvs	0x006e2d6d
    1f90:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1f94:	2f696261 	svccs	0x00696261
    1f98:	2e322e38 	mrccs	14, 1, r2, cr2, cr8, {1}
    1f9c:	6e692f30 	mcrvs	15, 3, r2, cr9, cr0, {1}
    1fa0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1fa4:	752f0065 	strvc	r0, [pc, #-101]!	; 1f47 <_start-0x60b9>
    1fa8:	612f7273 			; <UNDEFINED> instruction: 0x612f7273
    1fac:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1fb0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1fb4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1fb8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1fbc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1fc0:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    1fc4:	73752f00 	cmnvc	r5, #0, 30
    1fc8:	72612f72 	rsbvc	r2, r1, #456	; 0x1c8
    1fcc:	6f6e2d6d 	svcvs	0x006e2d6d
    1fd0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1fd4:	2f696261 	svccs	0x00696261
    1fd8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1fdc:	00656475 	rsbeq	r6, r5, r5, ror r4
    1fe0:	61656800 	cmnvs	r5, r0, lsl #16
    1fe4:	2e345f70 	mrccs	15, 1, r5, cr4, cr0, {3}
    1fe8:	00010063 	andeq	r0, r1, r3, rrx
    1fec:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1ff0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1ff4:	00020068 	andeq	r0, r2, r8, rrx
    1ff8:	636f6c00 	cmnvs	pc, #0, 24
    1ffc:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    2000:	5f000003 	svcpl	0x00000003
    2004:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2008:	00682e73 	rsbeq	r2, r8, r3, ror lr
    200c:	72000003 	andvc	r0, r0, #3
    2010:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
    2014:	0300682e 	movweq	r6, #2094	; 0x82e
    2018:	74730000 	ldrbtvc	r0, [r3], #-0
    201c:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    2020:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    2024:	05000000 	streq	r0, [r0, #-0]
    2028:	02050001 	andeq	r0, r5, #1
    202c:	00014c98 	muleq	r1, r8, ip
    2030:	01019203 	tsteq	r1, r3, lsl #4
    2034:	05840705 	streq	r0, [r4, #1797]	; 0x705
    2038:	0d054c02 	stceq	12, cr4, [r5, #-8]
    203c:	4a050532 	bmi	14350c <mailbuffer+0x11636c>
    2040:	054c0405 	strbeq	r0, [ip, #-1029]	; 0xfffffbfb
    2044:	10053305 	andne	r3, r5, r5, lsl #6
    2048:	a2140568 	andsge	r0, r4, #104, 10	; 0x1a000000
    204c:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    2050:	05054d11 	streq	r4, [r5, #-3345]	; 0xfffff2ef
    2054:	002c0586 	eoreq	r0, ip, r6, lsl #11
    2058:	66010402 	strvs	r0, [r1], -r2, lsl #8
    205c:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    2060:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    2064:	0c056a14 			; <UNDEFINED> instruction: 0x0c056a14
    2068:	6709054b 	strvs	r0, [r9, -fp, asr #10]
    206c:	05301505 	ldreq	r1, [r0, #-1285]!	; 0xfffffafb
    2070:	14054b0d 	strne	r4, [r5], #-2829	; 0xfffff4f3
    2074:	4a090563 	bmi	243608 <mailbuffer+0x216468>
    2078:	02003d05 	andeq	r3, r0, #320	; 0x140
    207c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    2080:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    2084:	10054a01 	andne	r4, r5, r1, lsl #20
    2088:	4a060552 	bmi	1835d8 <mailbuffer+0x156438>
    208c:	056a4205 	strbeq	r4, [sl, #-517]!	; 0xfffffdfb
    2090:	0e054a10 	vmoveq	s10, r4
    2094:	4e2f052e 	cfsh64mi	mvdx0, mvdx15, #30
    2098:	054a2605 	strbeq	r2, [sl, #-1541]	; 0xfffff9fb
    209c:	1f054d12 	svcne	0x00054d12
    20a0:	4a31054a 	bmi	c435d0 <mailbuffer+0xc16430>
    20a4:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    20a8:	2a054f15 	bcs	155d04 <mailbuffer+0x128b64>
    20ac:	4a370586 	bmi	dc36cc <mailbuffer+0xd9652c>
    20b0:	054a2105 	strbeq	r2, [sl, #-261]	; 0xfffffefb
    20b4:	06054b1a 			; <UNDEFINED> instruction: 0x06054b1a
    20b8:	4d190569 	cfldr32mi	mvfx0, [r9, #-420]	; 0xfffffe5c
    20bc:	054a2305 	strbeq	r2, [sl, #-773]	; 0xfffffcfb
    20c0:	02054a19 	andeq	r4, r5, #102400	; 0x19000
    20c4:	030c056a 	movweq	r0, #50538	; 0xc56a
    20c8:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    20cc:	2f0105bc 	svccs	0x000105bc
    20d0:	831005da 	tsthi	r0, #914358272	; 0x36800000
    20d4:	054d0405 	strbeq	r0, [sp, #-1029]	; 0xfffffbfb
    20d8:	0a056a07 	beq	15c8fc <mailbuffer+0x12f75c>
    20dc:	4c0305a1 	cfstr32mi	mvfx0, [r3], {161}	; 0xa1
    20e0:	05312105 	ldreq	r2, [r1, #-261]!	; 0xfffffefb
    20e4:	04054a18 	streq	r4, [r5], #-2584	; 0xfffff5e8
    20e8:	4c03059f 	cfstr32mi	mvfx0, [r3], {159}	; 0x9f
    20ec:	86300105 	ldrthi	r0, [r0], -r5, lsl #2
    20f0:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    20f4:	4ca24b01 	fstmiaxmi	r2!, {d4-d3}	;@ Deprecated
    20f8:	03190586 	tsteq	r9, #562036736	; 0x21800000
    20fc:	14056609 	strne	r6, [r5], #-1545	; 0xfffff9f7
    2100:	6a1c0567 	bvs	7036a4 <mailbuffer+0x6d6504>
    2104:	672e0d05 	strvs	r0, [lr, -r5, lsl #26]!
    2108:	059f0805 	ldreq	r0, [pc, #2053]	; 2915 <_start-0x56eb>
    210c:	14056807 	strne	r6, [r5], #-2055	; 0xfffff7f9
    2110:	4b07054a 	blmi	1c3640 <mailbuffer+0x1964a0>
    2114:	054a1905 	strbeq	r1, [sl, #-2309]	; 0xfffff6fb
    2118:	30054e13 	andcc	r4, r5, r3, lsl lr
    211c:	661f054b 	ldrvs	r0, [pc], -fp, asr #10
    2120:	054b2405 	strbeq	r2, [fp, #-1029]	; 0xfffffbfb
    2124:	01058516 	tsteq	r5, r6, lsl r5
    2128:	1205f6bb 	andne	pc, r5, #196083712	; 0xbb00000
    212c:	4a020588 	bmi	83754 <mailbuffer+0x565b4>
    2130:	02005705 	andeq	r5, r0, #1310720	; 0x140000
    2134:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    2138:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    213c:	02056601 	andeq	r6, r5, #1048576	; 0x100000
    2140:	01040200 	mrseq	r0, R12_usr
    2144:	6d06054a 	cfstr32vs	mvfx0, [r6, #-296]	; 0xfffffed8
    2148:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    214c:	04054a0c 	streq	r4, [r5], #-2572	; 0xfffff5f4
    2150:	681a054a 	ldmdavs	sl, {r1, r3, r6, r8, sl}
    2154:	054a2c05 	strbeq	r2, [sl, #-3077]	; 0xfffff3fb
    2158:	13054a1a 	movwne	r4, #23066	; 0x5a1a
    215c:	4f060567 	svcmi	0x00060567
    2160:	054b1d05 	strbeq	r1, [fp, #-3333]	; 0xfffff2fb
    2164:	4d054a0c 	vstrmi	s8, [r5, #-48]	; 0xffffffd0
    2168:	4a04054a 	bmi	103698 <mailbuffer+0xd64f8>
    216c:	054c1105 	strbeq	r1, [ip, #-261]	; 0xfffffefb
    2170:	05054a23 	streq	r4, [r5, #-2595]	; 0xfffff5dd
    2174:	4d20054a 	cfstr32mi	mvfx0, [r0, #-296]!	; 0xfffffed8
    2178:	054a2d05 	strbeq	r2, [sl, #-3333]	; 0xfffff2fb
    217c:	20054a3e 	andcs	r4, r5, lr, lsr sl
    2180:	6731052e 	ldrvs	r0, [r1, -lr, lsr #10]!
    2184:	054a4205 	strbeq	r4, [sl, #-517]	; 0xfffffdfb
    2188:	056a2e25 	strbeq	r2, [sl, #-3621]!	; 0xfffff1db
    218c:	2405a330 	strcs	sl, [r5], #-816	; 0xfffffcd0
    2190:	5104054a 	tstpl	r4, sl, asr #10
    2194:	05841f05 	streq	r1, [r4, #3845]	; 0xf05
    2198:	0c026801 	stceq	8, cr6, [r2], {1}
    219c:	44010100 	strmi	r0, [r1], #-256	; 0xffffff00
    21a0:	02000001 	andeq	r0, r0, #1
    21a4:	00008e00 	andeq	r8, r0, r0, lsl #28
    21a8:	fb010200 	blx	429b2 <mailbuffer+0x15812>
    21ac:	01000d0e 	tsteq	r0, lr, lsl #26
    21b0:	00010101 	andeq	r0, r1, r1, lsl #2
    21b4:	00010000 	andeq	r0, r1, r0
    21b8:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    21bc:	2f656d6f 	svccs	0x00656d6f
    21c0:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
    21c4:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    21c8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    21cc:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
    21d0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    21d4:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
    21d8:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
    21dc:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
    21e0:	2f534f54 	svccs	0x00534f54
    21e4:	6f6d6544 	svcvs	0x006d6544
    21e8:	6f682f00 	svcvs	0x00682f00
    21ec:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    21f0:	2f6c7261 	svccs	0x006c7261
    21f4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    21f8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    21fc:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    2200:	6172676f 	cmnvs	r2, pc, ror #14
    2204:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    2208:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    220c:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    2210:	442f534f 	strtmi	r5, [pc], #-847	; 2218 <_start-0x5de8>
    2214:	2f6f6d65 	svccs	0x006f6d65
    2218:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    221c:	00737265 	rsbseq	r7, r3, r5, ror #4
    2220:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    2224:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    2228:	76000001 	strvc	r0, [r0], -r1
    222c:	6f656469 	svcvs	0x00656469
    2230:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2234:	05000000 	streq	r0, [r0, #-0]
    2238:	0205001a 	andeq	r0, r5, #26
    223c:	0001516c 	andeq	r5, r1, ip, ror #2
    2240:	0100cd03 	tsteq	r0, r3, lsl #26
    2244:	05840605 	streq	r0, [r4, #1541]	; 0x605
    2248:	04020004 	streq	r0, [r2], #-4
    224c:	03054c01 	movweq	r4, #23553	; 0x5c01
    2250:	01040200 	mrseq	r0, R12_usr
    2254:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    2258:	04056701 	streq	r6, [r5], #-1793	; 0xfffff8ff
    225c:	01040200 	mrseq	r0, R12_usr
    2260:	341a0548 	ldrcc	r0, [sl], #-1352	; 0xfffffab8
    2264:	05840605 	streq	r0, [r4, #1541]	; 0x605
    2268:	04020004 	streq	r0, [r2], #-4
    226c:	03054c01 	movweq	r4, #23553	; 0x5c01
    2270:	01040200 	mrseq	r0, R12_usr
    2274:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    2278:	02004b01 	andeq	r4, r0, #1024	; 0x400
    227c:	05670104 	strbeq	r0, [r7, #-260]!	; 0xfffffefc
    2280:	04020004 	streq	r0, [r2], #-4
    2284:	36054701 	strcc	r4, [r5], -r1, lsl #14
    2288:	83050535 	movwhi	r0, #21813	; 0x5535
    228c:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
    2290:	0905681a 	stmdbeq	r5, {r1, r3, r4, fp, sp, lr}
    2294:	510a0583 	smlabbpl	sl, r3, r5, r0
    2298:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    229c:	05684c03 	strbeq	r4, [r8, #-3075]!	; 0xfffff3fd
    22a0:	0805310a 	stmdaeq	r5, {r1, r3, r8, ip, sp}
    22a4:	4b09054a 	blmi	2437d4 <mailbuffer+0x216634>
    22a8:	31050568 	tstcc	r5, r8, ror #10
    22ac:	000a054c 	andeq	r0, sl, ip, asr #10
    22b0:	69010402 	stmdbvs	r1, {r1, sl}
    22b4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    22b8:	05670104 	strbeq	r0, [r7, #-260]!	; 0xfffffefc
    22bc:	0402000a 	streq	r0, [r2], #-10
    22c0:	01054901 	tsteq	r5, r1, lsl #18
    22c4:	d60a0332 			; <UNDEFINED> instruction: 0xd60a0332
    22c8:	05670205 	strbeq	r0, [r7, #-517]!	; 0xfffffdfb
    22cc:	02056805 	andeq	r6, r5, #327680	; 0x50000
    22d0:	05910831 	ldreq	r0, [r1, #2097]	; 0x831
    22d4:	05920805 	ldreq	r0, [r2, #2053]	; 0x805
    22d8:	05920802 	ldreq	r0, [r2, #2050]	; 0x802
    22dc:	04020007 	streq	r0, [r2], #-7
    22e0:	0e023401 	cdpeq	4, 0, cr3, cr2, cr1, {0}
    22e4:	Address 0x00000000000022e4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	5152496e 	cmppl	r2, lr, ror #18
       4:	43787000 	cmnmi	r8, #0
       8:	0065646f 	rsbeq	r6, r5, pc, ror #8
       c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
      10:	6b636954 	blvs	18da568 <mailbuffer+0x18ad3c8>
      14:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
      18:	76727000 	ldrbtvc	r7, [r2], -r0
      1c:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0xfffffaad
      20:	6d695470 	cfstrdvs	mvd5, [r9, #-448]!	; 0xfffffe40
      24:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
      28:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
      2c:	00747075 	rsbseq	r7, r4, r5, ror r0
      30:	72615070 	rsbvc	r5, r1, #112	; 0x70
      34:	70006d61 	andvc	r6, r0, r1, ror #26
      38:	69724f78 	ldmdbvs	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, lr}^
      3c:	616e6967 	cmnvs	lr, r7, ror #18
      40:	534f546c 	movtpl	r5, #62572	; 0xf46c
      44:	43425f00 	movtmi	r5, #12032	; 0x2f00
      48:	3338324d 	teqcc	r8, #-805306364	; 0xd0000004
      4c:	49545f35 	ldmdbmi	r4, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
      50:	5f52454d 	svcpl	0x0052454d
      54:	53474552 	movtpl	r4, #30034	; 0x7552
      58:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
      5c:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
      60:	322e3820 	eorcc	r3, lr, #32, 16	; 0x200000
      64:	2d20302e 	stccs	0, cr3, [r0, #-184]!	; 0xffffff48
      68:	6f6c666d 	svcvs	0x006c666d
      6c:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
      70:	733d6962 	teqvc	sp, #1605632	; 0x188000
      74:	2074666f 	rsbscs	r6, r4, pc, ror #12
      78:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      7c:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
      80:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
      84:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
      88:	207a3676 	rsbscs	r3, sl, r6, ror r6
      8c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
      90:	672d2067 	strvs	r2, [sp, -r7, rrx]!
      94:	6f687300 	svcvs	0x00687300
      98:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
      9c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      a0:	2064656e 	rsbcs	r6, r4, lr, ror #10
      a4:	00746e69 	rsbseq	r6, r4, r9, ror #28
      a8:	41546470 	cmpmi	r4, r0, ror r4
      ac:	435f4b53 	cmpmi	pc, #84992	; 0x14c00
      b0:	0045444f 	subeq	r4, r5, pc, asr #8
      b4:	726f5076 	rsbvc	r5, pc, #118	; 0x76
      b8:	646e4574 	strbtvs	r4, [lr], #-1396	; 0xfffffa8c
      bc:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
      c0:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
      c4:	54760072 	ldrbtpl	r0, [r6], #-114	; 0xffffff8e
      c8:	496b6369 	stmdbmi	fp!, {r0, r3, r5, r6, r8, r9, sp, lr}^
      cc:	2f005253 	svccs	0x00005253
      d0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
      d4:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
      d8:	6f442f6c 	svcvs	0x00442f6c
      dc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
      e0:	2f73746e 	svccs	0x0073746e
      e4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      e8:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
      ec:	2f676e69 	svccs	0x00676e69
      f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      f4:	534f5452 	movtpl	r5, #62546	; 0xf452
      f8:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      fc:	6f6c2067 	svcvs	0x006c2067
     100:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     104:	7000746e 	andvc	r7, r0, lr, ror #8
     108:	72615076 	rsbvc	r5, r1, #118	; 0x76
     10c:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
     110:	00737265 	rsbseq	r7, r3, r5, ror #4
     114:	67655270 			; <UNDEFINED> instruction: 0x67655270
     118:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
     11c:	4f706f54 	svcmi	0x00706f54
     120:	61745366 	cmnvs	r4, r6, ror #6
     124:	2f006b63 	svccs	0x00006b63
     128:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     12c:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     130:	6f442f6c 	svcvs	0x00442f6c
     134:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     138:	2f73746e 	svccs	0x0073746e
     13c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     140:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     144:	2f676e69 	svccs	0x00676e69
     148:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     14c:	534f5452 	movtpl	r5, #62546	; 0xf452
     150:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     154:	4f545265 	svcmi	0x00545265
     158:	6f532f53 	svcvs	0x00532f53
     15c:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     160:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     164:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     168:	43472f65 	movtmi	r2, #32613	; 0x7f65
     16c:	61522f43 	cmpvs	r2, r3, asr #30
     170:	65627073 	strbvs	r7, [r2, #-115]!	; 0xffffff8d
     174:	50797272 	rsbspl	r7, r9, r2, ror r2
     178:	6f702f69 	svcvs	0x00702f69
     17c:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
     180:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     184:	6f642067 	svcvs	0x00642067
     188:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     18c:	6f507800 	svcvs	0x00507800
     190:	74537472 	ldrbvc	r7, [r3], #-1138	; 0xfffffb8e
     194:	53747261 	cmnpl	r4, #268435462	; 0x10000006
     198:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
     19c:	72656c75 	rsbvc	r6, r5, #29952	; 0x7500
     1a0:	50787000 	rsbspl	r7, r8, r0
     1a4:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     1a8:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     1ac:	73696c61 	cmnvc	r9, #24832	; 0x6100
     1b0:	61745365 	cmnvs	r4, r5, ror #6
     1b4:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
     1b8:	6d6f436c 	stclvs	3, cr4, [pc, #-432]!	; 10 <_start-0x7ff0>
     1bc:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0xfffffe90
     1c0:	6374614d 	cmnvs	r4, #1073741843	; 0x40000013
     1c4:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
     1c8:	2f656d6f 	svccs	0x00656d6f
     1cc:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
     1d0:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
     1d4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
     1d8:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
     1dc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     1e0:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
     1e4:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
     1e8:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
     1ec:	2f534f54 	svccs	0x00534f54
     1f0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     1f4:	534f5452 	movtpl	r5, #62546	; 0xf452
     1f8:	756f532f 	strbvc	r5, [pc, #-815]!	; fffffed1 <_estack+0xf7fefed1>
     1fc:	2f656372 	svccs	0x00656372
     200:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     204:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     208:	4343472f 	movtmi	r4, #14127	; 0x372f
     20c:	7361522f 	cmnvc	r1, #-268435454	; 0xf0000002
     210:	72656270 	rsbvc	r6, r5, #112, 4
     214:	69507972 	ldmdbvs	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}^
     218:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     21c:	72736974 	rsbsvc	r6, r3, #116, 18	; 0x1d0000
     220:	7600632e 	strvc	r6, [r0], -lr, lsr #6
     224:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
     228:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
     22c:	69724372 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, lr}^
     230:	61636974 	smcvs	13972	; 0x3694
     234:	6c75006c 	ldclvs	0, cr0, [r5], #-432	; 0xfffffe50
     238:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
     23c:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
     240:	7473654e 	ldrbtvc	r6, [r3], #-1358	; 0xfffffab2
     244:	00676e69 	rsbeq	r6, r7, r9, ror #28
     248:	726f5076 	rsbvc	r5, pc, #118	; 0x76
     24c:	69784574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, lr}^
     250:	69724374 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, lr}^
     254:	61636974 	smcvs	13972	; 0x3694
     258:	5076006c 	rsbspl	r0, r6, ip, rrx
     25c:	4974726f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
     260:	74535253 	ldrbvc	r5, [r3], #-595	; 0xfffffdad
     264:	46747261 	ldrbtmi	r7, [r4], -r1, ror #4
     268:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
     26c:	6b736154 	blvs	1cd87c4 <mailbuffer+0x1cab624>
     270:	6f507600 	svcvs	0x00507600
     274:	69597472 	ldmdbvs	r9, {r1, r4, r5, r6, sl, ip, sp, lr}^
     278:	50646c65 	rsbpl	r6, r4, r5, ror #24
     27c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
     280:	726f7373 	rsbvc	r7, pc, #-872415231	; 0xcc000001
     284:	72467600 	subvc	r7, r6, #0, 12
     288:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
     28c:	495f534f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, r9, ip, lr}^	; <UNPREDICTABLE>
     290:	67005253 	smlsdvs	r0, r3, r2, r5
     294:	7453625f 	ldrbvc	r6, [r3], #-607	; 0xfffffda1
     298:	65747261 	ldrbvs	r7, [r4, #-609]!	; 0xfffffd9f
     29c:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
     2a0:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
     2a4:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
     2a8:	70004243 	andvc	r4, r0, r3, asr #4
     2ac:	626e5578 	rsbvs	r5, lr, #120, 10	; 0x1e000000
     2b0:	6b636f6c 	blvs	18dc068 <mailbuffer+0x18aeec8>
     2b4:	52436465 	subpl	r6, r3, #1694498816	; 0x65000000
     2b8:	70004243 	andvc	r4, r0, r3, asr #4
     2bc:	6d655478 	cfstrdvs	mvd5, [r5, #-480]!	; 0xfffffe20
     2c0:	43760070 	cmnmi	r6, #112	; 0x70
     2c4:	756f526f 	strbvc	r5, [pc, #-623]!	; 5d <_start-0x7fa3>
     2c8:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     2cc:	54646441 	strbtpl	r6, [r4], #-1089	; 0xfffffbbf
     2d0:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
     2d4:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
     2d8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     2dc:	43767000 	cmnmi	r6, #0
     2e0:	61746e6f 	cmnvs	r4, pc, ror #28
     2e4:	72656e69 	rsbvc	r6, r5, #1680	; 0x690
     2e8:	43787000 	cmnmi	r8, #0
     2ec:	756f526f 	strbvc	r5, [pc, #-623]!	; 85 <_start-0x7f7b>
     2f0:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     2f4:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
     2f8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     2fc:	61507800 	cmpvs	r0, r0, lsl #16
     300:	64657373 	strbtvs	r7, [r5], #-883	; 0xfffffc8d
     304:	6b636954 	blvs	18da85c <mailbuffer+0x18ad6bc>
     308:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
     30c:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     310:	49780078 	ldmdbmi	r8!, {r3, r4, r5, r6}^
     314:	566d6574 			; <UNDEFINED> instruction: 0x566d6574
     318:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     31c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
     320:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xfffff49d
     324:	6c65446f 	cfstrdvs	mvd4, [r5], #-444	; 0xfffffe44
     328:	78007961 	stmdavc	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
     32c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     330:	00646e45 	rsbeq	r6, r4, r5, asr #28
     334:	774f7670 	smlsldxvc	r7, pc, r0, r6	; <UNPREDICTABLE>
     338:	0072656e 	rsbseq	r6, r2, lr, ror #10
     33c:	73614c78 	cmnvc	r1, #120, 24	; 0x7800
     340:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
     344:	756f436b 	strbvc	r4, [pc, #-875]!	; ffffffe1 <_estack+0xf7feffe1>
     348:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     34c:	6f526f43 	svcvs	0x00526f43
     350:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     354:	63695465 	cmnvs	r9, #1694498816	; 0x65000000
     358:	756f436b 	strbvc	r4, [pc, #-875]!	; fffffff5 <_estack+0xf7fefff5>
     35c:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     360:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
     364:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
     368:	7870004d 	ldmdavc	r0!, {r0, r2, r3, r6}^
     36c:	736e6f43 	cmnvc	lr, #268	; 0x10c
     370:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     374:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
     378:	43706f54 	cmnmi	r0, #84, 30	; 0x150
     37c:	756f526f 	strbvc	r5, [pc, #-623]!	; 115 <_start-0x7eeb>
     380:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     384:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     388:	69725079 	ldmdbvs	r2!, {r0, r3, r4, r5, r6, ip, lr}^
     38c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     390:	44780079 	ldrbtmi	r0, [r8], #-121	; 0xffffff87
     394:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     398:	6f436465 	svcvs	0x00436465
     39c:	74756f52 	ldrbtvc	r6, [r5], #-3922	; 0xfffff0ae
     3a0:	4c656e69 	stclmi	14, cr6, [r5], #-420	; 0xfffffe5c
     3a4:	31747369 	cmncc	r4, r9, ror #6
     3a8:	65447800 	strbvs	r7, [r4, #-2048]	; 0xfffff800
     3ac:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     3b0:	526f4364 	rsbpl	r4, pc, #100, 6	; 0x90000001
     3b4:	6974756f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
     3b8:	694c656e 	stmdbvs	ip, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
     3bc:	00327473 	eorseq	r7, r2, r3, ror r4
     3c0:	43726f63 	cmnmi	r2, #396	; 0x18c
     3c4:	00424352 	subeq	r4, r2, r2, asr r3
     3c8:	52437870 	subpl	r7, r3, #112, 16	; 0x700000
     3cc:	70004243 	andvc	r4, r0, r3, asr #4
     3d0:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
     3d4:	756f6976 	strbvc	r6, [pc, #-2422]!	; fffffa66 <_estack+0xf7fefa66>
     3d8:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
     3dc:	6f526f43 	svcvs	0x00526f43
     3e0:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     3e4:	646f4365 	strbtvs	r4, [pc], #-869	; 3ec <_start-0x7c14>
     3e8:	6f630065 	svcvs	0x00630065
     3ec:	526f4372 	rsbpl	r4, pc, #-939524095	; 0xc8000001
     3f0:	6974756f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
     3f4:	6f43656e 	svcvs	0x0043656e
     3f8:	6f72746e 	svcvs	0x0072746e
     3fc:	6f6c426c 	svcvs	0x006c426c
     400:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     404:	6f526f43 	svcvs	0x00526f43
     408:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     40c:	6d655265 	sfmvs	f5, 2, [r5, #-404]!	; 0xfffffe6c
     410:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
     414:	456d6f72 	strbmi	r6, [sp, #-3954]!	; 0xfffff08e
     418:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
     41c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     420:	52787000 	rsbspl	r7, r8, #0
     424:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     428:	6f526f43 	svcvs	0x00526f43
     42c:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     430:	73694c65 	cmnvc	r9, #25856	; 0x6500
     434:	75007374 	strvc	r7, [r0, #-884]	; 0xfffffc8c
     438:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
     43c:	2f007865 	svccs	0x00007865
     440:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     444:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     448:	6f442f6c 	svcvs	0x00442f6c
     44c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     450:	2f73746e 	svccs	0x0073746e
     454:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     458:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     45c:	2f676e69 	svccs	0x00676e69
     460:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     464:	534f5452 	movtpl	r5, #62546	; 0xf452
     468:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     46c:	4f545265 	svcmi	0x00545265
     470:	6f532f53 	svcvs	0x00532f53
     474:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     478:	6f72632f 	svcvs	0x0072632f
     47c:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     480:	00632e65 	rsbeq	r2, r3, r5, ror #28
     484:	6e694d78 	mcrvs	13, 3, r4, cr9, cr8, {3}
     488:	73694c69 	cmnvc	r9, #26880	; 0x6900
     48c:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
     490:	4378006d 	cmnmi	r8, #109	; 0x6d
     494:	756f526f 	strbvc	r5, [pc, #-623]!	; 22d <_start-0x7dd3>
     498:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     49c:	61657243 	cmnvs	r5, r3, asr #4
     4a0:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
     4a4:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
     4a8:	4f726562 	svcmi	0x00726562
     4ac:	65744966 	ldrbvs	r4, [r4, #-2406]!	; 0xfffff69a
     4b0:	7000736d 	andvc	r7, r0, sp, ror #6
     4b4:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
     4b8:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
     4bc:	6f526f43 	svcvs	0x00526f43
     4c0:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     4c4:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
     4c8:	6f697250 	svcvs	0x00697250
     4cc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     4d0:	6f437800 	svcvs	0x00437800
     4d4:	74756f52 	ldrbtvc	r6, [r5], #-3922	; 0xfffff0ae
     4d8:	48656e69 	stmdami	r5!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     4dc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     4e0:	50780065 	rsbspl	r0, r8, r5, rrx
     4e4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     4e8:	6552676e 	ldrbvs	r6, [r2, #-1902]	; 0xfffff892
     4ec:	43796461 	cmnmi	r9, #1627389952	; 0x61000000
     4f0:	756f526f 	strbvc	r5, [pc, #-623]!	; 289 <_start-0x7d77>
     4f4:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     4f8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     4fc:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     500:	00747865 	rsbseq	r7, r4, r5, ror #16
     504:	76457870 			; <UNDEFINED> instruction: 0x76457870
     508:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
     50c:	00747369 	rsbseq	r7, r4, r9, ror #6
     510:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     514:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
     518:	4376006d 	cmnmi	r6, #109	; 0x6d
     51c:	756f526f 	strbvc	r5, [pc, #-623]!	; 2b5 <_start-0x7d4b>
     520:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     524:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     528:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     52c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
     530:	6f54656d 	svcvs	0x0054656d
     534:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
     538:	43787000 	cmnmi	r8, #0
     53c:	756f526f 	strbvc	r5, [pc, #-623]!	; 2d5 <_start-0x7d2b>
     540:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     544:	53787500 	cmnpl	r8, #0, 10
     548:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     54c:	4f787000 	svcmi	0x00787000
     550:	66726576 			; <UNDEFINED> instruction: 0x66726576
     554:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
     558:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     55c:	6f436465 	svcvs	0x00436465
     560:	74756f52 	ldrbtvc	r6, [r5], #-3922	; 0xfffff0ae
     564:	4c656e69 	stclmi	14, cr6, [r5], #-420	; 0xfffffe5c
     568:	00747369 	rsbseq	r7, r4, r9, ror #6
     56c:	4e494d78 	mcrmi	13, 2, r4, cr9, cr8, {3}
     570:	494c5f49 	stmdbmi	ip, {r0, r3, r6, r8, r9, sl, fp, ip, lr}^
     574:	495f5453 	ldmdbmi	pc, {r0, r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     578:	004d4554 	subeq	r4, sp, r4, asr r5
     57c:	53494c78 	movtpl	r4, #40056	; 0x9c78
     580:	78700054 	ldmdavc	r0!, {r2, r4, r6}^
     584:	616c6544 	cmnvs	ip, r4, asr #10
     588:	43646579 	cmnmi	r4, #507510784	; 0x1e400000
     58c:	756f526f 	strbvc	r5, [pc, #-623]!	; 325 <_start-0x7cdb>
     590:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     594:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     598:	76727000 	ldrbtvc	r7, [r2], -r0
     59c:	63656843 	cmnvs	r5, #4390912	; 0x430000
     5a0:	6e65506b 	cdpvs	0, 6, cr5, cr5, cr11, {3}
     5a4:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
     5a8:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
     5ac:	73694c79 	cmnvc	r9, #30976	; 0x7900
     5b0:	47780074 			; <UNDEFINED> instruction: 0x47780074
     5b4:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     5b8:	694c6369 	stmdbvs	ip, {r0, r3, r5, r6, r8, r9, sp, lr}^
     5bc:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     5c0:	70006d65 	andvc	r6, r0, r5, ror #26
     5c4:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
     5c8:	61697469 	cmnvs	r9, r9, ror #8
     5cc:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     5d0:	6f526f43 	svcvs	0x00526f43
     5d4:	6e697475 	mcrvs	4, 3, r7, cr9, cr5, {3}
     5d8:	73694c65 	cmnvc	r9, #25856	; 0x6500
     5dc:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
     5e0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     5e4:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
     5e8:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
     5ec:	7270006d 	rsbsvc	r0, r0, #109	; 0x6d
     5f0:	65684376 	strbvs	r4, [r8, #-886]!	; 0xfffffc8a
     5f4:	65446b63 	strbvs	r6, [r4, #-2915]	; 0xfffff49d
     5f8:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     5fc:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
     600:	72630074 	rsbvc	r0, r3, #116	; 0x74
     604:	4f524f43 	svcmi	0x00524f43
     608:	4e495455 	mcrmi	4, 2, r5, cr9, cr5, {2}
     60c:	4f435f45 	svcmi	0x00435f45
     610:	5f004544 	svcpl	0x00004544
     614:	5f6f7364 	svcpl	0x006f7364
     618:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
     61c:	5f00656c 	svcpl	0x0000656c
     620:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     624:	61725f00 	cmnvs	r2, r0, lsl #30
     628:	3834646e 	ldmdacc	r4!, {r1, r2, r3, r5, r6, sl, sp, lr}
     62c:	6d655f00 	stclvs	15, cr5, [r5, #-0]
     630:	65677265 	strbvs	r7, [r7, #-613]!	; 0xfffffd9b
     634:	0079636e 	rsbseq	r6, r9, lr, ror #6
     638:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
     63c:	775f0061 	ldrbvc	r0, [pc, -r1, rrx]
     640:	6f747263 	svcvs	0x00747263
     644:	735f626d 	cmpvc	pc, #-805306362	; 0xd0000006
     648:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     64c:	63775f00 	cmnvs	r7, #0, 30
     650:	6f747273 	svcvs	0x00747273
     654:	5f73626d 	svcpl	0x0073626d
     658:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     65c:	6f6c0065 	svcvs	0x006c0065
     660:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
     664:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     668:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     66c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     670:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     674:	626c5f00 	rsbvs	r5, ip, #0, 30
     678:	7a697366 	bvc	1a5d418 <mailbuffer+0x1a30278>
     67c:	5f5f0065 	svcpl	0x005f0065
     680:	61636f6c 	cmnvs	r3, ip, ror #30
     684:	745f656c 	ldrbvc	r6, [pc], #-1388	; 68c <_start-0x7974>
     688:	4e787000 	cdpmi	0, 7, cr7, cr8, cr0, {0}
     68c:	694c7765 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     690:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
     694:	5f006d65 	svcpl	0x00006d65
     698:	7472626d 	ldrbtvc	r6, [r2], #-621	; 0xfffffd93
     69c:	5f63776f 	svcpl	0x0063776f
     6a0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     6a4:	775f0065 	ldrbvc	r0, [pc, -r5, rrx]
     6a8:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; 524 <_start-0x7adc>
     6ac:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
     6b0:	00657461 	rsbeq	r7, r5, r1, ror #8
     6b4:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     6b8:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
     6bc:	62755f00 	rsbsvs	r5, r5, #0, 30
     6c0:	5f006675 	svcpl	0x00006675
     6c4:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     6c8:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 6d0 <_start-0x7930>
     6cc:	6f685f6d 	svcvs	0x00685f6d
     6d0:	5f007275 	svcpl	0x00007275
     6d4:	0066735f 	rsbeq	r7, r6, pc, asr r3
     6d8:	5f6e6f5f 	svcpl	0x006e6f5f
     6dc:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     6e0:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
     6e4:	635f0073 	cmpvs	pc, #115	; 0x73
     6e8:	696b6f6f 	stmdbvs	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     6ec:	5f5f0065 	svcpl	0x005f0065
     6f0:	756c6773 	strbvc	r6, [ip, #-1907]!	; 0xfffff88d
     6f4:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     6f8:	7367616c 	cmnvc	r7, #108, 2
     6fc:	73695f00 	cmnvc	r9, #0, 30
     700:	6178635f 	cmnvs	r8, pc, asr r3
     704:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     708:	006e6964 	rsbeq	r6, lr, r4, ror #18
     70c:	6b6c625f 	blvs	1b19090 <mailbuffer+0x1aebef0>
     710:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     714:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     718:	66756274 			; <UNDEFINED> instruction: 0x66756274
     71c:	666f5f00 	strbtvs	r5, [pc], -r0, lsl #30
     720:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
     724:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
     728:	006d6574 	rsbeq	r6, sp, r4, ror r5
     72c:	73694c76 	cmnvc	r9, #30208	; 0x7600
     730:	736e4974 	cmnvc	lr, #116, 18	; 0x1d0000
     734:	45747265 	ldrbmi	r7, [r4, #-613]!	; 0xfffffd9b
     738:	5f00646e 	svcpl	0x0000646e
     73c:	7273626d 	rsbsvc	r6, r3, #-805306362	; 0xd0000006
     740:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     744:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
     748:	00657461 	rsbeq	r7, r5, r1, ror #8
     74c:	72626d5f 	rsbvc	r6, r2, #6080	; 0x17c0
     750:	5f6e656c 	svcpl	0x006e656c
     754:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     758:	665f0065 	ldrbvs	r0, [pc], -r5, rrx
     75c:	6772616e 	ldrbvs	r6, [r2, -lr, ror #2]!
     760:	665f0073 			; <UNDEFINED> instruction: 0x665f0073
     764:	7600736e 	strvc	r7, [r0], -lr, ror #6
     768:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     76c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     770:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     774:	74496573 	strbvc	r6, [r9], #-1395	; 0xfffffa8d
     778:	5f006d65 	svcpl	0x00006d65
     77c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     780:	6c665f00 	stclvs	15, cr5, [r6], #-0
     784:	5f6b636f 	svcpl	0x006b636f
     788:	735f0074 	cmpvc	pc, #116	; 0x74
     78c:	72656474 	rsbvc	r6, r5, #116, 8	; 0x74000000
     790:	425f0072 	subsmi	r0, pc, #114	; 0x72
     794:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
     798:	675f0074 			; <UNDEFINED> instruction: 0x675f0074
     79c:	616d6d61 	cmnvs	sp, r1, ror #26
     7a0:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
     7a4:	6d61676e 	stclvs	7, cr6, [r1, #-440]!	; 0xfffffe48
     7a8:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
     7ac:	5f006461 	svcpl	0x00006461
     7b0:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
     7b4:	6b5f746c 	blvs	17dd96c <mailbuffer+0x17b07cc>
     7b8:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 7c0 <_start-0x7840>
     7bc:	5f5f006d 	svcpl	0x005f006d
     7c0:	62686377 	rsbvs	r6, r8, #-603979775	; 0xdc000001
     7c4:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     7c8:	74756f64 	ldrbtvc	r6, [r5], #-3940	; 0xfffff09c
     7cc:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     7d0:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
     7d4:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
     7d8:	5f00656c 	svcpl	0x0000656c
     7dc:	626f696e 	rsbvs	r6, pc, #1802240	; 0x1b8000
     7e0:	615f0073 	cmpvs	pc, r3, ror r0	; <UNPREDICTABLE>
     7e4:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     7e8:	5f003074 	svcpl	0x00003074
     7ec:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     7f0:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
     7f4:	5f006675 	svcpl	0x00006675
     7f8:	74637361 	strbtvc	r7, [r3], #-865	; 0xfffffc9f
     7fc:	5f656d69 	svcpl	0x00656d69
     800:	00667562 	rsbeq	r7, r6, r2, ror #10
     804:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
     808:	00746c75 	rsbseq	r6, r4, r5, ror ip
     80c:	63775f5f 	cmnvs	r7, #380	; 0x17c
     810:	69770068 	ldmdbvs	r7!, {r3, r5, r6}^
     814:	745f746e 	ldrbvc	r7, [pc], #-1134	; 81c <_start-0x77e4>
     818:	6f6c5f00 	svcvs	0x006c5f00
     81c:	76006b63 	strvc	r6, [r0], -r3, ror #22
     820:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     824:	6f6d6552 	svcvs	0x006d6552
     828:	5f006576 	svcpl	0x00006576
     82c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     830:	5f003273 	svcpl	0x00003273
     834:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     838:	5f5f0065 	svcpl	0x005f0065
     83c:	795f6d74 	ldmdbvc	pc, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     840:	00726165 	rsbseq	r6, r2, r5, ror #2
     844:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     848:	6f546d65 	svcvs	0x00546d65
     84c:	6f6d6552 	svcvs	0x006d6552
     850:	5f006576 	svcpl	0x00006576
     854:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     858:	5f5f0066 	svcpl	0x005f0066
     85c:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 694 <_start-0x796c>
     860:	5f006e6f 	svcpl	0x00006e6f
     864:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
     868:	73007469 	movwvc	r7, #1129	; 0x469
     86c:	706f6275 	rsbvc	r6, pc, r5, ror r2	; <UNPREDICTABLE>
     870:	67726174 			; <UNDEFINED> instruction: 0x67726174
     874:	735f5f00 	cmpvc	pc, #0, 30
     878:	69646964 	stmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
     87c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     880:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
     884:	5f00745f 	svcpl	0x0000745f
     888:	4b434f4c 	blmi	10d45c0 <mailbuffer+0x10a7420>
     88c:	4345525f 	movtmi	r5, #21087	; 0x525f
     890:	49535255 	ldmdbmi	r3, {r0, r2, r4, r6, r9, ip, lr}^
     894:	545f4556 	ldrbpl	r4, [pc], #-1366	; 89c <_start-0x7764>
     898:	626d5f00 	rsbvs	r5, sp, #0, 30
     89c:	5f6e656c 	svcpl	0x006e656c
     8a0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     8a4:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
     8a8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     8ac:	63206465 			; <UNDEFINED> instruction: 0x63206465
     8b0:	00726168 	rsbseq	r6, r2, r8, ror #2
     8b4:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
     8b8:	5f685f00 	svcpl	0x00685f00
     8bc:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
     8c0:	6873006f 	ldmdavs	r3!, {r0, r1, r2, r3, r5, r6}^
     8c4:	2074726f 	rsbscs	r7, r4, pc, ror #4
     8c8:	00746e69 	rsbseq	r6, r4, r9, ror #28
     8cc:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     8d0:	6164795f 	cmnvs	r4, pc, asr r9
     8d4:	5f5f0079 	svcpl	0x005f0079
     8d8:	66756273 			; <UNDEFINED> instruction: 0x66756273
     8dc:	72665f00 	rsbvc	r5, r6, #0, 30
     8e0:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
     8e4:	5f007473 	svcpl	0x00007473
     8e8:	4c49465f 	mcrrmi	6, 5, r4, r9, cr15
     8ec:	6d5f0045 	ldclvs	0, cr0, [pc, #-276]	; 7e0 <_start-0x7820>
     8f0:	61747362 	cmnvs	r4, r2, ror #6
     8f4:	745f6574 	ldrbvc	r6, [pc], #-1396	; 8fc <_start-0x7704>
     8f8:	735f5f00 	cmpvc	pc, #0, 30
     8fc:	454c4946 	strbmi	r4, [ip, #-2374]	; 0xfffff6ba
     900:	626d5f00 	rsbvs	r5, sp, #0, 30
     904:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     908:	725f0065 	subsvc	r0, pc, #101	; 0x65
     90c:	5f646e61 	svcpl	0x00646e61
     910:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     914:	6f695f00 	svcvs	0x00695f00
     918:	5f007362 	svcpl	0x00007362
     91c:	00636e69 	rsbeq	r6, r3, r9, ror #28
     920:	646e695f 	strbtvs	r6, [lr], #-2399	; 0xfffff6a1
     924:	6f6c5f00 	svcvs	0x006c5f00
     928:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
     92c:	635f5f00 	cmpvs	pc, #0, 30
     930:	6e61656c 	cdpvs	5, 6, cr6, cr1, cr12, {3}
     934:	5f007075 	svcpl	0x00007075
     938:	70736e75 	rsbsvc	r6, r3, r5, ror lr
     93c:	66696365 	strbtvs	r6, [r9], -r5, ror #6
     940:	5f646569 	svcpl	0x00646569
     944:	61636f6c 	cmnvs	r3, ip, ror #30
     948:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     94c:	006f666e 	rsbeq	r6, pc, lr, ror #12
     950:	78616d5f 	stmdavc	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     954:	00736477 	rsbseq	r6, r3, r7, ror r4
     958:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
     95c:	5f00746e 	svcpl	0x0000746e
     960:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
     964:	635f5f00 	cmpvs	pc, #0, 30
     968:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     96c:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     970:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     974:	65735f00 	ldrbvs	r5, [r3, #-3840]!	; 0xfffff100
     978:	76006b65 	strvc	r6, [r0], -r5, ror #22
     97c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
     980:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
     984:	5f007472 	svcpl	0x00007472
     988:	736f7066 	cmnvc	pc, #102	; 0x66
     98c:	7000745f 	andvc	r7, r0, pc, asr r4
     990:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
     994:	5f5f0074 	svcpl	0x005f0074
     998:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 7d0 <_start-0x7830>
     99c:	5f006e69 	svcpl	0x00006e69
     9a0:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
     9a4:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     9a8:	6b6f7472 	blvs	1bddb78 <mailbuffer+0x1bb09d8>
     9ac:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
     9b0:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     9b4:	7079746e 	rsbsvc	r7, r9, lr, ror #8
     9b8:	5f007365 	svcpl	0x00007365
     9bc:	00646461 	rsbeq	r6, r4, r1, ror #8
     9c0:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
     9c4:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
     9c8:	5f00726f 	svcpl	0x0000726f
     9cc:	6f4c555f 	svcvs	0x004c555f
     9d0:	5f00676e 	svcpl	0x0000676e
     9d4:	64746567 	ldrbtvs	r6, [r4], #-1383	; 0xfffffa99
     9d8:	5f657461 	svcpl	0x00657461
     9dc:	00727265 	rsbseq	r7, r2, r5, ror #4
     9e0:	6f6c675f 	svcvs	0x006c675f
     9e4:	5f6c6162 	svcpl	0x006c6162
     9e8:	75706d69 	ldrbvc	r6, [r0, #-3433]!	; 0xfffff297
     9ec:	705f6572 	subsvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
     9f0:	2f007274 	svccs	0x00007274
     9f4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     9f8:	7261632f 	rsbvc	r6, r1, #-1140850688	; 0xbc000000
     9fc:	6f442f6c 	svcvs	0x00442f6c
     a00:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
     a04:	2f73746e 	svccs	0x0073746e
     a08:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     a0c:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
     a10:	2f676e69 	svccs	0x00676e69
     a14:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     a18:	534f5452 	movtpl	r5, #62546	; 0xf452
     a1c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
     a20:	4f545265 	svcmi	0x00545265
     a24:	6f532f53 	svcvs	0x00532f53
     a28:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     a2c:	73696c2f 	cmnvc	r9, #12032	; 0x2f00
     a30:	00632e74 	rsbeq	r2, r3, r4, ror lr
     a34:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
     a38:	5f646573 	svcpl	0x00646573
     a3c:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
     a40:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
     a44:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
     a48:	61697469 	cmnvs	r9, r9, ror #8
     a4c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
     a50:	64775f00 	ldrbtvs	r5, [r7], #-3840	; 0xfffff100
     a54:	5f5f0073 	svcpl	0x005f0073
     a58:	775f6d74 			; <UNDEFINED> instruction: 0x775f6d74
     a5c:	00796164 	rsbseq	r6, r9, r4, ror #2
     a60:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
     a64:	6e5f0065 	cdpvs	0, 5, cr0, cr15, cr5, {3}
     a68:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
     a6c:	5f00636f 	svcpl	0x0000636f
     a70:	6134366c 	teqvs	r4, ip, ror #12
     a74:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     a78:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
     a7c:	75665f67 	strbvc	r5, [r6, #-3943]!	; 0xfffff099
     a80:	7800636e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, sp, lr}
     a84:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     a88:	49664f65 	stmdbmi	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, lr}^
     a8c:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
     a90:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     a94:	626e5f00 	rsbvs	r5, lr, #0, 30
     a98:	5f006675 	svcpl	0x00006675
     a9c:	73756e75 	cmnvc	r5, #1872	; 0x750
     aa0:	5f006465 	svcpl	0x00006465
     aa4:	5f6d745f 	svcpl	0x006d745f
     aa8:	73647369 	cmnvc	r4, #-1543503871	; 0xa4000001
     aac:	6c5f0074 	mrrcvs	0, 7, r0, pc, cr4	; <UNPREDICTABLE>
     ab0:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     ab4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     ab8:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     abc:	6c635f00 	stclvs	15, cr5, [r3], #-0
     ac0:	0065736f 	rsbeq	r7, r5, pc, ror #6
     ac4:	3834725f 	ldmdacc	r4!, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
     ac8:	626d5f00 	rsbvs	r5, sp, #0, 30
     acc:	63776f74 	cmnvs	r7, #116, 30	; 0x1d0
     ad0:	6174735f 	cmnvs	r4, pc, asr r3
     ad4:	5f006574 	svcpl	0x00006574
     ad8:	00733570 	rsbseq	r3, r3, r0, ror r5
     adc:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     ae0:	61646d5f 	cmnvs	r4, pc, asr sp
     ae4:	51780079 	cmnpl	r8, r9, ror r0
     ae8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     aec:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
     af0:	53636972 	cmnpl	r3, #1867776	; 0x1c8000
     af4:	46646e65 	strbtmi	r6, [r4], -r5, ror #28
     af8:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     afc:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
     b00:	65755163 	ldrbvs	r5, [r5, #-355]!	; 0xfffffe9d
     b04:	79546575 	ldmdbvc	r4, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
     b08:	78006570 	stmdavc	r0, {r4, r5, r6, r8, sl, sp, lr}
     b0c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     b10:	51734965 	cmnpl	r3, r5, ror #18
     b14:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     b18:	6c6c7546 	cfstr64vs	mvdx7, [ip], #-280	; 0xfffffee8
     b1c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; a0c <_start-0x75f4>
     b20:	00525349 	subseq	r5, r2, r9, asr #6
     b24:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     b28:	4d657565 	cfstr64mi	mvdx7, [r5, #-404]!	; 0xfffffe6c
     b2c:	61737365 	cmnvs	r3, r5, ror #6
     b30:	57736567 	ldrbpl	r6, [r3, -r7, ror #10]!
     b34:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     b38:	7000676e 	andvc	r6, r0, lr, ror #14
     b3c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     b40:	73006575 	movwvc	r6, #1397	; 0x575
     b44:	5f657a69 	svcpl	0x00657a69
     b48:	51780074 	cmnpl	r8, r4, ror r0
     b4c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     b50:	75517349 	ldrbvc	r7, [r1, #-841]	; 0xfffffcb7
     b54:	45657565 	strbmi	r7, [r5, #-1381]!	; 0xfffffa9b
     b58:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     b5c:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; a4c <_start-0x75b4>
     b60:	00525349 	subseq	r5, r2, r9, asr #6
     b64:	4c785478 	cfldrdmi	mvd5, [r8], #-480	; 0xfffffe20
     b68:	006b636f 	rsbeq	r6, fp, pc, ror #6
     b6c:	65755176 	ldrbvs	r5, [r5, #-374]!	; 0xfffffe8a
     b70:	65446575 	strbvs	r6, [r4, #-1397]	; 0xfffffa8b
     b74:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
     b78:	61547800 	cmpvs	r4, r0, lsl #16
     b7c:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
     b80:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
     b84:	6f54676e 	svcvs	0x0054676e
     b88:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
     b8c:	00657669 	rsbeq	r7, r5, r9, ror #12
     b90:	43767270 	cmnmi	r6, #112, 4
     b94:	4479706f 	ldrbtmi	r7, [r9], #-111	; 0xffffff91
     b98:	54617461 	strbtpl	r7, [r1], #-1121	; 0xfffffb9f
     b9c:	6575516f 	ldrbvs	r5, [r5, #-367]!	; 0xfffffe91
     ba0:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
     ba4:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     ba8:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
     bac:	52637000 	rsbpl	r7, r3, #0
     bb0:	46646165 	strbtmi	r6, [r4], -r5, ror #2
     bb4:	006d6f72 	rsbeq	r6, sp, r2, ror pc
     bb8:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
     bbc:	6f6c6672 	svcvs	0x006c6672
     bc0:	756f4377 	strbvc	r4, [pc, #-887]!	; 851 <_start-0x77af>
     bc4:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     bc8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     bcc:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
     bd0:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
     bd4:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
     bd8:	00657669 	rsbeq	r7, r5, r9, ror #12
     bdc:	61537875 	cmpvs	r3, r5, ror r8
     be0:	49646576 	stmdbmi	r4!, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
     be4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     be8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     bec:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     bf0:	70007375 	andvc	r7, r0, r5, ror r3
     bf4:	61654863 	cmnvs	r5, r3, ror #16
     bf8:	4a780064 	bmi	1e00d90 <mailbuffer+0x1dd3bf0>
     bfc:	50747375 	rsbspl	r7, r4, r5, ror r3
     c00:	696b6565 	stmdbvs	fp!, {r0, r2, r5, r6, r8, sl, sp, lr}^
     c04:	7000676e 	andvc	r6, r0, lr, ror #14
     c08:	73497672 	movtvc	r7, #38514	; 0x9672
     c0c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     c10:	706d4565 	rsbvc	r4, sp, r5, ror #10
     c14:	78007974 	stmdavc	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     c18:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     c1c:	6e654765 	cdpvs	7, 6, cr4, cr5, cr5, {3}
     c20:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
     c24:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
     c28:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
     c2c:	754f656d 	strbvc	r6, [pc, #-1389]	; 6c7 <_start-0x7939>
     c30:	70795474 	rsbsvc	r5, r9, r4, ror r4
     c34:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
     c38:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
     c3c:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
     c40:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     c44:	6e614865 	cdpvs	8, 6, cr4, cr1, cr5, {3}
     c48:	00656c64 	rsbeq	r6, r5, r4, ror #24
     c4c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
     c50:	65526575 	ldrbvs	r6, [r2, #-1397]	; 0xfffffa8b
     c54:	76696563 	strbtvc	r6, [r9], -r3, ror #10
     c58:	6f724665 	svcvs	0x00724665
     c5c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     c60:	6f682f00 	svcvs	0x00682f00
     c64:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
     c68:	2f6c7261 	svccs	0x006c7261
     c6c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
     c70:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c74:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
     c78:	6172676f 	cmnvs	r2, pc, ror #14
     c7c:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
     c80:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
     c84:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
     c88:	462f534f 	strtmi	r5, [pc], -pc, asr #6
     c8c:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
     c90:	2f534f54 	svccs	0x00534f54
     c94:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     c98:	712f6563 			; <UNDEFINED> instruction: 0x712f6563
     c9c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     ca0:	7000632e 	andvc	r6, r0, lr, lsr #6
     ca4:	73497672 	movtvc	r7, #38514	; 0x9672
     ca8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     cac:	6c754665 	ldclvs	6, cr4, [r5], #-404	; 0xfffffe6c
     cb0:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
     cb4:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     cb8:	70006874 	andvc	r6, r0, r4, ror r8
     cbc:	69724f63 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, r9, sl, fp, lr}^
     cc0:	616e6967 	cmnvs	lr, r7, ror #18
     cc4:	6165526c 	cmnvs	r5, ip, ror #4
     cc8:	736f5064 	cmnvc	pc, #100	; 0x64
     ccc:	6f697469 	svcvs	0x00697469
     cd0:	7870006e 	ldmdavc	r0!, {r1, r2, r3, r5, r6}^
     cd4:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
     cd8:	72507265 	subsvc	r7, r0, #1342177286	; 0x50000006
     cdc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     ce0:	61547974 	cmpvs	r4, r4, ror r9
     ce4:	6f576b73 	svcvs	0x00576b73
     ce8:	006e656b 	rsbeq	r6, lr, fp, ror #10
     cec:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
     cf0:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
     cf4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     cf8:	78750068 	ldmdavc	r5!, {r3, r5, r6}^
     cfc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d00:	73654d65 	cmnvc	r5, #6464	; 0x1940
     d04:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     d08:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     d0c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     d10:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; c00 <_start-0x7400>
     d14:	00525349 	subseq	r5, r2, r9, asr #6
     d18:	74497670 	strbvc	r7, [r9], #-1648	; 0xfffff990
     d1c:	6f546d65 	svcvs	0x00546d65
     d20:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d24:	51780065 	cmnpl	r8, r5, rrx
     d28:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
     d2c:	6e457800 	cdpvs	8, 4, cr7, cr5, cr0, {0}
     d30:	54797274 	ldrbtpl	r7, [r9], #-628	; 0xfffffd8c
     d34:	53656d69 	cmnpl	r5, #6720	; 0x1a40
     d38:	51007465 	tstpl	r0, r5, ror #8
     d3c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     d40:	69666544 	stmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     d44:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     d48:	70006e6f 	andvc	r6, r0, pc, ror #28
     d4c:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
     d50:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
     d54:	51780065 	cmnpl	r8, r5, rrx
     d58:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     d5c:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
     d60:	43636972 	cmnmi	r3, #1867776	; 0x1c8000
     d64:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
     d68:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     d6c:	706f4376 	rsbvc	r4, pc, r6, ror r3	; <UNPREDICTABLE>
     d70:	74614479 	strbtvc	r4, [r1], #-1145	; 0xfffffb87
     d74:	6f724661 	svcvs	0x00724661
     d78:	6575516d 	ldrbvs	r5, [r5, #-365]!	; 0xfffffe93
     d7c:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
     d80:	73654d78 	cmnvc	r5, #120, 26	; 0x1e00
     d84:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     d88:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
     d8c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     d90:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
     d94:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
     d98:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     d9c:	65526369 	ldrbvs	r6, [r2, #-873]	; 0xfffffc97
     da0:	00746573 	rsbseq	r6, r4, r3, ror r5
     da4:	706f4378 	rsbvc	r4, pc, r8, ror r3	; <UNPREDICTABLE>
     da8:	736f5079 	cmnvc	pc, #121	; 0x79
     dac:	6f697469 	svcvs	0x00697469
     db0:	7270006e 	rsbsvc	r0, r0, #110	; 0x6e
     db4:	6c6e5576 	cfstr64vs	mvdx5, [lr], #-472	; 0xfffffe28
     db8:	516b636f 	cmnpl	fp, pc, ror #6
     dbc:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     dc0:	78527800 	ldmdavc	r2, {fp, ip, sp, lr}^
     dc4:	6b636f4c 	blvs	18dcafc <mailbuffer+0x18af95c>
     dc8:	54637000 	strbtpl	r7, [r3], #-0
     dcc:	006c6961 	rsbeq	r6, ip, r1, ror #18
     dd0:	736f5078 	cmnvc	pc, #120	; 0x78
     dd4:	6f697469 	svcvs	0x00697469
     dd8:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
     ddc:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
     de0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     de4:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
     de8:	6e65536f 	cdpvs	3, 6, cr5, cr5, cr15, {3}
     dec:	51780064 	cmnpl	r8, r4, rrx
     df0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
     df4:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     df8:	79426e49 	stmdbvc	r2, {r0, r3, r6, r9, sl, fp, sp, lr}^
     dfc:	00736574 	rsbseq	r6, r3, r4, ror r5
     e00:	72576370 	subsvc	r6, r7, #112, 6	; 0xc0000001
     e04:	54657469 	strbtpl	r7, [r5], #-1129	; 0xfffffb97
     e08:	7875006f 	ldmdavc	r5!, {r0, r1, r2, r3, r5, r6}^
     e0c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
     e10:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     e14:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
     e18:	6e4f656d 	cdpvs	5, 4, cr6, cr15, cr13, {3}
     e1c:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
     e20:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
     e24:	42767000 	rsbsmi	r7, r6, #0
     e28:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     e2c:	63700072 	cmnvs	r0, #114	; 0x72
     e30:	6b736154 	blvs	1cd9388 <mailbuffer+0x1cac1e8>
     e34:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
     e38:	61547600 	cmpvs	r4, r0, lsl #12
     e3c:	6e456b73 	vmovvs.8	d5[3], r6
     e40:	68635364 	stmdavs	r3!, {r2, r5, r6, r8, r9, ip, lr}^
     e44:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
     e48:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
     e4c:	61546b73 	cmpvs	r4, r3, ror fp
     e50:	6f436b73 	svcvs	0x00436b73
     e54:	6f72746e 	svcvs	0x0072746e
     e58:	6f6c426c 	svcvs	0x006c426c
     e5c:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
     e60:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     e64:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
     e68:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
     e6c:	664f7265 	strbvs	r7, [pc], -r5, ror #4
     e70:	6b736154 	blvs	1cd93c8 <mailbuffer+0x1cac228>
     e74:	78750073 	ldmdavc	r5!, {r0, r1, r4, r5, r6}^
     e78:	52706f54 	rsbspl	r6, r0, #84, 30	; 0x150
     e7c:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     e80:	6f697250 	svcvs	0x00697250
     e84:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     e88:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
     e8c:	506b7361 	rsbpl	r7, fp, r1, ror #6
     e90:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     e94:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
     e98:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
     e9c:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     ea0:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     ea4:	6e755272 	mrcvs	2, 3, r5, cr5, cr2, {3}
     ea8:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
     eac:	52787000 	rsbspl	r7, r8, #0
     eb0:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     eb4:	6b736154 	blvs	1cd940c <mailbuffer+0x1cac26c>
     eb8:	73694c73 	cmnvc	r9, #29440	; 0x7300
     ebc:	75007374 	strvc	r7, [r0, #-884]	; 0xfffffc8c
     ec0:	7261506c 	rsbvc	r5, r1, #108	; 0x6c
     ec4:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
     ec8:	00737265 	rsbseq	r7, r3, r5, ror #4
     ecc:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
     ed0:	7465536b 	strbtvc	r5, [r5], #-875	; 0xfffffc95
     ed4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     ed8:	5374754f 	cmnpl	r4, #331350016	; 0x13c00000
     edc:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     ee0:	43787500 	cmnmi	r8, #0, 10
     ee4:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
     ee8:	7250746e 	subsvc	r7, r0, #1845493760	; 0x6e000000
     eec:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     ef0:	78007974 	stmdavc	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     ef4:	616c6544 	cmnvs	ip, r4, asr #10
     ef8:	54646579 	strbtpl	r6, [r4], #-1401	; 0xfffffa87
     efc:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
     f00:	31747369 	cmncc	r4, r9, ror #6
     f04:	65447800 	strbvs	r7, [r4, #-2048]	; 0xfffff800
     f08:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     f0c:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
     f10:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
     f14:	76003274 			; <UNDEFINED> instruction: 0x76003274
     f18:	6b736154 	blvs	1cd9470 <mailbuffer+0x1cac2d0>
     f1c:	41746553 	cmnmi	r4, r3, asr r5
     f20:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     f24:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     f28:	61546e6f 	cmpvs	r4, pc, ror #28
     f2c:	61546b73 	cmpvs	r4, r3, ror fp
     f30:	78750067 	ldmdavc	r5!, {r0, r1, r2, r5, r6}^
     f34:	7373694d 	cmnvc	r3, #1261568	; 0x134000
     f38:	69546465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, sp, lr}^
     f3c:	00736b63 	rsbseq	r6, r3, r3, ror #22
     f40:	61547870 	cmpvs	r4, r0, ror r8
     f44:	6f546b73 	svcvs	0x00546b73
     f48:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
     f4c:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
     f50:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
     f54:	71655264 	cmnvc	r5, r4, ror #4
     f58:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
     f5c:	78750064 	ldmdavc	r5!, {r2, r5, r6}^
     f60:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     f64:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     f68:	73755372 	cmnvc	r5, #-939524095	; 0xc8000001
     f6c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     f70:	70006465 	andvc	r6, r0, r5, ror #8
     f74:	626e5578 	rsbvs	r5, lr, #120, 10	; 0x1e000000
     f78:	6b636f6c 	blvs	18dcd30 <mailbuffer+0x18afb90>
     f7c:	43546465 	cmpmi	r4, #1694498816	; 0x65000000
     f80:	72700042 	rsbsvc	r0, r0, #66	; 0x42
     f84:	6c6c4176 	stfvse	f4, [ip], #-472	; 0xfffffe28
     f88:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     f8c:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
     f90:	53646e41 	cmnpl	r4, #1040	; 0x410
     f94:	6b636174 	blvs	18d956c <mailbuffer+0x18ac3cc>
     f98:	75537800 	ldrbvc	r7, [r3, #-2048]	; 0xfffff800
     f9c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     fa0:	54646564 	strbtpl	r6, [r4], #-1380	; 0xfffffa9c
     fa4:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
     fa8:	00747369 	rsbseq	r7, r4, r9, ror #6
     fac:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
     fb0:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
     fb4:	6b636954 	blvs	18db50c <mailbuffer+0x18ae36c>
     fb8:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     fbc:	6f724674 	svcvs	0x00724674
     fc0:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
     fc4:	65507800 	ldrbvs	r7, [r0, #-2048]	; 0xfffff800
     fc8:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
     fcc:	61655267 	cmnvs	r5, r7, ror #4
     fd0:	694c7964 	stmdbvs	ip, {r2, r5, r6, r8, fp, ip, sp, lr}^
     fd4:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
     fd8:	6b736154 	blvs	1cd9530 <mailbuffer+0x1cac390>
     fdc:	61547349 	cmpvs	r4, r9, asr #6
     fe0:	75536b73 	ldrbvc	r6, [r3, #-2931]	; 0xfffff48d
     fe4:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     fe8:	00646564 	rsbeq	r6, r4, r4, ror #10
     fec:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
     ff0:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     ff4:	73696c61 	cmnvc	r9, #24832	; 0x6100
     ff8:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
     ffc:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    1000:	78007374 	stmdavc	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1004:	6b736154 	blvs	1cd955c <mailbuffer+0x1cac3bc>
    1008:	41746547 	cmnmi	r4, r7, asr #10
    100c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    1010:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    1014:	61546e6f 	cmpvs	r4, pc, ror #28
    1018:	61546b73 	cmpvs	r4, r3, ror fp
    101c:	54780067 	ldrbtpl	r0, [r8], #-103	; 0xffffff99
    1020:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    1024:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    1028:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    102c:	696d7265 	stmdbvs	sp!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1030:	6974616e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, sp, lr}^
    1034:	78006e6f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    1038:	7373694d 	cmnvc	r3, #1261568	; 0x134000
    103c:	69596465 	ldmdbvs	r9, {r0, r2, r5, r6, sl, sp, lr}^
    1040:	00646c65 	rsbeq	r6, r4, r5, ror #24
    1044:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1048:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
    104c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    1050:	006c6c41 	rsbeq	r6, ip, r1, asr #24
    1054:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1058:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    105c:	00656c64 	rsbeq	r6, r5, r4, ror #24
    1060:	546b7374 	strbtpl	r7, [fp], #-884	; 0xfffffc8c
    1064:	70004243 	andvc	r4, r0, r3, asr #4
    1068:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    106c:	6f54736b 	svcvs	0x0054736b
    1070:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    1074:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    1078:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    107c:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
    1080:	00646574 	rsbeq	r6, r4, r4, ror r5
    1084:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    1088:	756f436b 	strbvc	r4, [pc, #-875]!	; d25 <_start-0x72db>
    108c:	7000746e 	andvc	r7, r0, lr, ror #8
    1090:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
    1094:	6f6c6672 	svcvs	0x006c6672
    1098:	6c654477 	cfstrdvs	mvd4, [r5], #-476	; 0xfffffe24
    109c:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    10a0:	6b736154 	blvs	1cd95f8 <mailbuffer+0x1cac458>
    10a4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    10a8:	61547600 	cmpvs	r4, r0, lsl #12
    10ac:	6c506b73 	mrrcvs	11, 7, r6, r0, cr3
    10b0:	4f656361 	svcmi	0x00656361
    10b4:	6576456e 	ldrbvs	r4, [r6, #-1390]!	; 0xfffffa92
    10b8:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    10bc:	76007473 			; <UNDEFINED> instruction: 0x76007473
    10c0:	6b736154 	blvs	1cd9618 <mailbuffer+0x1cac478>
    10c4:	616c6544 	cmnvs	ip, r4, asr #10
    10c8:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    10cc:	6b736154 	blvs	1cd9624 <mailbuffer+0x1cac484>
    10d0:	61547800 	cmpvs	r4, r0, lsl #16
    10d4:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    10d8:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    10dc:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; fcc <_start-0x7034>
    10e0:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    10e4:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    10e8:	53780074 	cmnpl	r8, #116	; 0x74
    10ec:	6c756f68 	ldclvs	15, cr6, [r5], #-416	; 0xfffffe60
    10f0:	6c654464 	cfstrdvs	mvd4, [r5], #-400	; 0xfffffe70
    10f4:	70007961 	andvc	r7, r0, r1, ror #18
    10f8:	64497672 	strbvs	r7, [r9], #-1650	; 0xfffff98e
    10fc:	6154656c 	cmpvs	r4, ip, ror #10
    1100:	70006b73 	andvc	r6, r0, r3, ror fp
    1104:	53415464 	movtpl	r5, #5220	; 0x1464
    1108:	4f485f4b 	svcmi	0x00485f4b
    110c:	435f4b4f 	cmpmi	pc, #80896	; 0x13c00
    1110:	0045444f 	subeq	r4, r5, pc, asr #8
    1114:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
    1118:	45734974 	ldrbmi	r4, [r3, #-2420]!	; 0xfffff68c
    111c:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
    1120:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    1124:	466b6f6f 	strbtmi	r6, [fp], -pc, ror #30
    1128:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    112c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1130:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    1134:	42435477 	submi	r5, r3, #1996488704	; 0x77000000
    1138:	54787000 	ldrbtpl	r7, [r8], #-0
    113c:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    1140:	0065646f 	rsbeq	r6, r5, pc, ror #8
    1144:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1148:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    114c:	6b636954 	blvs	18db6a4 <mailbuffer+0x18ae504>
    1150:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1154:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    1158:	54747865 	ldrbtpl	r7, [r4], #-2149	; 0xfffff79b
    115c:	556b7361 	strbpl	r7, [fp, #-865]!	; 0xfffffc9f
    1160:	6f6c626e 	svcvs	0x006c626e
    1164:	69546b63 	ldmdbvs	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1168:	7500656d 	strvc	r6, [r0, #-1389]	; 0xfffffa93
    116c:	61745373 	cmnvs	r4, r3, ror r3
    1170:	65446b63 	strbvs	r6, [r4, #-2915]	; 0xfffff49d
    1174:	00687470 	rsbeq	r7, r8, r0, ror r4
    1178:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    117c:	7500736b 	strvc	r7, [r0, #-875]	; 0xfffffc95
    1180:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    1184:	6f697250 	svcvs	0x00697250
    1188:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    118c:	4e637000 	cdpmi	0, 6, cr7, cr3, cr0, {0}
    1190:	00656d61 	rsbeq	r6, r5, r1, ror #26
    1194:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    1198:	754f656d 	strbvc	r6, [pc, #-1389]	; c33 <_start-0x73cd>
    119c:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    11a0:	6b736154 	blvs	1cd96f8 <mailbuffer+0x1cac558>
    11a4:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    11a8:	76007265 	strvc	r7, [r0], -r5, ror #4
    11ac:	6b736154 	blvs	1cd9704 <mailbuffer+0x1cac564>
    11b0:	6f697250 	svcvs	0x00697250
    11b4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    11b8:	00746553 	rsbseq	r6, r4, r3, asr r5
    11bc:	6d654d78 	stclvs	13, cr4, [r5, #-480]!	; 0xfffffe20
    11c0:	5279726f 	rsbspl	r7, r9, #-268435450	; 0xf0000006
    11c4:	6f696765 	svcvs	0x00696765
    11c8:	5476006e 	ldrbtpl	r0, [r6], #-110	; 0xffffff92
    11cc:	496b7361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    11d0:	6572636e 	ldrbvs	r6, [r2, #-878]!	; 0xfffffc92
    11d4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    11d8:	6b636954 	blvs	18db730 <mailbuffer+0x18ae590>
    11dc:	6f682f00 	svcvs	0x00682f00
    11e0:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    11e4:	2f6c7261 	svccs	0x006c7261
    11e8:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    11ec:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    11f0:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    11f4:	6172676f 	cmnvs	r2, pc, ror #14
    11f8:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    11fc:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    1200:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    1204:	462f534f 	strtmi	r5, [pc], -pc, asr #6
    1208:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    120c:	2f534f54 	svccs	0x00534f54
    1210:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    1214:	742f6563 	strtvc	r6, [pc], #-1379	; 121c <_start-0x6de4>
    1218:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    121c:	7000632e 	andvc	r6, r0, lr, lsr #6
    1220:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    1224:	61697469 	cmnvs	r9, r9, ror #8
    1228:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    122c:	56424354 			; <UNDEFINED> instruction: 0x56424354
    1230:	61697261 	cmnvs	r9, r1, ror #4
    1234:	73656c62 	cmnvc	r5, #25088	; 0x6200
    1238:	454d7800 	strbmi	r7, [sp, #-2048]	; 0xfffff800
    123c:	59524f4d 	ldmdbpl	r2, {r0, r2, r3, r6, r8, r9, sl, fp, lr}^
    1240:	4745525f 	smlsldmi	r5, r5, pc, r2	; <UNPREDICTABLE>
    1244:	004e4f49 	subeq	r4, lr, r9, asr #30
    1248:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    124c:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    1250:	00657465 	rsbeq	r7, r5, r5, ror #8
    1254:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    1258:	6c61436b 	stclvs	3, cr4, [r1], #-428	; 0xfffffe54
    125c:	7070416c 	rsbsvc	r4, r0, ip, ror #2
    1260:	6163696c 	cmnvs	r3, ip, ror #18
    1264:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1268:	6b736154 	blvs	1cd97c0 <mailbuffer+0x1cac620>
    126c:	6b6f6f48 	blvs	1bdcf94 <mailbuffer+0x1bafdf4>
    1270:	61547800 	cmpvs	r4, r0, lsl #16
    1274:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    1278:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    127c:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
    1280:	00657461 	rsbeq	r7, r5, r1, ror #8
    1284:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    1288:	6977536b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r8, r9, ip, lr}^
    128c:	43686374 	cmnmi	r8, #116, 6	; 0xd0000001
    1290:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
    1294:	78007478 	stmdavc	r0, {r3, r4, r5, r6, sl, ip, sp, lr}
    1298:	4f6d754e 	svcmi	0x006d754e
    129c:	65764f66 	ldrbvs	r4, [r6, #-3942]!	; 0xfffff09a
    12a0:	6f6c6672 	svcvs	0x006c6672
    12a4:	70007377 	andvc	r7, r0, r7, ror r3
    12a8:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    12ac:	6761546b 	strbvs	r5, [r1, -fp, ror #8]!
    12b0:	53787000 	cmnpl	r8, #0
    12b4:	6b636174 	blvs	18d988c <mailbuffer+0x18ac6ec>
    12b8:	61547800 	cmpvs	r4, r0, lsl #16
    12bc:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    12c0:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    12c4:	006c6c41 	rsbeq	r6, ip, r1, asr #24
    12c8:	65447870 	strbvs	r7, [r4, #-2160]	; 0xfffff790
    12cc:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    12d0:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    12d4:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    12d8:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    12dc:	55706f54 	ldrbpl	r6, [r0, #-3924]!	; 0xfffff0ac
    12e0:	50646573 	rsbpl	r6, r4, r3, ror r5
    12e4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    12e8:	00797469 	rsbseq	r7, r9, r9, ror #8
    12ec:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    12f0:	6568436b 	strbvs	r4, [r8, #-875]!	; 0xfffffc95
    12f4:	6f466b63 	svcvs	0x00466b63
    12f8:	6d695472 	cfstrdvs	mvd5, [r9, #-456]!	; 0xfffffe38
    12fc:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    1300:	54787000 	ldrbtpl	r7, [r8], #-0
    1304:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    1308:	7375536f 	cmnvc	r5, #-1140850687	; 0xbc000001
    130c:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    1310:	50787000 	rsbspl	r7, r8, r0
    1314:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1318:	5773756f 	ldrbpl	r7, [r3, -pc, ror #10]!
    131c:	54656b61 	strbtpl	r6, [r5], #-2913	; 0xfffff49f
    1320:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1324:	61547870 	cmpvs	r4, r0, ror r8
    1328:	6f546b73 	svcvs	0x00546b73
    132c:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
    1330:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
    1334:	6e654c6c 	cdpvs	12, 6, cr4, cr5, cr12, {3}
    1338:	49687467 	stmdbmi	r8!, {r0, r1, r2, r5, r6, sl, ip, sp, lr}^
    133c:	7479426e 	ldrbtvc	r4, [r9], #-622	; 0xfffffd92
    1340:	78007365 	stmdavc	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1344:	6b736154 	blvs	1cd989c <mailbuffer+0x1cac6fc>
    1348:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    134c:	7246656d 	subvc	r6, r6, #457179136	; 0x1b400000
    1350:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    1354:	54760052 	ldrbtpl	r0, [r6], #-82	; 0xffffffae
    1358:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    135c:	65737369 	ldrbvs	r7, [r3, #-873]!	; 0xfffffc97
    1360:	65695964 	strbvs	r5, [r9, #-2404]!	; 0xfffff69c
    1364:	7000646c 	andvc	r6, r0, ip, ror #8
    1368:	74537875 	ldrbvc	r7, [r3], #-2165	; 0xfffff78b
    136c:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1370:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1374:	54760072 	ldrbtpl	r0, [r6], #-114	; 0xffffff8e
    1378:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    137c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1380:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
    1384:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    1388:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    138c:	65684376 	strbvs	r4, [r8, #-886]!	; 0xfffffc8a
    1390:	61546b63 	cmpvs	r4, r3, ror #22
    1394:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    1398:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    139c:	6554676e 	ldrbvs	r6, [r4, #-1902]	; 0xfffff892
    13a0:	6e696d72 	mcrvs	13, 3, r6, cr9, cr2, {3}
    13a4:	6f697461 	svcvs	0x00697461
    13a8:	7670006e 	ldrbtvc	r0, [r0], -lr, rrx
    13ac:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    13b0:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    13b4:	00737365 	rsbseq	r7, r3, r5, ror #6
    13b8:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    13bc:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
    13c0:	6e557961 	vnmlavs.f16	s15, s10, s3	; <UNPREDICTABLE>
    13c4:	006c6974 	rsbeq	r6, ip, r4, ror r9
    13c8:	44767270 	ldrbtmi	r7, [r6], #-624	; 0xfffffd90
    13cc:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    13d0:	42435465 	submi	r5, r3, #1694498816	; 0x65000000
    13d4:	61547600 	cmpvs	r4, r0, lsl #12
    13d8:	75536b73 	ldrbvc	r6, [r3, #-2931]	; 0xfffff48d
    13dc:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    13e0:	41780064 	cmnmi	r8, r4, rrx
    13e4:	6165726c 	cmnvs	r5, ip, ror #4
    13e8:	69597964 	ldmdbvs	r9, {r2, r5, r6, r8, fp, ip, sp, lr}^
    13ec:	65646c65 	strbvs	r6, [r4, #-3173]!	; 0xfffff39b
    13f0:	76700064 	ldrbtvc	r0, [r0], -r4, rrx
    13f4:	61726150 	cmnvs	r2, r0, asr r1
    13f8:	6574656d 	ldrbvs	r6, [r4, #-1389]!	; 0xfffffa93
    13fc:	52780072 	rsbspl	r0, r8, #114	; 0x72
    1400:	6f696765 	svcvs	0x00696765
    1404:	7000736e 	andvc	r7, r0, lr, ror #6
    1408:	64417672 	strbvs	r7, [r1], #-1650	; 0xfffff98e
    140c:	72754364 	rsbsvc	r4, r5, #100, 6	; 0x90000001
    1410:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1414:	6b736154 	blvs	1cd996c <mailbuffer+0x1cac7cc>
    1418:	65446f54 	strbvs	r6, [r4, #-3924]	; 0xfffff0ac
    141c:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    1420:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
    1424:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    1428:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    142c:	4e746e65 	cdpmi	14, 7, cr6, cr4, cr5, {3}
    1430:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1434:	54664f72 	strbtpl	r4, [r6], #-3954	; 0xfffff08e
    1438:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    143c:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    1440:	6e49656d 	cdpvs	5, 4, cr6, cr9, cr13, {3}
    1444:	6d657263 	sfmvs	f7, 2, [r5, #-396]!	; 0xfffffe74
    1448:	00746e65 	rsbseq	r6, r4, r5, ror #28
    144c:	43547870 	cmpmi	r4, #112, 16	; 0x700000
    1450:	54760042 	ldrbtpl	r0, [r6], #-66	; 0xffffffbe
    1454:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    1458:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    145c:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1460:	61657243 	cmnvs	r5, r3, asr #4
    1464:	54646574 	strbtpl	r6, [r4], #-1396	; 0xfffffa8c
    1468:	006b7361 	rsbeq	r7, fp, r1, ror #6
    146c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1470:	31676e69 	cmncc	r7, r9, ror #28
    1474:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
    1478:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    147c:	69440032 	stmdbvs	r4, {r1, r4, r5}^
    1480:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1484:	73614265 	cmnvc	r1, #1342177286	; 0x50000006
    1488:	42006369 	andmi	r6, r0, #-1543503871	; 0xa4000001
    148c:	38324d43 	ldmdacc	r2!, {r0, r1, r6, r8, sl, fp, lr}
    1490:	495f3533 	ldmdbmi	pc, {r0, r1, r4, r5, r8, sl, ip, sp}^	; <UNPREDICTABLE>
    1494:	5f43544e 	svcpl	0x0043544e
    1498:	53474552 	movtpl	r4, #30034	; 0x7552
    149c:	51494600 	cmppl	r9, r0, lsl #12
    14a0:	6c727443 	cfldrdvs	mvd7, [r2], #-268	; 0xfffffef4
    14a4:	6f682f00 	svcvs	0x00682f00
    14a8:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    14ac:	2f6c7261 	svccs	0x006c7261
    14b0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    14b4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    14b8:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    14bc:	6172676f 	cmnvs	r2, pc, ror #14
    14c0:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    14c4:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    14c8:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    14cc:	442f534f 	strtmi	r5, [pc], #-847	; 14d4 <_start-0x6b2c>
    14d0:	2f6f6d65 	svccs	0x006f6d65
    14d4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    14d8:	2f737265 	svccs	0x00737265
    14dc:	2e717269 	cdpcs	2, 7, cr7, cr1, cr9, {3}
    14e0:	72690063 	rsbvc	r0, r9, #99	; 0x63
    14e4:	6f6c4271 	svcvs	0x006c4271
    14e8:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
    14ec:	73614d6c 	cmnvc	r1, #108, 26	; 0x1b00
    14f0:	5364656b 	cmnpl	r4, #448790528	; 0x1ac00000
    14f4:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    14f8:	6e650073 	mcrvs	0, 3, r0, cr5, cr3, {3}
    14fc:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1500:	61680064 	cmnvs	r8, r4, rrx
    1504:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1508:	676e6152 			; <UNDEFINED> instruction: 0x676e6152
    150c:	616d0065 	cmnvs	sp, r5, rrx
    1510:	69006b73 	stmdbvs	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    1514:	69447172 	stmdbvs	r4, {r1, r4, r5, r6, r8, ip, sp, lr}^
    1518:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    151c:	72690065 	rsbvc	r0, r9, #101	; 0x65
    1520:	67655271 			; <UNDEFINED> instruction: 0x67655271
    1524:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1528:	66700072 			; <UNDEFINED> instruction: 0x66700072
    152c:	6e61486e 	cdpvs	8, 6, cr4, cr1, cr14, {3}
    1530:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1534:	71726900 	cmnvc	r2, r0, lsl #18
    1538:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    153c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1540:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    1544:	0032656c 	eorseq	r6, r2, ip, ror #10
    1548:	61736944 	cmnvs	r3, r4, asr #18
    154c:	31656c62 	cmncc	r5, r2, ror #24
    1550:	73694400 	cmnvc	r9, #0, 8
    1554:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1558:	5f670032 	svcpl	0x00670032
    155c:	74636556 	strbtvc	r6, [r3], #-1366	; 0xfffffaaa
    1560:	6154726f 	cmpvs	r4, pc, ror #4
    1564:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1568:	45717269 	ldrbmi	r7, [r1, #-617]!	; 0xfffffd97
    156c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1570:	4e460065 	cdpmi	0, 4, cr0, cr6, cr5, {3}
    1574:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    1578:	55525245 	ldrbpl	r5, [r2, #-581]	; 0xfffffdbb
    157c:	485f5450 	ldmdami	pc, {r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1580:	4c444e41 	mcrrmi	14, 4, r4, r4, cr1
    1584:	49005245 	stmdbmi	r0, {r0, r2, r6, r9, ip, lr}
    1588:	5245544e 	subpl	r5, r5, #1308622848	; 0x4e000000
    158c:	54505552 	ldrbpl	r5, [r0], #-1362	; 0xfffffaae
    1590:	4345565f 	movtmi	r5, #22111	; 0x565f
    1594:	00524f54 	subseq	r4, r2, r4, asr pc
    1598:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    159c:	00676e69 	rsbeq	r6, r7, r9, ror #28
    15a0:	42515249 	subsmi	r5, r1, #-1879048188	; 0x90000004
    15a4:	63697361 	cmnvs	r9, #-2080374783	; 0x84000001
    15a8:	71726900 	cmnvc	r2, r0, lsl #18
    15ac:	6c626e55 	stclvs	14, cr6, [r2], #-340	; 0xfffffeac
    15b0:	006b636f 	rsbeq	r6, fp, pc, ror #6
    15b4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    15b8:	6142656c 	cmpvs	r2, ip, ror #10
    15bc:	00636973 	rsbeq	r6, r3, r3, ror r9
    15c0:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    15c4:	0031656c 	eorseq	r6, r1, ip, ror #10
    15c8:	566e6970 			; <UNDEFINED> instruction: 0x566e6970
    15cc:	47006c61 	strmi	r6, [r0, -r1, ror #24]
    15d0:	54455350 	strbpl	r5, [r5], #-848	; 0xfffffcb0
    15d4:	4d434200 	sfmmi	f4, 2, [r3, #-0]
    15d8:	35333832 	ldrcc	r3, [r3, #-2098]!	; 0xfffff7ce
    15dc:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    15e0:	45525f4f 	ldrbmi	r5, [r2, #-3919]	; 0xfffff0b1
    15e4:	69005347 	stmdbvs	r0, {r0, r1, r2, r6, r8, r9, ip, lr}
    15e8:	006d6574 	rsbeq	r6, sp, r4, ror r5
    15ec:	4e6e6970 			; <UNDEFINED> instruction: 0x4e6e6970
    15f0:	52006d75 	andpl	r6, r0, #7488	; 0x1d40
    15f4:	47646165 	strbmi	r6, [r4, -r5, ror #2]!
    15f8:	006f6970 	rsbeq	r6, pc, r0, ror r9	; <UNPREDICTABLE>
    15fc:	47746553 			; <UNDEFINED> instruction: 0x47746553
    1600:	446f6970 	strbtmi	r6, [pc], #-2416	; 1608 <_start-0x69f8>
    1604:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
    1608:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    160c:	43504700 	cmpmi	r0, #0, 14
    1610:	4700524c 	strmi	r5, [r0, -ip, asr #4]
    1614:	4e454850 	mcrmi	8, 2, r4, cr5, cr0, {2}
    1618:	54454400 	strbpl	r4, [r5], #-1024	; 0xfffffc00
    161c:	5f544345 	svcpl	0x00544345
    1620:	49534952 	ldmdbmi	r3, {r1, r4, r6, r8, fp, lr}^
    1624:	415f474e 	cmpmi	pc, lr, asr #14
    1628:	434e5953 	movtmi	r5, #59731	; 0xe953
    162c:	54454400 	strbpl	r4, [r5], #-1024	; 0xfffffc00
    1630:	5f544345 	svcpl	0x00544345
    1634:	4c4c4146 	stfmie	f4, [ip], {70}	; 0x46
    1638:	5f474e49 	svcpl	0x00474e49
    163c:	4e595341 	cdpmi	3, 5, cr5, cr9, cr1, {2}
    1640:	6c430043 	mcrrvs	0, 4, r0, r3, cr3
    1644:	47726165 	ldrbmi	r6, [r2, -r5, ror #2]!
    1648:	496f6970 	stmdbmi	pc!, {r4, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
    164c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1650:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    1654:	41504700 	cmpmi	r0, r0, lsl #14
    1658:	004e4546 	subeq	r4, lr, r6, asr #10
    165c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 15a8 <_start-0x6a58>
    1660:	61632f65 	cmnvs	r3, r5, ror #30
    1664:	442f6c72 	strtmi	r6, [pc], #-3186	; 166c <_start-0x6994>
    1668:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    166c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1670:	6f72702f 	svcvs	0x0072702f
    1674:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1678:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
    167c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1680:	4f54522d 	svcmi	0x0054522d
    1684:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    1688:	442f6f6d 	strtmi	r6, [pc], #-3949	; 1690 <_start-0x6970>
    168c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1690:	672f7372 			; <UNDEFINED> instruction: 0x672f7372
    1694:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1698:	6e450063 	cdpvs	0, 4, cr0, cr5, cr3, {3}
    169c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    16a0:	6f697047 	svcvs	0x00697047
    16a4:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
    16a8:	47007463 	strmi	r7, [r0, -r3, ror #8]
    16ac:	44555050 	ldrbmi	r5, [r5], #-80	; 0xffffffb0
    16b0:	54454400 	strbpl	r4, [r5], #-1024	; 0xfffffc00
    16b4:	5f544345 	svcpl	0x00544345
    16b8:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    16bc:	41504700 	cmpmi	r0, r0, lsl #14
    16c0:	004e4552 	subeq	r4, lr, r2, asr r5
    16c4:	61736944 	cmnvs	r3, r4, asr #18
    16c8:	47656c62 	strbmi	r6, [r5, -r2, ror #24]!
    16cc:	446f6970 	strbtmi	r6, [pc], #-2416	; 16d4 <_start-0x692c>
    16d0:	63657465 	cmnvs	r5, #1694498816	; 0x65000000
    16d4:	65530074 	ldrbvs	r0, [r3, #-116]	; 0xffffff8c
    16d8:	69704774 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, r9, sl, lr}^
    16dc:	6e75466f 	cdpvs	6, 7, cr4, cr5, cr15, {3}
    16e0:	6f697463 	svcvs	0x00697463
    16e4:	5047006e 	subpl	r0, r7, lr, rrx
    16e8:	445f4f49 	ldrbmi	r4, [pc], #-3913	; 16f0 <_start-0x6910>
    16ec:	47005249 	strmi	r5, [r0, -r9, asr #4]
    16f0:	4e454650 	mcrmi	6, 2, r4, cr5, cr0, {2}
    16f4:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    16f8:	4e495f4f 	cdpmi	15, 4, cr5, cr9, cr15, {2}
    16fc:	54454400 	strbpl	r4, [r5], #-1024	; 0xfffffc00
    1700:	5f544345 	svcpl	0x00544345
    1704:	48474948 	stmdami	r7, {r3, r6, r8, fp, lr}^
    1708:	54454400 	strbpl	r4, [r5], #-1024	; 0xfffffc00
    170c:	5f544345 	svcpl	0x00544345
    1710:	454e4f4e 	strbmi	r4, [lr, #-3918]	; 0xfffff0b2
    1714:	4c504700 	mrrcmi	7, 0, r4, r0, cr0
    1718:	47004e45 	strmi	r4, [r0, -r5, asr #28]
    171c:	44555050 	ldrbmi	r5, [r5], #-80	; 0xffffffb0
    1720:	004b4c43 	subeq	r4, fp, r3, asr #24
    1724:	45544544 	ldrbmi	r4, [r4, #-1348]	; 0xfffffabc
    1728:	525f5443 	subspl	r5, pc, #1124073472	; 0x43000000
    172c:	4e495349 	cdpmi	3, 4, cr5, cr9, cr9, {2}
    1730:	45440047 	strbmi	r0, [r4, #-71]	; 0xffffffb9
    1734:	54434554 	strbpl	r4, [r3], #-1364	; 0xfffffaac
    1738:	574f4c5f 	smlsldpl	r4, pc, pc, ip	; <UNPREDICTABLE>
    173c:	4c504700 	mrrcmi	7, 0, r4, r0, cr0
    1740:	66005645 	strvs	r5, [r0], -r5, asr #12
    1744:	4e636e75 	mcrmi	14, 3, r6, cr3, cr5, {3}
    1748:	47006d75 	smlsdxmi	r0, r5, sp, r6
    174c:	4e455250 	mcrmi	2, 2, r5, cr5, cr0, {2}
    1750:	45504700 	ldrbmi	r4, [r0, #-1792]	; 0xfffff900
    1754:	74005344 	strvc	r5, [r0], #-836	; 0xfffffcbc
    1758:	00657079 	rsbeq	r7, r5, r9, ror r0
    175c:	53465047 	movtpl	r5, #24647	; 0x6047
    1760:	52004c45 	andpl	r4, r0, #17664	; 0x4500
    1764:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1768:	5f646576 	svcpl	0x00646576
    176c:	65520031 	ldrbvs	r0, [r2, #-49]	; 0xffffffcf
    1770:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1774:	325f6465 	subscc	r6, pc, #1694498816	; 0x65000000
    1778:	73655200 	cmnvc	r5, #0, 4
    177c:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    1780:	00335f64 	eorseq	r5, r3, r4, ror #30
    1784:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1788:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    178c:	5200345f 	andpl	r3, r0, #1593835520	; 0x5f000000
    1790:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1794:	5f646576 	svcpl	0x00646576
    1798:	65520035 	ldrbvs	r0, [r2, #-53]	; 0xffffffcb
    179c:	76726573 			; <UNDEFINED> instruction: 0x76726573
    17a0:	365f6465 	ldrbcc	r6, [pc], -r5, ror #8
    17a4:	73655200 	cmnvc	r5, #0, 4
    17a8:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    17ac:	00375f64 	eorseq	r5, r7, r4, ror #30
    17b0:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    17b4:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    17b8:	5200385f 	andpl	r3, r0, #6225920	; 0x5f0000
    17bc:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    17c0:	5f646576 	svcpl	0x00646576
    17c4:	45440039 	strbmi	r0, [r4, #-57]	; 0xffffffc7
    17c8:	54434554 	strbpl	r4, [r3], #-1364	; 0xfffffaac
    17cc:	4c41465f 	mcrrmi	6, 5, r4, r1, cr15
    17d0:	474e494c 	strbmi	r4, [lr, -ip, asr #18]
    17d4:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    17d8:	6f697047 	svcvs	0x00697047
    17dc:	73655200 	cmnvc	r5, #0, 4
    17e0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    17e4:	00415f64 	subeq	r5, r1, r4, ror #30
    17e8:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    17ec:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    17f0:	4700425f 	smlsdmi	r0, pc, r2, r4	; <UNPREDICTABLE>
    17f4:	5f4f4950 	svcpl	0x004f4950
    17f8:	0054554f 	subseq	r5, r4, pc, asr #10
    17fc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1748 <_start-0x68b8>
    1800:	61632f65 	cmnvs	r3, r5, ror #30
    1804:	442f6c72 	strtmi	r6, [pc], #-3186	; 180c <_start-0x67f4>
    1808:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    180c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1810:	6f72702f 	svcvs	0x0072702f
    1814:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1818:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
    181c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1820:	4f54522d 	svcmi	0x0054522d
    1824:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    1828:	442f6f6d 	strtmi	r6, [pc], #-3949	; 1830 <_start-0x67d0>
    182c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1830:	6d2f7372 	stcvs	3, cr7, [pc, #-456]!	; 1670 <_start-0x6990>
    1834:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
    1838:	632e786f 			; <UNDEFINED> instruction: 0x632e786f
    183c:	61686300 	cmnvs	r8, r0, lsl #6
    1840:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
    1844:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
    1848:	64615f61 	strbtvs	r5, [r1], #-3937	; 0xfffff09f
    184c:	6d007264 	sfmvs	f7, 4, [r0, #-400]	; 0xfffffe70
    1850:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
    1854:	7257786f 	subsvc	r7, r7, #7274496	; 0x6f0000
    1858:	00657469 	rsbeq	r7, r5, r9, ror #8
    185c:	6c69616d 	stfvse	f6, [r9], #-436	; 0xfffffe4c
    1860:	52786f62 	rsbspl	r6, r8, #392	; 0x188
    1864:	00646165 	rsbeq	r6, r4, r5, ror #2
    1868:	6c69616d 	stfvse	f6, [r9], #-436	; 0xfffffe4c
    186c:	00786f62 	rsbseq	r6, r8, r2, ror #30
    1870:	7373656d 	cmnvc	r3, #457179136	; 0x1b400000
    1874:	00656761 	rsbeq	r6, r5, r1, ror #14
    1878:	6f6c6f63 	svcvs	0x006c6f63
    187c:	6d007275 	sfmvs	f7, 4, [r0, #-468]	; 0xfffffe2c
    1880:	626c6961 	rsbvs	r6, ip, #1589248	; 0x184000
    1884:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1888:	72660072 	rsbvc	r0, r6, #114	; 0x72
    188c:	62656d61 	rsbvs	r6, r5, #6208	; 0x1840
    1890:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1894:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1898:	48746e69 	ldmdami	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    189c:	53007865 	movwpl	r7, #2149	; 0x865
    18a0:	45455243 	strbmi	r5, [r5, #-579]	; 0xfffffdbd
    18a4:	45485f4e 	strbmi	r5, [r8, #-3918]	; 0xfffff0b2
    18a8:	54484749 	strbpl	r4, [r8], #-1865	; 0xfffff8b7
    18ac:	61726400 	cmnvs	r2, r0, lsl #8
    18b0:	61684377 	smcvs	33847	; 0x8437
    18b4:	6f6c0072 	svcvs	0x006c0072
    18b8:	64656461 	strbtvs	r6, [r5], #-1121	; 0xfffffb9f
    18bc:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    18c0:	61745365 	cmnvs	r4, r5, ror #6
    18c4:	6400706d 	strvs	r7, [r0], #-109	; 0xffffff93
    18c8:	53776172 	cmnpl	r7, #-2147483620	; 0x8000001c
    18cc:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    18d0:	5f730067 	svcpl	0x00730067
    18d4:	72655762 	rsbvc	r5, r5, #25690112	; 0x1880000
    18d8:	616e4565 	cmnvs	lr, r5, ror #10
    18dc:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
    18e0:	736f7000 	cmnvc	pc, #0
    18e4:	6f697469 	svcvs	0x00697469
    18e8:	00785f6e 	rsbseq	r5, r8, lr, ror #30
    18ec:	69736f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    18f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    18f4:	6800795f 	stmdavs	r0, {r0, r1, r2, r3, r4, r6, r8, fp, ip, sp, lr}
    18f8:	00697865 	rsbeq	r7, r9, r5, ror #16
    18fc:	746e6f66 	strbtvc	r6, [lr], #-3942	; 0xfffff09a
    1900:	6f682f00 	svcvs	0x00682f00
    1904:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    1908:	2f6c7261 	svccs	0x006c7261
    190c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    1910:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1914:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    1918:	6172676f 	cmnvs	r2, pc, ror #14
    191c:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    1920:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    1924:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    1928:	442f534f 	strtmi	r5, [pc], #-847	; 1930 <_start-0x66d0>
    192c:	2f6f6d65 	svccs	0x006f6d65
    1930:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1934:	2f737265 	svccs	0x00737265
    1938:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
    193c:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    1940:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    1944:	6c466e00 	mcrrvs	14, 0, r6, r6, cr0
    1948:	00736761 	rsbseq	r6, r3, r1, ror #14
    194c:	45524353 	ldrbmi	r4, [r2, #-851]	; 0xfffffcad
    1950:	575f4e45 	ldrbpl	r4, [pc, -r5, asr #28]
    1954:	48544449 	ldmdami	r4, {r0, r3, r6, sl, lr}^
    1958:	61726400 	cmnvs	r2, r0, lsl #8
    195c:	78695077 	stmdavc	r9!, {r0, r1, r2, r4, r5, r6, ip, lr}^
    1960:	70006c65 	andvc	r6, r0, r5, ror #24
    1964:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
    1968:	76006e6c 	strvc	r6, [r0], -ip, ror #28
    196c:	6f656469 	svcvs	0x00656469
    1970:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    1974:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1978:	00424674 	subeq	r4, r2, r4, ror r6
    197c:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    1980:	74636552 	strbtvc	r6, [r3], #-1362	; 0xfffffaae
    1984:	616e6500 	cmnvs	lr, r0, lsl #10
    1988:	6c656c62 	stclvs	12, cr6, [r5], #-392	; 0xfffffe78
    198c:	6967676f 	stmdbvs	r7!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1990:	6d00676e 	stcvs	7, cr6, [r0, #-440]	; 0xfffffe48
    1994:	6f6d6d65 	svcvs	0x006d6d65
    1998:	64006576 	strvs	r6, [r0], #-1398	; 0xfffffa8a
    199c:	00747365 	rsbseq	r7, r4, r5, ror #6
    19a0:	63727473 	cmnvs	r2, #1929379840	; 0x73000000
    19a4:	6d007970 	vstrvs.16	s14, [r0, #-224]	; 0xffffff20	; <UNPREDICTABLE>
    19a8:	6d636d65 	stclvs	13, cr6, [r3, #-404]!	; 0xfffffe6c
    19ac:	74730070 	ldrbtvc	r0, [r3], #-112	; 0xffffff90
    19b0:	70636e72 	rsbvc	r6, r3, r2, ror lr
    19b4:	656d0079 	strbvs	r0, [sp, #-121]!	; 0xffffff87
    19b8:	7970636d 	ldmdbvc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
    19bc:	74730032 	ldrbtvc	r0, [r3], #-50	; 0xffffffce
    19c0:	6e656c72 	mcrvs	12, 3, r6, cr5, cr2, {3}
    19c4:	6f682f00 	svcvs	0x00682f00
    19c8:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
    19cc:	2f6c7261 	svccs	0x006c7261
    19d0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
    19d4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    19d8:	72702f73 	rsbsvc	r2, r0, #460	; 0x1cc
    19dc:	6172676f 	cmnvs	r2, pc, ror #14
    19e0:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
    19e4:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    19e8:	54522d6d 	ldrbpl	r2, [r2], #-3437	; 0xfffff293
    19ec:	442f534f 	strtmi	r5, [pc], #-847	; 19f4 <_start-0x660c>
    19f0:	2f6f6d65 	svccs	0x006f6d65
    19f4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    19f8:	2f737265 	svccs	0x00737265
    19fc:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
    1a00:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
    1a04:	7465736d 	strbtvc	r7, [r5], #-877	; 0xfffffc93
    1a08:	50787000 	rsbspl	r7, r8, r0
    1a0c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1a10:	4273756f 	rsbsmi	r7, r3, #465567744	; 0x1bc00000
    1a14:	6b636f6c 	blvs	18dd7cc <mailbuffer+0x18b062c>
    1a18:	6f547800 	svcvs	0x00547800
    1a1c:	486c6174 	stmdami	ip!, {r2, r4, r5, r6, r8, sp, lr}^
    1a20:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    1a24:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1a28:	694c7870 	stmdbvs	ip, {r4, r5, r6, fp, ip, sp, lr}^
    1a2c:	78006b6e 	stmdavc	r0, {r1, r2, r3, r5, r6, r8, r9, fp, sp, lr}
    1a30:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    1a34:	7a69536b 	bvc	1a567e8 <mailbuffer+0x1a29648>
    1a38:	78700065 	ldmdavc	r0!, {r0, r2, r5, r6}^
    1a3c:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    1a40:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    1a44:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    1a48:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    1a4c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    1a50:	5278006b 	rsbspl	r0, r8, #107	; 0x6b
    1a54:	5f534f54 	svcpl	0x00534f54
    1a58:	50414548 	subpl	r4, r1, r8, asr #10
    1a5c:	74537800 	ldrbvc	r7, [r3], #-2048	; 0xfffff800
    1a60:	00747261 	rsbseq	r7, r4, r1, ror #4
    1a64:	6f507670 	svcvs	0x00507670
    1a68:	614d7472 	hvcvs	55106	; 0xd742
    1a6c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    1a70:	76727000 	ldrbtvc	r7, [r2], -r0
    1a74:	70616548 	rsbvc	r6, r1, r8, asr #10
    1a78:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1a7c:	61577800 	cmpvs	r7, r0, lsl #16
    1a80:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
    1a84:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    1a88:	75446400 	strbvc	r6, [r4, #-1024]	; 0xfffffc00
    1a8c:	00796d6d 	rsbseq	r6, r9, sp, ror #26
    1a90:	48637570 	stmdami	r3!, {r4, r5, r6, r8, sl, ip, sp, lr}^
    1a94:	45706165 	ldrbmi	r6, [r0, #-357]!	; 0xfffffe9b
    1a98:	7800646e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, sp, lr}
    1a9c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    1aa0:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    1aa4:	6d655273 	sfmvs	f5, 2, [r5, #-460]!	; 0xfffffe34
    1aa8:	696e6961 	stmdbvs	lr!, {r0, r5, r6, r8, fp, sp, lr}^
    1aac:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
    1ab0:	61654863 	cmnvs	r5, r3, ror #16
    1ab4:	78700070 	ldmdavc	r0!, {r4, r5, r6}^
    1ab8:	73726946 	cmnvc	r2, #1146880	; 0x118000
    1abc:	65724674 	ldrbvs	r4, [r2, #-1652]!	; 0xfffff98c
    1ac0:	6f6c4265 	svcvs	0x006c4265
    1ac4:	70006b63 	andvc	r6, r0, r3, ror #22
    1ac8:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    1acc:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    1ad0:	6e694c6b 	cdpvs	12, 6, cr4, cr9, cr11, {3}
    1ad4:	7670006b 	ldrbtvc	r0, [r0], -fp, rrx
    1ad8:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    1adc:	41006e72 	tstmi	r0, r2, ror lr
    1ae0:	4f4c425f 	svcmi	0x004c425f
    1ae4:	4c5f4b43 	mrrcmi	11, 4, r4, pc, cr3	; <UNPREDICTABLE>
    1ae8:	004b4e49 	subeq	r4, fp, r9, asr #28
    1aec:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    1af0:	74654774 	strbtvc	r4, [r5], #-1908	; 0xfffff88c
    1af4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    1af8:	70616548 	rsbvc	r6, r1, r8, asr #10
    1afc:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    1b00:	76727000 	ldrbtvc	r7, [r2], -r0
    1b04:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    1b08:	6c427472 	cfstrdvs	mvd7, [r2], {114}	; 0x72
    1b0c:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    1b10:	466f746e 	strbtmi	r7, [pc], -lr, ror #8
    1b14:	4c656572 	cfstr64mi	mvdx6, [r5], #-456	; 0xfffffe38
    1b18:	00747369 	rsbseq	r7, r4, r9, ror #6
    1b1c:	726f5076 	rsbvc	r5, pc, #118	; 0x76
    1b20:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    1b24:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1b28:	42657369 	rsbmi	r7, r5, #-1543503871	; 0xa4000001
    1b2c:	6b636f6c 	blvs	18dd8e4 <mailbuffer+0x18b0744>
    1b30:	65680073 	strbvs	r0, [r8, #-115]!	; 0xffffff8d
    1b34:	54537061 	ldrbpl	r7, [r3], #-97	; 0xffffff9f
    1b38:	54435552 	strbpl	r5, [r3], #-1362	; 0xfffffaae
    1b3c:	5a49535f 	bpl	12568c0 <mailbuffer+0x1229720>
    1b40:	50760045 	rsbspl	r0, r6, r5, asr #32
    1b44:	4674726f 	ldrbtmi	r7, [r4], -pc, ror #4
    1b48:	00656572 	rsbeq	r6, r5, r2, ror r5
    1b4c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1a98 <_start-0x6568>
    1b50:	61632f65 	cmnvs	r3, r5, ror #30
    1b54:	442f6c72 	strtmi	r6, [pc], #-3186	; 1b5c <_start-0x64a4>
    1b58:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
    1b5c:	73746e65 	cmnvc	r4, #1616	; 0x650
    1b60:	6f72702f 	svcvs	0x0072702f
    1b64:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1b68:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
    1b6c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    1b70:	4f54522d 	svcmi	0x0054522d
    1b74:	462f2f53 	qsaxmi	r2, pc, r3	; <UNPREDICTABLE>
    1b78:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    1b7c:	2f534f54 	svccs	0x00534f54
    1b80:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    1b84:	702f6563 	eorvc	r6, pc, r3, ror #10
    1b88:	6174726f 	cmnvs	r4, pc, ror #4
    1b8c:	2f656c62 	svccs	0x00656c62
    1b90:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
    1b94:	2f676e61 	svccs	0x00676e61
    1b98:	70616568 	rsbvc	r6, r1, r8, ror #10
    1b9c:	632e345f 			; <UNDEFINED> instruction: 0x632e345f
    1ba0:	6c6c6100 	stfvse	f6, [ip], #-0
    1ba4:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    1ba8:	78006465 	stmdavc	r0, {r0, r2, r5, r6, sl, sp, lr}
    1bac:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    1bb0:	6e694c6b 	cdpvs	12, 6, cr4, cr9, cr11, {3}
    1bb4:	7870006b 	ldmdavc	r0!, {r0, r1, r3, r5, r6}^
    1bb8:	00646e45 	rsbeq	r6, r4, r5, asr #28
    1bbc:	6c427870 	mcrrvs	8, 7, r7, r2, cr0
    1bc0:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    1bc4:	736e496f 	cmnvc	lr, #1818624	; 0x1bc000
    1bc8:	00747265 	rsbseq	r7, r4, r5, ror #4
    1bcc:	61654878 	smcvs	21640	; 0x5488
    1bd0:	682f0070 	stmdavs	pc!, {r4, r5, r6}	; <UNPREDICTABLE>
    1bd4:	2f656d6f 	svccs	0x00656d6f
    1bd8:	6c726163 	ldfvse	f6, [r2], #-396	; 0xfffffe74
    1bdc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
    1be0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
    1be4:	702f7374 	eorvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
    1be8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1bec:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
    1bf0:	612f676e 			; <UNDEFINED> instruction: 0x612f676e
    1bf4:	522d6d72 	eorpl	r6, sp, #7296	; 0x1c80
    1bf8:	2f534f54 	svccs	0x00534f54
    1bfc:	6f6d6544 	svcvs	0x006d6544
    1c00:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
    1c04:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    1c08:	6e69616d 	powvsez	f6, f1, #5.0
    1c0c:	73617400 	cmnvc	r1, #0, 8
    1c10:	7400316b 	strvc	r3, [r0], #-363	; 0xfffffe95
    1c14:	326b7361 	rsbcc	r7, fp, #-2080374783	; 0x84000001
    1c18:	73617400 	cmnvc	r1, #0, 8
    1c1c:	6b00336b 	blvs	e9d0 <__module_entries_end+0x692c>
    1c20:	72507965 	subsvc	r7, r0, #1654784	; 0x194000
    1c24:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
    1c28:	6e614864 	cdpvs	8, 6, cr4, cr1, cr4, {3}
    1c2c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1c30:	74537000 	ldrbvc	r7, [r3], #-0
    1c34:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <mailbuffer+0x10a3b84>
   4:	72412820 	subvc	r2, r1, #32, 16	; 0x200000
   8:	52206863 	eorpl	r6, r0, #6488064	; 0x630000
   c:	736f7065 	cmnvc	pc, #101	; 0x65
  10:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
  14:	38202979 	stmdacc	r0!, {r0, r3, r4, r5, r6, r8, fp, sp}
  18:	302e322e 	eorcc	r3, lr, lr, lsr #4
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	005a3605 	subseq	r3, sl, r5, lsl #12
  14:	01080706 	tsteq	r8, r6, lsl #14
  18:	04120109 	ldreq	r0, [r2], #-265	; 0xfffffef7
  1c:	01150114 	tsteq	r5, r4, lsl r1
  20:	01180317 	tsteq	r8, r7, lsl r3
  24:	061e011a 			; <UNDEFINED> instruction: 0x061e011a
  28:	01440122 	cmpeq	r4, r2, lsr #2

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	00010000 	andeq	r0, r1, r0
      1c:	00000240 	andeq	r0, r0, r0, asr #4
      20:	8b040e42 	blhi	103930 <mailbuffer+0xd6790>
      24:	0b0d4201 	bleq	350830 <mailbuffer+0x323690>
      28:	0d0dfe02 	stceq	14, cr15, [sp, #-8]
      2c:	000ecb42 	andeq	ip, lr, r2, asr #22
      30:	00000018 	andeq	r0, r0, r8, lsl r0
      34:	00000000 	andeq	r0, r0, r0
      38:	00010240 	andeq	r0, r1, r0, asr #4
      3c:	0000001c 	andeq	r0, r0, ip, lsl r0
      40:	8b080e42 	blhi	203950 <mailbuffer+0x1d67b0>
      44:	42018e02 	andmi	r8, r1, #2, 28
      48:	00040b0c 	andeq	r0, r4, ip, lsl #22
      4c:	0000001c 	andeq	r0, r0, ip, lsl r0
      50:	00000000 	andeq	r0, r0, r0
      54:	0001025c 	andeq	r0, r1, ip, asr r2
      58:	00000018 	andeq	r0, r0, r8, lsl r0
      5c:	8b040e42 	blhi	10396c <mailbuffer+0xd67cc>
      60:	0b0d4201 	bleq	35086c <mailbuffer+0x3236cc>
      64:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
      68:	00000ecb 	andeq	r0, r0, fp, asr #29
      6c:	0000001c 	andeq	r0, r0, ip, lsl r0
      70:	00000000 	andeq	r0, r0, r0
      74:	00010274 	andeq	r0, r1, r4, ror r2
      78:	00000038 	andeq	r0, r0, r8, lsr r0
      7c:	8b080e42 	blhi	20398c <mailbuffer+0x1d67ec>
      80:	42018e02 	andmi	r8, r1, #2, 28
      84:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
      88:	00080d0c 	andeq	r0, r8, ip, lsl #26
      8c:	0000001c 	andeq	r0, r0, ip, lsl r0
      90:	00000000 	andeq	r0, r0, r0
      94:	000102ac 	andeq	r0, r1, ip, lsr #5
      98:	00000098 	muleq	r0, r8, r0
      9c:	8b080e42 	blhi	2039ac <mailbuffer+0x1d680c>
      a0:	42018e02 	andmi	r8, r1, #2, 28
      a4:	7e040b0c 	vmlavc.f64	d0, d4, d12
      a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
      ac:	0000000c 	andeq	r0, r0, ip
      b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      b4:	7c020001 	stcvc	0, cr0, [r2], {1}
      b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      bc:	0000001c 	andeq	r0, r0, ip, lsl r0
      c0:	000000ac 	andeq	r0, r0, ip, lsr #1
      c4:	00010344 	andeq	r0, r1, r4, asr #6
      c8:	00000098 	muleq	r0, r8, r0
      cc:	8b040e42 	blhi	1039dc <mailbuffer+0xd683c>
      d0:	0b0d4201 	bleq	3508dc <mailbuffer+0x32373c>
      d4:	420d0d7e 	andmi	r0, sp, #8064	; 0x1f80
      d8:	00000ecb 	andeq	r0, r0, fp, asr #29
      dc:	0000000c 	andeq	r0, r0, ip
      e0:	000000ac 	andeq	r0, r0, ip, lsr #1
      e4:	000103dc 	ldrdeq	r0, [r1], -ip
      e8:	000000b4 	strheq	r0, [r0], -r4
      ec:	0000000c 	andeq	r0, r0, ip
      f0:	000000ac 	andeq	r0, r0, ip, lsr #1
      f4:	00010490 	muleq	r1, r0, r4
      f8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
      fc:	0000001c 	andeq	r0, r0, ip, lsl r0
     100:	000000ac 	andeq	r0, r0, ip, lsr #1
     104:	00010540 	andeq	r0, r1, r0, asr #10
     108:	00000044 	andeq	r0, r0, r4, asr #32
     10c:	8b040e42 	blhi	103a1c <mailbuffer+0xd687c>
     110:	0b0d4201 	bleq	35091c <mailbuffer+0x32377c>
     114:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     118:	00000ecb 	andeq	r0, r0, fp, asr #29
     11c:	0000001c 	andeq	r0, r0, ip, lsl r0
     120:	000000ac 	andeq	r0, r0, ip, lsr #1
     124:	00010584 	andeq	r0, r1, r4, lsl #11
     128:	00000064 	andeq	r0, r0, r4, rrx
     12c:	8b040e42 	blhi	103a3c <mailbuffer+0xd689c>
     130:	0b0d4201 	bleq	35093c <mailbuffer+0x32379c>
     134:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
     138:	00000ecb 	andeq	r0, r0, fp, asr #29
     13c:	0000000c 	andeq	r0, r0, ip
     140:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     144:	7c020001 	stcvc	0, cr0, [r2], {1}
     148:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     14c:	0000001c 	andeq	r0, r0, ip, lsl r0
     150:	0000013c 	andeq	r0, r0, ip, lsr r1
     154:	000105f0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
     158:	00000168 	andeq	r0, r0, r8, ror #2
     15c:	8b080e42 	blhi	203a6c <mailbuffer+0x1d68cc>
     160:	42018e02 	andmi	r8, r1, #2, 28
     164:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     168:	080d0ca8 	stmdaeq	sp, {r3, r5, r7, sl, fp}
     16c:	0000001c 	andeq	r0, r0, ip, lsl r0
     170:	0000013c 	andeq	r0, r0, ip, lsr r1
     174:	00010758 	andeq	r0, r1, r8, asr r7
     178:	000000e4 	andeq	r0, r0, r4, ror #1
     17c:	8b080e42 	blhi	203a8c <mailbuffer+0x1d68ec>
     180:	42018e02 	andmi	r8, r1, #2, 28
     184:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     188:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
     18c:	0000001c 	andeq	r0, r0, ip, lsl r0
     190:	0000013c 	andeq	r0, r0, ip, lsr r1
     194:	0001083c 	andeq	r0, r1, ip, lsr r8
     198:	000000ec 	andeq	r0, r0, ip, ror #1
     19c:	8b080e42 	blhi	203aac <mailbuffer+0x1d690c>
     1a0:	42018e02 	andmi	r8, r1, #2, 28
     1a4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1a8:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
     1ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     1b0:	0000013c 	andeq	r0, r0, ip, lsr r1
     1b4:	00010928 	andeq	r0, r1, r8, lsr #18
     1b8:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     1bc:	8b080e42 	blhi	203acc <mailbuffer+0x1d692c>
     1c0:	42018e02 	andmi	r8, r1, #2, 28
     1c4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1c8:	080d0cd4 	stmdaeq	sp, {r2, r4, r6, r7, sl, fp}
     1cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     1d0:	0000013c 	andeq	r0, r0, ip, lsr r1
     1d4:	00010af8 	strdeq	r0, [r1], -r8
     1d8:	00000128 	andeq	r0, r0, r8, lsr #2
     1dc:	8b080e42 	blhi	203aec <mailbuffer+0x1d694c>
     1e0:	42018e02 	andmi	r8, r1, #2, 28
     1e4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     1e8:	080d0c88 	stmdaeq	sp, {r3, r7, sl, fp}
     1ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     1f0:	0000013c 	andeq	r0, r0, ip, lsr r1
     1f4:	00010c20 	andeq	r0, r1, r0, lsr #24
     1f8:	000000a8 	andeq	r0, r0, r8, lsr #1
     1fc:	8b080e42 	blhi	203b0c <mailbuffer+0x1d696c>
     200:	42018e02 	andmi	r8, r1, #2, 28
     204:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     208:	080d0c42 	stmdaeq	sp, {r1, r6, sl, fp}
     20c:	0000001c 	andeq	r0, r0, ip, lsl r0
     210:	0000013c 	andeq	r0, r0, ip, lsr r1
     214:	00010cc8 	andeq	r0, r1, r8, asr #25
     218:	0000008c 	andeq	r0, r0, ip, lsl #1
     21c:	8b080e42 	blhi	203b2c <mailbuffer+0x1d698c>
     220:	42018e02 	andmi	r8, r1, #2, 28
     224:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
     228:	00080d0c 	andeq	r0, r8, ip, lsl #26
     22c:	0000000c 	andeq	r0, r0, ip
     230:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     234:	7c020001 	stcvc	0, cr0, [r2], {1}
     238:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     23c:	0000001c 	andeq	r0, r0, ip, lsl r0
     240:	0000022c 	andeq	r0, r0, ip, lsr #4
     244:	00010d54 	andeq	r0, r1, r4, asr sp
     248:	00000068 	andeq	r0, r0, r8, rrx
     24c:	8b040e42 	blhi	103b5c <mailbuffer+0xd69bc>
     250:	0b0d4201 	bleq	350a5c <mailbuffer+0x3238bc>
     254:	420d0d6c 	andmi	r0, sp, #108, 26	; 0x1b00
     258:	00000ecb 	andeq	r0, r0, fp, asr #29
     25c:	0000001c 	andeq	r0, r0, ip, lsl r0
     260:	0000022c 	andeq	r0, r0, ip, lsr #4
     264:	00010dbc 			; <UNDEFINED> instruction: 0x00010dbc
     268:	0000002c 	andeq	r0, r0, ip, lsr #32
     26c:	8b040e42 	blhi	103b7c <mailbuffer+0xd69dc>
     270:	0b0d4201 	bleq	350a7c <mailbuffer+0x3238dc>
     274:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     278:	00000ecb 	andeq	r0, r0, fp, asr #29
     27c:	0000001c 	andeq	r0, r0, ip, lsl r0
     280:	0000022c 	andeq	r0, r0, ip, lsr #4
     284:	00010de8 	andeq	r0, r1, r8, ror #27
     288:	00000098 	muleq	r0, r8, r0
     28c:	8b040e42 	blhi	103b9c <mailbuffer+0xd69fc>
     290:	0b0d4201 	bleq	350a9c <mailbuffer+0x3238fc>
     294:	0d0d4402 	cfstrseq	mvf4, [sp, #-8]
     298:	000ecb42 	andeq	ip, lr, r2, asr #22
     29c:	0000001c 	andeq	r0, r0, ip, lsl r0
     2a0:	0000022c 	andeq	r0, r0, ip, lsr #4
     2a4:	00010e80 	andeq	r0, r1, r0, lsl #29
     2a8:	000000d8 	ldrdeq	r0, [r0], -r8
     2ac:	8b040e42 	blhi	103bbc <mailbuffer+0xd6a1c>
     2b0:	0b0d4201 	bleq	350abc <mailbuffer+0x32391c>
     2b4:	0d0d6402 	cfstrseq	mvf6, [sp, #-8]
     2b8:	000ecb42 	andeq	ip, lr, r2, asr #22
     2bc:	0000001c 	andeq	r0, r0, ip, lsl r0
     2c0:	0000022c 	andeq	r0, r0, ip, lsr #4
     2c4:	00010f58 	andeq	r0, r1, r8, asr pc
     2c8:	00000098 	muleq	r0, r8, r0
     2cc:	8b040e42 	blhi	103bdc <mailbuffer+0xd6a3c>
     2d0:	0b0d4201 	bleq	350adc <mailbuffer+0x32393c>
     2d4:	0d0d4402 	cfstrseq	mvf4, [sp, #-8]
     2d8:	000ecb42 	andeq	ip, lr, r2, asr #22
     2dc:	0000000c 	andeq	r0, r0, ip
     2e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2e4:	7c020001 	stcvc	0, cr0, [r2], {1}
     2e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     2f0:	000002dc 	ldrdeq	r0, [r0], -ip
     2f4:	00010ff0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
     2f8:	00000114 	andeq	r0, r0, r4, lsl r1
     2fc:	8b080e42 	blhi	203c0c <mailbuffer+0x1d6a6c>
     300:	42018e02 	andmi	r8, r1, #2, 28
     304:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     308:	080d0c84 	stmdaeq	sp, {r2, r7, sl, fp}
     30c:	0000001c 	andeq	r0, r0, ip, lsl r0
     310:	000002dc 	ldrdeq	r0, [r0], -ip
     314:	00011104 	andeq	r1, r1, r4, lsl #2
     318:	000000c8 	andeq	r0, r0, r8, asr #1
     31c:	8b080e42 	blhi	203c2c <mailbuffer+0x1d6a8c>
     320:	42018e02 	andmi	r8, r1, #2, 28
     324:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     328:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
     32c:	0000001c 	andeq	r0, r0, ip, lsl r0
     330:	000002dc 	ldrdeq	r0, [r0], -ip
     334:	000111cc 	andeq	r1, r1, ip, asr #3
     338:	000001a4 	andeq	r0, r0, r4, lsr #3
     33c:	8b080e42 	blhi	203c4c <mailbuffer+0x1d6aac>
     340:	42018e02 	andmi	r8, r1, #2, 28
     344:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     348:	080d0ccc 	stmdaeq	sp, {r2, r3, r6, r7, sl, fp}
     34c:	0000001c 	andeq	r0, r0, ip, lsl r0
     350:	000002dc 	ldrdeq	r0, [r0], -ip
     354:	00011370 	andeq	r1, r1, r0, ror r3
     358:	000000dc 	ldrdeq	r0, [r0], -ip
     35c:	8b080e42 	blhi	203c6c <mailbuffer+0x1d6acc>
     360:	42018e02 	andmi	r8, r1, #2, 28
     364:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     368:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
     36c:	0000001c 	andeq	r0, r0, ip, lsl r0
     370:	000002dc 	ldrdeq	r0, [r0], -ip
     374:	0001144c 	andeq	r1, r1, ip, asr #8
     378:	00000204 	andeq	r0, r0, r4, lsl #4
     37c:	8b080e42 	blhi	203c8c <mailbuffer+0x1d6aec>
     380:	42018e02 	andmi	r8, r1, #2, 28
     384:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     388:	080d0cfc 	stmdaeq	sp, {r2, r3, r4, r5, r6, r7, sl, fp}
     38c:	0000001c 	andeq	r0, r0, ip, lsl r0
     390:	000002dc 	ldrdeq	r0, [r0], -ip
     394:	00011650 	andeq	r1, r1, r0, asr r6
     398:	000000e0 	andeq	r0, r0, r0, ror #1
     39c:	8b080e42 	blhi	203cac <mailbuffer+0x1d6b0c>
     3a0:	42018e02 	andmi	r8, r1, #2, 28
     3a4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     3a8:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
     3ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     3b0:	000002dc 	ldrdeq	r0, [r0], -ip
     3b4:	00011730 	andeq	r1, r1, r0, lsr r7
     3b8:	00000034 	andeq	r0, r0, r4, lsr r0
     3bc:	8b080e42 	blhi	203ccc <mailbuffer+0x1d6b2c>
     3c0:	42018e02 	andmi	r8, r1, #2, 28
     3c4:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     3c8:	00080d0c 	andeq	r0, r8, ip, lsl #26
     3cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     3d0:	000002dc 	ldrdeq	r0, [r0], -ip
     3d4:	00011764 	andeq	r1, r1, r4, ror #14
     3d8:	00000030 	andeq	r0, r0, r0, lsr r0
     3dc:	8b040e42 	blhi	103cec <mailbuffer+0xd6b4c>
     3e0:	0b0d4201 	bleq	350bec <mailbuffer+0x323a4c>
     3e4:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     3e8:	00000ecb 	andeq	r0, r0, fp, asr #29
     3ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     3f0:	000002dc 	ldrdeq	r0, [r0], -ip
     3f4:	00011794 	muleq	r1, r4, r7
     3f8:	00000034 	andeq	r0, r0, r4, lsr r0
     3fc:	8b080e42 	blhi	203d0c <mailbuffer+0x1d6b6c>
     400:	42018e02 	andmi	r8, r1, #2, 28
     404:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     408:	00080d0c 	andeq	r0, r8, ip, lsl #26
     40c:	0000001c 	andeq	r0, r0, ip, lsl r0
     410:	000002dc 	ldrdeq	r0, [r0], -ip
     414:	000117c8 	andeq	r1, r1, r8, asr #15
     418:	0000012c 	andeq	r0, r0, ip, lsr #2
     41c:	8b080e42 	blhi	203d2c <mailbuffer+0x1d6b8c>
     420:	42018e02 	andmi	r8, r1, #2, 28
     424:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     428:	080d0c90 	stmdaeq	sp, {r4, r7, sl, fp}
     42c:	0000001c 	andeq	r0, r0, ip, lsl r0
     430:	000002dc 	ldrdeq	r0, [r0], -ip
     434:	000118f4 	strdeq	r1, [r1], -r4
     438:	00000090 	muleq	r0, r0, r0
     43c:	8b080e42 	blhi	203d4c <mailbuffer+0x1d6bac>
     440:	42018e02 	andmi	r8, r1, #2, 28
     444:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     448:	080d0c42 	stmdaeq	sp, {r1, r6, sl, fp}
     44c:	0000001c 	andeq	r0, r0, ip, lsl r0
     450:	000002dc 	ldrdeq	r0, [r0], -ip
     454:	00011984 	andeq	r1, r1, r4, lsl #19
     458:	00000104 	andeq	r0, r0, r4, lsl #2
     45c:	8b080e42 	blhi	203d6c <mailbuffer+0x1d6bcc>
     460:	42018e02 	andmi	r8, r1, #2, 28
     464:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     468:	080d0c7c 	stmdaeq	sp, {r2, r3, r4, r5, r6, sl, fp}
     46c:	0000001c 	andeq	r0, r0, ip, lsl r0
     470:	000002dc 	ldrdeq	r0, [r0], -ip
     474:	00011a88 	andeq	r1, r1, r8, lsl #21
     478:	00000044 	andeq	r0, r0, r4, asr #32
     47c:	8b080e42 	blhi	203d8c <mailbuffer+0x1d6bec>
     480:	42018e02 	andmi	r8, r1, #2, 28
     484:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     488:	00080d0c 	andeq	r0, r8, ip, lsl #26
     48c:	0000001c 	andeq	r0, r0, ip, lsl r0
     490:	000002dc 	ldrdeq	r0, [r0], -ip
     494:	00011acc 	andeq	r1, r1, ip, asr #21
     498:	00000040 	andeq	r0, r0, r0, asr #32
     49c:	8b040e42 	blhi	103dac <mailbuffer+0xd6c0c>
     4a0:	0b0d4201 	bleq	350cac <mailbuffer+0x323b0c>
     4a4:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     4a8:	00000ecb 	andeq	r0, r0, fp, asr #29
     4ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     4b0:	000002dc 	ldrdeq	r0, [r0], -ip
     4b4:	00011b0c 	andeq	r1, r1, ip, lsl #22
     4b8:	0000004c 	andeq	r0, r0, ip, asr #32
     4bc:	8b080e42 	blhi	203dcc <mailbuffer+0x1d6c2c>
     4c0:	42018e02 	andmi	r8, r1, #2, 28
     4c4:	60040b0c 	andvs	r0, r4, ip, lsl #22
     4c8:	00080d0c 	andeq	r0, r8, ip, lsl #26
     4cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     4d0:	000002dc 	ldrdeq	r0, [r0], -ip
     4d4:	00011b58 	andeq	r1, r1, r8, asr fp
     4d8:	00000048 	andeq	r0, r0, r8, asr #32
     4dc:	8b040e42 	blhi	103dec <mailbuffer+0xd6c4c>
     4e0:	0b0d4201 	bleq	350cec <mailbuffer+0x323b4c>
     4e4:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     4e8:	00000ecb 	andeq	r0, r0, fp, asr #29
     4ec:	0000000c 	andeq	r0, r0, ip
     4f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4f4:	7c020001 	stcvc	0, cr0, [r2], {1}
     4f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4fc:	00000020 	andeq	r0, r0, r0, lsr #32
     500:	000004ec 	andeq	r0, r0, ip, ror #9
     504:	00011ba0 	andeq	r1, r1, r0, lsr #23
     508:	0000024c 	andeq	r0, r0, ip, asr #4
     50c:	8b080e42 	blhi	203e1c <mailbuffer+0x1d6c7c>
     510:	42018e02 	andmi	r8, r1, #2, 28
     514:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     518:	0d0c0112 	stfeqs	f0, [ip, #-72]	; 0xffffffb8
     51c:	00000008 	andeq	r0, r0, r8
     520:	0000001c 	andeq	r0, r0, ip, lsl r0
     524:	000004ec 	andeq	r0, r0, ip, ror #9
     528:	00011dec 	andeq	r1, r1, ip, ror #27
     52c:	00000100 	andeq	r0, r0, r0, lsl #2
     530:	8b080e42 	blhi	203e40 <mailbuffer+0x1d6ca0>
     534:	42018e02 	andmi	r8, r1, #2, 28
     538:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     53c:	080d0c70 	stmdaeq	sp, {r4, r5, r6, sl, fp}
     540:	0000001c 	andeq	r0, r0, ip, lsl r0
     544:	000004ec 	andeq	r0, r0, ip, ror #9
     548:	00011eec 	andeq	r1, r1, ip, ror #29
     54c:	00000110 	andeq	r0, r0, r0, lsl r1
     550:	8b080e42 	blhi	203e60 <mailbuffer+0x1d6cc0>
     554:	42018e02 	andmi	r8, r1, #2, 28
     558:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     55c:	080d0c7e 	stmdaeq	sp, {r1, r2, r3, r4, r5, r6, sl, fp}
     560:	0000001c 	andeq	r0, r0, ip, lsl r0
     564:	000004ec 	andeq	r0, r0, ip, ror #9
     568:	00011ffc 	strdeq	r1, [r1], -ip
     56c:	00000084 	andeq	r0, r0, r4, lsl #1
     570:	8b080e42 	blhi	203e80 <mailbuffer+0x1d6ce0>
     574:	42018e02 	andmi	r8, r1, #2, 28
     578:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
     57c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     580:	0000001c 	andeq	r0, r0, ip, lsl r0
     584:	000004ec 	andeq	r0, r0, ip, ror #9
     588:	00012080 	andeq	r2, r1, r0, lsl #1
     58c:	00000058 	andeq	r0, r0, r8, asr r0
     590:	8b080e42 	blhi	203ea0 <mailbuffer+0x1d6d00>
     594:	42018e02 	andmi	r8, r1, #2, 28
     598:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
     59c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     5a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     5a4:	000004ec 	andeq	r0, r0, ip, ror #9
     5a8:	000120d8 	ldrdeq	r2, [r1], -r8
     5ac:	000001a8 	andeq	r0, r0, r8, lsr #3
     5b0:	8b080e42 	blhi	203ec0 <mailbuffer+0x1d6d20>
     5b4:	42018e02 	andmi	r8, r1, #2, 28
     5b8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     5bc:	080d0cc8 	stmdaeq	sp, {r3, r6, r7, sl, fp}
     5c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     5c4:	000004ec 	andeq	r0, r0, ip, ror #9
     5c8:	00012280 	andeq	r2, r1, r0, lsl #5
     5cc:	00000104 	andeq	r0, r0, r4, lsl #2
     5d0:	8b080e42 	blhi	203ee0 <mailbuffer+0x1d6d40>
     5d4:	42018e02 	andmi	r8, r1, #2, 28
     5d8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     5dc:	080d0c74 	stmdaeq	sp, {r2, r4, r5, r6, sl, fp}
     5e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     5e4:	000004ec 	andeq	r0, r0, ip, ror #9
     5e8:	00012384 	andeq	r2, r1, r4, lsl #7
     5ec:	0000007c 	andeq	r0, r0, ip, ror r0
     5f0:	8b040e42 	blhi	103f00 <mailbuffer+0xd6d60>
     5f4:	0b0d4201 	bleq	350e00 <mailbuffer+0x323c60>
     5f8:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     5fc:	00000ecb 	andeq	r0, r0, fp, asr #29
     600:	0000001c 	andeq	r0, r0, ip, lsl r0
     604:	000004ec 	andeq	r0, r0, ip, ror #9
     608:	00012400 	andeq	r2, r1, r0, lsl #8
     60c:	000000f8 	strdeq	r0, [r0], -r8
     610:	8b080e42 	blhi	203f20 <mailbuffer+0x1d6d80>
     614:	42018e02 	andmi	r8, r1, #2, 28
     618:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     61c:	080d0c70 	stmdaeq	sp, {r4, r5, r6, sl, fp}
     620:	0000001c 	andeq	r0, r0, ip, lsl r0
     624:	000004ec 	andeq	r0, r0, ip, ror #9
     628:	000124f8 	strdeq	r2, [r1], -r8
     62c:	0000011c 	andeq	r0, r0, ip, lsl r1
     630:	8b080e42 	blhi	203f40 <mailbuffer+0x1d6da0>
     634:	42018e02 	andmi	r8, r1, #2, 28
     638:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     63c:	080d0c7e 	stmdaeq	sp, {r1, r2, r3, r4, r5, r6, sl, fp}
     640:	0000001c 	andeq	r0, r0, ip, lsl r0
     644:	000004ec 	andeq	r0, r0, ip, ror #9
     648:	00012614 	andeq	r2, r1, r4, lsl r6
     64c:	0000009c 	muleq	r0, ip, r0
     650:	8b080e42 	blhi	203f60 <mailbuffer+0x1d6dc0>
     654:	42018e02 	andmi	r8, r1, #2, 28
     658:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     65c:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
     660:	00000018 	andeq	r0, r0, r8, lsl r0
     664:	000004ec 	andeq	r0, r0, ip, ror #9
     668:	000126b0 			; <UNDEFINED> instruction: 0x000126b0
     66c:	00000038 	andeq	r0, r0, r8, lsr r0
     670:	8b080e42 	blhi	203f80 <mailbuffer+0x1d6de0>
     674:	42018e02 	andmi	r8, r1, #2, 28
     678:	00040b0c 	andeq	r0, r4, ip, lsl #22
     67c:	0000001c 	andeq	r0, r0, ip, lsl r0
     680:	000004ec 	andeq	r0, r0, ip, ror #9
     684:	000126e8 	andeq	r2, r1, r8, ror #13
     688:	00000030 	andeq	r0, r0, r0, lsr r0
     68c:	8b040e42 	blhi	103f9c <mailbuffer+0xd6dfc>
     690:	0b0d4201 	bleq	350e9c <mailbuffer+0x323cfc>
     694:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     698:	00000ecb 	andeq	r0, r0, fp, asr #29
     69c:	00000020 	andeq	r0, r0, r0, lsr #32
     6a0:	000004ec 	andeq	r0, r0, ip, ror #9
     6a4:	00012718 	andeq	r2, r1, r8, lsl r7
     6a8:	000001a4 	andeq	r0, r0, r4, lsr #3
     6ac:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     6b0:	8e028b03 	vmlahi.f64	d8, d2, d3
     6b4:	0b0c4201 	bleq	310ec0 <mailbuffer+0x2e3d20>
     6b8:	0cbc0204 	lfmeq	f0, 4, [ip], #16
     6bc:	00000c0d 	andeq	r0, r0, sp, lsl #24
     6c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     6c4:	000004ec 	andeq	r0, r0, ip, ror #9
     6c8:	000128bc 			; <UNDEFINED> instruction: 0x000128bc
     6cc:	00000034 	andeq	r0, r0, r4, lsr r0
     6d0:	8b080e42 	blhi	203fe0 <mailbuffer+0x1d6e40>
     6d4:	42018e02 	andmi	r8, r1, #2, 28
     6d8:	52040b0c 	andpl	r0, r4, #12, 22	; 0x3000
     6dc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     6e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     6e4:	000004ec 	andeq	r0, r0, ip, ror #9
     6e8:	000128f0 	strdeq	r2, [r1], -r0
     6ec:	00000038 	andeq	r0, r0, r8, lsr r0
     6f0:	8b040e42 	blhi	104000 <mailbuffer+0xd6e60>
     6f4:	0b0d4201 	bleq	350f00 <mailbuffer+0x323d60>
     6f8:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     6fc:	00000ecb 	andeq	r0, r0, fp, asr #29
     700:	0000001c 	andeq	r0, r0, ip, lsl r0
     704:	000004ec 	andeq	r0, r0, ip, ror #9
     708:	00012928 	andeq	r2, r1, r8, lsr #18
     70c:	00000024 	andeq	r0, r0, r4, lsr #32
     710:	8b040e42 	blhi	104020 <mailbuffer+0xd6e80>
     714:	0b0d4201 	bleq	350f20 <mailbuffer+0x323d80>
     718:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
     71c:	00000ecb 	andeq	r0, r0, fp, asr #29
     720:	0000001c 	andeq	r0, r0, ip, lsl r0
     724:	000004ec 	andeq	r0, r0, ip, ror #9
     728:	0001294c 	andeq	r2, r1, ip, asr #18
     72c:	0000021c 	andeq	r0, r0, ip, lsl r2
     730:	8b080e42 	blhi	204040 <mailbuffer+0x1d6ea0>
     734:	42018e02 	andmi	r8, r1, #2, 28
     738:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     73c:	080d0cf6 	stmdaeq	sp, {r1, r2, r4, r5, r6, r7, sl, fp}
     740:	0000001c 	andeq	r0, r0, ip, lsl r0
     744:	000004ec 	andeq	r0, r0, ip, ror #9
     748:	00012b68 	andeq	r2, r1, r8, ror #22
     74c:	0000005c 	andeq	r0, r0, ip, asr r0
     750:	8b080e42 	blhi	204060 <mailbuffer+0x1d6ec0>
     754:	42018e02 	andmi	r8, r1, #2, 28
     758:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     75c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     760:	0000001c 	andeq	r0, r0, ip, lsl r0
     764:	000004ec 	andeq	r0, r0, ip, ror #9
     768:	00012bc4 	andeq	r2, r1, r4, asr #23
     76c:	0000005c 	andeq	r0, r0, ip, asr r0
     770:	8b080e42 	blhi	204080 <mailbuffer+0x1d6ee0>
     774:	42018e02 	andmi	r8, r1, #2, 28
     778:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
     77c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     780:	0000001c 	andeq	r0, r0, ip, lsl r0
     784:	000004ec 	andeq	r0, r0, ip, ror #9
     788:	00012c20 	andeq	r2, r1, r0, lsr #24
     78c:	0000007c 	andeq	r0, r0, ip, ror r0
     790:	8b080e42 	blhi	2040a0 <mailbuffer+0x1d6f00>
     794:	42018e02 	andmi	r8, r1, #2, 28
     798:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     79c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     7a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7a4:	000004ec 	andeq	r0, r0, ip, ror #9
     7a8:	00012c9c 	muleq	r1, ip, ip
     7ac:	00000108 	andeq	r0, r0, r8, lsl #2
     7b0:	8b040e42 	blhi	1040c0 <mailbuffer+0xd6f20>
     7b4:	0b0d4201 	bleq	350fc0 <mailbuffer+0x323e20>
     7b8:	0d0d7202 	sfmeq	f7, 4, [sp, #-8]
     7bc:	000ecb42 	andeq	ip, lr, r2, asr #22
     7c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7c4:	000004ec 	andeq	r0, r0, ip, ror #9
     7c8:	00012da4 	andeq	r2, r1, r4, lsr #27
     7cc:	0000009c 	muleq	r0, ip, r0
     7d0:	8b080e42 	blhi	2040e0 <mailbuffer+0x1d6f40>
     7d4:	42018e02 	andmi	r8, r1, #2, 28
     7d8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     7dc:	080d0c42 	stmdaeq	sp, {r1, r6, sl, fp}
     7e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     7e4:	000004ec 	andeq	r0, r0, ip, ror #9
     7e8:	00012e40 	andeq	r2, r1, r0, asr #28
     7ec:	00000118 	andeq	r0, r0, r8, lsl r1
     7f0:	8b080e42 	blhi	204100 <mailbuffer+0x1d6f60>
     7f4:	42018e02 	andmi	r8, r1, #2, 28
     7f8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     7fc:	080d0c7c 	stmdaeq	sp, {r2, r3, r4, r5, r6, sl, fp}
     800:	0000001c 	andeq	r0, r0, ip, lsl r0
     804:	000004ec 	andeq	r0, r0, ip, ror #9
     808:	00012f58 	andeq	r2, r1, r8, asr pc
     80c:	00000048 	andeq	r0, r0, r8, asr #32
     810:	8b040e42 	blhi	104120 <mailbuffer+0xd6f80>
     814:	0b0d4201 	bleq	351020 <mailbuffer+0x323e80>
     818:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     81c:	00000ecb 	andeq	r0, r0, fp, asr #29
     820:	0000001c 	andeq	r0, r0, ip, lsl r0
     824:	000004ec 	andeq	r0, r0, ip, ror #9
     828:	00012fa0 	andeq	r2, r1, r0, lsr #31
     82c:	000000f4 	strdeq	r0, [r0], -r4
     830:	8b080e42 	blhi	204140 <mailbuffer+0x1d6fa0>
     834:	42018e02 	andmi	r8, r1, #2, 28
     838:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     83c:	080d0c70 	stmdaeq	sp, {r4, r5, r6, sl, fp}
     840:	0000001c 	andeq	r0, r0, ip, lsl r0
     844:	000004ec 	andeq	r0, r0, ip, ror #9
     848:	00013094 	muleq	r1, r4, r0
     84c:	00000028 	andeq	r0, r0, r8, lsr #32
     850:	8b040e42 	blhi	104160 <mailbuffer+0xd6fc0>
     854:	0b0d4201 	bleq	351060 <mailbuffer+0x323ec0>
     858:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     85c:	00000ecb 	andeq	r0, r0, fp, asr #29
     860:	00000018 	andeq	r0, r0, r8, lsl r0
     864:	000004ec 	andeq	r0, r0, ip, ror #9
     868:	000130bc 	strheq	r3, [r1], -ip
     86c:	00000030 	andeq	r0, r0, r0, lsr r0
     870:	8b080e42 	blhi	204180 <mailbuffer+0x1d6fe0>
     874:	42018e02 	andmi	r8, r1, #2, 28
     878:	00040b0c 	andeq	r0, r4, ip, lsl #22
     87c:	0000001c 	andeq	r0, r0, ip, lsl r0
     880:	000004ec 	andeq	r0, r0, ip, ror #9
     884:	000130ec 	andeq	r3, r1, ip, ror #1
     888:	000000c0 	andeq	r0, r0, r0, asr #1
     88c:	8b080e42 	blhi	20419c <mailbuffer+0x1d6ffc>
     890:	42018e02 	andmi	r8, r1, #2, 28
     894:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     898:	080d0c5a 	stmdaeq	sp, {r1, r3, r4, r6, sl, fp}
     89c:	0000001c 	andeq	r0, r0, ip, lsl r0
     8a0:	000004ec 	andeq	r0, r0, ip, ror #9
     8a4:	000131ac 	andeq	r3, r1, ip, lsr #3
     8a8:	000000c0 	andeq	r0, r0, r0, asr #1
     8ac:	8b080e42 	blhi	2041bc <mailbuffer+0x1d701c>
     8b0:	42018e02 	andmi	r8, r1, #2, 28
     8b4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     8b8:	080d0c4a 	stmdaeq	sp, {r1, r3, r6, sl, fp}
     8bc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8c0:	000004ec 	andeq	r0, r0, ip, ror #9
     8c4:	0001326c 	andeq	r3, r1, ip, ror #4
     8c8:	000000bc 	strheq	r0, [r0], -ip
     8cc:	8b080e42 	blhi	2041dc <mailbuffer+0x1d703c>
     8d0:	42018e02 	andmi	r8, r1, #2, 28
     8d4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     8d8:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
     8dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8e0:	000004ec 	andeq	r0, r0, ip, ror #9
     8e4:	00013328 	andeq	r3, r1, r8, lsr #6
     8e8:	000000b8 	strheq	r0, [r0], -r8
     8ec:	8b080e42 	blhi	2041fc <mailbuffer+0x1d705c>
     8f0:	42018e02 	andmi	r8, r1, #2, 28
     8f4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     8f8:	080d0c4c 	stmdaeq	sp, {r2, r3, r6, sl, fp}
     8fc:	0000001c 	andeq	r0, r0, ip, lsl r0
     900:	000004ec 	andeq	r0, r0, ip, ror #9
     904:	000133e0 	andeq	r3, r1, r0, ror #7
     908:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     90c:	8b080e42 	blhi	20421c <mailbuffer+0x1d707c>
     910:	42018e02 	andmi	r8, r1, #2, 28
     914:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     918:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
     91c:	0000001c 	andeq	r0, r0, ip, lsl r0
     920:	000004ec 	andeq	r0, r0, ip, ror #9
     924:	00013490 	muleq	r1, r0, r4
     928:	00000034 	andeq	r0, r0, r4, lsr r0
     92c:	8b080e42 	blhi	20423c <mailbuffer+0x1d709c>
     930:	42018e02 	andmi	r8, r1, #2, 28
     934:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     938:	00080d0c 	andeq	r0, r8, ip, lsl #26
     93c:	0000000c 	andeq	r0, r0, ip
     940:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     944:	7c020001 	stcvc	0, cr0, [r2], {1}
     948:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     94c:	0000001c 	andeq	r0, r0, ip, lsl r0
     950:	0000093c 	andeq	r0, r0, ip, lsr r9
     954:	000134c4 	andeq	r3, r1, r4, asr #9
     958:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     95c:	8b080e42 	blhi	20426c <mailbuffer+0x1d70cc>
     960:	42018e02 	andmi	r8, r1, #2, 28
     964:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     968:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
     96c:	0000001c 	andeq	r0, r0, ip, lsl r0
     970:	0000093c 	andeq	r0, r0, ip, lsr r9
     974:	00013574 	andeq	r3, r1, r4, ror r5
     978:	000000a0 	andeq	r0, r0, r0, lsr #1
     97c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     980:	8b038504 	blhi	e1d98 <mailbuffer+0xb4bf8>
     984:	42018e02 	andmi	r8, r1, #2, 28
     988:	00040b0c 	andeq	r0, r4, ip, lsl #22
     98c:	0000001c 	andeq	r0, r0, ip, lsl r0
     990:	0000093c 	andeq	r0, r0, ip, lsr r9
     994:	00013614 	andeq	r3, r1, r4, lsl r6
     998:	0000001c 	andeq	r0, r0, ip, lsl r0
     99c:	8b040e42 	blhi	1042ac <mailbuffer+0xd710c>
     9a0:	0b0d4201 	bleq	3511ac <mailbuffer+0x32400c>
     9a4:	420d0d46 	andmi	r0, sp, #4480	; 0x1180
     9a8:	00000ecb 	andeq	r0, r0, fp, asr #29
     9ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     9b0:	0000093c 	andeq	r0, r0, ip, lsr r9
     9b4:	00013630 	andeq	r3, r1, r0, lsr r6
     9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
     9bc:	8b040e42 	blhi	1042cc <mailbuffer+0xd712c>
     9c0:	0b0d4201 	bleq	3511cc <mailbuffer+0x32402c>
     9c4:	420d0d46 	andmi	r0, sp, #4480	; 0x1180
     9c8:	00000ecb 	andeq	r0, r0, fp, asr #29
     9cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     9d0:	0000093c 	andeq	r0, r0, ip, lsr r9
     9d4:	0001364c 	andeq	r3, r1, ip, asr #12
     9d8:	00000064 	andeq	r0, r0, r4, rrx
     9dc:	8b080e42 	blhi	2042ec <mailbuffer+0x1d714c>
     9e0:	42018e02 	andmi	r8, r1, #2, 28
     9e4:	6a040b0c 	bvs	10361c <mailbuffer+0xd647c>
     9e8:	00080d0c 	andeq	r0, r8, ip, lsl #26
     9ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     9f0:	0000093c 	andeq	r0, r0, ip, lsr r9
     9f4:	000136b0 			; <UNDEFINED> instruction: 0x000136b0
     9f8:	000000d4 	ldrdeq	r0, [r0], -r4
     9fc:	8b040e42 	blhi	10430c <mailbuffer+0xd716c>
     a00:	0b0d4201 	bleq	35120c <mailbuffer+0x32406c>
     a04:	0d0d5e02 	stceq	14, cr5, [sp, #-8]
     a08:	000ecb42 	andeq	ip, lr, r2, asr #22
     a0c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a10:	0000093c 	andeq	r0, r0, ip, lsr r9
     a14:	00013784 	andeq	r3, r1, r4, lsl #15
     a18:	000000e0 	andeq	r0, r0, r0, ror #1
     a1c:	8b040e42 	blhi	10432c <mailbuffer+0xd718c>
     a20:	0b0d4201 	bleq	35122c <mailbuffer+0x32408c>
     a24:	0d0d6402 	cfstrseq	mvf6, [sp, #-8]
     a28:	000ecb42 	andeq	ip, lr, r2, asr #22
     a2c:	0000000c 	andeq	r0, r0, ip
     a30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a34:	7c020001 	stcvc	0, cr0, [r2], {1}
     a38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a3c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a40:	00000a2c 	andeq	r0, r0, ip, lsr #20
     a44:	00013864 	andeq	r3, r1, r4, ror #16
     a48:	000000dc 	ldrdeq	r0, [r0], -ip
     a4c:	8b040e42 	blhi	10435c <mailbuffer+0xd71bc>
     a50:	0b0d4201 	bleq	35125c <mailbuffer+0x3240bc>
     a54:	0d0d6202 	sfmeq	f6, 4, [sp, #-8]
     a58:	000ecb42 	andeq	ip, lr, r2, asr #22
     a5c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a60:	00000a2c 	andeq	r0, r0, ip, lsr #20
     a64:	00013940 	andeq	r3, r1, r0, asr #18
     a68:	00000034 	andeq	r0, r0, r4, lsr r0
     a6c:	8b080e42 	blhi	20437c <mailbuffer+0x1d71dc>
     a70:	42018e02 	andmi	r8, r1, #2, 28
     a74:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     a78:	00080d0c 	andeq	r0, r8, ip, lsl #26
     a7c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a80:	00000a2c 	andeq	r0, r0, ip, lsr #20
     a84:	00013974 	andeq	r3, r1, r4, ror r9
     a88:	000000b8 	strheq	r0, [r0], -r8
     a8c:	8b040e42 	blhi	10439c <mailbuffer+0xd71fc>
     a90:	0b0d4201 	bleq	35129c <mailbuffer+0x3240fc>
     a94:	0d0d5202 	sfmeq	f5, 4, [sp, #-8]
     a98:	000ecb42 	andeq	ip, lr, r2, asr #22
     a9c:	0000001c 	andeq	r0, r0, ip, lsl r0
     aa0:	00000a2c 	andeq	r0, r0, ip, lsr #20
     aa4:	00013a2c 	andeq	r3, r1, ip, lsr #20
     aa8:	00000050 	andeq	r0, r0, r0, asr r0
     aac:	8b040e42 	blhi	1043bc <mailbuffer+0xd721c>
     ab0:	0b0d4201 	bleq	3512bc <mailbuffer+0x32411c>
     ab4:	420d0d5e 	andmi	r0, sp, #6016	; 0x1780
     ab8:	00000ecb 	andeq	r0, r0, fp, asr #29
     abc:	0000001c 	andeq	r0, r0, ip, lsl r0
     ac0:	00000a2c 	andeq	r0, r0, ip, lsr #20
     ac4:	00013a7c 	andeq	r3, r1, ip, ror sl
     ac8:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     acc:	8b040e42 	blhi	1043dc <mailbuffer+0xd723c>
     ad0:	0b0d4201 	bleq	3512dc <mailbuffer+0x32413c>
     ad4:	0d0dce02 	stceq	14, cr12, [sp, #-8]
     ad8:	000ecb42 	andeq	ip, lr, r2, asr #22
     adc:	0000001c 	andeq	r0, r0, ip, lsl r0
     ae0:	00000a2c 	andeq	r0, r0, ip, lsr #20
     ae4:	00013c2c 	andeq	r3, r1, ip, lsr #24
     ae8:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     aec:	8b040e42 	blhi	1043fc <mailbuffer+0xd725c>
     af0:	0b0d4201 	bleq	3512fc <mailbuffer+0x32415c>
     af4:	0d0dd202 	sfmeq	f5, 1, [sp, #-8]
     af8:	000ecb42 	andeq	ip, lr, r2, asr #22
     afc:	0000001c 	andeq	r0, r0, ip, lsl r0
     b00:	00000a2c 	andeq	r0, r0, ip, lsr #20
     b04:	00013de4 	andeq	r3, r1, r4, ror #27
     b08:	00000058 	andeq	r0, r0, r8, asr r0
     b0c:	8b040e42 	blhi	10441c <mailbuffer+0xd727c>
     b10:	0b0d4201 	bleq	35131c <mailbuffer+0x32417c>
     b14:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
     b18:	00000ecb 	andeq	r0, r0, fp, asr #29
     b1c:	0000000c 	andeq	r0, r0, ip
     b20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b24:	7c020001 	stcvc	0, cr0, [r2], {1}
     b28:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b2c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b30:	00000b1c 	andeq	r0, r0, ip, lsl fp
     b34:	00013e3c 	andeq	r3, r1, ip, lsr lr
     b38:	0000006c 	andeq	r0, r0, ip, rrx
     b3c:	8b080e42 	blhi	20444c <mailbuffer+0x1d72ac>
     b40:	42018e02 	andmi	r8, r1, #2, 28
     b44:	6e040b0c 	vmlavs.f64	d0, d4, d12
     b48:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b4c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b50:	00000b1c 	andeq	r0, r0, ip, lsl fp
     b54:	00013ea8 	andeq	r3, r1, r8, lsr #29
     b58:	00000080 	andeq	r0, r0, r0, lsl #1
     b5c:	8b080e42 	blhi	20446c <mailbuffer+0x1d72cc>
     b60:	42018e02 	andmi	r8, r1, #2, 28
     b64:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
     b68:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b6c:	0000000c 	andeq	r0, r0, ip
     b70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b74:	7c020001 	stcvc	0, cr0, [r2], {1}
     b78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b7c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b80:	00000b6c 	andeq	r0, r0, ip, ror #22
     b84:	00013f28 	andeq	r3, r1, r8, lsr #30
     b88:	00000028 	andeq	r0, r0, r8, lsr #32
     b8c:	8b040e42 	blhi	10449c <mailbuffer+0xd72fc>
     b90:	0b0d4201 	bleq	35139c <mailbuffer+0x3241fc>
     b94:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     b98:	00000ecb 	andeq	r0, r0, fp, asr #29
     b9c:	00000018 	andeq	r0, r0, r8, lsl r0
     ba0:	00000b6c 	andeq	r0, r0, ip, ror #22
     ba4:	00013f50 	andeq	r3, r1, r0, asr pc
     ba8:	000001c8 	andeq	r0, r0, r8, asr #3
     bac:	8b080e42 	blhi	2044bc <mailbuffer+0x1d731c>
     bb0:	42018e02 	andmi	r8, r1, #2, 28
     bb4:	00040b0c 	andeq	r0, r4, ip, lsl #22
     bb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bbc:	00000b6c 	andeq	r0, r0, ip, ror #22
     bc0:	00014118 	andeq	r4, r1, r8, lsl r1
     bc4:	00000064 	andeq	r0, r0, r4, rrx
     bc8:	8b040e42 	blhi	1044d8 <mailbuffer+0xd7338>
     bcc:	0b0d4201 	bleq	3513d8 <mailbuffer+0x324238>
     bd0:	420d0d66 	andmi	r0, sp, #6528	; 0x1980
     bd4:	00000ecb 	andeq	r0, r0, fp, asr #29
     bd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bdc:	00000b6c 	andeq	r0, r0, ip, ror #22
     be0:	0001417c 	andeq	r4, r1, ip, ror r1
     be4:	00000090 	muleq	r0, r0, r0
     be8:	8b080e42 	blhi	2044f8 <mailbuffer+0x1d7358>
     bec:	42018e02 	andmi	r8, r1, #2, 28
     bf0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     bf4:	080d0c42 	stmdaeq	sp, {r1, r6, sl, fp}
     bf8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bfc:	00000b6c 	andeq	r0, r0, ip, ror #22
     c00:	0001420c 	andeq	r4, r1, ip, lsl #4
     c04:	00000134 	andeq	r0, r0, r4, lsr r1
     c08:	8b040e42 	blhi	104518 <mailbuffer+0xd7378>
     c0c:	0b0d4201 	bleq	351418 <mailbuffer+0x324278>
     c10:	0d0d8c02 	stceq	12, cr8, [sp, #-8]
     c14:	000ecb42 	andeq	ip, lr, r2, asr #22
     c18:	0000001c 	andeq	r0, r0, ip, lsl r0
     c1c:	00000b6c 	andeq	r0, r0, ip, ror #22
     c20:	00014340 	andeq	r4, r1, r0, asr #6
     c24:	00000068 	andeq	r0, r0, r8, rrx
     c28:	8b080e42 	blhi	204538 <mailbuffer+0x1d7398>
     c2c:	42018e02 	andmi	r8, r1, #2, 28
     c30:	6e040b0c 	vmlavs.f64	d0, d4, d12
     c34:	00080d0c 	andeq	r0, r8, ip, lsl #26
     c38:	0000001c 	andeq	r0, r0, ip, lsl r0
     c3c:	00000b6c 	andeq	r0, r0, ip, ror #22
     c40:	000143a8 	andeq	r4, r1, r8, lsr #7
     c44:	00000204 	andeq	r0, r0, r4, lsl #4
     c48:	8b080e42 	blhi	204558 <mailbuffer+0x1d73b8>
     c4c:	42018e02 	andmi	r8, r1, #2, 28
     c50:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c54:	080d0cec 	stmdaeq	sp, {r2, r3, r5, r6, r7, sl, fp}
     c58:	00000020 	andeq	r0, r0, r0, lsr #32
     c5c:	00000b6c 	andeq	r0, r0, ip, ror #22
     c60:	000145ac 	andeq	r4, r1, ip, lsr #11
     c64:	0000021c 	andeq	r0, r0, ip, lsl r2
     c68:	8b080e42 	blhi	204578 <mailbuffer+0x1d73d8>
     c6c:	42018e02 	andmi	r8, r1, #2, 28
     c70:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     c74:	0d0c0104 	stfeqs	f0, [ip, #-16]
     c78:	00000008 	andeq	r0, r0, r8
     c7c:	0000001c 	andeq	r0, r0, ip, lsl r0
     c80:	00000b6c 	andeq	r0, r0, ip, ror #22
     c84:	000147c8 	andeq	r4, r1, r8, asr #15
     c88:	000000ec 	andeq	r0, r0, ip, ror #1
     c8c:	8b080e42 	blhi	20459c <mailbuffer+0x1d73fc>
     c90:	42018e02 	andmi	r8, r1, #2, 28
     c94:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c98:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
     c9c:	0000000c 	andeq	r0, r0, ip
     ca0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ca4:	7c020001 	stcvc	0, cr0, [r2], {1}
     ca8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cac:	0000001c 	andeq	r0, r0, ip, lsl r0
     cb0:	00000c9c 	muleq	r0, ip, ip
     cb4:	000148b4 			; <UNDEFINED> instruction: 0x000148b4
     cb8:	00000064 	andeq	r0, r0, r4, rrx
     cbc:	8b040e42 	blhi	1045cc <mailbuffer+0xd742c>
     cc0:	0b0d4201 	bleq	3514cc <mailbuffer+0x32432c>
     cc4:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
     cc8:	00000ecb 	andeq	r0, r0, fp, asr #29
     ccc:	00000020 	andeq	r0, r0, r0, lsr #32
     cd0:	00000c9c 	muleq	r0, ip, ip
     cd4:	00014918 	andeq	r4, r1, r8, lsl r9
     cd8:	000000c0 	andeq	r0, r0, r0, asr #1
     cdc:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     ce0:	8e028b03 	vmlahi.f64	d8, d2, d3
     ce4:	0b0c4201 	bleq	3114f0 <mailbuffer+0x2e4350>
     ce8:	0c5a0204 	lfmeq	f0, 2, [sl], {4}
     cec:	00000c0d 	andeq	r0, r0, sp, lsl #24
     cf0:	0000001c 	andeq	r0, r0, ip, lsl r0
     cf4:	00000c9c 	muleq	r0, ip, ip
     cf8:	000149d8 	ldrdeq	r4, [r1], -r8
     cfc:	00000074 	andeq	r0, r0, r4, ror r0
     d00:	8b040e42 	blhi	104610 <mailbuffer+0xd7470>
     d04:	0b0d4201 	bleq	351510 <mailbuffer+0x324370>
     d08:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
     d0c:	00000ecb 	andeq	r0, r0, fp, asr #29
     d10:	0000001c 	andeq	r0, r0, ip, lsl r0
     d14:	00000c9c 	muleq	r0, ip, ip
     d18:	00014a4c 	andeq	r4, r1, ip, asr #20
     d1c:	000000a0 	andeq	r0, r0, r0, lsr #1
     d20:	8b040e42 	blhi	104630 <mailbuffer+0xd7490>
     d24:	0b0d4201 	bleq	351530 <mailbuffer+0x324390>
     d28:	0d0d4802 	stceq	8, cr4, [sp, #-8]
     d2c:	000ecb42 	andeq	ip, lr, r2, asr #22
     d30:	0000001c 	andeq	r0, r0, ip, lsl r0
     d34:	00000c9c 	muleq	r0, ip, ip
     d38:	00014aec 	andeq	r4, r1, ip, ror #21
     d3c:	00000060 	andeq	r0, r0, r0, rrx
     d40:	8b040e42 	blhi	104650 <mailbuffer+0xd74b0>
     d44:	0b0d4201 	bleq	351550 <mailbuffer+0x3243b0>
     d48:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
     d4c:	00000ecb 	andeq	r0, r0, fp, asr #29
     d50:	0000001c 	andeq	r0, r0, ip, lsl r0
     d54:	00000c9c 	muleq	r0, ip, ip
     d58:	00014b4c 	andeq	r4, r1, ip, asr #22
     d5c:	000000a8 	andeq	r0, r0, r8, lsr #1
     d60:	8b040e42 	blhi	104670 <mailbuffer+0xd74d0>
     d64:	0b0d4201 	bleq	351570 <mailbuffer+0x3243d0>
     d68:	0d0d4c02 	stceq	12, cr4, [sp, #-8]
     d6c:	000ecb42 	andeq	ip, lr, r2, asr #22
     d70:	0000001c 	andeq	r0, r0, ip, lsl r0
     d74:	00000c9c 	muleq	r0, ip, ip
     d78:	00014bf4 	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
     d7c:	00000054 	andeq	r0, r0, r4, asr r0
     d80:	8b040e42 	blhi	104690 <mailbuffer+0xd74f0>
     d84:	0b0d4201 	bleq	351590 <mailbuffer+0x3243f0>
     d88:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
     d8c:	00000ecb 	andeq	r0, r0, fp, asr #29
     d90:	0000001c 	andeq	r0, r0, ip, lsl r0
     d94:	00000c9c 	muleq	r0, ip, ip
     d98:	00014c48 	andeq	r4, r1, r8, asr #24
     d9c:	00000050 	andeq	r0, r0, r0, asr r0
     da0:	8b040e42 	blhi	1046b0 <mailbuffer+0xd7510>
     da4:	0b0d4201 	bleq	3515b0 <mailbuffer+0x324410>
     da8:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
     dac:	00000ecb 	andeq	r0, r0, fp, asr #29
     db0:	0000000c 	andeq	r0, r0, ip
     db4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     db8:	7c020001 	stcvc	0, cr0, [r2], {1}
     dbc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     dc0:	0000001c 	andeq	r0, r0, ip, lsl r0
     dc4:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
     dc8:	00014c98 	muleq	r1, r8, ip
     dcc:	000001c8 	andeq	r0, r0, r8, asr #3
     dd0:	8b080e42 	blhi	2046e0 <mailbuffer+0x1d7540>
     dd4:	42018e02 	andmi	r8, r1, #2, 28
     dd8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     ddc:	080d0cd6 	stmdaeq	sp, {r1, r2, r4, r6, r7, sl, fp}
     de0:	0000001c 	andeq	r0, r0, ip, lsl r0
     de4:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
     de8:	00014e60 	andeq	r4, r1, r0, ror #28
     dec:	0000007c 	andeq	r0, r0, ip, ror r0
     df0:	8b080e42 	blhi	204700 <mailbuffer+0x1d7560>
     df4:	42018e02 	andmi	r8, r1, #2, 28
     df8:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     dfc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e00:	0000001c 	andeq	r0, r0, ip, lsl r0
     e04:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
     e08:	00014edc 	ldrdeq	r4, [r1], -ip
     e0c:	00000024 	andeq	r0, r0, r4, lsr #32
     e10:	8b040e42 	blhi	104720 <mailbuffer+0xd7580>
     e14:	0b0d4201 	bleq	351620 <mailbuffer+0x324480>
     e18:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
     e1c:	00000ecb 	andeq	r0, r0, fp, asr #29
     e20:	0000001c 	andeq	r0, r0, ip, lsl r0
     e24:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
     e28:	00014f00 	andeq	r4, r1, r0, lsl #30
     e2c:	00000018 	andeq	r0, r0, r8, lsl r0
     e30:	8b040e42 	blhi	104740 <mailbuffer+0xd75a0>
     e34:	0b0d4201 	bleq	351640 <mailbuffer+0x3244a0>
     e38:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
     e3c:	00000ecb 	andeq	r0, r0, fp, asr #29
     e40:	0000001c 	andeq	r0, r0, ip, lsl r0
     e44:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
     e48:	00014f18 	andeq	r4, r1, r8, lsl pc
     e4c:	000000d8 	ldrdeq	r0, [r0], -r8
     e50:	8b040e42 	blhi	104760 <mailbuffer+0xd75c0>
     e54:	0b0d4201 	bleq	351660 <mailbuffer+0x3244c0>
     e58:	0d0d5c02 	stceq	12, cr5, [sp, #-8]
     e5c:	000ecb42 	andeq	ip, lr, r2, asr #22
     e60:	0000001c 	andeq	r0, r0, ip, lsl r0
     e64:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
     e68:	00014ff0 	strdeq	r4, [r1], -r0
     e6c:	00000154 	andeq	r0, r0, r4, asr r1
     e70:	8b040e42 	blhi	104780 <mailbuffer+0xd75e0>
     e74:	0b0d4201 	bleq	351680 <mailbuffer+0x3244e0>
     e78:	0d0d9e02 	stceq	14, cr9, [sp, #-8]
     e7c:	000ecb42 	andeq	ip, lr, r2, asr #22
     e80:	0000000c 	andeq	r0, r0, ip
     e84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     e88:	7c020001 	stcvc	0, cr0, [r2], {1}
     e8c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     e90:	00000018 	andeq	r0, r0, r8, lsl r0
     e94:	00000e80 	andeq	r0, r0, r0, lsl #29
     e98:	0001516c 	andeq	r5, r1, ip, ror #2
     e9c:	0000003c 	andeq	r0, r0, ip, lsr r0
     ea0:	8b080e42 	blhi	2047b0 <mailbuffer+0x1d7610>
     ea4:	42018e02 	andmi	r8, r1, #2, 28
     ea8:	00040b0c 	andeq	r0, r4, ip, lsl #22
     eac:	00000018 	andeq	r0, r0, r8, lsl r0
     eb0:	00000e80 	andeq	r0, r0, r0, lsl #29
     eb4:	000151a8 	andeq	r5, r1, r8, lsr #3
     eb8:	00000044 	andeq	r0, r0, r4, asr #32
     ebc:	8b080e42 	blhi	2047cc <mailbuffer+0x1d762c>
     ec0:	42018e02 	andmi	r8, r1, #2, 28
     ec4:	00040b0c 	andeq	r0, r4, ip, lsl #22
     ec8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ecc:	00000e80 	andeq	r0, r0, r0, lsl #29
     ed0:	000151ec 	andeq	r5, r1, ip, ror #3
     ed4:	00000028 	andeq	r0, r0, r8, lsr #32
     ed8:	8b080e42 	blhi	2047e8 <mailbuffer+0x1d7648>
     edc:	42018e02 	andmi	r8, r1, #2, 28
     ee0:	4e040b0c 	vmlami.f64	d0, d4, d12
     ee4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     ee8:	0000001c 	andeq	r0, r0, ip, lsl r0
     eec:	00000e80 	andeq	r0, r0, r0, lsl #29
     ef0:	00015214 	andeq	r5, r1, r4, lsl r2
     ef4:	000000a0 	andeq	r0, r0, r0, lsr #1
     ef8:	8b080e42 	blhi	204808 <mailbuffer+0x1d7668>
     efc:	42018e02 	andmi	r8, r1, #2, 28
     f00:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f04:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
     f08:	00000018 	andeq	r0, r0, r8, lsl r0
     f0c:	00000e80 	andeq	r0, r0, r0, lsl #29
     f10:	000152b4 			; <UNDEFINED> instruction: 0x000152b4
     f14:	000000d8 	ldrdeq	r0, [r0], -r8
     f18:	8b080e42 	blhi	204828 <mailbuffer+0x1d7688>
     f1c:	42018e02 	andmi	r8, r1, #2, 28
     f20:	00040b0c 	andeq	r0, r4, ip, lsl #22
     f24:	0000000c 	andeq	r0, r0, ip
     f28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f2c:	7c020001 	stcvc	0, cr0, [r2], {1}
     f30:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f34:	0000001c 	andeq	r0, r0, ip, lsl r0
     f38:	00000f24 	andeq	r0, r0, r4, lsr #30
     f3c:	0001538c 	andeq	r5, r1, ip, lsl #7
     f40:	0000031c 	andeq	r0, r0, ip, lsl r3
     f44:	0c0e480a 	stceq	8, cr4, [lr], {10}
     f48:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     f4c:	8603018e 	strhi	r0, [r3], -lr, lsl #3
     f50:	00000b01 	andeq	r0, r0, r1, lsl #22
     f54:	00000018 	andeq	r0, r0, r8, lsl r0
     f58:	00000f24 	andeq	r0, r0, r4, lsr #30
     f5c:	000156a8 	andeq	r5, r1, r8, lsr #13
     f60:	00000024 	andeq	r0, r0, r4, lsr #32
     f64:	0c0e480a 	stceq	8, cr4, [lr], {10}
     f68:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     f6c:	0b4a018e 	bleq	12815ac <mailbuffer+0x125440c>
     f70:	00000018 	andeq	r0, r0, r8, lsl r0
     f74:	00000f24 	andeq	r0, r0, r4, lsr #30
     f78:	000156cc 	andeq	r5, r1, ip, asr #13
     f7c:	00000028 	andeq	r0, r0, r8, lsr #32
     f80:	0c0e480a 	stceq	8, cr4, [lr], {10}
     f84:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     f88:	0b4c018e 	bleq	13015c8 <mailbuffer+0x12d4428>
     f8c:	00000018 	andeq	r0, r0, r8, lsl r0
     f90:	00000f24 	andeq	r0, r0, r4, lsr #30
     f94:	000156f4 	strdeq	r5, [r1], -r4
     f98:	00000048 	andeq	r0, r0, r8, asr #32
     f9c:	0c0e5c0a 	stceq	12, cr5, [lr], {10}
     fa0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     fa4:	0b48018e 	bleq	12015e4 <mailbuffer+0x11d4444>
     fa8:	00000024 	andeq	r0, r0, r4, lsr #32
     fac:	00000f24 	andeq	r0, r0, r4, lsr #30
     fb0:	0001573c 	andeq	r5, r1, ip, lsr r7
     fb4:	00000074 	andeq	r0, r0, r4, ror r0
     fb8:	0e460a0a 	vmlaeq.f32	s1, s12, s20
     fbc:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
     fc0:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     fc4:	0c0e460b 	stceq	6, cr4, [lr], {11}
     fc8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     fcc:	0b6a018e 	bleq	1a8160c <mailbuffer+0x1a5446c>
     fd0:	0000000c 	andeq	r0, r0, ip
     fd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fd8:	7c020001 	stcvc	0, cr0, [r2], {1}
     fdc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fe0:	00000010 	andeq	r0, r0, r0, lsl r0
     fe4:	00000fd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     fe8:	000157b0 			; <UNDEFINED> instruction: 0x000157b0
     fec:	0000005c 	andeq	r0, r0, ip, asr r0
     ff0:	000b6e0a 	andeq	r6, fp, sl, lsl #28
     ff4:	0000000c 	andeq	r0, r0, ip
     ff8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ffc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1000:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1004:	00000028 	andeq	r0, r0, r8, lsr #32
    1008:	00000ff4 	strdeq	r0, [r0], -r4
    100c:	0002bba4 	andeq	fp, r2, r4, lsr #23
    1010:	0000011c 	andeq	r0, r0, ip, lsl r1
    1014:	84180e4c 	ldrhi	r0, [r8], #-3660	; 0xfffff1b4
    1018:	86058506 	strhi	r8, [r5], -r6, lsl #10
    101c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1020:	02018e02 	andeq	r8, r1, #2, 28
    1024:	c7c8ce62 	strbgt	ip, [r8, r2, ror #28]
    1028:	0ec4c5c6 	cdpeq	5, 12, cr12, cr4, cr6, {6}
    102c:	00000000 	andeq	r0, r0, r0
